{"version":3,"sources":["getRequests.test.js"],"names":["api","apiWrong","correct","id","name","lastname","describe","test","result","expect","toStrictEqual","Object","keys","serverRequests","simpleGetRequest","it","then","console","log","fetchMock","called","toBe"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;AAKA,IAAMA,GAAG,GAAG,4BAAZ;AACA,IAAMC,QAAQ,GAAG,6BAAjB;AACA,IAAMC,OAAO,GAAG;AACfC,EAAAA,EAAE,EAAE,WADW;AAEfC,EAAAA,IAAI,EAAE,QAFS;AAGfC,EAAAA,QAAQ,EAAE;AAHK,CAAhB;AAMAC,QAAQ,CAAC,qDAAD,EAAwD,YAAM;AACrEC,EAAAA,IAAI,CAAC,wCAAD;AAAA;AAAA;AAAA;AAAA,+BAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzB,mCAAiBP,GAAjB,CADyB;;AAAA;AACxCQ,YAAAA,MADwC;AAE9CC,YAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C,GAAJ;AAIAK,EAAAA,IAAI,CAAC,wCAAD;AAAA;AAAA;AAAA;AAAA,+BAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzB,mCAAiBN,QAAjB,CADyB;;AAAA;AACxCO,YAAAA,MADwC;AAE9CC,YAAAA,MAAM,CAACE,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAD,CAAN,CAA4BE,aAA5B,CAA0C,CAAC,OAAD,EAAU,MAAV,CAA1C;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C,GAAJ;AAIA,CATO,CAAR;AAWAJ,QAAQ,CAAC,8DAAD,EAAiE,YAAM;AAC9EC,EAAAA,IAAI,CAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,+BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXM,aAAeC,gBAAf,CAAgCd,GAAhC,CADW;;AAAA;AAC1BQ,YAAAA,MAD0B;AAEhCC,YAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B,GAAJ;AAIAa,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC/B,WAAOF,aAAeC,gBAAf,CAAgCd,GAAhC,EAAqC,KAArC,EAA4CgB,IAA5C,CAAiD,YAAM;AAC7DC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,sBAAUC,MAAV,EAAnC;AACAX,MAAAA,MAAM,CAACU,sBAAUC,MAAV,EAAD,CAAN,CAA2BC,IAA3B,CAAgC,IAAhC;AACA,KAHM,CAAP;AAIA,GALC,CAAF;AAMA,CAXO,CAAR","sourcesContent":["import {simpleGetRequest} from '../getRequests';\nimport serverRequests from '../.';\nimport fetchMock from 'fetch-mock';\n\n/**\n * we gonna test if this util returns expected call from mock api,\n * and if it returns error, when api URL is wrong\n * */\n\nconst api = 'http://localhost:3000/user';\nconst apiWrong = 'http://localhost:3200/wrong';\nconst correct = {\n\tid: 'mr2w3s0m3',\n\tname: 'Barney',\n\tlastname: 'Stinson'\n};\n\ndescribe('Test simpleGetRequest from server requests in utils', () => {\n\ttest('returns correct value from correct api', async () => {\n\t\tconst result = await simpleGetRequest(api);\n\t\texpect(result).toStrictEqual(correct);\n\t});\n\ttest('the fetch fails with an error if empty', async () => {\n\t\tconst result = await simpleGetRequest(apiWrong);\n\t\texpect(Object.keys(result)).toStrictEqual(['error', 'body']);\n\t});\n});\n\ndescribe('Test serverRequests imports and exports serverRequests utils', () => {\n\ttest('imports simpleRequestApi', async () => {\n\t\tconst result = await serverRequests.simpleGetRequest(api);\n\t\texpect(result).toStrictEqual(correct);\n\t});\n\tit('should call the api', () => {\n\t\treturn serverRequests.simpleGetRequest(api, false).then(() => {\n\t\t\tconsole.log('fetchMock.called():', fetchMock.called());\n\t\t\texpect(fetchMock.called()).toBe(true);\n\t\t});\n\t});\n});\n"]}