{"version":3,"sources":["integration.test.js"],"names":["call","put","take","expectSaga","serverRequests","sagas","types","actions","name","api","serviceActions","mockData","simpleMockField","describe","it","loadWeatherData","provide","effect","next","fn","simpleGetRequest","type","LOAD_WEATHER","payload","silentRun"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SACCC,KADD,EAECC,OAFD,EAGCC,IAHD,EAICC,GAJD,EAKCF,OAAO,IAAIG,cALZ,QAMO,oBANP;AAQA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,eAAe,EAAE;AADD,CAAjB;AAIAC,QAAQ,CAAC,6CAAD,EAAgD,MAAM;AAC7DC,EAAAA,EAAE,CAAC,mCAAD,EAAsC,MAAM;AAC7C,WAAOX,UAAU,CAACE,KAAK,CAACU,eAAP,CAAV,CACLC,OADK,CACG;AACRhB,MAAAA,IAAI,CAACiB,MAAD,EAASC,IAAT,EAAe;AAClB;AACA,YAAID,MAAM,CAACE,EAAP,KAAcf,cAAc,CAACgB,gBAAjC,EAAmD;AAClD,iBAAO;AAACT,YAAAA;AAAD,WAAP;AACA,SAJiB,CAMlB;;;AACA,eAAOO,IAAI,EAAX;AACA;;AATO,KADH,EAYLjB,GAZK,CAYD;AACJoB,MAAAA,IAAI,EAAEf,KAAK,CAACgB,YADR;AAEJC,MAAAA,OAAO,EAAE;AAACZ,QAAAA;AAAD;AAFL,KAZC,EAgBLa,SAhBK,EAAP;AAiBA,GAlBC,CAAF;AAmBA,CApBO,CAAR","sourcesContent":["import {call, put, take} from 'redux-saga/effects';\r\nimport {expectSaga} from 'redux-saga-test-plan';\r\nimport {serverRequests} from '@project/utils';\r\nimport {sagas} from '../weather-duck';\r\nimport {\r\n\ttypes,\r\n\tactions,\r\n\tname,\r\n\tapi,\r\n\tactions as serviceActions\r\n} from '../weather-service';\r\n\r\nconst mockData = {\r\n\tsimpleMockField: 'simpleMockValue'\r\n};\r\n\r\ndescribe('Test weather-duck with redux-saga-test-plan', () => {\r\n\tit('provides a value for the API call', () => {\r\n\t\treturn expectSaga(sagas.loadWeatherData)\r\n\t\t\t.provide({\r\n\t\t\t\tcall(effect, next) {\r\n\t\t\t\t\t// Check for the API call to return fake value\r\n\t\t\t\t\tif (effect.fn === serverRequests.simpleGetRequest) {\r\n\t\t\t\t\t\treturn {mockData};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Allow Redux Saga to handle other `call` effects\r\n\t\t\t\t\treturn next();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.put({\r\n\t\t\t\ttype: types.LOAD_WEATHER,\r\n\t\t\t\tpayload: {mockData}\r\n\t\t\t})\r\n\t\t\t.silentRun();\r\n\t});\r\n});\r\n"]}