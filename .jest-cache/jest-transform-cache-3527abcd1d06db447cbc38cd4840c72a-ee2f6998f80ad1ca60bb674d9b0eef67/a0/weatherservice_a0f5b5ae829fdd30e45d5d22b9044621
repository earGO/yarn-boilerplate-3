42b7566e9977a90d7265e9916775c902
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = weatherReducer;
exports.actions = exports.types = exports.api = exports.name = void 0;

var _reduxSagaRequests = require("redux-saga-requests");

var _immer = _interopRequireDefault(require("immer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var name = 'weather-api';
exports.name = name;
var api = 'https://api.openweathermap.org/data/2.5/weather?q=Seattle&APPID=1362c34423375d167d694489b1c74080';
/* Types */

exports.api = api;
var LOAD_WEATHER = "".concat(name, "/LOAD_WEATHER");
var types = {
  LOAD_WEATHER: LOAD_WEATHER
};
/* Action creators */

exports.types = types;
var actions = {
  weatherLoaded: function weatherLoaded(weather) {
    return {
      type: LOAD_WEATHER,
      payload: weather
    };
  }
};
/* reducer */

exports.actions = actions;

function weatherReducer(state, action) {
  return (0, _immer["default"])(state || [], function (draft) {
    switch (action.type) {
      case LOAD_WEATHER:
        return [].concat(_toConsumableArray(state), [action.payload]);

      case (0, _reduxSagaRequests.error)(LOAD_WEATHER):
      default:
        return state;
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYXRoZXItc2VydmljZS5qcyJdLCJuYW1lcyI6WyJuYW1lIiwiYXBpIiwiTE9BRF9XRUFUSEVSIiwidHlwZXMiLCJhY3Rpb25zIiwid2VhdGhlckxvYWRlZCIsIndlYXRoZXIiLCJ0eXBlIiwicGF5bG9hZCIsIndlYXRoZXJSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJkcmFmdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLGFBQWI7O0FBRUEsSUFBTUMsR0FBRyxHQUNSLGtHQUREO0FBR0E7OztBQUNBLElBQU1DLFlBQVksYUFBTUYsSUFBTixrQkFBbEI7QUFFQSxJQUFNRyxLQUFLLEdBQUc7QUFDYkQsRUFBQUEsWUFBWSxFQUFaQTtBQURhLENBQWQ7QUFJQTs7O0FBQ0EsSUFBTUUsT0FBTyxHQUFHO0FBQ2ZDLEVBQUFBLGFBRGUseUJBQ0RDLE9BREMsRUFDUTtBQUN0QixXQUFPO0FBQ05DLE1BQUFBLElBQUksRUFBRUwsWUFEQTtBQUVOTSxNQUFBQSxPQUFPLEVBQUVGO0FBRkgsS0FBUDtBQUlBO0FBTmMsQ0FBaEI7QUFTQTs7OztBQUNlLFNBQVNHLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStCQyxNQUEvQixFQUF1QztBQUNyRCxTQUFPLHVCQUFRRCxLQUFLLElBQUksRUFBakIsRUFBcUIsVUFBQUUsS0FBSyxFQUFJO0FBQ3BDLFlBQVFELE1BQU0sQ0FBQ0osSUFBZjtBQUNDLFdBQUtMLFlBQUw7QUFDQyw0Q0FBV1EsS0FBWCxJQUFrQkMsTUFBTSxDQUFDSCxPQUF6Qjs7QUFFRCxXQUFLLDhCQUFNTixZQUFOLENBQUw7QUFDQTtBQUNDLGVBQU9RLEtBQVA7QUFORjtBQVFBLEdBVE0sQ0FBUDtBQVVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtlcnJvcn0gZnJvbSAncmVkdXgtc2FnYS1yZXF1ZXN0cyc7XHJcbmltcG9ydCBwcm9kdWNlIGZyb20gJ2ltbWVyJztcclxuXHJcbmNvbnN0IG5hbWUgPSAnd2VhdGhlci1hcGknO1xyXG5cclxuY29uc3QgYXBpID1cclxuXHQnaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT1TZWF0dGxlJkFQUElEPTEzNjJjMzQ0MjMzNzVkMTY3ZDY5NDQ4OWIxYzc0MDgwJztcclxuXHJcbi8qIFR5cGVzICovXHJcbmNvbnN0IExPQURfV0VBVEhFUiA9IGAke25hbWV9L0xPQURfV0VBVEhFUmA7XHJcblxyXG5jb25zdCB0eXBlcyA9IHtcclxuXHRMT0FEX1dFQVRIRVJcclxufTtcclxuXHJcbi8qIEFjdGlvbiBjcmVhdG9ycyAqL1xyXG5jb25zdCBhY3Rpb25zID0ge1xyXG5cdHdlYXRoZXJMb2FkZWQod2VhdGhlcikge1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dHlwZTogTE9BRF9XRUFUSEVSLFxyXG5cdFx0XHRwYXlsb2FkOiB3ZWF0aGVyXHJcblx0XHR9O1xyXG5cdH1cclxufTtcclxuXHJcbi8qIHJlZHVjZXIgKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2VhdGhlclJlZHVjZXIoc3RhdGUsIGFjdGlvbikge1xyXG5cdHJldHVybiBwcm9kdWNlKHN0YXRlIHx8IFtdLCBkcmFmdCA9PiB7XHJcblx0XHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRcdGNhc2UgTE9BRF9XRUFUSEVSOlxyXG5cdFx0XHRcdHJldHVybiBbLi4uc3RhdGUsIGFjdGlvbi5wYXlsb2FkXTtcclxuXHJcblx0XHRcdGNhc2UgZXJyb3IoTE9BRF9XRUFUSEVSKTpcclxuXHRcdFx0ZGVmYXVsdDpcclxuXHRcdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbmV4cG9ydCB7bmFtZSwgYXBpLCB0eXBlcywgYWN0aW9uc307XHJcbiJdfQ==