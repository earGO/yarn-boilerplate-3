{"version":3,"sources":["getRequests.test.js"],"names":["simpleGetRequest","serverRequests","api","apiWrong","correct","id","name","lastname","describe","test","result","expect","toStrictEqual","Object","keys"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,gBAA/B;AACA,OAAOC,cAAP,MAA2B,MAA3B;AAEA;;;;;AAKA,MAAMC,GAAG,GAAG,4BAAZ;AACA,MAAMC,QAAQ,GAAG,6BAAjB;AACA,MAAMC,OAAO,GAAG;AACfC,EAAAA,EAAE,EAAE,WADW;AAEfC,EAAAA,IAAI,EAAE,QAFS;AAGfC,EAAAA,QAAQ,EAAE;AAHK,CAAhB;AAMAC,QAAQ,CAAC,qDAAD,EAAwD,MAAM;AACrEC,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAY;AAC1D,UAAMC,MAAM,GAAG,MAAMV,gBAAgB,CAACE,GAAD,CAArC;AACAS,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;AACA,GAHG,CAAJ;AAIAK,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAY;AAC1D,UAAMC,MAAM,GAAG,MAAMV,gBAAgB,CAACG,QAAD,CAArC;AACAQ,IAAAA,MAAM,CAACE,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAD,CAAN,CAA4BE,aAA5B,CAA0C,CAAC,OAAD,EAAU,MAAV,CAA1C;AACA,GAHG,CAAJ;AAIA,CATO,CAAR;AAWAJ,QAAQ,CAAC,8DAAD,EAAiE,MAAM;AAC9EC,EAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC5C,UAAMC,MAAM,GAAG,MAAMT,cAAc,CAACD,gBAAf,CAAgCE,GAAhC,CAArB;AACAS,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;AACA,GAHG,CAAJ;AAIA,CALO,CAAR","sourcesContent":["import {simpleGetRequest} from '../getRequests';\r\nimport serverRequests from '../.';\r\n\r\n/**\r\n * we gonna test if this util returns expected call from mock api,\r\n * and if it returns error, when api URL is wrong\r\n * */\r\n\r\nconst api = 'http://localhost:3000/user';\r\nconst apiWrong = 'http://localhost:3200/wrong';\r\nconst correct = {\r\n\tid: 'mr2w3s0m3',\r\n\tname: 'Barney',\r\n\tlastname: 'Stinson'\r\n};\r\n\r\ndescribe('Test simpleGetRequest from server requests in utils', () => {\r\n\ttest('returns correct value from correct api', async () => {\r\n\t\tconst result = await simpleGetRequest(api);\r\n\t\texpect(result).toStrictEqual(correct);\r\n\t});\r\n\ttest('the fetch fails with an error if empty', async () => {\r\n\t\tconst result = await simpleGetRequest(apiWrong);\r\n\t\texpect(Object.keys(result)).toStrictEqual(['error', 'body']);\r\n\t});\r\n});\r\n\r\ndescribe('Test serverRequests imports and exports serverRequests utils', () => {\r\n\ttest('imports simpleRequestApi', async () => {\r\n\t\tconst result = await serverRequests.simpleGetRequest(api);\r\n\t\texpect(result).toStrictEqual(correct);\r\n\t});\r\n});\r\n"]}