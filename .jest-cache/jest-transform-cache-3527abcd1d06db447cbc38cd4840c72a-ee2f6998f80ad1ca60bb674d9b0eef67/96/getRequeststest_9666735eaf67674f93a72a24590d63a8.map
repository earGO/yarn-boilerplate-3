{"version":3,"sources":["getRequests.test.js"],"names":["api","apiWrong","correct","id","name","lastname","describe","test","result","expect","toStrictEqual","Object","keys","serverRequests","simpleGetRequest"],"mappings":";;AAAA;;AACA;;;;;;;;AAEA;;;;AAKA,IAAMA,GAAG,GAAG,4BAAZ;AACA,IAAMC,QAAQ,GAAG,6BAAjB;AACA,IAAMC,OAAO,GAAG;AACfC,EAAAA,EAAE,EAAE,WADW;AAEfC,EAAAA,IAAI,EAAE,QAFS;AAGfC,EAAAA,QAAQ,EAAE;AAHK,CAAhB;AAMAC,QAAQ,CAAC,qDAAD,EAAwD,YAAM;AACrEC,EAAAA,IAAI,CAAC,wCAAD;AAAA;AAAA;AAAA;AAAA,0BAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzB,mCAAiBP,GAAjB,CADyB;;AAAA;AACxCQ,YAAAA,MADwC;AAE9CC,YAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C,GAAJ;AAIAK,EAAAA,IAAI,CAAC,wCAAD;AAAA;AAAA;AAAA;AAAA,0BAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzB,mCAAiBN,QAAjB,CADyB;;AAAA;AACxCO,YAAAA,MADwC;AAE9CC,YAAAA,MAAM,CAACE,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAD,CAAN,CAA4BE,aAA5B,CAA0C,CAAC,OAAD,EAAU,MAAV,CAA1C;;AAF8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3C,GAAJ;AAIA,CATO,CAAR;AAWAJ,QAAQ,CAAC,8DAAD,EAAiE,YAAM;AAC9EC,EAAAA,IAAI,CAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,0BAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXM,aAAeC,gBAAf,CAAgCd,GAAhC,CADW;;AAAA;AAC1BQ,YAAAA,MAD0B;AAEhCC,YAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf,CAA6BR,OAA7B;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B,GAAJ;AAIA,CALO,CAAR","sourcesContent":["import {simpleGetRequest} from '../getRequests';\r\nimport serverRequests from '../.';\r\n\r\n/**\r\n * we gonna test if this util returns expected call from mock api,\r\n * and if it returns error, when api URL is wrong\r\n * */\r\n\r\nconst api = 'http://localhost:3000/user';\r\nconst apiWrong = 'http://localhost:3200/wrong';\r\nconst correct = {\r\n\tid: 'mr2w3s0m3',\r\n\tname: 'Barney',\r\n\tlastname: 'Stinson'\r\n};\r\n\r\ndescribe('Test simpleGetRequest from server requests in utils', () => {\r\n\ttest('returns correct value from correct api', async () => {\r\n\t\tconst result = await simpleGetRequest(api);\r\n\t\texpect(result).toStrictEqual(correct);\r\n\t});\r\n\ttest('the fetch fails with an error if empty', async () => {\r\n\t\tconst result = await simpleGetRequest(apiWrong);\r\n\t\texpect(Object.keys(result)).toStrictEqual(['error', 'body']);\r\n\t});\r\n});\r\n\r\ndescribe('Test serverRequests imports and exports serverRequests utils', () => {\r\n\ttest('imports simpleRequestApi', async () => {\r\n\t\tconst result = await serverRequests.simpleGetRequest(api);\r\n\t\texpect(result).toStrictEqual(correct);\r\n\t});\r\n});\r\n"]}