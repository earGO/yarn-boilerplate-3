ff77fed2195a11115f2ea109ad9afa28
import { simpleGetRequest } from '../getRequests';
import serverRequests from '../.';
/**
 * we gonna test if this util returns expected call from mock api,
 * and if it returns error, when api URL is wrong
 * */

const api = 'http://localhost:3000/user';
const apiWrong = 'http://localhost:3200/wrong';
const correct = {
  id: 'mr2w3s0m3',
  name: 'Barney',
  lastname: 'Stinson'
};
describe('Test simpleGetRequest from server requests in utils', () => {
  test('returns correct value from correct api', async () => {
    const result = await simpleGetRequest(api);
    expect(result).toStrictEqual(correct);
  });
  test('the fetch fails with an error if empty', async () => {
    const result = await simpleGetRequest(apiWrong);
    expect(Object.keys(result)).toStrictEqual(['error', 'body']);
  });
});
describe('Test serverRequests imports and exports serverRequests utils', () => {
  test('imports simpleRequestApi', async () => {
    const result = await serverRequests.simpleGetRequest(api);
    expect(result).toStrictEqual(correct);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFJlcXVlc3RzLnRlc3QuanMiXSwibmFtZXMiOlsic2ltcGxlR2V0UmVxdWVzdCIsInNlcnZlclJlcXVlc3RzIiwiYXBpIiwiYXBpV3JvbmciLCJjb3JyZWN0IiwiaWQiLCJuYW1lIiwibGFzdG5hbWUiLCJkZXNjcmliZSIsInRlc3QiLCJyZXN1bHQiLCJleHBlY3QiLCJ0b1N0cmljdEVxdWFsIiwiT2JqZWN0Iiwia2V5cyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUUEsZ0JBQVIsUUFBK0IsZ0JBQS9CO0FBQ0EsT0FBT0MsY0FBUCxNQUEyQixNQUEzQjtBQUVBOzs7OztBQUtBLE1BQU1DLEdBQUcsR0FBRyw0QkFBWjtBQUNBLE1BQU1DLFFBQVEsR0FBRyw2QkFBakI7QUFDQSxNQUFNQyxPQUFPLEdBQUc7QUFDZkMsRUFBQUEsRUFBRSxFQUFFLFdBRFc7QUFFZkMsRUFBQUEsSUFBSSxFQUFFLFFBRlM7QUFHZkMsRUFBQUEsUUFBUSxFQUFFO0FBSEssQ0FBaEI7QUFNQUMsUUFBUSxDQUFDLHFEQUFELEVBQXdELE1BQU07QUFDckVDLEVBQUFBLElBQUksQ0FBQyx3Q0FBRCxFQUEyQyxZQUFZO0FBQzFELFVBQU1DLE1BQU0sR0FBRyxNQUFNVixnQkFBZ0IsQ0FBQ0UsR0FBRCxDQUFyQztBQUNBUyxJQUFBQSxNQUFNLENBQUNELE1BQUQsQ0FBTixDQUFlRSxhQUFmLENBQTZCUixPQUE3QjtBQUNBLEdBSEcsQ0FBSjtBQUlBSyxFQUFBQSxJQUFJLENBQUMsd0NBQUQsRUFBMkMsWUFBWTtBQUMxRCxVQUFNQyxNQUFNLEdBQUcsTUFBTVYsZ0JBQWdCLENBQUNHLFFBQUQsQ0FBckM7QUFDQVEsSUFBQUEsTUFBTSxDQUFDRSxNQUFNLENBQUNDLElBQVAsQ0FBWUosTUFBWixDQUFELENBQU4sQ0FBNEJFLGFBQTVCLENBQTBDLENBQUMsT0FBRCxFQUFVLE1BQVYsQ0FBMUM7QUFDQSxHQUhHLENBQUo7QUFJQSxDQVRPLENBQVI7QUFXQUosUUFBUSxDQUFDLDhEQUFELEVBQWlFLE1BQU07QUFDOUVDLEVBQUFBLElBQUksQ0FBQywwQkFBRCxFQUE2QixZQUFZO0FBQzVDLFVBQU1DLE1BQU0sR0FBRyxNQUFNVCxjQUFjLENBQUNELGdCQUFmLENBQWdDRSxHQUFoQyxDQUFyQjtBQUNBUyxJQUFBQSxNQUFNLENBQUNELE1BQUQsQ0FBTixDQUFlRSxhQUFmLENBQTZCUixPQUE3QjtBQUNBLEdBSEcsQ0FBSjtBQUlBLENBTE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c2ltcGxlR2V0UmVxdWVzdH0gZnJvbSAnLi4vZ2V0UmVxdWVzdHMnO1xyXG5pbXBvcnQgc2VydmVyUmVxdWVzdHMgZnJvbSAnLi4vLic7XHJcblxyXG4vKipcclxuICogd2UgZ29ubmEgdGVzdCBpZiB0aGlzIHV0aWwgcmV0dXJucyBleHBlY3RlZCBjYWxsIGZyb20gbW9jayBhcGksXHJcbiAqIGFuZCBpZiBpdCByZXR1cm5zIGVycm9yLCB3aGVuIGFwaSBVUkwgaXMgd3JvbmdcclxuICogKi9cclxuXHJcbmNvbnN0IGFwaSA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlcic7XHJcbmNvbnN0IGFwaVdyb25nID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzIwMC93cm9uZyc7XHJcbmNvbnN0IGNvcnJlY3QgPSB7XHJcblx0aWQ6ICdtcjJ3M3MwbTMnLFxyXG5cdG5hbWU6ICdCYXJuZXknLFxyXG5cdGxhc3RuYW1lOiAnU3RpbnNvbidcclxufTtcclxuXHJcbmRlc2NyaWJlKCdUZXN0IHNpbXBsZUdldFJlcXVlc3QgZnJvbSBzZXJ2ZXIgcmVxdWVzdHMgaW4gdXRpbHMnLCAoKSA9PiB7XHJcblx0dGVzdCgncmV0dXJucyBjb3JyZWN0IHZhbHVlIGZyb20gY29ycmVjdCBhcGknLCBhc3luYyAoKSA9PiB7XHJcblx0XHRjb25zdCByZXN1bHQgPSBhd2FpdCBzaW1wbGVHZXRSZXF1ZXN0KGFwaSk7XHJcblx0XHRleHBlY3QocmVzdWx0KS50b1N0cmljdEVxdWFsKGNvcnJlY3QpO1xyXG5cdH0pO1xyXG5cdHRlc3QoJ3RoZSBmZXRjaCBmYWlscyB3aXRoIGFuIGVycm9yIGlmIGVtcHR5JywgYXN5bmMgKCkgPT4ge1xyXG5cdFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgc2ltcGxlR2V0UmVxdWVzdChhcGlXcm9uZyk7XHJcblx0XHRleHBlY3QoT2JqZWN0LmtleXMocmVzdWx0KSkudG9TdHJpY3RFcXVhbChbJ2Vycm9yJywgJ2JvZHknXSk7XHJcblx0fSk7XHJcbn0pO1xyXG5cclxuZGVzY3JpYmUoJ1Rlc3Qgc2VydmVyUmVxdWVzdHMgaW1wb3J0cyBhbmQgZXhwb3J0cyBzZXJ2ZXJSZXF1ZXN0cyB1dGlscycsICgpID0+IHtcclxuXHR0ZXN0KCdpbXBvcnRzIHNpbXBsZVJlcXVlc3RBcGknLCBhc3luYyAoKSA9PiB7XHJcblx0XHRjb25zdCByZXN1bHQgPSBhd2FpdCBzZXJ2ZXJSZXF1ZXN0cy5zaW1wbGVHZXRSZXF1ZXN0KGFwaSk7XHJcblx0XHRleHBlY3QocmVzdWx0KS50b1N0cmljdEVxdWFsKGNvcnJlY3QpO1xyXG5cdH0pO1xyXG59KTtcclxuIl19