a4bdd27bf89cc3a5f001dde22be60a8b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.simpleGetRequest = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var simpleGetRequest =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee(url) {
    var response, data, err;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return fetch(url);

          case 3:
            response = _context.sent;
            data = response.json();
            return _context.abrupt("return", data);

          case 8:
            _context.prev = 8;
            _context.t0 = _context["catch"](0);
            err = {
              error: 'error fetching with simpleGetRequest from serverRequests in Utils',
              body: _context.t0
            };
            return _context.abrupt("return", err);

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[0, 8]]);
  }));

  return function simpleGetRequest(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.simpleGetRequest = simpleGetRequest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFJlcXVlc3RzLmpzIl0sIm5hbWVzIjpbInNpbXBsZUdldFJlcXVlc3QiLCJ1cmwiLCJmZXRjaCIsInJlc3BvbnNlIiwiZGF0YSIsImpzb24iLCJlcnIiLCJlcnJvciIsImJvZHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxJQUFNQSxnQkFBZ0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUFHLGlCQUFNQyxHQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFUEMsS0FBSyxDQUFDRCxHQUFELENBRkU7O0FBQUE7QUFFeEJFLFlBQUFBLFFBRndCO0FBR3hCQyxZQUFBQSxJQUh3QixHQUdqQkQsUUFBUSxDQUFDRSxJQUFULEVBSGlCO0FBQUEsNkNBSXZCRCxJQUp1Qjs7QUFBQTtBQUFBO0FBQUE7QUFNeEJFLFlBQUFBLEdBTndCLEdBTWxCO0FBQ1hDLGNBQUFBLEtBQUssRUFDSixtRUFGVTtBQUdYQyxjQUFBQSxJQUFJO0FBSE8sYUFOa0I7QUFBQSw2Q0FXdkJGLEdBWHVCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWhCTixnQkFBZ0I7QUFBQTtBQUFBO0FBQUEsR0FBdEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc2ltcGxlR2V0UmVxdWVzdCA9IGFzeW5jIHVybCA9PiB7XHJcblx0dHJ5IHtcclxuXHRcdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcclxuXHRcdGNvbnN0IGRhdGEgPSByZXNwb25zZS5qc29uKCk7XHJcblx0XHRyZXR1cm4gZGF0YTtcclxuXHR9IGNhdGNoIChlcnJvcikge1xyXG5cdFx0Y29uc3QgZXJyID0ge1xyXG5cdFx0XHRlcnJvcjpcclxuXHRcdFx0XHQnZXJyb3IgZmV0Y2hpbmcgd2l0aCBzaW1wbGVHZXRSZXF1ZXN0IGZyb20gc2VydmVyUmVxdWVzdHMgaW4gVXRpbHMnLFxyXG5cdFx0XHRib2R5OiBlcnJvclxyXG5cdFx0fTtcclxuXHRcdHJldHVybiBlcnI7XHJcblx0fVxyXG59O1xyXG4iXX0=