c14410d72962ed0bedbea1df5e3dd9f6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _reduxMockStore = _interopRequireDefault(require("redux-mock-store"));

var _ = _interopRequireDefault(require("../."));

var _reactRedux = require("react-redux");

var _reduxDynamicModulesCore = require("redux-dynamic-modules-core");

var _reduxDynamicModulesSaga = require("redux-dynamic-modules-saga");

var _reduxDynamicModulesThunk = require("redux-dynamic-modules-thunk");

// CreateStore allows us to load/unload modules dynamically.
// Saga extension allows us to use Saga middleware in the module store.
// Thunk extension allows us to use Thunk middleware in the module store.
// SetupTests.js - Imports globals into Jest tests
require('jest-prop-type-error');

var enzyme = require('enzyme');

var Adapter = require('enzyme-adapter-react-16');

enzyme.configure({
  adapter: new Adapter()
});
describe('Weather renders when passing store directly', function () {
  var initialState = {
    output: 100
  };
  var mockStore = (0, _reduxMockStore["default"])();
  var store, container;
  beforeEach(function () {
    store = mockStore(initialState);
    container = (0, _enzyme.shallow)(_react["default"].createElement(_["default"], {
      store: store
    }));
  });
  it('+++ render the connected(SMART) component', function () {
    expect(container.length).toEqual(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbS50ZXN0LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJlbnp5bWUiLCJBZGFwdGVyIiwiY29uZmlndXJlIiwiYWRhcHRlciIsImRlc2NyaWJlIiwiaW5pdGlhbFN0YXRlIiwib3V0cHV0IiwibW9ja1N0b3JlIiwic3RvcmUiLCJjb250YWluZXIiLCJiZWZvcmVFYWNoIiwiaXQiLCJleHBlY3QiLCJsZW5ndGgiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBTEE7QUFFQTtBQUVBO0FBR0E7QUFFQUEsT0FBTyxDQUFDLHNCQUFELENBQVA7O0FBRUEsSUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyx5QkFBRCxDQUF2Qjs7QUFDQUMsTUFBTSxDQUFDRSxTQUFQLENBQWlCO0FBQUNDLEVBQUFBLE9BQU8sRUFBRSxJQUFJRixPQUFKO0FBQVYsQ0FBakI7QUFFQUcsUUFBUSxDQUFDLDZDQUFELEVBQWdELFlBQU07QUFDN0QsTUFBTUMsWUFBWSxHQUFHO0FBQUNDLElBQUFBLE1BQU0sRUFBRTtBQUFULEdBQXJCO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLGlDQUFsQjtBQUNBLE1BQUlDLEtBQUosRUFBV0MsU0FBWDtBQUVBQyxFQUFBQSxVQUFVLENBQUMsWUFBTTtBQUNoQkYsSUFBQUEsS0FBSyxHQUFHRCxTQUFTLENBQUNGLFlBQUQsQ0FBakI7QUFDQUksSUFBQUEsU0FBUyxHQUFHLHFCQUFRLGdDQUFDLFlBQUQ7QUFBUyxNQUFBLEtBQUssRUFBRUQ7QUFBaEIsTUFBUixDQUFaO0FBQ0EsR0FIUyxDQUFWO0FBS0FHLEVBQUFBLEVBQUUsQ0FBQywyQ0FBRCxFQUE4QyxZQUFNO0FBQ3JEQyxJQUFBQSxNQUFNLENBQUNILFNBQVMsQ0FBQ0ksTUFBWCxDQUFOLENBQXlCQyxPQUF6QixDQUFpQyxDQUFqQztBQUNBLEdBRkMsQ0FBRjtBQUdBLENBYk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7c2hhbGxvdywgbW91bnR9IGZyb20gJ2VuenltZSc7XHJcbmltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICdyZWR1eC1tb2NrLXN0b3JlJztcclxuaW1wb3J0IFdlYXRoZXIgZnJvbSAnLi4vLic7XHJcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuLy8gQ3JlYXRlU3RvcmUgYWxsb3dzIHVzIHRvIGxvYWQvdW5sb2FkIG1vZHVsZXMgZHluYW1pY2FsbHkuXHJcbmltcG9ydCB7Y3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4LWR5bmFtaWMtbW9kdWxlcy1jb3JlJztcclxuLy8gU2FnYSBleHRlbnNpb24gYWxsb3dzIHVzIHRvIHVzZSBTYWdhIG1pZGRsZXdhcmUgaW4gdGhlIG1vZHVsZSBzdG9yZS5cclxuaW1wb3J0IHtnZXRTYWdhRXh0ZW5zaW9ufSBmcm9tICdyZWR1eC1keW5hbWljLW1vZHVsZXMtc2FnYSc7XHJcbi8vIFRodW5rIGV4dGVuc2lvbiBhbGxvd3MgdXMgdG8gdXNlIFRodW5rIG1pZGRsZXdhcmUgaW4gdGhlIG1vZHVsZSBzdG9yZS5cclxuaW1wb3J0IHtnZXRUaHVua0V4dGVuc2lvbn0gZnJvbSAncmVkdXgtZHluYW1pYy1tb2R1bGVzLXRodW5rJztcclxuXHJcbi8vIFNldHVwVGVzdHMuanMgLSBJbXBvcnRzIGdsb2JhbHMgaW50byBKZXN0IHRlc3RzXHJcblxyXG5yZXF1aXJlKCdqZXN0LXByb3AtdHlwZS1lcnJvcicpO1xyXG5cclxuY29uc3QgZW56eW1lID0gcmVxdWlyZSgnZW56eW1lJyk7XHJcbmNvbnN0IEFkYXB0ZXIgPSByZXF1aXJlKCdlbnp5bWUtYWRhcHRlci1yZWFjdC0xNicpO1xyXG5lbnp5bWUuY29uZmlndXJlKHthZGFwdGVyOiBuZXcgQWRhcHRlcigpfSk7XHJcblxyXG5kZXNjcmliZSgnV2VhdGhlciByZW5kZXJzIHdoZW4gcGFzc2luZyBzdG9yZSBkaXJlY3RseScsICgpID0+IHtcclxuXHRjb25zdCBpbml0aWFsU3RhdGUgPSB7b3V0cHV0OiAxMDB9O1xyXG5cdGNvbnN0IG1vY2tTdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKCk7XHJcblx0bGV0IHN0b3JlLCBjb250YWluZXI7XHJcblxyXG5cdGJlZm9yZUVhY2goKCkgPT4ge1xyXG5cdFx0c3RvcmUgPSBtb2NrU3RvcmUoaW5pdGlhbFN0YXRlKTtcclxuXHRcdGNvbnRhaW5lciA9IHNoYWxsb3coPFdlYXRoZXIgc3RvcmU9e3N0b3JlfSAvPik7XHJcblx0fSk7XHJcblxyXG5cdGl0KCcrKysgcmVuZGVyIHRoZSBjb25uZWN0ZWQoU01BUlQpIGNvbXBvbmVudCcsICgpID0+IHtcclxuXHRcdGV4cGVjdChjb250YWluZXIubGVuZ3RoKS50b0VxdWFsKDEpO1xyXG5cdH0pO1xyXG59KTtcclxuIl19