f60a6fa151cfa2284639c082d8c166b9
import { call, put, take } from 'redux-saga/effects';
import { expectSaga } from 'redux-saga-test-plan';
import { serverRequests } from '@project/utils';
import { sagas } from '../weather-duck';
import { types, actions, name, api, actions as serviceActions } from '../weather-service';
const mockData = {
  simpleMockField: 'simpleMockValue'
};
describe('Test weather-duck with redux-saga-test-plan', () => {
  it('provides a value for the API call', () => {
    return expectSaga(sagas.loadWeatherData).provide({
      call(effect, next) {
        // Check for the API call to return fake value
        if (effect.fn === serverRequests.simpleGetRequest) {
          return {
            mockData
          };
        } // Allow Redux Saga to handle other `call` effects


        return next();
      }

    }).put({
      type: types.LOAD_WEATHER,
      payload: {
        mockData
      }
    }).silentRun();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVncmF0aW9uLnRlc3QuanMiXSwibmFtZXMiOlsiY2FsbCIsInB1dCIsInRha2UiLCJleHBlY3RTYWdhIiwic2VydmVyUmVxdWVzdHMiLCJzYWdhcyIsInR5cGVzIiwiYWN0aW9ucyIsIm5hbWUiLCJhcGkiLCJzZXJ2aWNlQWN0aW9ucyIsIm1vY2tEYXRhIiwic2ltcGxlTW9ja0ZpZWxkIiwiZGVzY3JpYmUiLCJpdCIsImxvYWRXZWF0aGVyRGF0YSIsInByb3ZpZGUiLCJlZmZlY3QiLCJuZXh0IiwiZm4iLCJzaW1wbGVHZXRSZXF1ZXN0IiwidHlwZSIsIkxPQURfV0VBVEhFUiIsInBheWxvYWQiLCJzaWxlbnRSdW4iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVFBLElBQVIsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsUUFBOEIsb0JBQTlCO0FBQ0EsU0FBUUMsVUFBUixRQUF5QixzQkFBekI7QUFDQSxTQUFRQyxjQUFSLFFBQTZCLGdCQUE3QjtBQUNBLFNBQVFDLEtBQVIsUUFBb0IsaUJBQXBCO0FBQ0EsU0FDQ0MsS0FERCxFQUVDQyxPQUZELEVBR0NDLElBSEQsRUFJQ0MsR0FKRCxFQUtDRixPQUFPLElBQUlHLGNBTFosUUFNTyxvQkFOUDtBQVFBLE1BQU1DLFFBQVEsR0FBRztBQUNoQkMsRUFBQUEsZUFBZSxFQUFFO0FBREQsQ0FBakI7QUFJQUMsUUFBUSxDQUFDLDZDQUFELEVBQWdELE1BQU07QUFDN0RDLEVBQUFBLEVBQUUsQ0FBQyxtQ0FBRCxFQUFzQyxNQUFNO0FBQzdDLFdBQU9YLFVBQVUsQ0FBQ0UsS0FBSyxDQUFDVSxlQUFQLENBQVYsQ0FDTEMsT0FESyxDQUNHO0FBQ1JoQixNQUFBQSxJQUFJLENBQUNpQixNQUFELEVBQVNDLElBQVQsRUFBZTtBQUNsQjtBQUNBLFlBQUlELE1BQU0sQ0FBQ0UsRUFBUCxLQUFjZixjQUFjLENBQUNnQixnQkFBakMsRUFBbUQ7QUFDbEQsaUJBQU87QUFBQ1QsWUFBQUE7QUFBRCxXQUFQO0FBQ0EsU0FKaUIsQ0FNbEI7OztBQUNBLGVBQU9PLElBQUksRUFBWDtBQUNBOztBQVRPLEtBREgsRUFZTGpCLEdBWkssQ0FZRDtBQUNKb0IsTUFBQUEsSUFBSSxFQUFFZixLQUFLLENBQUNnQixZQURSO0FBRUpDLE1BQUFBLE9BQU8sRUFBRTtBQUFDWixRQUFBQTtBQUFEO0FBRkwsS0FaQyxFQWdCTGEsU0FoQkssRUFBUDtBQWlCQSxHQWxCQyxDQUFGO0FBbUJBLENBcEJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NhbGwsIHB1dCwgdGFrZX0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcclxuaW1wb3J0IHtleHBlY3RTYWdhfSBmcm9tICdyZWR1eC1zYWdhLXRlc3QtcGxhbic7XHJcbmltcG9ydCB7c2VydmVyUmVxdWVzdHN9IGZyb20gJ0Bwcm9qZWN0L3V0aWxzJztcclxuaW1wb3J0IHtzYWdhc30gZnJvbSAnLi4vd2VhdGhlci1kdWNrJztcclxuaW1wb3J0IHtcclxuXHR0eXBlcyxcclxuXHRhY3Rpb25zLFxyXG5cdG5hbWUsXHJcblx0YXBpLFxyXG5cdGFjdGlvbnMgYXMgc2VydmljZUFjdGlvbnNcclxufSBmcm9tICcuLi93ZWF0aGVyLXNlcnZpY2UnO1xyXG5cclxuY29uc3QgbW9ja0RhdGEgPSB7XHJcblx0c2ltcGxlTW9ja0ZpZWxkOiAnc2ltcGxlTW9ja1ZhbHVlJ1xyXG59O1xyXG5cclxuZGVzY3JpYmUoJ1Rlc3Qgd2VhdGhlci1kdWNrIHdpdGggcmVkdXgtc2FnYS10ZXN0LXBsYW4nLCAoKSA9PiB7XHJcblx0aXQoJ3Byb3ZpZGVzIGEgdmFsdWUgZm9yIHRoZSBBUEkgY2FsbCcsICgpID0+IHtcclxuXHRcdHJldHVybiBleHBlY3RTYWdhKHNhZ2FzLmxvYWRXZWF0aGVyRGF0YSlcclxuXHRcdFx0LnByb3ZpZGUoe1xyXG5cdFx0XHRcdGNhbGwoZWZmZWN0LCBuZXh0KSB7XHJcblx0XHRcdFx0XHQvLyBDaGVjayBmb3IgdGhlIEFQSSBjYWxsIHRvIHJldHVybiBmYWtlIHZhbHVlXHJcblx0XHRcdFx0XHRpZiAoZWZmZWN0LmZuID09PSBzZXJ2ZXJSZXF1ZXN0cy5zaW1wbGVHZXRSZXF1ZXN0KSB7XHJcblx0XHRcdFx0XHRcdHJldHVybiB7bW9ja0RhdGF9O1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIEFsbG93IFJlZHV4IFNhZ2EgdG8gaGFuZGxlIG90aGVyIGBjYWxsYCBlZmZlY3RzXHJcblx0XHRcdFx0XHRyZXR1cm4gbmV4dCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHRcdFx0LnB1dCh7XHJcblx0XHRcdFx0dHlwZTogdHlwZXMuTE9BRF9XRUFUSEVSLFxyXG5cdFx0XHRcdHBheWxvYWQ6IHttb2NrRGF0YX1cclxuXHRcdFx0fSlcclxuXHRcdFx0LnNpbGVudFJ1bigpO1xyXG5cdH0pO1xyXG59KTtcclxuIl19