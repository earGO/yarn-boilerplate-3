{"version":3,"sources":["reducers.js"],"names":["serviceTypes","projectCardService","types","initialState","projectLoading","tabsLoading","selectedTab","selectedSection","LOAD_PROJECT","LOAD_TABS","PRESELECT_TAB","_","payload","tabs","id","SELECT_TAB","tabId","PRESELECT_SECTION","sections","SELECT_SECTION","sectionId"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;AAEA,IAAMA,YAAY,GAAGC,2BAAmBC,KAAxC;AAEO,IAAMC,YAAY,GAAG;AAC3BC,EAAAA,cAAc,EAAE,KADW;AAE3BC,EAAAA,WAAW,EAAE,KAFc;AAG3BC,EAAAA,WAAW,EAAE,EAHc;AAI3BC,EAAAA,eAAe,EAAE;AAJU,CAArB;;;oGAQLP,YAAY,CAACQ,Y,EAAe;AAAA,SAAO;AACnCJ,IAAAA,cAAc,EAAE;AADmB,GAAP;AAAA,C,2DAG5B,gCAAQJ,YAAY,CAACQ,YAArB,C,EAAqC;AAAA,SAAO;AAC5CJ,IAAAA,cAAc,EAAE;AAD4B,GAAP;AAAA,C,2DAGrC,8BAAMJ,YAAY,CAACQ,YAAnB,C,EAAmC;AAAA,SAAO;AAC1CJ,IAAAA,cAAc,EAAE;AAD0B,GAAP;AAAA,C,2DAGnCJ,YAAY,CAACS,S,EAAY;AAAA,SAAO;AAChCJ,IAAAA,WAAW,EAAE;AADmB,GAAP;AAAA,C,2DAGzB,gCAAQL,YAAY,CAACS,SAArB,C,EAAkC;AAAA,SAAO;AACzCJ,IAAAA,WAAW,EAAE;AAD4B,GAAP;AAAA,C,2DAGlC,8BAAML,YAAY,CAACS,SAAnB,C,EAAgC;AAAA,SAAO;AACvCJ,IAAAA,WAAW,EAAE;AAD0B,GAAP;AAAA,C,2DAGhCH,KAAK,CAACQ,a,EAAgB,UAACC,CAAD,QAAkB;AAAA,MAAbC,OAAa,QAAbA,OAAa;AACxC,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;AACA,MAAMP,WAAW,GAAGM,OAAO,CAACN,WAA5B;;AACA,MAAIA,WAAW,KAAK,EAApB,EAAwB;AACvB,WAAO;AACNA,MAAAA,WAAW,EAAEO,IAAI,CAAC,CAAD,CAAJ,CAAQC;AADf,KAAP;AAGA,GAJD,MAIO;AACN,WAAO;AACNR,MAAAA,WAAW,EAAEA;AADP,KAAP;AAGA;AACD,C,2DACAJ,KAAK,CAACa,U,EAAa,UAACJ,CAAD;AAAA,MAAKC,OAAL,SAAKA,OAAL;AAAA,SAAmB;AACtCN,IAAAA,WAAW,EAAEM,OAAO,CAACI;AADiB,GAAnB;AAAA,C,2DAGnBd,KAAK,CAACe,iB,EAAoB,UAACN,CAAD,SAAkB;AAAA,MAAbC,OAAa,SAAbA,OAAa;AAC5C,MAAMM,QAAQ,GAAGN,OAAO,CAACM,QAAzB;AACA,SAAO;AACNX,IAAAA,eAAe,EAAEW,QAAQ,CAAC,CAAD,CAAR,CAAYJ;AADvB,GAAP;AAGA,C,2DACAZ,KAAK,CAACiB,c,EAAiB,UAACR,CAAD;AAAA,MAAKC,OAAL,SAAKA,OAAL;AAAA,SAAmB;AAC1CL,IAAAA,eAAe,EAAEK,OAAO,CAACQ;AADiB,GAAnB;AAAA,C","sourcesContent":["import {success, error} from 'redux-saga-requests';\n\nimport {projectCardService} from '../../../import';\nimport * as types from './types';\n\nconst serviceTypes = projectCardService.types;\n\nexport const initialState = {\n\tprojectLoading: false,\n\ttabsLoading: false,\n\tselectedTab: '',\n\tselectedSection: ''\n};\n\nexport default {\n\t[serviceTypes.LOAD_PROJECT]: () => ({\n\t\tprojectLoading: true\n\t}),\n\t[success(serviceTypes.LOAD_PROJECT)]: () => ({\n\t\tprojectLoading: false\n\t}),\n\t[error(serviceTypes.LOAD_PROJECT)]: () => ({\n\t\tprojectLoading: false\n\t}),\n\t[serviceTypes.LOAD_TABS]: () => ({\n\t\ttabsLoading: true\n\t}),\n\t[success(serviceTypes.LOAD_TABS)]: () => ({\n\t\ttabsLoading: false\n\t}),\n\t[error(serviceTypes.LOAD_TABS)]: () => ({\n\t\ttabsLoading: false\n\t}),\n\t[types.PRESELECT_TAB]: (_, {payload}) => {\n\t\tconst tabs = payload.tabs;\n\t\tconst selectedTab = payload.selectedTab;\n\t\tif (selectedTab === '') {\n\t\t\treturn {\n\t\t\t\tselectedTab: tabs[0].id\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tselectedTab: selectedTab\n\t\t\t};\n\t\t}\n\t},\n\t[types.SELECT_TAB]: (_, {payload}) => ({\n\t\tselectedTab: payload.tabId\n\t}),\n\t[types.PRESELECT_SECTION]: (_, {payload}) => {\n\t\tconst sections = payload.sections;\n\t\treturn {\n\t\t\tselectedSection: sections[0].id\n\t\t};\n\t},\n\t[types.SELECT_SECTION]: (_, {payload}) => ({\n\t\tselectedSection: payload.sectionId\n\t})\n};\n"]}