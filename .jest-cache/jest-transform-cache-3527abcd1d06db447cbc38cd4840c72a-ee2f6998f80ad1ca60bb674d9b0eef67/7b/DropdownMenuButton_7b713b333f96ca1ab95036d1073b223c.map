{"version":3,"sources":["DropdownMenuButton.js"],"names":["Item","Text","props","theme","colors","border","space","lightGrey","DropdownMenuButton","children","items","React","useState","visible","setDropdownVisibility","handleButtonClick","closeDropdown","popoverContent","whiteSpace","map","item","index","onClick","name","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAG,kCAAOC,kBAAP,CAAH;AAAA;AAAA;AAAA,yJACmB,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,MAAvB;AAAA,CADxB,EAEG,UAAAH,KAAK;AAAA,mBAAOA,KAAK,CAACC,KAAN,CAAYG,KAAZ,CAAkB,CAAlB,CAAP,gBAAiCJ,KAAK,CAACC,KAAN,CAAYG,KAAZ,CAAkB,CAAlB,CAAjC;AAAA,CAFR,EAOc,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBG,SAAvB;AAAA,CAPnB,CAAV;;AAcA,SAASC,kBAAT,OAA2D;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAATR,KAAS;;AAAA,wBAChBS,kBAAMC,QAAN,CAAe,KAAf,CADgB;AAAA;AAAA,MAClDC,OADkD;AAAA,MACzCC,qBADyC;;AAEzD,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAMD,qBAAqB,CAAC,CAACD,OAAF,CAA3B;AAAA,GAA1B;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMF,qBAAqB,CAAC,KAAD,CAA3B;AAAA,GAAtB;;AACA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,WACrB,gCAAC,kBAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE;AADP;AAFT,OAMGR,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,aACT,gCAAC,IAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbL,UAAAA,aAAa;AACbI,UAAAA,IAAI,CAACE,OAAL,IAAgB,OAAOF,IAAI,CAACE,OAAZ,KAAwB,UAAxC,IAAsDF,IAAI,CAACE,OAAL,EAAtD;AACD;AALH,SAOGF,IAAI,CAACG,IAPR,CADS;AAAA,KAAV,CANH,CADqB;AAAA,GAAvB;;AAqBA,SACE,gCAAC,qBAAD;AACE,IAAA,iBAAiB,EAAE,KADrB;AAEE,IAAA,MAAM,EAAEV,OAFV;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,OAAO,EAAEI,cAJX;AAKE,IAAA,cAAc,EAAED;AALlB,KAOE,gCAAC,oBAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,OAAO,EAAED;AAA7C,KAAoEb,KAApE,GACGO,QADH,OACc,gCAAC,kBAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,IAAI,EAAEI,OAAO,GAAG,YAAH,GAAkB;AAA5C,IADd,CAPF,CADF;AAaD;;AAEDL,kBAAkB,CAACgB,YAAnB,GAAkC;AAChCd,EAAAA,KAAK,EAAE;AADyB,CAAlC;eAIeF,kB","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Text, Button, Icon, Popover } from '@ursip/design-system'\r\n\r\nconst Item = styled(Text)`\r\n  border-bottom: 1px solid ${props => props.theme.colors.border};\r\n  padding: ${props => `${props.theme.space[2]}px ${props.theme.space[2]}px`};\r\n  transition: background-color 0.5s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.lightGrey};\r\n  }\r\n  &:last-child {\r\n    border: 0;\r\n  }\r\n`\r\n\r\nfunction DropdownMenuButton({ children, items, ...props }) {\r\n  const [visible, setDropdownVisibility] = React.useState(false)\r\n  const handleButtonClick = () => setDropdownVisibility(!visible)\r\n  const closeDropdown = () => setDropdownVisibility(false)\r\n  const popoverContent = () => (\r\n    <Card\r\n      bg=\"white\"\r\n      style={{\r\n        whiteSpace: 'nowrap',\r\n      }}\r\n    >\r\n      {items.map((item, index) => (\r\n        <Item\r\n          key={index}\r\n          onClick={() => {\r\n            closeDropdown()\r\n            item.onClick && typeof item.onClick === 'function' && item.onClick()\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Item>\r\n      ))}\r\n    </Card>\r\n  )\r\n\r\n  return (\r\n    <Popover\r\n      disableReposition={false}\r\n      isOpen={visible}\r\n      position=\"bottom\"\r\n      content={popoverContent}\r\n      onClickOutside={closeDropdown}\r\n    >\r\n      <Button type=\"primary\" size=\"small\" onClick={handleButtonClick} {...props}>\r\n        {children} {<Icon mx={1} name={visible ? 'chevron-up' : 'chevron-down'} />}\r\n      </Button>\r\n    </Popover>\r\n  )\r\n}\r\n\r\nDropdownMenuButton.defaultProps = {\r\n  items: [],\r\n}\r\n\r\nexport default DropdownMenuButton\r\n"]}