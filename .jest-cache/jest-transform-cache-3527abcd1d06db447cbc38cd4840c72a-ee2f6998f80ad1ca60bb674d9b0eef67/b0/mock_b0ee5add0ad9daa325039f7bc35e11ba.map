{"version":3,"sources":["mock.js"],"names":["Object","values","actions","reduce","output","action","type","meta","mock","requestConfig","data"],"mappings":";;;;;;;AACA;;AADA;eAGeA,MAAM,CAACC,MAAP,CAAcC,SAAd,EAAuBC,MAAvB,CAA8B,UAACC,MAAD,EAASC,MAAT,EAAoB;AAAA,gBACxCA,MAAM,EADkC;AAAA,MACvDC,IADuD,WACvDA,IADuD;AAAA,MACjDC,IADiD,WACjDA,IADiD;;AAG/D,MAAIA,IAAI,IAAIA,IAAI,CAACC,IAAb,IAAqB,OAAOD,IAAI,CAACC,IAAZ,KAAqB,UAA9C,EAA0D;AACxDJ,IAAAA,MAAM,CAACE,IAAD,CAAN,GAAe,UAAAG,aAAa;AAAA,aAAK;AAC/BC,QAAAA,IAAI,EAAEH,IAAI,CAACC,IAAL,CAAUC,aAAV;AADyB,OAAL;AAAA,KAA5B;AAGD;;AAED,SAAOL,MAAP;AACD,CAVc,EAUZ,EAVY,C","sourcesContent":["/* eslint-disable no-console */\r\nimport { actions } from '.'\r\n\r\nexport default Object.values(actions).reduce((output, action) => {\r\n  const { type, meta } = action()\r\n\r\n  if (meta && meta.mock && typeof meta.mock === 'function') {\r\n    output[type] = requestConfig => ({\r\n      data: meta.mock(requestConfig),\r\n    })\r\n  }\r\n\r\n  return output\r\n}, {})\r\n"]}