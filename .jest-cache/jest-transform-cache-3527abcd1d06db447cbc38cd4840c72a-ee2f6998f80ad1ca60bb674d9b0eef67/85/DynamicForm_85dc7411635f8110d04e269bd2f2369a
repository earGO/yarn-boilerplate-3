76e40e56b80c4df7ff2d430b0dfc8c4a
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _designSystem = require("@ursip/design-system");

function ExampleForm(props) {
  var group = props.group,
      form = props.form;

  var _useState = (0, _react.useState)([0]),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      keys = _useState2[0],
      setKeys = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      id = _useState4[0],
      setId = _useState4[1];

  var add = function add() {
    setKeys([].concat((0, _toConsumableArray2["default"])(keys), [id + 1]));
    setId(id + 1);
  };

  var remove = function remove(keyForRemove) {
    setKeys(keys.filter(function (key) {
      return key !== keyForRemove;
    }));
  };

  var getFieldName = function getFieldName(name, group, index) {
    return "".concat(group, "[").concat(index, "].").concat(name);
  };

  var getFieldGenerator = function getFieldGenerator(group, index) {
    return function (name) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return form.getFieldDecorator.apply(form, [getFieldName(name, group, index)].concat(args));
    };
  };

  return _react["default"].createElement(_designSystem.Box, null, keys.map(function (key, index) {
    return _react["default"].createElement(_designSystem.Flex, {
      key: key,
      mb: index === keys.length - 1 ? 0 : 2
    }, _react["default"].createElement(_designSystem.Box, {
      flex: 1
    }, props.renderTemplate(getFieldGenerator(group, key), key)), _react["default"].createElement(_designSystem.Box, {
      pl: 2,
      pt: 12
    }, keys.length > 1 && index < keys.length - 1 && _react["default"].createElement(_designSystem.Button, {
      circle: true,
      type: "dashed",
      size: "small",
      onClick: function onClick(e) {
        e.preventDefault();
        global.confirm('Удалить значение?') && remove(key);
      }
    }, _react["default"].createElement(_designSystem.Icon, {
      name: "times",
      top: 1
    })), index === keys.length - 1 && _react["default"].createElement(_designSystem.Button, {
      circle: true,
      type: "dashed",
      size: "small",
      onClick: function onClick(e) {
        e.preventDefault();
        add();
      }
    }, _react["default"].createElement(_designSystem.Icon, {
      name: "plus",
      top: 1
    }))));
  }));
}

ExampleForm.propTypes = {
  form: _propTypes["default"].object,
  renderTemplate: _propTypes["default"].func,
  group: _propTypes["default"].string
};
var _default = ExampleForm;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkR5bmFtaWNGb3JtLmpzIl0sIm5hbWVzIjpbIkV4YW1wbGVGb3JtIiwicHJvcHMiLCJncm91cCIsImZvcm0iLCJrZXlzIiwic2V0S2V5cyIsImlkIiwic2V0SWQiLCJhZGQiLCJyZW1vdmUiLCJrZXlGb3JSZW1vdmUiLCJmaWx0ZXIiLCJrZXkiLCJnZXRGaWVsZE5hbWUiLCJuYW1lIiwiaW5kZXgiLCJnZXRGaWVsZEdlbmVyYXRvciIsImFyZ3MiLCJnZXRGaWVsZERlY29yYXRvciIsIm1hcCIsImxlbmd0aCIsInJlbmRlclRlbXBsYXRlIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZ2xvYmFsIiwiY29uZmlybSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImZ1bmMiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCO0FBQUEsTUFDbEJDLEtBRGtCLEdBQ0ZELEtBREUsQ0FDbEJDLEtBRGtCO0FBQUEsTUFDWEMsSUFEVyxHQUNGRixLQURFLENBQ1hFLElBRFc7O0FBQUEsa0JBRUYscUJBQVMsQ0FBQyxDQUFELENBQVQsQ0FGRTtBQUFBO0FBQUEsTUFFbkJDLElBRm1CO0FBQUEsTUFFYkMsT0FGYTs7QUFBQSxtQkFHTixxQkFBUyxDQUFULENBSE07QUFBQTtBQUFBLE1BR25CQyxFQUhtQjtBQUFBLE1BR2ZDLEtBSGU7O0FBSzFCLE1BQU1DLEdBQUcsR0FBRyxTQUFOQSxHQUFNLEdBQU07QUFDaEJILElBQUFBLE9BQU8sK0NBQUtELElBQUwsSUFBV0UsRUFBRSxHQUFHLENBQWhCLEdBQVA7QUFDQUMsSUFBQUEsS0FBSyxDQUFDRCxFQUFFLEdBQUcsQ0FBTixDQUFMO0FBQ0QsR0FIRDs7QUFLQSxNQUFNRyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxDQUFBQyxZQUFZLEVBQUk7QUFDN0JMLElBQUFBLE9BQU8sQ0FBQ0QsSUFBSSxDQUFDTyxN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J1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXHJcbmltcG9ydCB7IEZsZXgsIEJveCwgQnV0dG9uLCBJY29uIH0gZnJvbSAnQHVyc2lwL2Rlc2lnbi1zeXN0ZW0nXHJcblxyXG5mdW5jdGlvbiBFeGFtcGxlRm9ybShwcm9wcykge1xyXG4gIGNvbnN0IHsgZ3JvdXAsIGZvcm0gfSA9IHByb3BzXHJcbiAgY29uc3QgW2tleXMsIHNldEtleXNdID0gdXNlU3RhdGUoWzBdKVxyXG4gIGNvbnN0IFtpZCwgc2V0SWRdID0gdXNlU3RhdGUoMClcclxuXHJcbiAgY29uc3QgYWRkID0gKCkgPT4ge1xyXG4gICAgc2V0S2V5cyhbLi4ua2V5cywgaWQgKyAxXSlcclxuICAgIHNldElkKGlkICsgMSlcclxuICB9XHJcblxyXG4gIGNvbnN0IHJlbW92ZSA9IGtleUZvclJlbW92ZSA9PiB7XHJcbiAgICBzZXRLZXlzKGtleXMuZmlsdGVyKGtleSA9PiBrZXkgIT09IGtleUZvclJlbW92ZSkpXHJcbiAgfVxyXG5cclxuICBjb25zdCBnZXRGaWVsZE5hbWUgPSAobmFtZSwgZ3JvdXAsIGluZGV4KSA9PiBgJHtncm91cH1bJHtpbmRleH1dLiR7bmFtZX1gXHJcblxyXG4gIGNvbnN0IGdldEZpZWxkR2VuZXJhdG9yID0gKGdyb3VwLCBpbmRleCkgPT4gKG5hbWUsIC4uLmFyZ3MpID0+XHJcbiAgICBmb3JtLmdldEZpZWxkRGVjb3JhdG9yKGdldEZpZWxkTmFtZShuYW1lLCBncm91cCwgaW5kZXgpLCAuLi5hcmdzKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJveD5cclxuICAgICAge2tleXMubWFwKChrZXksIGluZGV4KSA9PiAoXHJcbiAgICAgICAgPEZsZXgga2V5PXtrZXl9IG1iPXtpbmRleCA9PT0ga2V5cy5sZW5ndGggLSAxID8gMCA6IDJ9PlxyXG4gICAgICAgICAgPEJveCBmbGV4PXsxfT57cHJvcHMucmVuZGVyVGVtcGxhdGUoZ2V0RmllbGRHZW5lcmF0b3IoZ3JvdXAsIGtleSksIGtleSl9PC9Cb3g+XHJcbiAgICAgICAgICA8Qm94IHBsPXsyfSBwdD17MTJ9PlxyXG4gICAgICAgICAgICB7a2V5cy5sZW5ndGggPiAxICYmIGluZGV4IDwga2V5cy5sZW5ndGggLSAxICYmIChcclxuICAgICAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgICAgICBjaXJjbGVcclxuICAgICAgICAgICAgICAgIHR5cGU9XCJkYXNoZWRcIlxyXG4gICAgICAgICAgICAgICAgc2l6ZT1cInNtYWxsXCJcclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2UgPT4ge1xyXG4gICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICAgICAgICAgICAgZ2xvYmFsLmNvbmZpcm0oJ9Cj0LTQsNC70LjRgtGMINC30L3QsNGH0LXQvdC40LU/JykgJiYgcmVtb3ZlKGtleSlcclxuICAgICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgPEljb24gbmFtZT1cInRpbWVzXCIgdG9wPXsxfSAvPlxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7aW5kZXggPT09IGtleXMubGVuZ3RoIC0gMSAmJiAoXHJcbiAgICAgICAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgICAgICAgY2lyY2xlXHJcbiAgICAgICAgICAgICAgICB0eXBlPVwiZGFzaGVkXCJcclxuICAgICAgICAgICAgICAgIHNpemU9XCJzbWFsbFwiXHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXtlID0+IHtcclxuICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgICAgICAgICAgICAgIGFkZCgpXHJcbiAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIDxJY29uIG5hbWU9XCJwbHVzXCIgdG9wPXsxfSAvPlxyXG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgPC9Cb3g+XHJcbiAgICAgICAgPC9GbGV4PlxyXG4gICAgICApKX1cclxuICAgIDwvQm94PlxyXG4gIClcclxufVxyXG5cclxuRXhhbXBsZUZvcm0ucHJvcFR5cGVzID0ge1xyXG4gIGZvcm06IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgcmVuZGVyVGVtcGxhdGU6IFByb3BUeXBlcy5mdW5jLFxyXG4gIGdyb3VwOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBFeGFtcGxlRm9ybVxyXG4iXX0=