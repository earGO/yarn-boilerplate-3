{"version":3,"sources":["DynamicForm.js"],"names":["ExampleForm","props","group","form","keys","setKeys","id","setId","add","remove","keyForRemove","filter","key","getFieldName","name","index","getFieldGenerator","args","getFieldDecorator","map","length","renderTemplate","e","preventDefault","global","confirm","propTypes","PropTypes","object","func","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Flex, Box, Button, Icon } from '@ursip/design-system'\r\n\r\nfunction ExampleForm(props) {\r\n  const { group, form } = props\r\n  const [keys, setKeys] = useState([0])\r\n  const [id, setId] = useState(0)\r\n\r\n  const add = () => {\r\n    setKeys([...keys, id + 1])\r\n    setId(id + 1)\r\n  }\r\n\r\n  const remove = keyForRemove => {\r\n    setKeys(keys.filter(key => key !== keyForRemove))\r\n  }\r\n\r\n  const getFieldName = (name, group, index) => `${group}[${index}].${name}`\r\n\r\n  const getFieldGenerator = (group, index) => (name, ...args) =>\r\n    form.getFieldDecorator(getFieldName(name, group, index), ...args)\r\n\r\n  return (\r\n    <Box>\r\n      {keys.map((key, index) => (\r\n        <Flex key={key} mb={index === keys.length - 1 ? 0 : 2}>\r\n          <Box flex={1}>{props.renderTemplate(getFieldGenerator(group, key), key)}</Box>\r\n          <Box pl={2} pt={12}>\r\n            {keys.length > 1 && index < keys.length - 1 && (\r\n              <Button\r\n                circle\r\n                type=\"dashed\"\r\n                size=\"small\"\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  global.confirm('Удалить значение?') && remove(key)\r\n                }}\r\n              >\r\n                <Icon name=\"times\" top={1} />\r\n              </Button>\r\n            )}\r\n            {index === keys.length - 1 && (\r\n              <Button\r\n                circle\r\n                type=\"dashed\"\r\n                size=\"small\"\r\n                onClick={e => {\r\n                  e.preventDefault()\r\n                  add()\r\n                }}\r\n              >\r\n                <Icon name=\"plus\" top={1} />\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Flex>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n\r\nExampleForm.propTypes = {\r\n  form: PropTypes.object,\r\n  renderTemplate: PropTypes.func,\r\n  group: PropTypes.string,\r\n}\r\n\r\nexport default ExampleForm\r\n"]}