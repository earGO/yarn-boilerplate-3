import React__default, {
	Component,
	PureComponent,
	createElement,
	createRef
} from 'react'
import styled, {
	createGlobalStyle,
	ThemeProvider as ThemeProvider$1,
	css as css$3,
	ThemeConsumer
} from 'styled-components'
import {
	space,
	color,
	width,
	height,
	fontSize,
	flex,
	order,
	alignSelf,
	minWidth,
	maxWidth,
	alignItems,
	justifyContent,
	flexWrap,
	flexDirection,
	borderRadius as borderRadius$1,
	top,
	right,
	bottom,
	left,
	zIndex,
	themeGet
} from 'styled-system'
import ReactDOM, {findDOMNode, createPortal} from 'react-dom'

var icons = [
	'account_circle',
	'account_box',
	'assignment_ind',
	'delete',
	'delete_forever',
	'edit',
	'filter_none',
	'arrow_upward',
	'arrow_downward',
	'arrow_back',
	'arrow_forward',
	'arrow_drop_down',
	'arrow_drop_up',
	'keyboard_arrow_left',
	'keyboard_arrow_right',
	'keyboard_arrow_down',
	'keyboard_arrow_up',
	'add_circle',
	'add_circle_outline',
	'search',
	'assignment',
	'add',
	'remove_circle_outline',
	'remove_circle',
	'save',
	'more_horiz',
	'more_vert',
	'close',
	'get_app',
	'send',
	'home',
	'help',
	'help_outline',
	'folder_open',
	'check',
	'check_box',
	'check_box_outline_blank',
	'radio_button_checked',
	'radio_button_unchecked',
	'fiber_manual_record',
	'equalizer',
	'description',
	'account_balance_wallet',
	'business',
	'data_usage',
	'pan_tool',
	'assessment',
	'straighten',
	'flip',
	'play_arrow',
	'vpn_key',
	'supervisor_account',
	'school',
	'remove_red_eye'
]
module.exports = {
	icons: icons
}

function _defineProperty(obj, key, value) {
	if (key in obj) {
		Object.defineProperty(obj, key, {
			value: value,
			enumerable: true,
			configurable: true,
			writable: true
		})
	} else {
		obj[key] = value
	}

	return obj
}

var defineProperty = _defineProperty

function _objectSpread(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {}
		var ownKeys = Object.keys(source)

		if (typeof Object.getOwnPropertySymbols === 'function') {
			ownKeys = ownKeys.concat(
				Object.getOwnPropertySymbols(source).filter(function(sym) {
					return Object.getOwnPropertyDescriptor(
						source,
						sym
					).enumerable
				})
			)
		}

		ownKeys.forEach(function(key) {
			defineProperty(target, key, source[key])
		})
	}

	return target
}

var objectSpread = _objectSpread

var aliceblue = '#f0f8ff'
var antiquewhite = '#faebd7'
var aqua = '#00ffff'
var aquamarine = '#7fffd4'
var azure = '#f0ffff'
var beige = '#f5f5dc'
var bisque = '#ffe4c4'
var black = '#000000'
var blanchedalmond = '#ffebcd'
var blue = '#0000ff'
var blueviolet = '#8a2be2'
var brown = '#a52a2a'
var burlywood = '#deb887'
var cadetblue = '#5f9ea0'
var chartreuse = '#7fff00'
var chocolate = '#d2691e'
var coral = '#ff7f50'
var cornflowerblue = '#6495ed'
var cornsilk = '#fff8dc'
var crimson = '#dc143c'
var cyan = '#00ffff'
var darkblue = '#00008b'
var darkcyan = '#008b8b'
var darkgoldenrod = '#b8860b'
var darkgray = '#a9a9a9'
var darkgreen = '#006400'
var darkgrey = '#a9a9a9'
var darkkhaki = '#bdb76b'
var darkmagenta = '#8b008b'
var darkolivegreen = '#556b2f'
var darkorange = '#ff8c00'
var darkorchid = '#9932cc'
var darkred = '#8b0000'
var darksalmon = '#e9967a'
var darkseagreen = '#8fbc8f'
var darkslateblue = '#483d8b'
var darkslategray = '#2f4f4f'
var darkslategrey = '#2f4f4f'
var darkturquoise = '#00ced1'
var darkviolet = '#9400d3'
var deeppink = '#ff1493'
var deepskyblue = '#00bfff'
var dimgray = '#696969'
var dimgrey = '#696969'
var dodgerblue = '#1e90ff'
var firebrick = '#b22222'
var floralwhite = '#fffaf0'
var forestgreen = '#228b22'
var fuchsia = '#ff00ff'
var gainsboro = '#dcdcdc'
var ghostwhite = '#f8f8ff'
var goldenrod = '#daa520'
var gold = '#ffd700'
var gray = '#808080'
var green = '#008000'
var greenyellow = '#adff2f'
var grey = '#808080'
var honeydew = '#f0fff0'
var hotpink = '#ff69b4'
var indianred = '#cd5c5c'
var indigo = '#4b0082'
var ivory = '#fffff0'
var khaki = '#f0e68c'
var lavenderblush = '#fff0f5'
var lavender = '#e6e6fa'
var lawngreen = '#7cfc00'
var lemonchiffon = '#fffacd'
var lightblue = '#add8e6'
var lightcoral = '#f08080'
var lightcyan = '#e0ffff'
var lightgoldenrodyellow = '#fafad2'
var lightgray = '#d3d3d3'
var lightgreen = '#90ee90'
var lightgrey = '#d3d3d3'
var lightpink = '#ffb6c1'
var lightsalmon = '#ffa07a'
var lightseagreen = '#20b2aa'
var lightskyblue = '#87cefa'
var lightslategray = '#778899'
var lightslategrey = '#778899'
var lightsteelblue = '#b0c4de'
var lightyellow = '#ffffe0'
var lime = '#00ff00'
var limegreen = '#32cd32'
var linen = '#faf0e6'
var magenta = '#ff00ff'
var maroon = '#800000'
var mediumaquamarine = '#66cdaa'
var mediumblue = '#0000cd'
var mediumorchid = '#ba55d3'
var mediumpurple = '#9370db'
var mediumseagreen = '#3cb371'
var mediumslateblue = '#7b68ee'
var mediumspringgreen = '#00fa9a'
var mediumturquoise = '#48d1cc'
var mediumvioletred = '#c71585'
var midnightblue = '#191970'
var mintcream = '#f5fffa'
var mistyrose = '#ffe4e1'
var moccasin = '#ffe4b5'
var navajowhite = '#ffdead'
var navy = '#000080'
var oldlace = '#fdf5e6'
var olive = '#808000'
var olivedrab = '#6b8e23'
var orange = '#ffa500'
var orangered = '#ff4500'
var orchid = '#da70d6'
var palegoldenrod = '#eee8aa'
var palegreen = '#98fb98'
var paleturquoise = '#afeeee'
var palevioletred = '#db7093'
var papayawhip = '#ffefd5'
var peachpuff = '#ffdab9'
var peru = '#cd853f'
var pink = '#ffc0cb'
var plum = '#dda0dd'
var powderblue = '#b0e0e6'
var purple = '#800080'
var rebeccapurple = '#663399'
var red = '#ff0000'
var rosybrown = '#bc8f8f'
var royalblue = '#4169e1'
var saddlebrown = '#8b4513'
var salmon = '#fa8072'
var sandybrown = '#f4a460'
var seagreen = '#2e8b57'
var seashell = '#fff5ee'
var sienna = '#a0522d'
var silver = '#c0c0c0'
var skyblue = '#87ceeb'
var slateblue = '#6a5acd'
var slategray = '#708090'
var slategrey = '#708090'
var snow = '#fffafa'
var springgreen = '#00ff7f'
var steelblue = '#4682b4'
var tan = '#d2b48c'
var teal = '#008080'
var thistle = '#d8bfd8'
var tomato = '#ff6347'
var turquoise = '#40e0d0'
var violet = '#ee82ee'
var wheat = '#f5deb3'
var white = '#ffffff'
var whitesmoke = '#f5f5f5'
var yellow = '#ffff00'
var yellowgreen = '#9acd32'
var csscolors = {
	aliceblue: aliceblue,
	antiquewhite: antiquewhite,
	aqua: aqua,
	aquamarine: aquamarine,
	azure: azure,
	beige: beige,
	bisque: bisque,
	black: black,
	blanchedalmond: blanchedalmond,
	blue: blue,
	blueviolet: blueviolet,
	brown: brown,
	burlywood: burlywood,
	cadetblue: cadetblue,
	chartreuse: chartreuse,
	chocolate: chocolate,
	coral: coral,
	cornflowerblue: cornflowerblue,
	cornsilk: cornsilk,
	crimson: crimson,
	cyan: cyan,
	darkblue: darkblue,
	darkcyan: darkcyan,
	darkgoldenrod: darkgoldenrod,
	darkgray: darkgray,
	darkgreen: darkgreen,
	darkgrey: darkgrey,
	darkkhaki: darkkhaki,
	darkmagenta: darkmagenta,
	darkolivegreen: darkolivegreen,
	darkorange: darkorange,
	darkorchid: darkorchid,
	darkred: darkred,
	darksalmon: darksalmon,
	darkseagreen: darkseagreen,
	darkslateblue: darkslateblue,
	darkslategray: darkslategray,
	darkslategrey: darkslategrey,
	darkturquoise: darkturquoise,
	darkviolet: darkviolet,
	deeppink: deeppink,
	deepskyblue: deepskyblue,
	dimgray: dimgray,
	dimgrey: dimgrey,
	dodgerblue: dodgerblue,
	firebrick: firebrick,
	floralwhite: floralwhite,
	forestgreen: forestgreen,
	fuchsia: fuchsia,
	gainsboro: gainsboro,
	ghostwhite: ghostwhite,
	goldenrod: goldenrod,
	gold: gold,
	gray: gray,
	green: green,
	greenyellow: greenyellow,
	grey: grey,
	honeydew: honeydew,
	hotpink: hotpink,
	indianred: indianred,
	indigo: indigo,
	ivory: ivory,
	khaki: khaki,
	lavenderblush: lavenderblush,
	lavender: lavender,
	lawngreen: lawngreen,
	lemonchiffon: lemonchiffon,
	lightblue: lightblue,
	lightcoral: lightcoral,
	lightcyan: lightcyan,
	lightgoldenrodyellow: lightgoldenrodyellow,
	lightgray: lightgray,
	lightgreen: lightgreen,
	lightgrey: lightgrey,
	lightpink: lightpink,
	lightsalmon: lightsalmon,
	lightseagreen: lightseagreen,
	lightskyblue: lightskyblue,
	lightslategray: lightslategray,
	lightslategrey: lightslategrey,
	lightsteelblue: lightsteelblue,
	lightyellow: lightyellow,
	lime: lime,
	limegreen: limegreen,
	linen: linen,
	magenta: magenta,
	maroon: maroon,
	mediumaquamarine: mediumaquamarine,
	mediumblue: mediumblue,
	mediumorchid: mediumorchid,
	mediumpurple: mediumpurple,
	mediumseagreen: mediumseagreen,
	mediumslateblue: mediumslateblue,
	mediumspringgreen: mediumspringgreen,
	mediumturquoise: mediumturquoise,
	mediumvioletred: mediumvioletred,
	midnightblue: midnightblue,
	mintcream: mintcream,
	mistyrose: mistyrose,
	moccasin: moccasin,
	navajowhite: navajowhite,
	navy: navy,
	oldlace: oldlace,
	olive: olive,
	olivedrab: olivedrab,
	orange: orange,
	orangered: orangered,
	orchid: orchid,
	palegoldenrod: palegoldenrod,
	palegreen: palegreen,
	paleturquoise: paleturquoise,
	palevioletred: palevioletred,
	papayawhip: papayawhip,
	peachpuff: peachpuff,
	peru: peru,
	pink: pink,
	plum: plum,
	powderblue: powderblue,
	purple: purple,
	rebeccapurple: rebeccapurple,
	red: red,
	rosybrown: rosybrown,
	royalblue: royalblue,
	saddlebrown: saddlebrown,
	salmon: salmon,
	sandybrown: sandybrown,
	seagreen: seagreen,
	seashell: seashell,
	sienna: sienna,
	silver: silver,
	skyblue: skyblue,
	slateblue: slateblue,
	slategray: slategray,
	slategrey: slategrey,
	snow: snow,
	springgreen: springgreen,
	steelblue: steelblue,
	tan: tan,
	teal: teal,
	thistle: thistle,
	tomato: tomato,
	turquoise: turquoise,
	violet: violet,
	wheat: wheat,
	white: white,
	whitesmoke: whitesmoke,
	yellow: yellow,
	yellowgreen: yellowgreen
}

var black$1 = '#3a3a3a'
var white$1 = '#ffffff' // greys

var lightGrey = '#f5f5f5'
var semiLightGrey = '#ecebeb'
var grey$1 = '#b5b5b5'
var darkGrey = '#b5b5b5'
var red$1 = '#ef5350'
var green$1 = '#66bb6a'
var orange$1 = '#ffc324' // blues

var lightBlue = '#1e88e5'
var blue$1 = '#0091ea'
var darkBlue = '#1976d2'

var palette = objectSpread({}, csscolors, {
	black: black$1,
	white: white$1,
	lightGrey: lightGrey,
	semiLightGrey: semiLightGrey,
	grey: grey$1,
	lightBlue: lightBlue,
	blue: blue$1,
	darkBlue: darkBlue,
	red: red$1,
	green: green$1,
	orange: orange$1,
	darkGrey: darkGrey
})

var components = {
	// Input element
	input: {
		hover: palette.black,
		disabled: palette.grey,
		error: palette.red,
		success: palette.green,
		focus: palette.lightBlue
	},
	// Checkbox
	checkbox: {
		checked: palette.lightBlue,
		unchecked: palette.lightGrey,
		disabled: palette.grey
	},
	//Tabs
	tabs: {
		active: palette.blue,
		hover: palette.lightBlue
	},
	//Radio
	radio: {
		checked: palette.lightBlue,
		unchecked: palette.lightGrey,
		disabled: palette.grey
	}
}
var system = {
	// Main color
	primary: palette.blue,
	// States
	hover: palette.lightBlue,
	success: palette.green,
	warning: palette.orange,
	error: palette.red,
	// Misc
	text: palette.black,
	border: palette.semiLightGrey,
	// Disabled
	disabled: palette.grey,
	highlight: palette.lightGrey,
	onclick: palette.darkBlue,
	// Scrollbar
	scrollbar: palette.darkGrey,
	//legacy
	info: palette.lightBlue,
	highlightHover: palette.lightBlue,
	black: palette.black,
	white: palette.white
}
var colors = objectSpread(
	{
		system: system,
		palette: palette
	},
	palette,
	system,
	components
)

var commonjsGlobal =
	typeof globalThis !== 'undefined'
		? globalThis
		: typeof window !== 'undefined'
		? window
		: typeof global !== 'undefined'
		? global
		: typeof self !== 'undefined'
		? self
		: {}

function unwrapExports(x) {
	return x &&
		x.__esModule &&
		Object.prototype.hasOwnProperty.call(x, 'default')
		? x['default']
		: x
}

function createCommonjsModule(fn, module) {
	return (module = {exports: {}}), fn(module, module.exports), module.exports
}

var colorName = {
	aliceblue: [240, 248, 255],
	antiquewhite: [250, 235, 215],
	aqua: [0, 255, 255],
	aquamarine: [127, 255, 212],
	azure: [240, 255, 255],
	beige: [245, 245, 220],
	bisque: [255, 228, 196],
	black: [0, 0, 0],
	blanchedalmond: [255, 235, 205],
	blue: [0, 0, 255],
	blueviolet: [138, 43, 226],
	brown: [165, 42, 42],
	burlywood: [222, 184, 135],
	cadetblue: [95, 158, 160],
	chartreuse: [127, 255, 0],
	chocolate: [210, 105, 30],
	coral: [255, 127, 80],
	cornflowerblue: [100, 149, 237],
	cornsilk: [255, 248, 220],
	crimson: [220, 20, 60],
	cyan: [0, 255, 255],
	darkblue: [0, 0, 139],
	darkcyan: [0, 139, 139],
	darkgoldenrod: [184, 134, 11],
	darkgray: [169, 169, 169],
	darkgreen: [0, 100, 0],
	darkgrey: [169, 169, 169],
	darkkhaki: [189, 183, 107],
	darkmagenta: [139, 0, 139],
	darkolivegreen: [85, 107, 47],
	darkorange: [255, 140, 0],
	darkorchid: [153, 50, 204],
	darkred: [139, 0, 0],
	darksalmon: [233, 150, 122],
	darkseagreen: [143, 188, 143],
	darkslateblue: [72, 61, 139],
	darkslategray: [47, 79, 79],
	darkslategrey: [47, 79, 79],
	darkturquoise: [0, 206, 209],
	darkviolet: [148, 0, 211],
	deeppink: [255, 20, 147],
	deepskyblue: [0, 191, 255],
	dimgray: [105, 105, 105],
	dimgrey: [105, 105, 105],
	dodgerblue: [30, 144, 255],
	firebrick: [178, 34, 34],
	floralwhite: [255, 250, 240],
	forestgreen: [34, 139, 34],
	fuchsia: [255, 0, 255],
	gainsboro: [220, 220, 220],
	ghostwhite: [248, 248, 255],
	gold: [255, 215, 0],
	goldenrod: [218, 165, 32],
	gray: [128, 128, 128],
	green: [0, 128, 0],
	greenyellow: [173, 255, 47],
	grey: [128, 128, 128],
	honeydew: [240, 255, 240],
	hotpink: [255, 105, 180],
	indianred: [205, 92, 92],
	indigo: [75, 0, 130],
	ivory: [255, 255, 240],
	khaki: [240, 230, 140],
	lavender: [230, 230, 250],
	lavenderblush: [255, 240, 245],
	lawngreen: [124, 252, 0],
	lemonchiffon: [255, 250, 205],
	lightblue: [173, 216, 230],
	lightcoral: [240, 128, 128],
	lightcyan: [224, 255, 255],
	lightgoldenrodyellow: [250, 250, 210],
	lightgray: [211, 211, 211],
	lightgreen: [144, 238, 144],
	lightgrey: [211, 211, 211],
	lightpink: [255, 182, 193],
	lightsalmon: [255, 160, 122],
	lightseagreen: [32, 178, 170],
	lightskyblue: [135, 206, 250],
	lightslategray: [119, 136, 153],
	lightslategrey: [119, 136, 153],
	lightsteelblue: [176, 196, 222],
	lightyellow: [255, 255, 224],
	lime: [0, 255, 0],
	limegreen: [50, 205, 50],
	linen: [250, 240, 230],
	magenta: [255, 0, 255],
	maroon: [128, 0, 0],
	mediumaquamarine: [102, 205, 170],
	mediumblue: [0, 0, 205],
	mediumorchid: [186, 85, 211],
	mediumpurple: [147, 112, 219],
	mediumseagreen: [60, 179, 113],
	mediumslateblue: [123, 104, 238],
	mediumspringgreen: [0, 250, 154],
	mediumturquoise: [72, 209, 204],
	mediumvioletred: [199, 21, 133],
	midnightblue: [25, 25, 112],
	mintcream: [245, 255, 250],
	mistyrose: [255, 228, 225],
	moccasin: [255, 228, 181],
	navajowhite: [255, 222, 173],
	navy: [0, 0, 128],
	oldlace: [253, 245, 230],
	olive: [128, 128, 0],
	olivedrab: [107, 142, 35],
	orange: [255, 165, 0],
	orangered: [255, 69, 0],
	orchid: [218, 112, 214],
	palegoldenrod: [238, 232, 170],
	palegreen: [152, 251, 152],
	paleturquoise: [175, 238, 238],
	palevioletred: [219, 112, 147],
	papayawhip: [255, 239, 213],
	peachpuff: [255, 218, 185],
	peru: [205, 133, 63],
	pink: [255, 192, 203],
	plum: [221, 160, 221],
	powderblue: [176, 224, 230],
	purple: [128, 0, 128],
	rebeccapurple: [102, 51, 153],
	red: [255, 0, 0],
	rosybrown: [188, 143, 143],
	royalblue: [65, 105, 225],
	saddlebrown: [139, 69, 19],
	salmon: [250, 128, 114],
	sandybrown: [244, 164, 96],
	seagreen: [46, 139, 87],
	seashell: [255, 245, 238],
	sienna: [160, 82, 45],
	silver: [192, 192, 192],
	skyblue: [135, 206, 235],
	slateblue: [106, 90, 205],
	slategray: [112, 128, 144],
	slategrey: [112, 128, 144],
	snow: [255, 250, 250],
	springgreen: [0, 255, 127],
	steelblue: [70, 130, 180],
	tan: [210, 180, 140],
	teal: [0, 128, 128],
	thistle: [216, 191, 216],
	tomato: [255, 99, 71],
	turquoise: [64, 224, 208],
	violet: [238, 130, 238],
	wheat: [245, 222, 179],
	white: [255, 255, 255],
	whitesmoke: [245, 245, 245],
	yellow: [255, 255, 0],
	yellowgreen: [154, 205, 50]
}

var isArrayish = function isArrayish(obj) {
	if (!obj || typeof obj === 'string') {
		return false
	}

	return (
		obj instanceof Array ||
		Array.isArray(obj) ||
		(obj.length >= 0 &&
			(obj.splice instanceof Function ||
				(Object.getOwnPropertyDescriptor(obj, obj.length - 1) &&
					obj.constructor.name !== 'String')))
	)
}

var simpleSwizzle = createCommonjsModule(function(module) {
	var concat = Array.prototype.concat
	var slice = Array.prototype.slice

	var swizzle = (module.exports = function swizzle(args) {
		var results = []

		for (var i = 0, len = args.length; i < len; i++) {
			var arg = args[i]

			if (isArrayish(arg)) {
				// http://jsperf.com/javascript-array-concat-vs-push/98
				results = concat.call(results, slice.call(arg))
			} else {
				results.push(arg)
			}
		}

		return results
	})

	swizzle.wrap = function(fn) {
		return function() {
			return fn(swizzle(arguments))
		}
	}
})

var colorString = createCommonjsModule(function(module) {
	/* MIT license */

	var reverseNames = {}

	// create a list of reverse color names
	for (var name in colorName) {
		if (colorName.hasOwnProperty(name)) {
			reverseNames[colorName[name]] = name
		}
	}

	var cs = (module.exports = {
		to: {},
		get: {}
	})

	cs.get = function(string) {
		var prefix = string.substring(0, 3).toLowerCase()
		var val
		var model
		switch (prefix) {
			case 'hsl':
				val = cs.get.hsl(string)
				model = 'hsl'
				break
			case 'hwb':
				val = cs.get.hwb(string)
				model = 'hwb'
				break
			default:
				val = cs.get.rgb(string)
				model = 'rgb'
				break
		}

		if (!val) {
			return null
		}

		return {model: model, value: val}
	}

	cs.get.rgb = function(string) {
		if (!string) {
			return null
		}

		var abbr = /^#([a-f0-9]{3,4})$/i
		var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i
		var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/
		var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/
		var keyword = /(\D+)/

		var rgb = [0, 0, 0, 1]
		var match
		var i
		var hexAlpha

		if ((match = string.match(hex))) {
			hexAlpha = match[2]
			match = match[1]

			for (i = 0; i < 3; i++) {
				// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
				var i2 = i * 2
				rgb[i] = parseInt(match.slice(i2, i2 + 2), 16)
			}

			if (hexAlpha) {
				rgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100
			}
		} else if ((match = string.match(abbr))) {
			match = match[1]
			hexAlpha = match[3]

			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i] + match[i], 16)
			}

			if (hexAlpha) {
				rgb[3] =
					Math.round(
						(parseInt(hexAlpha + hexAlpha, 16) / 255) * 100
					) / 100
			}
		} else if ((match = string.match(rgba))) {
			for (i = 0; i < 3; i++) {
				rgb[i] = parseInt(match[i + 1], 0)
			}

			if (match[4]) {
				rgb[3] = parseFloat(match[4])
			}
		} else if ((match = string.match(per))) {
			for (i = 0; i < 3; i++) {
				rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55)
			}

			if (match[4]) {
				rgb[3] = parseFloat(match[4])
			}
		} else if ((match = string.match(keyword))) {
			if (match[1] === 'transparent') {
				return [0, 0, 0, 0]
			}

			rgb = colorName[match[1]]

			if (!rgb) {
				return null
			}

			rgb[3] = 1

			return rgb
		} else {
			return null
		}

		for (i = 0; i < 3; i++) {
			rgb[i] = clamp(rgb[i], 0, 255)
		}
		rgb[3] = clamp(rgb[3], 0, 1)

		return rgb
	}

	cs.get.hsl = function(string) {
		if (!string) {
			return null
		}

		var hsl = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/
		var match = string.match(hsl)

		if (match) {
			var alpha = parseFloat(match[4])
			var h = (parseFloat(match[1]) + 360) % 360
			var s = clamp(parseFloat(match[2]), 0, 100)
			var l = clamp(parseFloat(match[3]), 0, 100)
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1)

			return [h, s, l, a]
		}

		return null
	}

	cs.get.hwb = function(string) {
		if (!string) {
			return null
		}

		var hwb = /^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/
		var match = string.match(hwb)

		if (match) {
			var alpha = parseFloat(match[4])
			var h = ((parseFloat(match[1]) % 360) + 360) % 360
			var w = clamp(parseFloat(match[2]), 0, 100)
			var b = clamp(parseFloat(match[3]), 0, 100)
			var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1)
			return [h, w, b, a]
		}

		return null
	}

	cs.to.hex = function() {
		var rgba = simpleSwizzle(arguments)

		return (
			'#' +
			hexDouble(rgba[0]) +
			hexDouble(rgba[1]) +
			hexDouble(rgba[2]) +
			(rgba[3] < 1 ? hexDouble(Math.round(rgba[3] * 255)) : '')
		)
	}

	cs.to.rgb = function() {
		var rgba = simpleSwizzle(arguments)

		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' +
					Math.round(rgba[0]) +
					', ' +
					Math.round(rgba[1]) +
					', ' +
					Math.round(rgba[2]) +
					')'
			: 'rgba(' +
					Math.round(rgba[0]) +
					', ' +
					Math.round(rgba[1]) +
					', ' +
					Math.round(rgba[2]) +
					', ' +
					rgba[3] +
					')'
	}

	cs.to.rgb.percent = function() {
		var rgba = simpleSwizzle(arguments)

		var r = Math.round((rgba[0] / 255) * 100)
		var g = Math.round((rgba[1] / 255) * 100)
		var b = Math.round((rgba[2] / 255) * 100)

		return rgba.length < 4 || rgba[3] === 1
			? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'
			: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')'
	}

	cs.to.hsl = function() {
		var hsla = simpleSwizzle(arguments)
		return hsla.length < 4 || hsla[3] === 1
			? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'
			: 'hsla(' +
					hsla[0] +
					', ' +
					hsla[1] +
					'%, ' +
					hsla[2] +
					'%, ' +
					hsla[3] +
					')'
	}

	// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
	// (hwb have alpha optional & 1 is default value)
	cs.to.hwb = function() {
		var hwba = simpleSwizzle(arguments)

		var a = ''
		if (hwba.length >= 4 && hwba[3] !== 1) {
			a = ', ' + hwba[3]
		}

		return (
			'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')'
		)
	}

	cs.to.keyword = function(rgb) {
		return reverseNames[rgb.slice(0, 3)]
	}

	// helpers
	function clamp(num, min, max) {
		return Math.min(Math.max(min, num), max)
	}

	function hexDouble(num) {
		var str = num.toString(16).toUpperCase()
		return str.length < 2 ? '0' + str : str
	}
})
var colorString_1 = colorString.to
var colorString_2 = colorString.get

var conversions = createCommonjsModule(function(module) {
	/* MIT license */

	// NOTE: conversions should only return primitive values (i.e. arrays, or
	//       values that give correct `typeof` results).
	//       do not use box values types (i.e. Number(), String(), etc.)

	var reverseKeywords = {}
	for (var key in colorName) {
		if (colorName.hasOwnProperty(key)) {
			reverseKeywords[colorName[key]] = key
		}
	}

	var convert = (module.exports = {
		rgb: {channels: 3, labels: 'rgb'},
		hsl: {channels: 3, labels: 'hsl'},
		hsv: {channels: 3, labels: 'hsv'},
		hwb: {channels: 3, labels: 'hwb'},
		cmyk: {channels: 4, labels: 'cmyk'},
		xyz: {channels: 3, labels: 'xyz'},
		lab: {channels: 3, labels: 'lab'},
		lch: {channels: 3, labels: 'lch'},
		hex: {channels: 1, labels: ['hex']},
		keyword: {channels: 1, labels: ['keyword']},
		ansi16: {channels: 1, labels: ['ansi16']},
		ansi256: {channels: 1, labels: ['ansi256']},
		hcg: {channels: 3, labels: ['h', 'c', 'g']},
		apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
		gray: {channels: 1, labels: ['gray']}
	})

	// hide .channels and .labels properties
	for (var model in convert) {
		if (convert.hasOwnProperty(model)) {
			if (!('channels' in convert[model])) {
				throw new Error('missing channels property: ' + model)
			}

			if (!('labels' in convert[model])) {
				throw new Error('missing channel labels property: ' + model)
			}

			if (convert[model].labels.length !== convert[model].channels) {
				throw new Error('channel and label counts mismatch: ' + model)
			}

			var channels = convert[model].channels
			var labels = convert[model].labels
			delete convert[model].channels
			delete convert[model].labels
			Object.defineProperty(convert[model], 'channels', {value: channels})
			Object.defineProperty(convert[model], 'labels', {value: labels})
		}
	}

	convert.rgb.hsl = function(rgb) {
		var r = rgb[0] / 255
		var g = rgb[1] / 255
		var b = rgb[2] / 255
		var min = Math.min(r, g, b)
		var max = Math.max(r, g, b)
		var delta = max - min
		var h
		var s
		var l

		if (max === min) {
			h = 0
		} else if (r === max) {
			h = (g - b) / delta
		} else if (g === max) {
			h = 2 + (b - r) / delta
		} else if (b === max) {
			h = 4 + (r - g) / delta
		}

		h = Math.min(h * 60, 360)

		if (h < 0) {
			h += 360
		}

		l = (min + max) / 2

		if (max === min) {
			s = 0
		} else if (l <= 0.5) {
			s = delta / (max + min)
		} else {
			s = delta / (2 - max - min)
		}

		return [h, s * 100, l * 100]
	}

	convert.rgb.hsv = function(rgb) {
		var rdif
		var gdif
		var bdif
		var h
		var s

		var r = rgb[0] / 255
		var g = rgb[1] / 255
		var b = rgb[2] / 255
		var v = Math.max(r, g, b)
		var diff = v - Math.min(r, g, b)
		var diffc = function(c) {
			return (v - c) / 6 / diff + 1 / 2
		}

		if (diff === 0) {
			h = s = 0
		} else {
			s = diff / v
			rdif = diffc(r)
			gdif = diffc(g)
			bdif = diffc(b)

			if (r === v) {
				h = bdif - gdif
			} else if (g === v) {
				h = 1 / 3 + rdif - bdif
			} else if (b === v) {
				h = 2 / 3 + gdif - rdif
			}
			if (h < 0) {
				h += 1
			} else if (h > 1) {
				h -= 1
			}
		}

		return [h * 360, s * 100, v * 100]
	}

	convert.rgb.hwb = function(rgb) {
		var r = rgb[0]
		var g = rgb[1]
		var b = rgb[2]
		var h = convert.rgb.hsl(rgb)[0]
		var w = (1 / 255) * Math.min(r, Math.min(g, b))

		b = 1 - (1 / 255) * Math.max(r, Math.max(g, b))

		return [h, w * 100, b * 100]
	}

	convert.rgb.cmyk = function(rgb) {
		var r = rgb[0] / 255
		var g = rgb[1] / 255
		var b = rgb[2] / 255
		var c
		var m
		var y
		var k

		k = Math.min(1 - r, 1 - g, 1 - b)
		c = (1 - r - k) / (1 - k) || 0
		m = (1 - g - k) / (1 - k) || 0
		y = (1 - b - k) / (1 - k) || 0

		return [c * 100, m * 100, y * 100, k * 100]
	}

	/**
	 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	 * */
	function comparativeDistance(x, y) {
		return (
			Math.pow(x[0] - y[0], 2) +
			Math.pow(x[1] - y[1], 2) +
			Math.pow(x[2] - y[2], 2)
		)
	}

	convert.rgb.keyword = function(rgb) {
		var reversed = reverseKeywords[rgb]
		if (reversed) {
			return reversed
		}

		var currentClosestDistance = Infinity
		var currentClosestKeyword

		for (var keyword in colorName) {
			if (colorName.hasOwnProperty(keyword)) {
				var value = colorName[keyword]

				// Compute comparative distance
				var distance = comparativeDistance(rgb, value)

				// Check if its less, if so set as closest
				if (distance < currentClosestDistance) {
					currentClosestDistance = distance
					currentClosestKeyword = keyword
				}
			}
		}

		return currentClosestKeyword
	}

	convert.keyword.rgb = function(keyword) {
		return colorName[keyword]
	}

	convert.rgb.xyz = function(rgb) {
		var r = rgb[0] / 255
		var g = rgb[1] / 255
		var b = rgb[2] / 255

		// assume sRGB
		r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92
		g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92
		b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92

		var x = r * 0.4124 + g * 0.3576 + b * 0.1805
		var y = r * 0.2126 + g * 0.7152 + b * 0.0722
		var z = r * 0.0193 + g * 0.1192 + b * 0.9505

		return [x * 100, y * 100, z * 100]
	}

	convert.rgb.lab = function(rgb) {
		var xyz = convert.rgb.xyz(rgb)
		var x = xyz[0]
		var y = xyz[1]
		var z = xyz[2]
		var l
		var a
		var b

		x /= 95.047
		y /= 100
		z /= 108.883

		x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116

		l = 116 * y - 16
		a = 500 * (x - y)
		b = 200 * (y - z)

		return [l, a, b]
	}

	convert.hsl.rgb = function(hsl) {
		var h = hsl[0] / 360
		var s = hsl[1] / 100
		var l = hsl[2] / 100
		var t1
		var t2
		var t3
		var rgb
		var val

		if (s === 0) {
			val = l * 255
			return [val, val, val]
		}

		if (l < 0.5) {
			t2 = l * (1 + s)
		} else {
			t2 = l + s - l * s
		}

		t1 = 2 * l - t2

		rgb = [0, 0, 0]
		for (var i = 0; i < 3; i++) {
			t3 = h + (1 / 3) * -(i - 1)
			if (t3 < 0) {
				t3++
			}
			if (t3 > 1) {
				t3--
			}

			if (6 * t3 < 1) {
				val = t1 + (t2 - t1) * 6 * t3
			} else if (2 * t3 < 1) {
				val = t2
			} else if (3 * t3 < 2) {
				val = t1 + (t2 - t1) * (2 / 3 - t3) * 6
			} else {
				val = t1
			}

			rgb[i] = val * 255
		}

		return rgb
	}

	convert.hsl.hsv = function(hsl) {
		var h = hsl[0]
		var s = hsl[1] / 100
		var l = hsl[2] / 100
		var smin = s
		var lmin = Math.max(l, 0.01)
		var sv
		var v

		l *= 2
		s *= l <= 1 ? l : 2 - l
		smin *= lmin <= 1 ? lmin : 2 - lmin
		v = (l + s) / 2
		sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s)

		return [h, sv * 100, v * 100]
	}

	convert.hsv.rgb = function(hsv) {
		var h = hsv[0] / 60
		var s = hsv[1] / 100
		var v = hsv[2] / 100
		var hi = Math.floor(h) % 6

		var f = h - Math.floor(h)
		var p = 255 * v * (1 - s)
		var q = 255 * v * (1 - s * f)
		var t = 255 * v * (1 - s * (1 - f))
		v *= 255

		switch (hi) {
			case 0:
				return [v, t, p]
			case 1:
				return [q, v, p]
			case 2:
				return [p, v, t]
			case 3:
				return [p, q, v]
			case 4:
				return [t, p, v]
			case 5:
				return [v, p, q]
		}
	}

	convert.hsv.hsl = function(hsv) {
		var h = hsv[0]
		var s = hsv[1] / 100
		var v = hsv[2] / 100
		var vmin = Math.max(v, 0.01)
		var lmin
		var sl
		var l

		l = (2 - s) * v
		lmin = (2 - s) * vmin
		sl = s * vmin
		sl /= lmin <= 1 ? lmin : 2 - lmin
		sl = sl || 0
		l /= 2

		return [h, sl * 100, l * 100]
	}

	// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
	convert.hwb.rgb = function(hwb) {
		var h = hwb[0] / 360
		var wh = hwb[1] / 100
		var bl = hwb[2] / 100
		var ratio = wh + bl
		var i
		var v
		var f
		var n

		// wh + bl cant be > 1
		if (ratio > 1) {
			wh /= ratio
			bl /= ratio
		}

		i = Math.floor(6 * h)
		v = 1 - bl
		f = 6 * h - i

		if ((i & 0x01) !== 0) {
			f = 1 - f
		}

		n = wh + f * (v - wh) // linear interpolation

		var r
		var g
		var b
		switch (i) {
			default:
			case 6:
			case 0:
				r = v
				g = n
				b = wh
				break
			case 1:
				r = n
				g = v
				b = wh
				break
			case 2:
				r = wh
				g = v
				b = n
				break
			case 3:
				r = wh
				g = n
				b = v
				break
			case 4:
				r = n
				g = wh
				b = v
				break
			case 5:
				r = v
				g = wh
				b = n
				break
		}

		return [r * 255, g * 255, b * 255]
	}

	convert.cmyk.rgb = function(cmyk) {
		var c = cmyk[0] / 100
		var m = cmyk[1] / 100
		var y = cmyk[2] / 100
		var k = cmyk[3] / 100
		var r
		var g
		var b

		r = 1 - Math.min(1, c * (1 - k) + k)
		g = 1 - Math.min(1, m * (1 - k) + k)
		b = 1 - Math.min(1, y * (1 - k) + k)

		return [r * 255, g * 255, b * 255]
	}

	convert.xyz.rgb = function(xyz) {
		var x = xyz[0] / 100
		var y = xyz[1] / 100
		var z = xyz[2] / 100
		var r
		var g
		var b

		r = x * 3.2406 + y * -1.5372 + z * -0.4986
		g = x * -0.9689 + y * 1.8758 + z * 0.0415
		b = x * 0.0557 + y * -0.204 + z * 1.057

		// assume sRGB
		r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92

		g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92

		b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92

		r = Math.min(Math.max(0, r), 1)
		g = Math.min(Math.max(0, g), 1)
		b = Math.min(Math.max(0, b), 1)

		return [r * 255, g * 255, b * 255]
	}

	convert.xyz.lab = function(xyz) {
		var x = xyz[0]
		var y = xyz[1]
		var z = xyz[2]
		var l
		var a
		var b

		x /= 95.047
		y /= 100
		z /= 108.883

		x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116
		y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116
		z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116

		l = 116 * y - 16
		a = 500 * (x - y)
		b = 200 * (y - z)

		return [l, a, b]
	}

	convert.lab.xyz = function(lab) {
		var l = lab[0]
		var a = lab[1]
		var b = lab[2]
		var x
		var y
		var z

		y = (l + 16) / 116
		x = a / 500 + y
		z = y - b / 200

		var y2 = Math.pow(y, 3)
		var x2 = Math.pow(x, 3)
		var z2 = Math.pow(z, 3)
		y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787
		x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787
		z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787

		x *= 95.047
		y *= 100
		z *= 108.883

		return [x, y, z]
	}

	convert.lab.lch = function(lab) {
		var l = lab[0]
		var a = lab[1]
		var b = lab[2]
		var hr
		var h
		var c

		hr = Math.atan2(b, a)
		h = (hr * 360) / 2 / Math.PI

		if (h < 0) {
			h += 360
		}

		c = Math.sqrt(a * a + b * b)

		return [l, c, h]
	}

	convert.lch.lab = function(lch) {
		var l = lch[0]
		var c = lch[1]
		var h = lch[2]
		var a
		var b
		var hr

		hr = (h / 360) * 2 * Math.PI
		a = c * Math.cos(hr)
		b = c * Math.sin(hr)

		return [l, a, b]
	}

	convert.rgb.ansi16 = function(args) {
		var r = args[0]
		var g = args[1]
		var b = args[2]
		var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2] // hsv -> ansi16 optimization

		value = Math.round(value / 50)

		if (value === 0) {
			return 30
		}

		var ansi =
			30 +
			((Math.round(b / 255) << 2) |
				(Math.round(g / 255) << 1) |
				Math.round(r / 255))

		if (value === 2) {
			ansi += 60
		}

		return ansi
	}

	convert.hsv.ansi16 = function(args) {
		// optimization here; we already know the value and don't need to get
		// it converted for us.
		return convert.rgb.ansi16(convert.hsv.rgb(args), args[2])
	}

	convert.rgb.ansi256 = function(args) {
		var r = args[0]
		var g = args[1]
		var b = args[2]

		// we use the extended greyscale palette here, with the exception of
		// black and white. normal palette only has 4 greyscale shades.
		if (r === g && g === b) {
			if (r < 8) {
				return 16
			}

			if (r > 248) {
				return 231
			}

			return Math.round(((r - 8) / 247) * 24) + 232
		}

		var ansi =
			16 +
			36 * Math.round((r / 255) * 5) +
			6 * Math.round((g / 255) * 5) +
			Math.round((b / 255) * 5)

		return ansi
	}

	convert.ansi16.rgb = function(args) {
		var color = args % 10

		// handle greyscale
		if (color === 0 || color === 7) {
			if (args > 50) {
				color += 3.5
			}

			color = (color / 10.5) * 255

			return [color, color, color]
		}

		var mult = (~~(args > 50) + 1) * 0.5
		var r = (color & 1) * mult * 255
		var g = ((color >> 1) & 1) * mult * 255
		var b = ((color >> 2) & 1) * mult * 255

		return [r, g, b]
	}

	convert.ansi256.rgb = function(args) {
		// handle greyscale
		if (args >= 232) {
			var c = (args - 232) * 10 + 8
			return [c, c, c]
		}

		args -= 16

		var rem
		var r = (Math.floor(args / 36) / 5) * 255
		var g = (Math.floor((rem = args % 36) / 6) / 5) * 255
		var b = ((rem % 6) / 5) * 255

		return [r, g, b]
	}

	convert.rgb.hex = function(args) {
		var integer =
			((Math.round(args[0]) & 0xff) << 16) +
			((Math.round(args[1]) & 0xff) << 8) +
			(Math.round(args[2]) & 0xff)

		var string = integer.toString(16).toUpperCase()
		return '000000'.substring(string.length) + string
	}

	convert.hex.rgb = function(args) {
		var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i)
		if (!match) {
			return [0, 0, 0]
		}

		var colorString = match[0]

		if (match[0].length === 3) {
			colorString = colorString
				.split('')
				.map(function(char) {
					return char + char
				})
				.join('')
		}

		var integer = parseInt(colorString, 16)
		var r = (integer >> 16) & 0xff
		var g = (integer >> 8) & 0xff
		var b = integer & 0xff

		return [r, g, b]
	}

	convert.rgb.hcg = function(rgb) {
		var r = rgb[0] / 255
		var g = rgb[1] / 255
		var b = rgb[2] / 255
		var max = Math.max(Math.max(r, g), b)
		var min = Math.min(Math.min(r, g), b)
		var chroma = max - min
		var grayscale
		var hue

		if (chroma < 1) {
			grayscale = min / (1 - chroma)
		} else {
			grayscale = 0
		}

		if (chroma <= 0) {
			hue = 0
		} else if (max === r) {
			hue = ((g - b) / chroma) % 6
		} else if (max === g) {
			hue = 2 + (b - r) / chroma
		} else {
			hue = 4 + (r - g) / chroma + 4
		}

		hue /= 6
		hue %= 1

		return [hue * 360, chroma * 100, grayscale * 100]
	}

	convert.hsl.hcg = function(hsl) {
		var s = hsl[1] / 100
		var l = hsl[2] / 100
		var c = 1
		var f = 0

		if (l < 0.5) {
			c = 2.0 * s * l
		} else {
			c = 2.0 * s * (1.0 - l)
		}

		if (c < 1.0) {
			f = (l - 0.5 * c) / (1.0 - c)
		}

		return [hsl[0], c * 100, f * 100]
	}

	convert.hsv.hcg = function(hsv) {
		var s = hsv[1] / 100
		var v = hsv[2] / 100

		var c = s * v
		var f = 0

		if (c < 1.0) {
			f = (v - c) / (1 - c)
		}

		return [hsv[0], c * 100, f * 100]
	}

	convert.hcg.rgb = function(hcg) {
		var h = hcg[0] / 360
		var c = hcg[1] / 100
		var g = hcg[2] / 100

		if (c === 0.0) {
			return [g * 255, g * 255, g * 255]
		}

		var pure = [0, 0, 0]
		var hi = (h % 1) * 6
		var v = hi % 1
		var w = 1 - v
		var mg = 0

		switch (Math.floor(hi)) {
			case 0:
				pure[0] = 1
				pure[1] = v
				pure[2] = 0
				break
			case 1:
				pure[0] = w
				pure[1] = 1
				pure[2] = 0
				break
			case 2:
				pure[0] = 0
				pure[1] = 1
				pure[2] = v
				break
			case 3:
				pure[0] = 0
				pure[1] = w
				pure[2] = 1
				break
			case 4:
				pure[0] = v
				pure[1] = 0
				pure[2] = 1
				break
			default:
				pure[0] = 1
				pure[1] = 0
				pure[2] = w
		}

		mg = (1.0 - c) * g

		return [
			(c * pure[0] + mg) * 255,
			(c * pure[1] + mg) * 255,
			(c * pure[2] + mg) * 255
		]
	}

	convert.hcg.hsv = function(hcg) {
		var c = hcg[1] / 100
		var g = hcg[2] / 100

		var v = c + g * (1.0 - c)
		var f = 0

		if (v > 0.0) {
			f = c / v
		}

		return [hcg[0], f * 100, v * 100]
	}

	convert.hcg.hsl = function(hcg) {
		var c = hcg[1] / 100
		var g = hcg[2] / 100

		var l = g * (1.0 - c) + 0.5 * c
		var s = 0

		if (l > 0.0 && l < 0.5) {
			s = c / (2 * l)
		} else if (l >= 0.5 && l < 1.0) {
			s = c / (2 * (1 - l))
		}

		return [hcg[0], s * 100, l * 100]
	}

	convert.hcg.hwb = function(hcg) {
		var c = hcg[1] / 100
		var g = hcg[2] / 100
		var v = c + g * (1.0 - c)
		return [hcg[0], (v - c) * 100, (1 - v) * 100]
	}

	convert.hwb.hcg = function(hwb) {
		var w = hwb[1] / 100
		var b = hwb[2] / 100
		var v = 1 - b
		var c = v - w
		var g = 0

		if (c < 1) {
			g = (v - c) / (1 - c)
		}

		return [hwb[0], c * 100, g * 100]
	}

	convert.apple.rgb = function(apple) {
		return [
			(apple[0] / 65535) * 255,
			(apple[1] / 65535) * 255,
			(apple[2] / 65535) * 255
		]
	}

	convert.rgb.apple = function(rgb) {
		return [
			(rgb[0] / 255) * 65535,
			(rgb[1] / 255) * 65535,
			(rgb[2] / 255) * 65535
		]
	}

	convert.gray.rgb = function(args) {
		return [
			(args[0] / 100) * 255,
			(args[0] / 100) * 255,
			(args[0] / 100) * 255
		]
	}

	convert.gray.hsl = convert.gray.hsv = function(args) {
		return [0, 0, args[0]]
	}

	convert.gray.hwb = function(gray) {
		return [0, 100, gray[0]]
	}

	convert.gray.cmyk = function(gray) {
		return [0, 0, 0, gray[0]]
	}

	convert.gray.lab = function(gray) {
		return [gray[0], 0, 0]
	}

	convert.gray.hex = function(gray) {
		var val = Math.round((gray[0] / 100) * 255) & 0xff
		var integer = (val << 16) + (val << 8) + val

		var string = integer.toString(16).toUpperCase()
		return '000000'.substring(string.length) + string
	}

	convert.rgb.gray = function(rgb) {
		var val = (rgb[0] + rgb[1] + rgb[2]) / 3
		return [(val / 255) * 100]
	}
})
var conversions_1 = conversions.rgb
var conversions_2 = conversions.hsl
var conversions_3 = conversions.hsv
var conversions_4 = conversions.hwb
var conversions_5 = conversions.cmyk
var conversions_6 = conversions.xyz
var conversions_7 = conversions.lab
var conversions_8 = conversions.lch
var conversions_9 = conversions.hex
var conversions_10 = conversions.keyword
var conversions_11 = conversions.ansi16
var conversions_12 = conversions.ansi256
var conversions_13 = conversions.hcg
var conversions_14 = conversions.apple
var conversions_15 = conversions.gray

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {}
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions)

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		}
	}

	return graph
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph()
	var queue = [fromModel] // unshift -> queue -> pop

	graph[fromModel].distance = 0

	while (queue.length) {
		var current = queue.pop()
		var adjacents = Object.keys(conversions[current])

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i]
			var node = graph[adjacent]

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1
				node.parent = current
				queue.unshift(adjacent)
			}
		}
	}

	return graph
}

function link(from, to) {
	return function(args) {
		return to(from(args))
	}
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel]
	var fn = conversions[graph[toModel].parent][toModel]

	var cur = graph[toModel].parent
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent)
		fn = link(conversions[graph[cur].parent][cur], fn)
		cur = graph[cur].parent
	}

	fn.conversion = path
	return fn
}

var route = function(fromModel) {
	var graph = deriveBFS(fromModel)
	var conversion = {}

	var models = Object.keys(graph)
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i]
		var node = graph[toModel]

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue
		}

		conversion[toModel] = wrapConversion(toModel, graph)
	}

	return conversion
}

var convert = {}

var models = Object.keys(conversions)

function wrapRaw(fn) {
	var wrappedFn = function(args) {
		if (args === undefined || args === null) {
			return args
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments)
		}

		return fn(args)
	}

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion
	}

	return wrappedFn
}

function wrapRounded(fn) {
	var wrappedFn = function(args) {
		if (args === undefined || args === null) {
			return args
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments)
		}

		var result = fn(args)

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i])
			}
		}

		return result
	}

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion
	}

	return wrappedFn
}

models.forEach(function(fromModel) {
	convert[fromModel] = {}

	Object.defineProperty(convert[fromModel], 'channels', {
		value: conversions[fromModel].channels
	})
	Object.defineProperty(convert[fromModel], 'labels', {
		value: conversions[fromModel].labels
	})

	var routes = route(fromModel)
	var routeModels = Object.keys(routes)

	routeModels.forEach(function(toModel) {
		var fn = routes[toModel]

		convert[fromModel][toModel] = wrapRounded(fn)
		convert[fromModel][toModel].raw = wrapRaw(fn)
	})
})

var colorConvert = convert

var _slice = [].slice

var skippedModels = [
	// to be honest, I don't really feel like keyword belongs in color convert, but eh.
	'keyword',

	// gray conflicts with some method names, and has its own method defined.
	'gray',

	// shouldn't really be in color-convert either...
	'hex'
]

var hashedModelKeys = {}
Object.keys(colorConvert).forEach(function(model) {
	hashedModelKeys[
		_slice
			.call(colorConvert[model].labels)
			.sort()
			.join('')
	] = model
})

var limiters = {}

function Color(obj, model) {
	if (!(this instanceof Color)) {
		return new Color(obj, model)
	}

	if (model && model in skippedModels) {
		model = null
	}

	if (model && !(model in colorConvert)) {
		throw new Error('Unknown model: ' + model)
	}

	var i
	var channels

	if (obj == null) {
		// eslint-disable-line no-eq-null,eqeqeq
		this.model = 'rgb'
		this.color = [0, 0, 0]
		this.valpha = 1
	} else if (obj instanceof Color) {
		this.model = obj.model
		this.color = obj.color.slice()
		this.valpha = obj.valpha
	} else if (typeof obj === 'string') {
		var result = colorString.get(obj)
		if (result === null) {
			throw new Error('Unable to parse color from string: ' + obj)
		}

		this.model = result.model
		channels = colorConvert[this.model].channels
		this.color = result.value.slice(0, channels)
		this.valpha =
			typeof result.value[channels] === 'number'
				? result.value[channels]
				: 1
	} else if (obj.length) {
		this.model = model || 'rgb'
		channels = colorConvert[this.model].channels
		var newArr = _slice.call(obj, 0, channels)
		this.color = zeroArray(newArr, channels)
		this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1
	} else if (typeof obj === 'number') {
		// this is always RGB - can be converted later on.
		obj &= 0xffffff
		this.model = 'rgb'
		this.color = [(obj >> 16) & 0xff, (obj >> 8) & 0xff, obj & 0xff]
		this.valpha = 1
	} else {
		this.valpha = 1

		var keys = Object.keys(obj)
		if ('alpha' in obj) {
			keys.splice(keys.indexOf('alpha'), 1)
			this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0
		}

		var hashedKeys = keys.sort().join('')
		if (!(hashedKeys in hashedModelKeys)) {
			throw new Error(
				'Unable to parse color from object: ' + JSON.stringify(obj)
			)
		}

		this.model = hashedModelKeys[hashedKeys]

		var labels = colorConvert[this.model].labels
		var color = []
		for (i = 0; i < labels.length; i++) {
			color.push(obj[labels[i]])
		}

		this.color = zeroArray(color)
	}

	// perform limitations (clamping, etc.)
	if (limiters[this.model]) {
		channels = colorConvert[this.model].channels
		for (i = 0; i < channels; i++) {
			var limit = limiters[this.model][i]
			if (limit) {
				this.color[i] = limit(this.color[i])
			}
		}
	}

	this.valpha = Math.max(0, Math.min(1, this.valpha))

	if (Object.freeze) {
		Object.freeze(this)
	}
}

Color.prototype = {
	toString: function() {
		return this.string()
	},

	toJSON: function() {
		return this[this.model]()
	},

	string: function(places) {
		var self = this.model in colorString.to ? this : this.rgb()
		self = self.round(typeof places === 'number' ? places : 1)
		var args =
			self.valpha === 1 ? self.color : self.color.concat(this.valpha)
		return colorString.to[self.model](args)
	},

	percentString: function(places) {
		var self = this.rgb().round(typeof places === 'number' ? places : 1)
		var args =
			self.valpha === 1 ? self.color : self.color.concat(this.valpha)
		return colorString.to.rgb.percent(args)
	},

	array: function() {
		return this.valpha === 1
			? this.color.slice()
			: this.color.concat(this.valpha)
	},

	object: function() {
		var result = {}
		var channels = colorConvert[this.model].channels
		var labels = colorConvert[this.model].labels

		for (var i = 0; i < channels; i++) {
			result[labels[i]] = this.color[i]
		}

		if (this.valpha !== 1) {
			result.alpha = this.valpha
		}

		return result
	},

	unitArray: function() {
		var rgb = this.rgb().color
		rgb[0] /= 255
		rgb[1] /= 255
		rgb[2] /= 255

		if (this.valpha !== 1) {
			rgb.push(this.valpha)
		}

		return rgb
	},

	unitObject: function() {
		var rgb = this.rgb().object()
		rgb.r /= 255
		rgb.g /= 255
		rgb.b /= 255

		if (this.valpha !== 1) {
			rgb.alpha = this.valpha
		}

		return rgb
	},

	round: function(places) {
		places = Math.max(places || 0, 0)
		return new Color(
			this.color.map(roundToPlace(places)).concat(this.valpha),
			this.model
		)
	},

	alpha: function(val) {
		if (arguments.length) {
			return new Color(
				this.color.concat(Math.max(0, Math.min(1, val))),
				this.model
			)
		}

		return this.valpha
	},

	// rgb
	red: getset('rgb', 0, maxfn(255)),
	green: getset('rgb', 1, maxfn(255)),
	blue: getset('rgb', 2, maxfn(255)),

	hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function(val) {
		return ((val % 360) + 360) % 360
	}), // eslint-disable-line brace-style

	saturationl: getset('hsl', 1, maxfn(100)),
	lightness: getset('hsl', 2, maxfn(100)),

	saturationv: getset('hsv', 1, maxfn(100)),
	value: getset('hsv', 2, maxfn(100)),

	chroma: getset('hcg', 1, maxfn(100)),
	gray: getset('hcg', 2, maxfn(100)),

	white: getset('hwb', 1, maxfn(100)),
	wblack: getset('hwb', 2, maxfn(100)),

	cyan: getset('cmyk', 0, maxfn(100)),
	magenta: getset('cmyk', 1, maxfn(100)),
	yellow: getset('cmyk', 2, maxfn(100)),
	black: getset('cmyk', 3, maxfn(100)),

	x: getset('xyz', 0, maxfn(100)),
	y: getset('xyz', 1, maxfn(100)),
	z: getset('xyz', 2, maxfn(100)),

	l: getset('lab', 0, maxfn(100)),
	a: getset('lab', 1),
	b: getset('lab', 2),

	keyword: function(val) {
		if (arguments.length) {
			return new Color(val)
		}

		return colorConvert[this.model].keyword(this.color)
	},

	hex: function(val) {
		if (arguments.length) {
			return new Color(val)
		}

		return colorString.to.hex(this.rgb().round().color)
	},

	rgbNumber: function() {
		var rgb = this.rgb().color
		return (
			((rgb[0] & 0xff) << 16) | ((rgb[1] & 0xff) << 8) | (rgb[2] & 0xff)
		)
	},

	luminosity: function() {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.rgb().color

		var lum = []
		for (var i = 0; i < rgb.length; i++) {
			var chan = rgb[i] / 255
			lum[i] =
				chan <= 0.03928
					? chan / 12.92
					: Math.pow((chan + 0.055) / 1.055, 2.4)
		}

		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2]
	},

	contrast: function(color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity()
		var lum2 = color2.luminosity()

		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05)
		}

		return (lum2 + 0.05) / (lum1 + 0.05)
	},

	level: function(color2) {
		var contrastRatio = this.contrast(color2)
		if (contrastRatio >= 7.1) {
			return 'AAA'
		}

		return contrastRatio >= 4.5 ? 'AA' : ''
	},

	isDark: function() {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.rgb().color
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000
		return yiq < 128
	},

	isLight: function() {
		return !this.isDark()
	},

	negate: function() {
		var rgb = this.rgb()
		for (var i = 0; i < 3; i++) {
			rgb.color[i] = 255 - rgb.color[i]
		}
		return rgb
	},

	lighten: function(ratio) {
		var hsl = this.hsl()
		hsl.color[2] += hsl.color[2] * ratio
		return hsl
	},

	darken: function(ratio) {
		var hsl = this.hsl()
		hsl.color[2] -= hsl.color[2] * ratio
		return hsl
	},

	saturate: function(ratio) {
		var hsl = this.hsl()
		hsl.color[1] += hsl.color[1] * ratio
		return hsl
	},

	desaturate: function(ratio) {
		var hsl = this.hsl()
		hsl.color[1] -= hsl.color[1] * ratio
		return hsl
	},

	whiten: function(ratio) {
		var hwb = this.hwb()
		hwb.color[1] += hwb.color[1] * ratio
		return hwb
	},

	blacken: function(ratio) {
		var hwb = this.hwb()
		hwb.color[2] += hwb.color[2] * ratio
		return hwb
	},

	grayscale: function() {
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var rgb = this.rgb().color
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11
		return Color.rgb(val, val, val)
	},

	fade: function(ratio) {
		return this.alpha(this.valpha - this.valpha * ratio)
	},

	opaquer: function(ratio) {
		return this.alpha(this.valpha + this.valpha * ratio)
	},

	rotate: function(degrees) {
		var hsl = this.hsl()
		var hue = hsl.color[0]
		hue = (hue + degrees) % 360
		hue = hue < 0 ? 360 + hue : hue
		hsl.color[0] = hue
		return hsl
	},

	mix: function(mixinColor, weight) {
		// ported from sass implementation in C
		// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
		if (!mixinColor || !mixinColor.rgb) {
			throw new Error(
				'Argument to "mix" was not a Color instance, but rather an instance of ' +
					typeof mixinColor
			)
		}
		var color1 = mixinColor.rgb()
		var color2 = this.rgb()
		var p = weight === undefined ? 0.5 : weight

		var w = 2 * p - 1
		var a = color1.alpha() - color2.alpha()

		var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0
		var w2 = 1 - w1

		return Color.rgb(
			w1 * color1.red() + w2 * color2.red(),
			w1 * color1.green() + w2 * color2.green(),
			w1 * color1.blue() + w2 * color2.blue(),
			color1.alpha() * p + color2.alpha() * (1 - p)
		)
	}
}

// model conversion methods and static constructors
Object.keys(colorConvert).forEach(function(model) {
	if (skippedModels.indexOf(model) !== -1) {
		return
	}

	var channels = colorConvert[model].channels

	// conversion methods
	Color.prototype[model] = function() {
		if (this.model === model) {
			return new Color(this)
		}

		if (arguments.length) {
			return new Color(arguments, model)
		}

		var newAlpha =
			typeof arguments[channels] === 'number' ? channels : this.valpha
		return new Color(
			assertArray(colorConvert[this.model][model].raw(this.color)).concat(
				newAlpha
			),
			model
		)
	}

	// 'static' construction methods
	Color[model] = function(color) {
		if (typeof color === 'number') {
			color = zeroArray(_slice.call(arguments), channels)
		}
		return new Color(color, model)
	}
})

function roundTo(num, places) {
	return Number(num.toFixed(places))
}

function roundToPlace(places) {
	return function(num) {
		return roundTo(num, places)
	}
}

function getset(model, channel, modifier) {
	model = Array.isArray(model) ? model : [model]

	model.forEach(function(m) {
		;(limiters[m] || (limiters[m] = []))[channel] = modifier
	})

	model = model[0]

	return function(val) {
		var result

		if (arguments.length) {
			if (modifier) {
				val = modifier(val)
			}

			result = this[model]()
			result.color[channel] = val
			return result
		}

		result = this[model]().color[channel]
		if (modifier) {
			result = modifier(result)
		}

		return result
	}
}

function maxfn(max) {
	return function(v) {
		return Math.max(0, Math.min(max, v))
	}
}

function assertArray(val) {
	return Array.isArray(val) ? val : [val]
}

function zeroArray(arr, length) {
	for (var i = 0; i < length; i++) {
		if (typeof arr[i] !== 'number') {
			arr[i] = 0
		}
	}

	return arr
}

var addAliases = function addAliases(arr, aliases) {
	return aliases.forEach(function(key, i) {
		return Object.defineProperty(arr, key, {
			enumerable: false,
			get: function get() {
				return this[i]
			}
		})
	})
}

var breakpoints = [420, 640, 1200, 1600]
var mediaQueries = breakpoints.map(function(width) {
	return '@media screen and (min-width: '.concat(width, 'px)')
})
var aliases = ['sm', 'md', 'lg', 'xl']
addAliases(breakpoints, aliases)
addAliases(mediaQueries, aliases)
var theme = {
	colors: colors,
	breakpoints: breakpoints,
	mediaQueries: mediaQueries,
	font: {
		main: "'PT Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif",
		heading: "'PT Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif",
		monospaced:
			"'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace"
	},

	/** Отступы для margin и padding  */
	space: [0, 4, 8, 16, 32, 64, 128],

	/** Размеры шрифта в пикселях */
	// fontSizes: [10, 12, 14, 16, 20, 24, 32, 48],
	fontSizes: [12, 14, 16, 18, 22, 26, 34, 50],

	/** Толщина начертания шрифта */
	fontWeights: {
		regular: 400,
		bold: 600
	},
	letterSpacings: {
		normal: 'normal',
		caps: '0.025em'
	},

	/** Радиус скругления */
	radii: [2, 4, 8],
	boxShadows: [
		'0 0 2px 0 rgba(0,0,0,.08),0 1px 4px 0 rgba(0,0,0,.16)',
		'0 0 2px 0 rgba(0,0,0,.08),0 2px 8px 0 rgba(0,0,0,.16)',
		'0 0 2px 0 rgba(0,0,0,.08),0 4px 16px 0 rgba(0,0,0,.16)',
		'0 0 2px 0 rgba(0,0,0,.08),0 8px 32px 0 rgba(0,0,0,.16)'
	],
	borders: [],
	opacity: 0.5,
	duration: {
		fast: '150ms',
		normal: '300ms',
		slow: '450ms',
		slowest: '600ms'
	},
	timingFunctions: {
		easeInOut: 'cubic-bezier(0.5, 0, 0.25, 1)',
		easeOut: 'cubic-bezier(0, 0, 0.25, 1)',
		easeIn: 'cubic-bezier(0.5, 0, 1, 1)'
	}
}

function _objectWithoutPropertiesLoose(source, excluded) {
	if (source == null) return {}
	var target = {}
	var sourceKeys = Object.keys(source)
	var key, i

	for (i = 0; i < sourceKeys.length; i++) {
		key = sourceKeys[i]
		if (excluded.indexOf(key) >= 0) continue
		target[key] = source[key]
	}

	return target
}

var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose

function _objectWithoutProperties(source, excluded) {
	if (source == null) return {}
	var target = objectWithoutPropertiesLoose(source, excluded)
	var key, i

	if (Object.getOwnPropertySymbols) {
		var sourceSymbolKeys = Object.getOwnPropertySymbols(source)

		for (i = 0; i < sourceSymbolKeys.length; i++) {
			key = sourceSymbolKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			if (!Object.prototype.propertyIsEnumerable.call(source, key))
				continue
			target[key] = source[key]
		}
	}

	return target
}

var objectWithoutProperties = _objectWithoutProperties

function _taggedTemplateLiteral(strings, raw) {
	if (!raw) {
		raw = strings.slice(0)
	}

	return Object.freeze(
		Object.defineProperties(strings, {
			raw: {
				value: Object.freeze(raw)
			}
		})
	)
}

var taggedTemplateLiteral = _taggedTemplateLiteral

var reactIs_production_min = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {value: !0})
	var b = 'function' === typeof Symbol && Symbol.for,
		c = b ? Symbol.for('react.element') : 60103,
		d = b ? Symbol.for('react.portal') : 60106,
		e = b ? Symbol.for('react.fragment') : 60107,
		f = b ? Symbol.for('react.strict_mode') : 60108,
		g = b ? Symbol.for('react.profiler') : 60114,
		h = b ? Symbol.for('react.provider') : 60109,
		k = b ? Symbol.for('react.context') : 60110,
		l = b ? Symbol.for('react.async_mode') : 60111,
		m = b ? Symbol.for('react.concurrent_mode') : 60111,
		n = b ? Symbol.for('react.forward_ref') : 60112,
		p = b ? Symbol.for('react.suspense') : 60113,
		q = b ? Symbol.for('react.memo') : 60115,
		r = b ? Symbol.for('react.lazy') : 60116
	function t(a) {
		if ('object' === typeof a && null !== a) {
			var u = a.$$typeof
			switch (u) {
				case c:
					switch (((a = a.type), a)) {
						case l:
						case m:
						case e:
						case g:
						case f:
						case p:
							return a
						default:
							switch (((a = a && a.$$typeof), a)) {
								case k:
								case n:
								case h:
									return a
								default:
									return u
							}
					}
				case r:
				case q:
				case d:
					return u
			}
		}
	}
	function v(a) {
		return t(a) === m
	}
	exports.typeOf = t
	exports.AsyncMode = l
	exports.ConcurrentMode = m
	exports.ContextConsumer = k
	exports.ContextProvider = h
	exports.Element = c
	exports.ForwardRef = n
	exports.Fragment = e
	exports.Lazy = r
	exports.Memo = q
	exports.Portal = d
	exports.Profiler = g
	exports.StrictMode = f
	exports.Suspense = p
	exports.isValidElementType = function(a) {
		return (
			'string' === typeof a ||
			'function' === typeof a ||
			a === e ||
			a === m ||
			a === g ||
			a === f ||
			a === p ||
			('object' === typeof a &&
				null !== a &&
				(a.$$typeof === r ||
					a.$$typeof === q ||
					a.$$typeof === h ||
					a.$$typeof === k ||
					a.$$typeof === n))
		)
	}
	exports.isAsyncMode = function(a) {
		return v(a) || t(a) === l
	}
	exports.isConcurrentMode = v
	exports.isContextConsumer = function(a) {
		return t(a) === k
	}
	exports.isContextProvider = function(a) {
		return t(a) === h
	}
	exports.isElement = function(a) {
		return 'object' === typeof a && null !== a && a.$$typeof === c
	}
	exports.isForwardRef = function(a) {
		return t(a) === n
	}
	exports.isFragment = function(a) {
		return t(a) === e
	}
	exports.isLazy = function(a) {
		return t(a) === r
	}
	exports.isMemo = function(a) {
		return t(a) === q
	}
	exports.isPortal = function(a) {
		return t(a) === d
	}
	exports.isProfiler = function(a) {
		return t(a) === g
	}
	exports.isStrictMode = function(a) {
		return t(a) === f
	}
	exports.isSuspense = function(a) {
		return t(a) === p
	}
})

unwrapExports(reactIs_production_min)
var reactIs_production_min_1 = reactIs_production_min.typeOf
var reactIs_production_min_2 = reactIs_production_min.AsyncMode
var reactIs_production_min_3 = reactIs_production_min.ConcurrentMode
var reactIs_production_min_4 = reactIs_production_min.ContextConsumer
var reactIs_production_min_5 = reactIs_production_min.ContextProvider
var reactIs_production_min_6 = reactIs_production_min.Element
var reactIs_production_min_7 = reactIs_production_min.ForwardRef
var reactIs_production_min_8 = reactIs_production_min.Fragment
var reactIs_production_min_9 = reactIs_production_min.Lazy
var reactIs_production_min_10 = reactIs_production_min.Memo
var reactIs_production_min_11 = reactIs_production_min.Portal
var reactIs_production_min_12 = reactIs_production_min.Profiler
var reactIs_production_min_13 = reactIs_production_min.StrictMode
var reactIs_production_min_14 = reactIs_production_min.Suspense
var reactIs_production_min_15 = reactIs_production_min.isValidElementType
var reactIs_production_min_16 = reactIs_production_min.isAsyncMode
var reactIs_production_min_17 = reactIs_production_min.isConcurrentMode
var reactIs_production_min_18 = reactIs_production_min.isContextConsumer
var reactIs_production_min_19 = reactIs_production_min.isContextProvider
var reactIs_production_min_20 = reactIs_production_min.isElement
var reactIs_production_min_21 = reactIs_production_min.isForwardRef
var reactIs_production_min_22 = reactIs_production_min.isFragment
var reactIs_production_min_23 = reactIs_production_min.isLazy
var reactIs_production_min_24 = reactIs_production_min.isMemo
var reactIs_production_min_25 = reactIs_production_min.isPortal
var reactIs_production_min_26 = reactIs_production_min.isProfiler
var reactIs_production_min_27 = reactIs_production_min.isStrictMode
var reactIs_production_min_28 = reactIs_production_min.isSuspense

var reactIs_development = createCommonjsModule(function(module, exports) {
	if (process.env.NODE_ENV !== 'production') {
		;(function() {
			Object.defineProperty(exports, '__esModule', {value: true})

			// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
			// nor polyfill, then a plain number is used for performance.
			var hasSymbol = typeof Symbol === 'function' && Symbol.for

			var REACT_ELEMENT_TYPE = hasSymbol
				? Symbol.for('react.element')
				: 0xeac7
			var REACT_PORTAL_TYPE = hasSymbol
				? Symbol.for('react.portal')
				: 0xeaca
			var REACT_FRAGMENT_TYPE = hasSymbol
				? Symbol.for('react.fragment')
				: 0xeacb
			var REACT_STRICT_MODE_TYPE = hasSymbol
				? Symbol.for('react.strict_mode')
				: 0xeacc
			var REACT_PROFILER_TYPE = hasSymbol
				? Symbol.for('react.profiler')
				: 0xead2
			var REACT_PROVIDER_TYPE = hasSymbol
				? Symbol.for('react.provider')
				: 0xeacd
			var REACT_CONTEXT_TYPE = hasSymbol
				? Symbol.for('react.context')
				: 0xeace
			var REACT_ASYNC_MODE_TYPE = hasSymbol
				? Symbol.for('react.async_mode')
				: 0xeacf
			var REACT_CONCURRENT_MODE_TYPE = hasSymbol
				? Symbol.for('react.concurrent_mode')
				: 0xeacf
			var REACT_FORWARD_REF_TYPE = hasSymbol
				? Symbol.for('react.forward_ref')
				: 0xead0
			var REACT_SUSPENSE_TYPE = hasSymbol
				? Symbol.for('react.suspense')
				: 0xead1
			var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3
			var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4

			function isValidElementType(type) {
				return (
					typeof type === 'string' ||
					typeof type === 'function' ||
					// Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
					type === REACT_FRAGMENT_TYPE ||
					type === REACT_CONCURRENT_MODE_TYPE ||
					type === REACT_PROFILER_TYPE ||
					type === REACT_STRICT_MODE_TYPE ||
					type === REACT_SUSPENSE_TYPE ||
					(typeof type === 'object' &&
						type !== null &&
						(type.$$typeof === REACT_LAZY_TYPE ||
							type.$$typeof === REACT_MEMO_TYPE ||
							type.$$typeof === REACT_PROVIDER_TYPE ||
							type.$$typeof === REACT_CONTEXT_TYPE ||
							type.$$typeof === REACT_FORWARD_REF_TYPE))
				)
			}

			/**
			 * Forked from fbjs/warning:
			 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
			 *
			 * Only change is we use console.warn instead of console.error,
			 * and do nothing when 'console' is not supported.
			 * This really simplifies the code.
			 * ---
			 * Similar to invariant but only logs a warning if the condition is not met.
			 * This can be used to log issues in development environments in critical
			 * paths. Removing the logging code for production environments will keep the
			 * same logic and follow the same code paths.
			 */

			var lowPriorityWarning = function() {}

			{
				var printWarning = function(format) {
					for (
						var _len = arguments.length,
							args = Array(_len > 1 ? _len - 1 : 0),
							_key = 1;
						_key < _len;
						_key++
					) {
						args[_key - 1] = arguments[_key]
					}

					var argIndex = 0
					var message =
						'Warning: ' +
						format.replace(/%s/g, function() {
							return args[argIndex++]
						})
					if (typeof console !== 'undefined') {
						console.warn(message)
					}
					try {
						// --- Welcome to debugging React ---
						// This error was thrown as a convenience so that you can use this stack
						// to find the callsite that caused this warning to fire.
						throw new Error(message)
					} catch (x) {}
				}

				lowPriorityWarning = function(condition, format) {
					if (format === undefined) {
						throw new Error(
							'`lowPriorityWarning(condition, format, ...args)` requires a warning ' +
								'message argument'
						)
					}
					if (!condition) {
						for (
							var _len2 = arguments.length,
								args = Array(_len2 > 2 ? _len2 - 2 : 0),
								_key2 = 2;
							_key2 < _len2;
							_key2++
						) {
							args[_key2 - 2] = arguments[_key2]
						}

						printWarning.apply(undefined, [format].concat(args))
					}
				}
			}

			var lowPriorityWarning$1 = lowPriorityWarning

			function typeOf(object) {
				if (typeof object === 'object' && object !== null) {
					var $$typeof = object.$$typeof
					switch ($$typeof) {
						case REACT_ELEMENT_TYPE:
							var type = object.type

							switch (type) {
								case REACT_ASYNC_MODE_TYPE:
								case REACT_CONCURRENT_MODE_TYPE:
								case REACT_FRAGMENT_TYPE:
								case REACT_PROFILER_TYPE:
								case REACT_STRICT_MODE_TYPE:
								case REACT_SUSPENSE_TYPE:
									return type
								default:
									var $$typeofType = type && type.$$typeof

									switch ($$typeofType) {
										case REACT_CONTEXT_TYPE:
										case REACT_FORWARD_REF_TYPE:
										case REACT_PROVIDER_TYPE:
											return $$typeofType
										default:
											return $$typeof
									}
							}
						case REACT_LAZY_TYPE:
						case REACT_MEMO_TYPE:
						case REACT_PORTAL_TYPE:
							return $$typeof
					}
				}

				return undefined
			}

			// AsyncMode is deprecated along with isAsyncMode
			var AsyncMode = REACT_ASYNC_MODE_TYPE
			var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE
			var ContextConsumer = REACT_CONTEXT_TYPE
			var ContextProvider = REACT_PROVIDER_TYPE
			var Element = REACT_ELEMENT_TYPE
			var ForwardRef = REACT_FORWARD_REF_TYPE
			var Fragment = REACT_FRAGMENT_TYPE
			var Lazy = REACT_LAZY_TYPE
			var Memo = REACT_MEMO_TYPE
			var Portal = REACT_PORTAL_TYPE
			var Profiler = REACT_PROFILER_TYPE
			var StrictMode = REACT_STRICT_MODE_TYPE
			var Suspense = REACT_SUSPENSE_TYPE

			var hasWarnedAboutDeprecatedIsAsyncMode = false

			// AsyncMode should be deprecated
			function isAsyncMode(object) {
				{
					if (!hasWarnedAboutDeprecatedIsAsyncMode) {
						hasWarnedAboutDeprecatedIsAsyncMode = true
						lowPriorityWarning$1(
							false,
							'The ReactIs.isAsyncMode() alias has been deprecated, ' +
								'and will be removed in React 17+. Update your code to use ' +
								'ReactIs.isConcurrentMode() instead. It has the exact same API.'
						)
					}
				}
				return (
					isConcurrentMode(object) ||
					typeOf(object) === REACT_ASYNC_MODE_TYPE
				)
			}
			function isConcurrentMode(object) {
				return typeOf(object) === REACT_CONCURRENT_MODE_TYPE
			}
			function isContextConsumer(object) {
				return typeOf(object) === REACT_CONTEXT_TYPE
			}
			function isContextProvider(object) {
				return typeOf(object) === REACT_PROVIDER_TYPE
			}
			function isElement(object) {
				return (
					typeof object === 'object' &&
					object !== null &&
					object.$$typeof === REACT_ELEMENT_TYPE
				)
			}
			function isForwardRef(object) {
				return typeOf(object) === REACT_FORWARD_REF_TYPE
			}
			function isFragment(object) {
				return typeOf(object) === REACT_FRAGMENT_TYPE
			}
			function isLazy(object) {
				return typeOf(object) === REACT_LAZY_TYPE
			}
			function isMemo(object) {
				return typeOf(object) === REACT_MEMO_TYPE
			}
			function isPortal(object) {
				return typeOf(object) === REACT_PORTAL_TYPE
			}
			function isProfiler(object) {
				return typeOf(object) === REACT_PROFILER_TYPE
			}
			function isStrictMode(object) {
				return typeOf(object) === REACT_STRICT_MODE_TYPE
			}
			function isSuspense(object) {
				return typeOf(object) === REACT_SUSPENSE_TYPE
			}

			exports.typeOf = typeOf
			exports.AsyncMode = AsyncMode
			exports.ConcurrentMode = ConcurrentMode
			exports.ContextConsumer = ContextConsumer
			exports.ContextProvider = ContextProvider
			exports.Element = Element
			exports.ForwardRef = ForwardRef
			exports.Fragment = Fragment
			exports.Lazy = Lazy
			exports.Memo = Memo
			exports.Portal = Portal
			exports.Profiler = Profiler
			exports.StrictMode = StrictMode
			exports.Suspense = Suspense
			exports.isValidElementType = isValidElementType
			exports.isAsyncMode = isAsyncMode
			exports.isConcurrentMode = isConcurrentMode
			exports.isContextConsumer = isContextConsumer
			exports.isContextProvider = isContextProvider
			exports.isElement = isElement
			exports.isForwardRef = isForwardRef
			exports.isFragment = isFragment
			exports.isLazy = isLazy
			exports.isMemo = isMemo
			exports.isPortal = isPortal
			exports.isProfiler = isProfiler
			exports.isStrictMode = isStrictMode
			exports.isSuspense = isSuspense
		})()
	}
})

unwrapExports(reactIs_development)
var reactIs_development_1 = reactIs_development.typeOf
var reactIs_development_2 = reactIs_development.AsyncMode
var reactIs_development_3 = reactIs_development.ConcurrentMode
var reactIs_development_4 = reactIs_development.ContextConsumer
var reactIs_development_5 = reactIs_development.ContextProvider
var reactIs_development_6 = reactIs_development.Element
var reactIs_development_7 = reactIs_development.ForwardRef
var reactIs_development_8 = reactIs_development.Fragment
var reactIs_development_9 = reactIs_development.Lazy
var reactIs_development_10 = reactIs_development.Memo
var reactIs_development_11 = reactIs_development.Portal
var reactIs_development_12 = reactIs_development.Profiler
var reactIs_development_13 = reactIs_development.StrictMode
var reactIs_development_14 = reactIs_development.Suspense
var reactIs_development_15 = reactIs_development.isValidElementType
var reactIs_development_16 = reactIs_development.isAsyncMode
var reactIs_development_17 = reactIs_development.isConcurrentMode
var reactIs_development_18 = reactIs_development.isContextConsumer
var reactIs_development_19 = reactIs_development.isContextProvider
var reactIs_development_20 = reactIs_development.isElement
var reactIs_development_21 = reactIs_development.isForwardRef
var reactIs_development_22 = reactIs_development.isFragment
var reactIs_development_23 = reactIs_development.isLazy
var reactIs_development_24 = reactIs_development.isMemo
var reactIs_development_25 = reactIs_development.isPortal
var reactIs_development_26 = reactIs_development.isProfiler
var reactIs_development_27 = reactIs_development.isStrictMode
var reactIs_development_28 = reactIs_development.isSuspense

var reactIs = createCommonjsModule(function(module) {
	if (process.env.NODE_ENV === 'production') {
		module.exports = reactIs_production_min
	} else {
		module.exports = reactIs_development
	}
})

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols
var hasOwnProperty = Object.prototype.hasOwnProperty
var propIsEnumerable = Object.prototype.propertyIsEnumerable

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError(
			'Object.assign cannot be called with null or undefined'
		)
	}

	return Object(val)
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc') // eslint-disable-line no-new-wrappers
		test1[5] = 'de'
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {}
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
			return test2[n]
		})
		if (order2.join('') !== '0123456789') {
			return false
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {}
		'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
			test3[letter] = letter
		})
		if (
			Object.keys(Object.assign({}, test3)).join('') !==
			'abcdefghijklmnopqrst'
		) {
			return false
		}

		return true
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false
	}
}

var objectAssign = shouldUseNative()
	? Object.assign
	: function(target, source) {
			var from
			var to = toObject(target)
			var symbols

			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s])

				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key]
					}
				}

				if (getOwnPropertySymbols) {
					symbols = getOwnPropertySymbols(from)
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]]
						}
					}
				}
			}

			return to
	  }

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED'

var ReactPropTypesSecret_1 = ReactPropTypesSecret

var printWarning = function() {}

if (process.env.NODE_ENV !== 'production') {
	var ReactPropTypesSecret$1 = ReactPropTypesSecret_1
	var loggedTypeFailures = {}
	var has = Function.call.bind(Object.prototype.hasOwnProperty)

	printWarning = function(text) {
		var message = 'Warning: ' + text
		if (typeof console !== 'undefined') {
			console.error(message)
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message)
		} catch (x) {}
	}
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	if (process.env.NODE_ENV !== 'production') {
		for (var typeSpecName in typeSpecs) {
			if (has(typeSpecs, typeSpecName)) {
				var error
				// Prop type validation may throw. In case they do, we don't want to
				// fail the render phase where it didn't fail before. So we log it.
				// After these have been cleaned up, we'll let them throw.
				try {
					// This is intentionally an invariant that gets caught. It's the same
					// behavior as without this statement except with a better message.
					if (typeof typeSpecs[typeSpecName] !== 'function') {
						var err = Error(
							(componentName || 'React class') +
								': ' +
								location +
								' type `' +
								typeSpecName +
								'` is invalid; ' +
								'it must be a function, usually from the `prop-types` package, but received `' +
								typeof typeSpecs[typeSpecName] +
								'`.'
						)
						err.name = 'Invariant Violation'
						throw err
					}
					error = typeSpecs[typeSpecName](
						values,
						typeSpecName,
						componentName,
						location,
						null,
						ReactPropTypesSecret$1
					)
				} catch (ex) {
					error = ex
				}
				if (error && !(error instanceof Error)) {
					printWarning(
						(componentName || 'React class') +
							': type specification of ' +
							location +
							' `' +
							typeSpecName +
							'` is invalid; the type checker ' +
							'function must return `null` or an `Error` but returned a ' +
							typeof error +
							'. ' +
							'You may have forgotten to pass an argument to the type checker ' +
							'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
							'shape all require an argument).'
					)
				}
				if (
					error instanceof Error &&
					!(error.message in loggedTypeFailures)
				) {
					// Only monitor this failure once because there tends to be a lot of the
					// same error.
					loggedTypeFailures[error.message] = true

					var stack = getStack ? getStack() : ''

					printWarning(
						'Failed ' +
							location +
							' type: ' +
							error.message +
							(stack != null ? stack : '')
					)
				}
			}
		}
	}
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
	if (process.env.NODE_ENV !== 'production') {
		loggedTypeFailures = {}
	}
}

var checkPropTypes_1 = checkPropTypes

var has$1 = Function.call.bind(Object.prototype.hasOwnProperty)
var printWarning$1 = function() {}

if (process.env.NODE_ENV !== 'production') {
	printWarning$1 = function(text) {
		var message = 'Warning: ' + text
		if (typeof console !== 'undefined') {
			console.error(message)
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message)
		} catch (x) {}
	}
}

function emptyFunctionThatReturnsNull() {
	return null
}

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator
	var FAUX_ITERATOR_SYMBOL = '@@iterator' // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
		var iteratorFn =
			maybeIterable &&
			((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
				maybeIterable[FAUX_ITERATOR_SYMBOL])
		if (typeof iteratorFn === 'function') {
			return iteratorFn
		}
	}

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>'

	// Important!
	// Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	var ReactPropTypes = {
		array: createPrimitiveTypeChecker('array'),
		bool: createPrimitiveTypeChecker('boolean'),
		func: createPrimitiveTypeChecker('function'),
		number: createPrimitiveTypeChecker('number'),
		object: createPrimitiveTypeChecker('object'),
		string: createPrimitiveTypeChecker('string'),
		symbol: createPrimitiveTypeChecker('symbol'),

		any: createAnyTypeChecker(),
		arrayOf: createArrayOfTypeChecker,
		element: createElementTypeChecker(),
		elementType: createElementTypeTypeChecker(),
		instanceOf: createInstanceTypeChecker,
		node: createNodeChecker(),
		objectOf: createObjectOfTypeChecker,
		oneOf: createEnumTypeChecker,
		oneOfType: createUnionTypeChecker,
		shape: createShapeTypeChecker,
		exact: createStrictShapeTypeChecker
	}

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
		// SameValue algorithm
		if (x === y) {
			// Steps 1-5, 7-10
			// Steps 6.b-6.e: +0 != -0
			return x !== 0 || 1 / x === 1 / y
		} else {
			// Step 6.a: NaN == NaN
			return x !== x && y !== y
		}
	}
	/*eslint-enable no-self-compare*/

	/**
	 * We use an Error-like object for backward compatibility as people may call
	 * PropTypes directly and inspect their output. However, we don't use real
	 * Errors anymore. We don't inspect their stack anyway, and creating them
	 * is prohibitively expensive if they are created too often, such as what
	 * happens in oneOfType() for any type before the one that matched.
	 */
	function PropTypeError(message) {
		this.message = message
		this.stack = ''
	}
	// Make `instanceof Error` still work for returned errors.
	PropTypeError.prototype = Error.prototype

	function createChainableTypeChecker(validate) {
		if (process.env.NODE_ENV !== 'production') {
			var manualPropTypeCallCache = {}
			var manualPropTypeWarningCount = 0
		}
		function checkType(
			isRequired,
			props,
			propName,
			componentName,
			location,
			propFullName,
			secret
		) {
			componentName = componentName || ANONYMOUS
			propFullName = propFullName || propName

			if (secret !== ReactPropTypesSecret_1) {
				if (throwOnDirectAccess) {
					// New behavior only for users of `prop-types` package
					var err = new Error(
						'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
							'Use `PropTypes.checkPropTypes()` to call them. ' +
							'Read more at http://fb.me/use-check-prop-types'
					)
					err.name = 'Invariant Violation'
					throw err
				} else if (
					process.env.NODE_ENV !== 'production' &&
					typeof console !== 'undefined'
				) {
					// Old behavior for people using React.PropTypes
					var cacheKey = componentName + ':' + propName
					if (
						!manualPropTypeCallCache[cacheKey] &&
						// Avoid spamming the console because they are often not actionable except for lib authors
						manualPropTypeWarningCount < 3
					) {
						printWarning$1(
							'You are manually calling a React.PropTypes validation ' +
								'function for the `' +
								propFullName +
								'` prop on `' +
								componentName +
								'`. This is deprecated ' +
								'and will throw in the standalone `prop-types` package. ' +
								'You may be seeing this warning due to a third-party PropTypes ' +
								'library. See https://fb.me/react-warning-dont-call-proptypes ' +
								'for details.'
						)
						manualPropTypeCallCache[cacheKey] = true
						manualPropTypeWarningCount++
					}
				}
			}
			if (props[propName] == null) {
				if (isRequired) {
					if (props[propName] === null) {
						return new PropTypeError(
							'The ' +
								location +
								' `' +
								propFullName +
								'` is marked as required ' +
								('in `' +
									componentName +
									'`, but its value is `null`.')
						)
					}
					return new PropTypeError(
						'The ' +
							location +
							' `' +
							propFullName +
							'` is marked as required in ' +
							('`' +
								componentName +
								'`, but its value is `undefined`.')
					)
				}
				return null
			} else {
				return validate(
					props,
					propName,
					componentName,
					location,
					propFullName
				)
			}
		}

		var chainedCheckType = checkType.bind(null, false)
		chainedCheckType.isRequired = checkType.bind(null, true)

		return chainedCheckType
	}

	function createPrimitiveTypeChecker(expectedType) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName,
			secret
		) {
			var propValue = props[propName]
			var propType = getPropType(propValue)
			if (propType !== expectedType) {
				// `propValue` being instance of, say, date/regexp, pass the 'object'
				// check, but we can offer a more precise error message here rather than
				// 'of type `object`'.
				var preciseType = getPreciseType(propValue)

				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							preciseType +
							'` supplied to `' +
							componentName +
							'`, expected ') +
						('`' + expectedType + '`.')
				)
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createAnyTypeChecker() {
		return createChainableTypeChecker(emptyFunctionThatReturnsNull)
	}

	function createArrayOfTypeChecker(typeChecker) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (typeof typeChecker !== 'function') {
				return new PropTypeError(
					'Property `' +
						propFullName +
						'` of component `' +
						componentName +
						'` has invalid PropType notation inside arrayOf.'
				)
			}
			var propValue = props[propName]
			if (!Array.isArray(propValue)) {
				var propType = getPropType(propValue)
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							propType +
							'` supplied to `' +
							componentName +
							'`, expected an array.')
				)
			}
			for (var i = 0; i < propValue.length; i++) {
				var error = typeChecker(
					propValue,
					i,
					componentName,
					location,
					propFullName + '[' + i + ']',
					ReactPropTypesSecret_1
				)
				if (error instanceof Error) {
					return error
				}
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createElementTypeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName]
			if (!isValidElement(propValue)) {
				var propType = getPropType(propValue)
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							propType +
							'` supplied to `' +
							componentName +
							'`, expected a single ReactElement.')
				)
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createElementTypeTypeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName]
			if (!reactIs.isValidElementType(propValue)) {
				var propType = getPropType(propValue)
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							propType +
							'` supplied to `' +
							componentName +
							'`, expected a single ReactElement type.')
				)
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createInstanceTypeChecker(expectedClass) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (!(props[propName] instanceof expectedClass)) {
				var expectedClassName = expectedClass.name || ANONYMOUS
				var actualClassName = getClassName(props[propName])
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							actualClassName +
							'` supplied to `' +
							componentName +
							'`, expected ') +
						('instance of `' + expectedClassName + '`.')
				)
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createEnumTypeChecker(expectedValues) {
		if (!Array.isArray(expectedValues)) {
			if (process.env.NODE_ENV !== 'production') {
				if (arguments.length > 1) {
					printWarning$1(
						'Invalid arguments supplied to oneOf, expected an array, got ' +
							arguments.length +
							' arguments. ' +
							'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
					)
				} else {
					printWarning$1(
						'Invalid argument supplied to oneOf, expected an array.'
					)
				}
			}
			return emptyFunctionThatReturnsNull
		}

		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName]
			for (var i = 0; i < expectedValues.length; i++) {
				if (is(propValue, expectedValues[i])) {
					return null
				}
			}

			var valuesString = JSON.stringify(expectedValues, function replacer(
				key,
				value
			) {
				var type = getPreciseType(value)
				if (type === 'symbol') {
					return String(value)
				}
				return value
			})
			return new PropTypeError(
				'Invalid ' +
					location +
					' `' +
					propFullName +
					'` of value `' +
					String(propValue) +
					'` ' +
					('supplied to `' +
						componentName +
						'`, expected one of ' +
						valuesString +
						'.')
			)
		}
		return createChainableTypeChecker(validate)
	}

	function createObjectOfTypeChecker(typeChecker) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (typeof typeChecker !== 'function') {
				return new PropTypeError(
					'Property `' +
						propFullName +
						'` of component `' +
						componentName +
						'` has invalid PropType notation inside objectOf.'
				)
			}
			var propValue = props[propName]
			var propType = getPropType(propValue)
			if (propType !== 'object') {
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type ' +
						('`' +
							propType +
							'` supplied to `' +
							componentName +
							'`, expected an object.')
				)
			}
			for (var key in propValue) {
				if (has$1(propValue, key)) {
					var error = typeChecker(
						propValue,
						key,
						componentName,
						location,
						propFullName + '.' + key,
						ReactPropTypesSecret_1
					)
					if (error instanceof Error) {
						return error
					}
				}
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
		if (!Array.isArray(arrayOfTypeCheckers)) {
			process.env.NODE_ENV !== 'production'
				? printWarning$1(
						'Invalid argument supplied to oneOfType, expected an instance of array.'
				  )
				: void 0
			return emptyFunctionThatReturnsNull
		}

		for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
			var checker = arrayOfTypeCheckers[i]
			if (typeof checker !== 'function') {
				printWarning$1(
					'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
						'received ' +
						getPostfixForTypeWarning(checker) +
						' at index ' +
						i +
						'.'
				)
				return emptyFunctionThatReturnsNull
			}
		}

		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
				var checker = arrayOfTypeCheckers[i]
				if (
					checker(
						props,
						propName,
						componentName,
						location,
						propFullName,
						ReactPropTypesSecret_1
					) == null
				) {
					return null
				}
			}

			return new PropTypeError(
				'Invalid ' +
					location +
					' `' +
					propFullName +
					'` supplied to ' +
					('`' + componentName + '`.')
			)
		}
		return createChainableTypeChecker(validate)
	}

	function createNodeChecker() {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			if (!isNode(props[propName])) {
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` supplied to ' +
						('`' + componentName + '`, expected a ReactNode.')
				)
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createShapeTypeChecker(shapeTypes) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName]
			var propType = getPropType(propValue)
			if (propType !== 'object') {
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type `' +
						propType +
						'` ' +
						('supplied to `' +
							componentName +
							'`, expected `object`.')
				)
			}
			for (var key in shapeTypes) {
				var checker = shapeTypes[key]
				if (!checker) {
					continue
				}
				var error = checker(
					propValue,
					key,
					componentName,
					location,
					propFullName + '.' + key,
					ReactPropTypesSecret_1
				)
				if (error) {
					return error
				}
			}
			return null
		}
		return createChainableTypeChecker(validate)
	}

	function createStrictShapeTypeChecker(shapeTypes) {
		function validate(
			props,
			propName,
			componentName,
			location,
			propFullName
		) {
			var propValue = props[propName]
			var propType = getPropType(propValue)
			if (propType !== 'object') {
				return new PropTypeError(
					'Invalid ' +
						location +
						' `' +
						propFullName +
						'` of type `' +
						propType +
						'` ' +
						('supplied to `' +
							componentName +
							'`, expected `object`.')
				)
			}
			// We need to check all keys in case some are required but missing from
			// props.
			var allKeys = objectAssign({}, props[propName], shapeTypes)
			for (var key in allKeys) {
				var checker = shapeTypes[key]
				if (!checker) {
					return new PropTypeError(
						'Invalid ' +
							location +
							' `' +
							propFullName +
							'` key `' +
							key +
							'` supplied to `' +
							componentName +
							'`.' +
							'\nBad object: ' +
							JSON.stringify(props[propName], null, '  ') +
							'\nValid keys: ' +
							JSON.stringify(Object.keys(shapeTypes), null, '  ')
					)
				}
				var error = checker(
					propValue,
					key,
					componentName,
					location,
					propFullName + '.' + key,
					ReactPropTypesSecret_1
				)
				if (error) {
					return error
				}
			}
			return null
		}

		return createChainableTypeChecker(validate)
	}

	function isNode(propValue) {
		switch (typeof propValue) {
			case 'number':
			case 'string':
			case 'undefined':
				return true
			case 'boolean':
				return !propValue
			case 'object':
				if (Array.isArray(propValue)) {
					return propValue.every(isNode)
				}
				if (propValue === null || isValidElement(propValue)) {
					return true
				}

				var iteratorFn = getIteratorFn(propValue)
				if (iteratorFn) {
					var iterator = iteratorFn.call(propValue)
					var step
					if (iteratorFn !== propValue.entries) {
						while (!(step = iterator.next()).done) {
							if (!isNode(step.value)) {
								return false
							}
						}
					} else {
						// Iterator will provide entry [k,v] tuples rather than values.
						while (!(step = iterator.next()).done) {
							var entry = step.value
							if (entry) {
								if (!isNode(entry[1])) {
									return false
								}
							}
						}
					}
				} else {
					return false
				}

				return true
			default:
				return false
		}
	}

	function isSymbol(propType, propValue) {
		// Native Symbol.
		if (propType === 'symbol') {
			return true
		}

		// falsy value can't be a Symbol
		if (!propValue) {
			return false
		}

		// 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
		if (propValue['@@toStringTag'] === 'Symbol') {
			return true
		}

		// Fallback for non-spec compliant Symbols which are polyfilled.
		if (typeof Symbol === 'function' && propValue instanceof Symbol) {
			return true
		}

		return false
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
		var propType = typeof propValue
		if (Array.isArray(propValue)) {
			return 'array'
		}
		if (propValue instanceof RegExp) {
			// Old webkits (at least until Android 4.0) return 'function' rather than
			// 'object' for typeof a RegExp. We'll normalize this here so that /bla/
			// passes PropTypes.object.
			return 'object'
		}
		if (isSymbol(propType, propValue)) {
			return 'symbol'
		}
		return propType
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
		if (typeof propValue === 'undefined' || propValue === null) {
			return '' + propValue
		}
		var propType = getPropType(propValue)
		if (propType === 'object') {
			if (propValue instanceof Date) {
				return 'date'
			} else if (propValue instanceof RegExp) {
				return 'regexp'
			}
		}
		return propType
	}

	// Returns a string that is postfixed to a warning about an invalid type.
	// For example, "undefined" or "of type array"
	function getPostfixForTypeWarning(value) {
		var type = getPreciseType(value)
		switch (type) {
			case 'array':
			case 'object':
				return 'an ' + type
			case 'boolean':
			case 'date':
			case 'regexp':
				return 'a ' + type
			default:
				return type
		}
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
		if (!propValue.constructor || !propValue.constructor.name) {
			return ANONYMOUS
		}
		return propValue.constructor.name
	}

	ReactPropTypes.checkPropTypes = checkPropTypes_1
	ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache
	ReactPropTypes.PropTypes = ReactPropTypes

	return ReactPropTypes
}

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction

var factoryWithThrowingShims = function() {
	function shim(
		props,
		propName,
		componentName,
		location,
		propFullName,
		secret
	) {
		if (secret === ReactPropTypesSecret_1) {
			// It is still safe when called from React.
			return
		}
		var err = new Error(
			'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
				'Use PropTypes.checkPropTypes() to call them. ' +
				'Read more at http://fb.me/use-check-prop-types'
		)
		err.name = 'Invariant Violation'
		throw err
	}
	shim.isRequired = shim
	function getShim() {
		return shim
	} // Important!
	// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	var ReactPropTypes = {
		array: shim,
		bool: shim,
		func: shim,
		number: shim,
		object: shim,
		string: shim,
		symbol: shim,

		any: shim,
		arrayOf: getShim,
		element: shim,
		elementType: shim,
		instanceOf: getShim,
		node: shim,
		objectOf: getShim,
		oneOf: getShim,
		oneOfType: getShim,
		shape: getShim,
		exact: getShim,

		checkPropTypes: emptyFunctionWithReset,
		resetWarningCache: emptyFunction
	}

	ReactPropTypes.PropTypes = ReactPropTypes

	return ReactPropTypes
}

var propTypes = createCommonjsModule(function(module) {
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
		var ReactIs = reactIs

		// By explicitly using `prop-types` you are opting into new development behavior.
		// http://fb.me/prop-types-in-prod
		var throwOnDirectAccess = true
		module.exports = factoryWithTypeCheckers(
			ReactIs.isElement,
			throwOnDirectAccess
		)
	} else {
		// By explicitly using `prop-types` you are opting into new production behavior.
		// http://fb.me/prop-types-in-prod
		module.exports = factoryWithThrowingShims()
	}
})

function _templateObject2() {
	var data = taggedTemplateLiteral([
		'\n    html,\n    body {\n      font-family: ',
		';\n      font-size: ',
		'px;\n      line-height: 1.4;\n      height: 100%;\n    }\n\n    * {\n        box-sizing: border-box;\n      }\n'
	])

	_templateObject2 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject() {
	var data = taggedTemplateLiteral(['\n  width: 100%;\n  height: 100%;\n'])

	_templateObject = function _templateObject() {
		return data
	}

	return data
}
var Base = styled.div(_templateObject())

var ThemeProvider = function ThemeProvider(_ref) {
	var customBreakpoints = _ref.customBreakpoints,
		props = objectWithoutProperties(_ref, ['customBreakpoints'])

	var breakpoints = customBreakpoints || theme.breakpoints

	var theme$1 = objectSpread({}, theme, props.theme, {
		breakpoints: breakpoints
	})

	var GlobalStyle = createGlobalStyle(
		_templateObject2(),
		props.theme.font.main,
		props.theme.fontSizes[1]
	)
	return React__default.createElement(
		React__default.Fragment,
		null,
		React__default.createElement(GlobalStyle, null),
		React__default.createElement(
			ThemeProvider$1,
			{
				theme: theme$1
			},
			React__default.createElement(Base, props)
		)
	)
}

ThemeProvider.propTypes = {
	/**
	 * Массив значений в пикселях для кастмизации дефолтных брейкпоинтов
	 */
	customBreakpoints: propTypes.arrayOf(propTypes.number)
}

/**
 * Используйте этот компонент для управления css-параметрами width, margin, padding, and color.
 */

var Box$1 = styled('div')(
	{
		boxSizing: 'border-box',
		position: 'relative'
	},
	space,
	color,
	width,
	height,
	fontSize,
	flex,
	order,
	alignSelf,
	minWidth,
	maxWidth,
	function(props) {
		return props.css
	}
)
Box$1.displayName = 'Box'
Box$1.propTypes = {
	/** Обьект с css-правилами */
	css: propTypes.object,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Фоновый цвет блока */
	bg: propTypes.oneOfType([propTypes.string, propTypes.array]),

	/** Цвет текста */
	color: propTypes.oneOfType([propTypes.string, propTypes.array]),

	/** Ширина блока */
	width: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Высота блока */
	height: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Размер шрифта */
	fontSize: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Минимальная ширина */
	minWidth: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Максимальная ширина */
	maxWidth: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	])
	/** @component */
}

function _templateObject$1() {
	var data = taggedTemplateLiteral([
		'\n  display: flex;\n\n  ',
		' \n  ',
		' \n  ',
		' \n  ',
		';\n'
	])

	_templateObject$1 = function _templateObject() {
		return data
	}

	return data
}
/**
 * Наследует компонент `<Box />`, добавляет ему **display: flex** и расширяет свойствами **alignItems, justifyContent, flexWrap, flexDirection**.
 */

var Flex = styled(Box$1)(
	_templateObject$1(),
	alignItems,
	justifyContent,
	flexWrap,
	flexDirection
)
Flex.propTypes = {
	/** Выравнивание по-вертикали */
	alignItems: propTypes.oneOf([
		'flex-start',
		'flex-end',
		'center',
		'baseline',
		'stretch'
	]),

	/**
	 * Выравнивание по-горизонтали: One of: flex-start, flex-end, center, space-between, space-around, space-evenly.
	 * При использовании брейкпоинтов указываем массив. Например, для трех брейкпоинтов: ['flex-start', 'flex-end', 'center']
	 * */
	justifyContent: propTypes.oneOfType([
		propTypes.oneOf([
			'flex-start',
			'flex-end',
			'center',
			'space-between',
			'space-around',
			'space-evenly'
		]),
		propTypes.array
	]),

	/**
	 * Задает правила вывода flex-элементов —  в одну строку или в несколько, с переносом блоков.
	 * Если перенос разрешен, то возможно задать направление, в котором выводятся блоки
	 * */
	flexWrap: propTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),

	/**
	 * Задаёт направление основных осей в контейнере и тем самым определяет положение флексов в контейнере
	 */
	flexDirection: propTypes.oneOf([
		'row',
		'row-reverse',
		'column',
		'column-reverse'
	]),

	/** @ignore */
	theme: propTypes.any
}
Flex.defaultProps = {
	justifyContent: 'flex-start',
	alignItems: 'stretch',
	flexDirection: 'row',
	flexWrap: 'nowrap',
	theme: theme
}
Flex.displayName = 'Flex'

function _templateObject$2() {
	var data = taggedTemplateLiteral([
		'\n  overflow: hidden;\n  position: relative;\n\n  ',
		' \n  ',
		' \n  ',
		';\n'
	])

	_templateObject$2 = function _templateObject() {
		return data
	}

	return data
}

var boxShadow = function boxShadow(props) {
	var boxShadows = {
		sm: {
			'box-shadow': props.theme.boxShadows[0]
		},
		md: {
			'box-shadow': props.theme.boxShadows[1]
		},
		lg: {
			'box-shadow': props.theme.boxShadows[2]
		},
		xl: {
			'box-shadow': props.theme.boxShadows[3]
		}
	}
	return boxShadows[props.boxShadowSize] || {}
}

var boxBorder = function boxBorder(props) {
	return {
		border: '1px solid '.concat(props.theme.colors.border)
	}
}
/** Наследует компонент `<Box />` и расширяет его параметрами **boxShadowSize, borderColor, borderRadius, borderWidth**.
 * Используется для создания блока с тенью и границами.
 * */

var Card = styled(Box$1)(
	_templateObject$2(),
	boxShadow,
	boxBorder,
	borderRadius$1
)
Card.propTypes = {
	/** Размер тени */
	boxShadowSize: propTypes.oneOf(['sm', 'md', 'lg', 'xl']),

	/** Радиус скругления блока */
	borderRadius: propTypes.oneOf([0, 1, 2]),

	/** Ширина бордера */
	borderWidth: propTypes.oneOf([0, 1, 2]),

	/** @ignore */
	theme: propTypes.any
}
Card.defaultProps = {
	borderRadius: 1,
	borderWidth: 0,
	theme: theme
}
Card.displayName = 'Card'

function _templateObject$3() {
	var data = taggedTemplateLiteral([
		'\n  position: relative;\n\n  ',
		' \n  ',
		'\n  ',
		' \n  ',
		' \n  ',
		';\n'
	])

	_templateObject$3 = function _templateObject() {
		return data
	}

	return data
}
/**
 * Применяется для относительного позиционирования.
 * Наследует `<Box />`  и расширяет его параметрами **top, right, bottom, left, zIndex**.
 * */

var Relative = styled(Box$1)(
	_templateObject$3(),
	top,
	right,
	bottom,
	left,
	zIndex
)
Relative.propTypes = {
	/** Смещение сверху */
	top: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение снизу */
	bottom: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение справа */
	right: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение слева */
	left: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/**
	 * Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке,
	 * имитируя тем самым третье измерение, перпендикулярное экрану.
	 * Каждый элемент может находиться как ниже, так и выше других объектов веб-страницы,
	 * их размещением по z-оси и управляет z-index
	 * */
	zIndex: propTypes.oneOfType([propTypes.number, propTypes.string])
}
Relative.displayName = 'Relative'

function _templateObject$4() {
	var data = taggedTemplateLiteral([
		'\n  position: absolute;\n  \n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		';\n'
	])

	_templateObject$4 = function _templateObject() {
		return data
	}

	return data
}
/**
 * Применяется для абсолютного позиционирования.
 * Обычно используется в качестве потомка для компонента `<Relative />`.
 * Наследует `<Box />`  и расширяет его параметрами **top, right, bottom, left, zIndex**.
 * */

var Absolute = styled(Box$1)(
	_templateObject$4(),
	top,
	right,
	bottom,
	left,
	zIndex
)
Absolute.propTypes = {
	/** Смещение сверху */
	top: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение снизу */
	bottom: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение слева */
	left: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Смещение справа */
	right: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/**
	 * Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке,
	 * имитируя тем самым третье измерение, перпендикулярное экрану.
	 * Каждый элемент может находиться как ниже, так и выше других объектов веб-страницы,
	 * их размещением по z-оси и управляет z-index
	 * */
	zIndex: propTypes.oneOfType([propTypes.number, propTypes.string])
}
Absolute.displayName = 'Absolute'

const hexCharacters = 'a-f\\d'
const match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`
const match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`
const nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi')
const validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i')

var hexRgb = (hex, options = {}) => {
	if (
		typeof hex !== 'string' ||
		nonHexChars.test(hex) ||
		!validHexSize.test(hex)
	) {
		throw new TypeError('Expected a valid hex string')
	}

	hex = hex.replace(/^#/, '')
	let alpha = 1

	if (hex.length === 8) {
		alpha = parseInt(hex.slice(6, 8), 16) / 255
		hex = hex.slice(0, 6)
	}

	if (hex.length === 4) {
		alpha = parseInt(hex.slice(3, 4).repeat(2), 16) / 255
		hex = hex.slice(0, 3)
	}

	if (hex.length === 3) {
		hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]
	}

	const num = parseInt(hex, 16)
	const red = num >> 16
	const green = (num >> 8) & 255
	const blue = num & 255

	return options.format === 'array'
		? [red, green, blue, alpha]
		: {red, green, blue, alpha}
}

function _templateObject$5() {
	var data = taggedTemplateLiteral([
		'\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n\n  ',
		';\n'
	])

	_templateObject$5 = function _templateObject() {
		return data
	}

	return data
}

var getColor = function getColor(_ref) {
	var theme = _ref.theme,
		bg = _ref.bg,
		opacity = _ref.opacity

	if (bg === 'transparent') {
		return {
			backgroundColor: bg
		}
	}

	var hex = theme.colors[bg] || bg

	var _hexRgb = hexRgb(hex),
		red = _hexRgb.red,
		green = _hexRgb.green,
		blue = _hexRgb.blue,
		alpha = _hexRgb.alpha

	return {
		backgroundColor: 'rgba('
			.concat(red, ', ')
			.concat(green, ', ')
			.concat(blue, ', ')
			.concat(opacity || alpha, ')')
	}
}
/** Оверлей */

var StyledFlex = styled(Flex)(_templateObject$5(), getColor)

function Overlay(_ref2) {
	var children = _ref2.children,
		props = objectWithoutProperties(_ref2, ['children'])

	return React__default.createElement(
		StyledFlex,
		props,
		React__default.cloneElement(React__default.Children.only(children), {
			onClick: function onClick(e) {
				e.stopPropagation()
				e.nativeEvent.stopImmediatePropagation()
			}
		})
	)
}

Overlay.propTypes = {
	/** Содержимое оверлея */
	children: propTypes.element,

	/** Событие клика на оверлей */
	onClick: propTypes.func,

	/** @ignore */
	theme: propTypes.any
}
Overlay.defaultProps = {
	alignItems: 'center',
	justifyContent: 'center',
	bg: 'black',
	opacity: 0.85,
	theme: theme
}
Overlay.displayName = 'Overlay'

function _classCallCheck(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError('Cannot call a class as a function')
	}
}

var classCallCheck = _classCallCheck

function _defineProperties(target, props) {
	for (var i = 0; i < props.length; i++) {
		var descriptor = props[i]
		descriptor.enumerable = descriptor.enumerable || false
		descriptor.configurable = true
		if ('value' in descriptor) descriptor.writable = true
		Object.defineProperty(target, descriptor.key, descriptor)
	}
}

function _createClass(Constructor, protoProps, staticProps) {
	if (protoProps) _defineProperties(Constructor.prototype, protoProps)
	if (staticProps) _defineProperties(Constructor, staticProps)
	return Constructor
}

var createClass = _createClass

var _typeof_1 = createCommonjsModule(function(module) {
	function _typeof2(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof2 = function _typeof2(obj) {
				return typeof obj
			}
		} else {
			_typeof2 = function _typeof2(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof2(obj)
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			_typeof2(Symbol.iterator) === 'symbol'
		) {
			module.exports = _typeof = function _typeof(obj) {
				return _typeof2(obj)
			}
		} else {
			module.exports = _typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: _typeof2(obj)
			}
		}

		return _typeof(obj)
	}

	module.exports = _typeof
})

function _assertThisInitialized(self) {
	if (self === void 0) {
		throw new ReferenceError(
			"this hasn't been initialised - super() hasn't been called"
		)
	}

	return self
}

var assertThisInitialized = _assertThisInitialized

function _possibleConstructorReturn(self, call) {
	if (call && (_typeof_1(call) === 'object' || typeof call === 'function')) {
		return call
	}

	return assertThisInitialized(self)
}

var possibleConstructorReturn = _possibleConstructorReturn

var getPrototypeOf = createCommonjsModule(function(module) {
	function _getPrototypeOf(o) {
		module.exports = _getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	module.exports = _getPrototypeOf
})

var setPrototypeOf = createCommonjsModule(function(module) {
	function _setPrototypeOf(o, p) {
		module.exports = _setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}

		return _setPrototypeOf(o, p)
	}

	module.exports = _setPrototypeOf
})

function _inherits(subClass, superClass) {
	if (typeof superClass !== 'function' && superClass !== null) {
		throw new TypeError(
			'Super expression must either be null or a function'
		)
	}

	subClass.prototype = Object.create(superClass && superClass.prototype, {
		constructor: {
			value: subClass,
			writable: true,
			configurable: true
		}
	})
	if (superClass) setPrototypeOf(subClass, superClass)
}

var inherits = _inherits

var _global = createCommonjsModule(function(module) {
	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = (module.exports =
		typeof window != 'undefined' && window.Math == Math
			? window
			: typeof self != 'undefined' && self.Math == Math
			? self
			: // eslint-disable-next-line no-new-func
			  Function('return this')())
	if (typeof __g == 'number') __g = global // eslint-disable-line no-undef
})

var _core = createCommonjsModule(function(module) {
	var core = (module.exports = {version: '2.6.9'})
	if (typeof __e == 'number') __e = core // eslint-disable-line no-undef
})
var _core_1 = _core.version

var _aFunction = function(it) {
	if (typeof it != 'function') throw TypeError(it + ' is not a function!')
	return it
}

// optional / simple context binding

var _ctx = function(fn, that, length) {
	_aFunction(fn)
	if (that === undefined) return fn
	switch (length) {
		case 1:
			return function(a) {
				return fn.call(that, a)
			}
		case 2:
			return function(a, b) {
				return fn.call(that, a, b)
			}
		case 3:
			return function(a, b, c) {
				return fn.call(that, a, b, c)
			}
	}
	return function(/* ...args */) {
		return fn.apply(that, arguments)
	}
}

var _isObject = function(it) {
	return typeof it === 'object' ? it !== null : typeof it === 'function'
}

var _anObject = function(it) {
	if (!_isObject(it)) throw TypeError(it + ' is not an object!')
	return it
}

var _fails = function(exec) {
	try {
		return !!exec()
	} catch (e) {
		return true
	}
}

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function() {
	return (
		Object.defineProperty({}, 'a', {
			get: function() {
				return 7
			}
		}).a != 7
	)
})

var document$1 = _global.document
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement)
var _domCreate = function(it) {
	return is ? document$1.createElement(it) : {}
}

var _ie8DomDefine =
	!_descriptors &&
	!_fails(function() {
		return (
			Object.defineProperty(_domCreate('div'), 'a', {
				get: function() {
					return 7
				}
			}).a != 7
		)
	})

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function(it, S) {
	if (!_isObject(it)) return it
	var fn, val
	if (
		S &&
		typeof (fn = it.toString) == 'function' &&
		!_isObject((val = fn.call(it)))
	)
		return val
	if (
		typeof (fn = it.valueOf) == 'function' &&
		!_isObject((val = fn.call(it)))
	)
		return val
	if (
		!S &&
		typeof (fn = it.toString) == 'function' &&
		!_isObject((val = fn.call(it)))
	)
		return val
	throw TypeError("Can't convert object to primitive value")
}

var dP = Object.defineProperty

var f = _descriptors
	? Object.defineProperty
	: function defineProperty(O, P, Attributes) {
			_anObject(O)
			P = _toPrimitive(P, true)
			_anObject(Attributes)
			if (_ie8DomDefine)
				try {
					return dP(O, P, Attributes)
				} catch (e) {
					/* empty */
				}
			if ('get' in Attributes || 'set' in Attributes)
				throw TypeError('Accessors not supported!')
			if ('value' in Attributes) O[P] = Attributes.value
			return O
	  }

var _objectDp = {
	f: f
}

var _propertyDesc = function(bitmap, value) {
	return {
		enumerable: !(bitmap & 1),
		configurable: !(bitmap & 2),
		writable: !(bitmap & 4),
		value: value
	}
}

var _hide = _descriptors
	? function(object, key, value) {
			return _objectDp.f(object, key, _propertyDesc(1, value))
	  }
	: function(object, key, value) {
			object[key] = value
			return object
	  }

var hasOwnProperty$1 = {}.hasOwnProperty
var _has = function(it, key) {
	return hasOwnProperty$1.call(it, key)
}

var PROTOTYPE = 'prototype'

var $export = function(type, name, source) {
	var IS_FORCED = type & $export.F
	var IS_GLOBAL = type & $export.G
	var IS_STATIC = type & $export.S
	var IS_PROTO = type & $export.P
	var IS_BIND = type & $export.B
	var IS_WRAP = type & $export.W
	var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {})
	var expProto = exports[PROTOTYPE]
	var target = IS_GLOBAL
		? _global
		: IS_STATIC
		? _global[name]
		: (_global[name] || {})[PROTOTYPE]
	var key, own, out
	if (IS_GLOBAL) source = name
	for (key in source) {
		// contains in native
		own = !IS_FORCED && target && target[key] !== undefined
		if (own && _has(exports, key)) continue
		// export native or passed
		out = own ? target[key] : source[key]
		// prevent global pollution for namespaces
		exports[key] =
			IS_GLOBAL && typeof target[key] != 'function'
				? source[key]
				: // bind timers to global for call from export context
				IS_BIND && own
				? _ctx(out, _global)
				: // wrap global constructors for prevent change them in library
				IS_WRAP && target[key] == out
				? (function(C) {
						var F = function(a, b, c) {
							if (this instanceof C) {
								switch (arguments.length) {
									case 0:
										return new C()
									case 1:
										return new C(a)
									case 2:
										return new C(a, b)
								}
								return new C(a, b, c)
							}
							return C.apply(this, arguments)
						}
						F[PROTOTYPE] = C[PROTOTYPE]
						return F
						// make static versions for prototype methods
				  })(out)
				: IS_PROTO && typeof out == 'function'
				? _ctx(Function.call, out)
				: out
		// export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
		if (IS_PROTO) {
			;(exports.virtual || (exports.virtual = {}))[key] = out
			// export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
			if (type & $export.R && expProto && !expProto[key])
				_hide(expProto, key, out)
		}
	}
}
// type bitmap
$export.F = 1 // forced
$export.G = 2 // global
$export.S = 4 // static
$export.P = 8 // proto
$export.B = 16 // bind
$export.W = 32 // wrap
$export.U = 64 // safe
$export.R = 128 // real proto method for `library`
var _export = $export

var toString = {}.toString

var _cof = function(it) {
	return toString.call(it).slice(8, -1)
}

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0)
	? Object
	: function(it) {
			return _cof(it) == 'String' ? it.split('') : Object(it)
	  }

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function(it) {
	if (it == undefined) throw TypeError("Can't call method on  " + it)
	return it
}

// to indexed object, toObject with fallback for non-array-like ES3 strings

var _toIobject = function(it) {
	return _iobject(_defined(it))
}

// 7.1.4 ToInteger
var ceil = Math.ceil
var floor = Math.floor
var _toInteger = function(it) {
	return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it)
}

// 7.1.15 ToLength

var min = Math.min
var _toLength = function(it) {
	return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0 // pow(2, 53) - 1 == 9007199254740991
}

var max = Math.max
var min$1 = Math.min
var _toAbsoluteIndex = function(index, length) {
	index = _toInteger(index)
	return index < 0 ? max(index + length, 0) : min$1(index, length)
}

// false -> Array#indexOf
// true  -> Array#includes

var _arrayIncludes = function(IS_INCLUDES) {
	return function($this, el, fromIndex) {
		var O = _toIobject($this)
		var length = _toLength(O.length)
		var index = _toAbsoluteIndex(fromIndex, length)
		var value
		// Array#includes uses SameValueZero equality algorithm
		// eslint-disable-next-line no-self-compare
		if (IS_INCLUDES && el != el)
			while (length > index) {
				value = O[index++]
				// eslint-disable-next-line no-self-compare
				if (value != value) return true
				// Array#indexOf ignores holes, Array#includes - not
			}
		else
			for (; length > index; index++)
				if (IS_INCLUDES || index in O) {
					if (O[index] === el) return IS_INCLUDES || index || 0
				}
		return !IS_INCLUDES && -1
	}
}

var _library = true

var _shared = createCommonjsModule(function(module) {
	var SHARED = '__core-js_shared__'
	var store = _global[SHARED] || (_global[SHARED] = {})

	;(module.exports = function(key, value) {
		return store[key] || (store[key] = value !== undefined ? value : {})
	})('versions', []).push({
		version: _core.version,
		mode: 'pure',
		copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
	})
})

var id = 0
var px = Math.random()
var _uid = function(key) {
	return 'Symbol('.concat(
		key === undefined ? '' : key,
		')_',
		(++id + px).toString(36)
	)
}

var shared = _shared('keys')

var _sharedKey = function(key) {
	return shared[key] || (shared[key] = _uid(key))
}

var arrayIndexOf = _arrayIncludes(false)
var IE_PROTO = _sharedKey('IE_PROTO')

var _objectKeysInternal = function(object, names) {
	var O = _toIobject(object)
	var i = 0
	var result = []
	var key
	for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key)
	// Don't enum bug & hidden keys
	while (names.length > i)
		if (_has(O, (key = names[i++]))) {
			~arrayIndexOf(result, key) || result.push(key)
		}
	return result
}

// IE 8- don't enum bug keys
var _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
	','
)

// 19.1.2.14 / 15.2.3.14 Object.keys(O)

var _objectKeys =
	Object.keys ||
	function keys(O) {
		return _objectKeysInternal(O, _enumBugKeys)
	}

var f$1 = Object.getOwnPropertySymbols

var _objectGops = {
	f: f$1
}

var f$2 = {}.propertyIsEnumerable

var _objectPie = {
	f: f$2
}

// 7.1.13 ToObject(argument)

var _toObject = function(it) {
	return Object(_defined(it))
}

// 19.1.2.1 Object.assign(target, source, ...)

var $assign = Object.assign

// should work with symbols and should have deterministic property order (V8 bug)
var _objectAssign =
	!$assign ||
	_fails(function() {
		var A = {}
		var B = {}
		// eslint-disable-next-line no-undef
		var S = Symbol()
		var K = 'abcdefghijklmnopqrst'
		A[S] = 7
		K.split('').forEach(function(k) {
			B[k] = k
		})
		return (
			$assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K
		)
	})
		? function assign(target, source) {
				// eslint-disable-line no-unused-vars
				var T = _toObject(target)
				var aLen = arguments.length
				var index = 1
				var getSymbols = _objectGops.f
				var isEnum = _objectPie.f
				while (aLen > index) {
					var S = _iobject(arguments[index++])
					var keys = getSymbols
						? _objectKeys(S).concat(getSymbols(S))
						: _objectKeys(S)
					var length = keys.length
					var j = 0
					var key
					while (length > j) {
						key = keys[j++]
						if (!_descriptors || isEnum.call(S, key))
							T[key] = S[key]
					}
				}
				return T
		  }
		: $assign

// 19.1.3.1 Object.assign(target, source)

_export(_export.S + _export.F, 'Object', {assign: _objectAssign})

var assign = _core.Object.assign

var assign$1 = createCommonjsModule(function(module) {
	module.exports = {default: assign, __esModule: true}
})

unwrapExports(assign$1)

var _extends = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _assign2 = _interopRequireDefault(assign$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default =
		_assign2.default ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]

				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}

			return target
		}
})

var _extends$1 = unwrapExports(_extends)

var classCallCheck$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	exports.default = function(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}
})

var _classCallCheck$1 = unwrapExports(classCallCheck$1)

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function(TO_STRING) {
	return function(that, pos) {
		var s = String(_defined(that))
		var i = _toInteger(pos)
		var l = s.length
		var a, b
		if (i < 0 || i >= l) return TO_STRING ? '' : undefined
		a = s.charCodeAt(i)
		return a < 0xd800 ||
			a > 0xdbff ||
			i + 1 === l ||
			(b = s.charCodeAt(i + 1)) < 0xdc00 ||
			b > 0xdfff
			? TO_STRING
				? s.charAt(i)
				: a
			: TO_STRING
			? s.slice(i, i + 2)
			: ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000
	}
}

var _redefine = _hide

var _iterators = {}

var _objectDps = _descriptors
	? Object.defineProperties
	: function defineProperties(O, Properties) {
			_anObject(O)
			var keys = _objectKeys(Properties)
			var length = keys.length
			var i = 0
			var P
			while (length > i) _objectDp.f(O, (P = keys[i++]), Properties[P])
			return O
	  }

var document$2 = _global.document
var _html = document$2 && document$2.documentElement

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])

var IE_PROTO$1 = _sharedKey('IE_PROTO')
var Empty = function() {
	/* empty */
}
var PROTOTYPE$1 = 'prototype'

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function() {
	// Thrash, waste and sodomy: IE GC bug
	var iframe = _domCreate('iframe')
	var i = _enumBugKeys.length
	var lt = '<'
	var gt = '>'
	var iframeDocument
	iframe.style.display = 'none'
	_html.appendChild(iframe)
	iframe.src = 'javascript:' // eslint-disable-line no-script-url
	// createDict = iframe.contentWindow.Object;
	// html.removeChild(iframe);
	iframeDocument = iframe.contentWindow.document
	iframeDocument.open()
	iframeDocument.write(
		lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt
	)
	iframeDocument.close()
	createDict = iframeDocument.F
	while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]]
	return createDict()
}

var _objectCreate =
	Object.create ||
	function create(O, Properties) {
		var result
		if (O !== null) {
			Empty[PROTOTYPE$1] = _anObject(O)
			result = new Empty()
			Empty[PROTOTYPE$1] = null
			// add "__proto__" for Object.getPrototypeOf polyfill
			result[IE_PROTO$1] = O
		} else result = createDict()
		return Properties === undefined
			? result
			: _objectDps(result, Properties)
	}

var _wks = createCommonjsModule(function(module) {
	var store = _shared('wks')

	var Symbol = _global.Symbol
	var USE_SYMBOL = typeof Symbol == 'function'

	var $exports = (module.exports = function(name) {
		return (
			store[name] ||
			(store[name] =
				(USE_SYMBOL && Symbol[name]) ||
				(USE_SYMBOL ? Symbol : _uid)('Symbol.' + name))
		)
	})

	$exports.store = store
})

var def = _objectDp.f

var TAG = _wks('toStringTag')

var _setToStringTag = function(it, tag, stat) {
	if (it && !_has((it = stat ? it : it.prototype), TAG))
		def(it, TAG, {configurable: true, value: tag})
}

var IteratorPrototype = {}

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function() {
	return this
})

var _iterCreate = function(Constructor, NAME, next) {
	Constructor.prototype = _objectCreate(IteratorPrototype, {
		next: _propertyDesc(1, next)
	})
	_setToStringTag(Constructor, NAME + ' Iterator')
}

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)

var IE_PROTO$2 = _sharedKey('IE_PROTO')
var ObjectProto = Object.prototype

var _objectGpo =
	Object.getPrototypeOf ||
	function(O) {
		O = _toObject(O)
		if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2]
		if (typeof O.constructor == 'function' && O instanceof O.constructor) {
			return O.constructor.prototype
		}
		return O instanceof Object ? ObjectProto : null
	}

var ITERATOR = _wks('iterator')
var BUGGY = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator'
var KEYS = 'keys'
var VALUES = 'values'

var returnThis = function() {
	return this
}

var _iterDefine = function(
	Base,
	NAME,
	Constructor,
	next,
	DEFAULT,
	IS_SET,
	FORCED
) {
	_iterCreate(Constructor, NAME, next)
	var getMethod = function(kind) {
		if (!BUGGY && kind in proto) return proto[kind]
		switch (kind) {
			case KEYS:
				return function keys() {
					return new Constructor(this, kind)
				}
			case VALUES:
				return function values() {
					return new Constructor(this, kind)
				}
		}
		return function entries() {
			return new Constructor(this, kind)
		}
	}
	var TAG = NAME + ' Iterator'
	var DEF_VALUES = DEFAULT == VALUES
	var VALUES_BUG = false
	var proto = Base.prototype
	var $native =
		proto[ITERATOR] || proto[FF_ITERATOR] || (DEFAULT && proto[DEFAULT])
	var $default = $native || getMethod(DEFAULT)
	var $entries = DEFAULT
		? !DEF_VALUES
			? $default
			: getMethod('entries')
		: undefined
	var $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	var methods, key, IteratorPrototype
	// Fix native
	if ($anyNative) {
		IteratorPrototype = _objectGpo($anyNative.call(new Base()))
		if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
			// Set @@toStringTag to native iterators
			_setToStringTag(IteratorPrototype, TAG, true)
		}
	}
	// fix Array#{values, @@iterator}.name in V8 / FF
	if (DEF_VALUES && $native && $native.name !== VALUES) {
		VALUES_BUG = true
		$default = function values() {
			return $native.call(this)
		}
	}
	// Define iterator
	if (FORCED && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
		_hide(proto, ITERATOR, $default)
	}
	// Plug for library
	_iterators[NAME] = $default
	_iterators[TAG] = returnThis
	if (DEFAULT) {
		methods = {
			values: DEF_VALUES ? $default : getMethod(VALUES),
			keys: IS_SET ? $default : getMethod(KEYS),
			entries: $entries
		}
		if (FORCED)
			for (key in methods) {
				if (!(key in proto)) _redefine(proto, key, methods[key])
			}
		else
			_export(
				_export.P + _export.F * (BUGGY || VALUES_BUG),
				NAME,
				methods
			)
	}
	return methods
}

var $at = _stringAt(true)

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(
	String,
	'String',
	function(iterated) {
		this._t = String(iterated) // target
		this._i = 0 // next index
		// 21.1.5.2.1 %StringIteratorPrototype%.next()
	},
	function() {
		var O = this._t
		var index = this._i
		var point
		if (index >= O.length) return {value: undefined, done: true}
		point = $at(O, index)
		this._i += point.length
		return {value: point, done: false}
	}
)

var _iterStep = function(done, value) {
	return {value: value, done: !!done}
}

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(
	Array,
	'Array',
	function(iterated, kind) {
		this._t = _toIobject(iterated) // target
		this._i = 0 // next index
		this._k = kind // kind
		// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	},
	function() {
		var O = this._t
		var kind = this._k
		var index = this._i++
		if (!O || index >= O.length) {
			this._t = undefined
			return _iterStep(1)
		}
		if (kind == 'keys') return _iterStep(0, index)
		if (kind == 'values') return _iterStep(0, O[index])
		return _iterStep(0, [index, O[index]])
	},
	'values'
)

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
_iterators.Arguments = _iterators.Array

var TO_STRING_TAG = _wks('toStringTag')

var DOMIterables = (
	'CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	'TextTrackList,TouchList'
).split(',')

for (var i = 0; i < DOMIterables.length; i++) {
	var NAME = DOMIterables[i]
	var Collection = _global[NAME]
	var proto = Collection && Collection.prototype
	if (proto && !proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME)
	_iterators[NAME] = _iterators.Array
}

var f$3 = _wks

var _wksExt = {
	f: f$3
}

var iterator = _wksExt.f('iterator')

var iterator$1 = createCommonjsModule(function(module) {
	module.exports = {default: iterator, __esModule: true}
})

unwrapExports(iterator$1)

var _meta = createCommonjsModule(function(module) {
	var META = _uid('meta')

	var setDesc = _objectDp.f
	var id = 0
	var isExtensible =
		Object.isExtensible ||
		function() {
			return true
		}
	var FREEZE = !_fails(function() {
		return isExtensible(Object.preventExtensions({}))
	})
	var setMeta = function(it) {
		setDesc(it, META, {
			value: {
				i: 'O' + ++id, // object ID
				w: {} // weak collections IDs
			}
		})
	}
	var fastKey = function(it, create) {
		// return primitive with prefix
		if (!_isObject(it))
			return typeof it == 'symbol'
				? it
				: (typeof it == 'string' ? 'S' : 'P') + it
		if (!_has(it, META)) {
			// can't set metadata to uncaught frozen object
			if (!isExtensible(it)) return 'F'
			// not necessary to add metadata
			if (!create) return 'E'
			// add missing metadata
			setMeta(it)
			// return object ID
		}
		return it[META].i
	}
	var getWeak = function(it, create) {
		if (!_has(it, META)) {
			// can't set metadata to uncaught frozen object
			if (!isExtensible(it)) return true
			// not necessary to add metadata
			if (!create) return false
			// add missing metadata
			setMeta(it)
			// return hash weak collections IDs
		}
		return it[META].w
	}
	// add metadata on freeze-family methods calling
	var onFreeze = function(it) {
		if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META))
			setMeta(it)
		return it
	}
	var meta = (module.exports = {
		KEY: META,
		NEED: false,
		fastKey: fastKey,
		getWeak: getWeak,
		onFreeze: onFreeze
	})
})
var _meta_1 = _meta.KEY
var _meta_2 = _meta.NEED
var _meta_3 = _meta.fastKey
var _meta_4 = _meta.getWeak
var _meta_5 = _meta.onFreeze

var defineProperty$1 = _objectDp.f
var _wksDefine = function(name) {
	var $Symbol = _core.Symbol || (_core.Symbol = {})
	if (name.charAt(0) != '_' && !(name in $Symbol))
		defineProperty$1($Symbol, name, {value: _wksExt.f(name)})
}

// all enumerable object keys, includes symbols

var _enumKeys = function(it) {
	var result = _objectKeys(it)
	var getSymbols = _objectGops.f
	if (getSymbols) {
		var symbols = getSymbols(it)
		var isEnum = _objectPie.f
		var i = 0
		var key
		while (symbols.length > i)
			if (isEnum.call(it, (key = symbols[i++]))) result.push(key)
	}
	return result
}

// 7.2.2 IsArray(argument)

var _isArray =
	Array.isArray ||
	function isArray(arg) {
		return _cof(arg) == 'Array'
	}

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)

var hiddenKeys = _enumBugKeys.concat('length', 'prototype')

var f$4 =
	Object.getOwnPropertyNames ||
	function getOwnPropertyNames(O) {
		return _objectKeysInternal(O, hiddenKeys)
	}

var _objectGopn = {
	f: f$4
}

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

var gOPN = _objectGopn.f
var toString$1 = {}.toString

var windowNames =
	typeof window == 'object' && window && Object.getOwnPropertyNames
		? Object.getOwnPropertyNames(window)
		: []

var getWindowNames = function(it) {
	try {
		return gOPN(it)
	} catch (e) {
		return windowNames.slice()
	}
}

var f$5 = function getOwnPropertyNames(it) {
	return windowNames && toString$1.call(it) == '[object Window]'
		? getWindowNames(it)
		: gOPN(_toIobject(it))
}

var _objectGopnExt = {
	f: f$5
}

var gOPD = Object.getOwnPropertyDescriptor

var f$6 = _descriptors
	? gOPD
	: function getOwnPropertyDescriptor(O, P) {
			O = _toIobject(O)
			P = _toPrimitive(P, true)
			if (_ie8DomDefine)
				try {
					return gOPD(O, P)
				} catch (e) {
					/* empty */
				}
			if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P])
	  }

var _objectGopd = {
	f: f$6
}

// ECMAScript 6 symbols shim

var META = _meta.KEY

var gOPD$1 = _objectGopd.f
var dP$1 = _objectDp.f
var gOPN$1 = _objectGopnExt.f
var $Symbol = _global.Symbol
var $JSON = _global.JSON
var _stringify = $JSON && $JSON.stringify
var PROTOTYPE$2 = 'prototype'
var HIDDEN = _wks('_hidden')
var TO_PRIMITIVE = _wks('toPrimitive')
var isEnum = {}.propertyIsEnumerable
var SymbolRegistry = _shared('symbol-registry')
var AllSymbols = _shared('symbols')
var OPSymbols = _shared('op-symbols')
var ObjectProto$1 = Object[PROTOTYPE$2]
var USE_NATIVE = typeof $Symbol == 'function' && !!_objectGops.f
var QObject = _global.QObject
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter =
	!QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc =
	_descriptors &&
	_fails(function() {
		return (
			_objectCreate(
				dP$1({}, 'a', {
					get: function() {
						return dP$1(this, 'a', {value: 7}).a
					}
				})
			).a != 7
		)
	})
		? function(it, key, D) {
				var protoDesc = gOPD$1(ObjectProto$1, key)
				if (protoDesc) delete ObjectProto$1[key]
				dP$1(it, key, D)
				if (protoDesc && it !== ObjectProto$1)
					dP$1(ObjectProto$1, key, protoDesc)
		  }
		: dP$1

var wrap = function(tag) {
	var sym = (AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]))
	sym._k = tag
	return sym
}

var isSymbol =
	USE_NATIVE && typeof $Symbol.iterator == 'symbol'
		? function(it) {
				return typeof it == 'symbol'
		  }
		: function(it) {
				return it instanceof $Symbol
		  }

var $defineProperty = function defineProperty(it, key, D) {
	if (it === ObjectProto$1) $defineProperty(OPSymbols, key, D)
	_anObject(it)
	key = _toPrimitive(key, true)
	_anObject(D)
	if (_has(AllSymbols, key)) {
		if (!D.enumerable) {
			if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}))
			it[HIDDEN][key] = true
		} else {
			if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false
			D = _objectCreate(D, {enumerable: _propertyDesc(0, false)})
		}
		return setSymbolDesc(it, key, D)
	}
	return dP$1(it, key, D)
}
var $defineProperties = function defineProperties(it, P) {
	_anObject(it)
	var keys = _enumKeys((P = _toIobject(P)))
	var i = 0
	var l = keys.length
	var key
	while (l > i) $defineProperty(it, (key = keys[i++]), P[key])
	return it
}
var $create = function create(it, P) {
	return P === undefined
		? _objectCreate(it)
		: $defineProperties(_objectCreate(it), P)
}
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	var E = isEnum.call(this, (key = _toPrimitive(key, true)))
	if (
		this === ObjectProto$1 &&
		_has(AllSymbols, key) &&
		!_has(OPSymbols, key)
	)
		return false
	return E ||
		!_has(this, key) ||
		!_has(AllSymbols, key) ||
		(_has(this, HIDDEN) && this[HIDDEN][key])
		? E
		: true
}
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	it = _toIobject(it)
	key = _toPrimitive(key, true)
	if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))
		return
	var D = gOPD$1(it, key)
	if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key]))
		D.enumerable = true
	return D
}
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	var names = gOPN$1(_toIobject(it))
	var result = []
	var i = 0
	var key
	while (names.length > i) {
		if (
			!_has(AllSymbols, (key = names[i++])) &&
			key != HIDDEN &&
			key != META
		)
			result.push(key)
	}
	return result
}
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	var IS_OP = it === ObjectProto$1
	var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it))
	var result = []
	var i = 0
	var key
	while (names.length > i) {
		if (
			_has(AllSymbols, (key = names[i++])) &&
			(IS_OP ? _has(ObjectProto$1, key) : true)
		)
			result.push(AllSymbols[key])
	}
	return result
}

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
	$Symbol = function Symbol() {
		if (this instanceof $Symbol)
			throw TypeError('Symbol is not a constructor!')
		var tag = _uid(arguments.length > 0 ? arguments[0] : undefined)
		var $set = function(value) {
			if (this === ObjectProto$1) $set.call(OPSymbols, value)
			if (_has(this, HIDDEN) && _has(this[HIDDEN], tag))
				this[HIDDEN][tag] = false
			setSymbolDesc(this, tag, _propertyDesc(1, value))
		}
		if (_descriptors && setter)
			setSymbolDesc(ObjectProto$1, tag, {configurable: true, set: $set})
		return wrap(tag)
	}
	_redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {
		return this._k
	})

	_objectGopd.f = $getOwnPropertyDescriptor
	_objectDp.f = $defineProperty
	_objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames
	_objectPie.f = $propertyIsEnumerable
	_objectGops.f = $getOwnPropertySymbols

	if (_descriptors && !_library) {
		_redefine(
			ObjectProto$1,
			'propertyIsEnumerable',
			$propertyIsEnumerable,
			true
		)
	}

	_wksExt.f = function(name) {
		return wrap(_wks(name))
	}
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE, {Symbol: $Symbol})

for (
	var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
			// 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
			','
		),
		j = 0;
	es6Symbols.length > j;

)
	_wks(es6Symbols[j++])

for (
	var wellKnownSymbols = _objectKeys(_wks.store), k = 0;
	wellKnownSymbols.length > k;

)
	_wksDefine(wellKnownSymbols[k++])

_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {
	// 19.4.2.1 Symbol.for(key)
	for: function(key) {
		return _has(SymbolRegistry, (key += ''))
			? SymbolRegistry[key]
			: (SymbolRegistry[key] = $Symbol(key))
	},
	// 19.4.2.5 Symbol.keyFor(sym)
	keyFor: function keyFor(sym) {
		if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!')
		for (var key in SymbolRegistry)
			if (SymbolRegistry[key] === sym) return key
	},
	useSetter: function() {
		setter = true
	},
	useSimple: function() {
		setter = false
	}
})

_export(_export.S + _export.F * !USE_NATIVE, 'Object', {
	// 19.1.2.2 Object.create(O [, Properties])
	create: $create,
	// 19.1.2.4 Object.defineProperty(O, P, Attributes)
	defineProperty: $defineProperty,
	// 19.1.2.3 Object.defineProperties(O, Properties)
	defineProperties: $defineProperties,
	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	// 19.1.2.7 Object.getOwnPropertyNames(O)
	getOwnPropertyNames: $getOwnPropertyNames,
	// 19.1.2.8 Object.getOwnPropertySymbols(O)
	getOwnPropertySymbols: $getOwnPropertySymbols
})

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = _fails(function() {
	_objectGops.f(1)
})

_export(_export.S + _export.F * FAILS_ON_PRIMITIVES, 'Object', {
	getOwnPropertySymbols: function getOwnPropertySymbols(it) {
		return _objectGops.f(_toObject(it))
	}
})

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON &&
	_export(
		_export.S +
			_export.F *
				(!USE_NATIVE ||
					_fails(function() {
						var S = $Symbol()
						// MS Edge converts symbol values to JSON as {}
						// WebKit converts symbol values to JSON as null
						// V8 throws on boxed symbols
						return (
							_stringify([S]) != '[null]' ||
							_stringify({a: S}) != '{}' ||
							_stringify(Object(S)) != '{}'
						)
					})),
		'JSON',
		{
			stringify: function stringify(it) {
				var args = [it]
				var i = 1
				var replacer, $replacer
				while (arguments.length > i) args.push(arguments[i++])
				$replacer = replacer = args[1]
				if ((!_isObject(replacer) && it === undefined) || isSymbol(it))
					return // IE8 returns string on undefined
				if (!_isArray(replacer))
					replacer = function(key, value) {
						if (typeof $replacer == 'function')
							value = $replacer.call(this, key, value)
						if (!isSymbol(value)) return value
					}
				args[1] = replacer
				return _stringify.apply($JSON, args)
			}
		}
	)

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE$2][TO_PRIMITIVE] ||
	_hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf)
// 19.4.3.5 Symbol.prototype[@@toStringTag]
_setToStringTag($Symbol, 'Symbol')
// 20.2.1.9 Math[@@toStringTag]
_setToStringTag(Math, 'Math', true)
// 24.3.3 JSON[@@toStringTag]
_setToStringTag(_global.JSON, 'JSON', true)

_wksDefine('asyncIterator')

_wksDefine('observable')

var symbol = _core.Symbol

var symbol$1 = createCommonjsModule(function(module) {
	module.exports = {default: symbol, __esModule: true}
})

unwrapExports(symbol$1)

var _typeof_1$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _iterator2 = _interopRequireDefault(iterator$1)

	var _symbol2 = _interopRequireDefault(symbol$1)

	var _typeof =
		typeof _symbol2.default === 'function' &&
		typeof _iterator2.default === 'symbol'
			? function(obj) {
					return typeof obj
			  }
			: function(obj) {
					return obj &&
						typeof _symbol2.default === 'function' &&
						obj.constructor === _symbol2.default &&
						obj !== _symbol2.default.prototype
						? 'symbol'
						: typeof obj
			  }

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default =
		typeof _symbol2.default === 'function' &&
		_typeof(_iterator2.default) === 'symbol'
			? function(obj) {
					return typeof obj === 'undefined'
						? 'undefined'
						: _typeof(obj)
			  }
			: function(obj) {
					return obj &&
						typeof _symbol2.default === 'function' &&
						obj.constructor === _symbol2.default &&
						obj !== _symbol2.default.prototype
						? 'symbol'
						: typeof obj === 'undefined'
						? 'undefined'
						: _typeof(obj)
			  }
})

var _typeof = unwrapExports(_typeof_1$1)

var possibleConstructorReturn$1 = createCommonjsModule(function(
	module,
	exports
) {
	exports.__esModule = true

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = function(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}

		return call &&
			((typeof call === 'undefined'
				? 'undefined'
				: (0, _typeof3.default)(call)) === 'object' ||
				typeof call === 'function')
			? call
			: self
	}
})

var _possibleConstructorReturn$1 = unwrapExports(possibleConstructorReturn$1)

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */

var check = function(O, proto) {
	_anObject(O)
	if (!_isObject(proto) && proto !== null)
		throw TypeError(proto + ": can't set as prototype!")
}
var _setProto = {
	set:
		Object.setPrototypeOf ||
		('__proto__' in {} // eslint-disable-line
			? (function(test, buggy, set) {
					try {
						set = _ctx(
							Function.call,
							_objectGopd.f(Object.prototype, '__proto__').set,
							2
						)
						set(test, [])
						buggy = !(test instanceof Array)
					} catch (e) {
						buggy = true
					}
					return function setPrototypeOf(O, proto) {
						check(O, proto)
						if (buggy) O.__proto__ = proto
						else set(O, proto)
						return O
					}
			  })({}, false)
			: undefined),
	check: check
}

// 19.1.3.19 Object.setPrototypeOf(O, proto)

_export(_export.S, 'Object', {setPrototypeOf: _setProto.set})

var setPrototypeOf$1 = _core.Object.setPrototypeOf

var setPrototypeOf$2 = createCommonjsModule(function(module) {
	module.exports = {default: setPrototypeOf$1, __esModule: true}
})

unwrapExports(setPrototypeOf$2)

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
_export(_export.S, 'Object', {create: _objectCreate})

var $Object = _core.Object
var create = function create(P, D) {
	return $Object.create(P, D)
}

var create$1 = createCommonjsModule(function(module) {
	module.exports = {default: create, __esModule: true}
})

unwrapExports(create$1)

var inherits$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$2)

	var _create2 = _interopRequireDefault(create$1)

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = function(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					(typeof superClass === 'undefined'
						? 'undefined'
						: (0, _typeof3.default)(superClass))
			)
		}

		subClass.prototype = (0, _create2.default)(
			superClass && superClass.prototype,
			{
				constructor: {
					value: subClass,
					enumerable: false,
					writable: true,
					configurable: true
				}
			}
		)
		if (superClass)
			_setPrototypeOf2.default
				? (0, _setPrototypeOf2.default)(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}
})

var _inherits$1 = unwrapExports(inherits$1)

function contains(root, n) {
	var node = n
	while (node) {
		if (node === root) {
			return true
		}
		node = node.parentNode
	}

	return false
}

var EventBaseObject_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	function returnFalse() {
		return false
	}

	function returnTrue() {
		return true
	}

	function EventBaseObject() {
		this.timeStamp = Date.now()
		this.target = undefined
		this.currentTarget = undefined
	}

	EventBaseObject.prototype = {
		isEventObject: 1,

		constructor: EventBaseObject,

		isDefaultPrevented: returnFalse,

		isPropagationStopped: returnFalse,

		isImmediatePropagationStopped: returnFalse,

		preventDefault: function preventDefault() {
			this.isDefaultPrevented = returnTrue
		},

		stopPropagation: function stopPropagation() {
			this.isPropagationStopped = returnTrue
		},

		stopImmediatePropagation: function stopImmediatePropagation() {
			this.isImmediatePropagationStopped = returnTrue
			// fixed 1.2
			// call stopPropagation implicitly
			this.stopPropagation()
		},

		halt: function halt(immediate) {
			if (immediate) {
				this.stopImmediatePropagation()
			} else {
				this.stopPropagation()
			}
			this.preventDefault()
		}
	}

	exports['default'] = EventBaseObject
	module.exports = exports['default']
})

unwrapExports(EventBaseObject_1)

var EventObject = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _EventBaseObject2 = _interopRequireDefault(EventBaseObject_1)

	var _objectAssign2 = _interopRequireDefault(objectAssign)

	var TRUE = true
	var FALSE = false
	var commonProps = [
		'altKey',
		'bubbles',
		'cancelable',
		'ctrlKey',
		'currentTarget',
		'eventPhase',
		'metaKey',
		'shiftKey',
		'target',
		'timeStamp',
		'view',
		'type'
	]

	function isNullOrUndefined(w) {
		return w === null || w === undefined
	}

	var eventNormalizers = [
		{
			reg: /^key/,
			props: ['char', 'charCode', 'key', 'keyCode', 'which'],
			fix: function fix(event, nativeEvent) {
				if (isNullOrUndefined(event.which)) {
					event.which = !isNullOrUndefined(nativeEvent.charCode)
						? nativeEvent.charCode
						: nativeEvent.keyCode
				}

				// add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
				if (event.metaKey === undefined) {
					event.metaKey = event.ctrlKey
				}
			}
		},
		{
			reg: /^touch/,
			props: ['touches', 'changedTouches', 'targetTouches']
		},
		{
			reg: /^hashchange$/,
			props: ['newURL', 'oldURL']
		},
		{
			reg: /^gesturechange$/i,
			props: ['rotation', 'scale']
		},
		{
			reg: /^(mousewheel|DOMMouseScroll)$/,
			props: [],
			fix: function fix(event, nativeEvent) {
				var deltaX = undefined
				var deltaY = undefined
				var delta = undefined
				var wheelDelta = nativeEvent.wheelDelta
				var axis = nativeEvent.axis
				var wheelDeltaY = nativeEvent.wheelDeltaY
				var wheelDeltaX = nativeEvent.wheelDeltaX
				var detail = nativeEvent.detail

				// ie/webkit
				if (wheelDelta) {
					delta = wheelDelta / 120
				}

				// gecko
				if (detail) {
					// press control e.detail == 1 else e.detail == 3
					delta = 0 - (detail % 3 === 0 ? detail / 3 : detail)
				}

				// Gecko
				if (axis !== undefined) {
					if (axis === event.HORIZONTAL_AXIS) {
						deltaY = 0
						deltaX = 0 - delta
					} else if (axis === event.VERTICAL_AXIS) {
						deltaX = 0
						deltaY = delta
					}
				}

				// Webkit
				if (wheelDeltaY !== undefined) {
					deltaY = wheelDeltaY / 120
				}
				if (wheelDeltaX !== undefined) {
					deltaX = (-1 * wheelDeltaX) / 120
				}

				// 默认 deltaY (ie)
				if (!deltaX && !deltaY) {
					deltaY = delta
				}

				if (deltaX !== undefined) {
					/**
					 * deltaX of mousewheel event
					 * @property deltaX
					 * @member Event.DomEvent.Object
					 */
					event.deltaX = deltaX
				}

				if (deltaY !== undefined) {
					/**
					 * deltaY of mousewheel event
					 * @property deltaY
					 * @member Event.DomEvent.Object
					 */
					event.deltaY = deltaY
				}

				if (delta !== undefined) {
					/**
					 * delta of mousewheel event
					 * @property delta
					 * @member Event.DomEvent.Object
					 */
					event.delta = delta
				}
			}
		},
		{
			reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
			props: [
				'buttons',
				'clientX',
				'clientY',
				'button',
				'offsetX',
				'relatedTarget',
				'which',
				'fromElement',
				'toElement',
				'offsetY',
				'pageX',
				'pageY',
				'screenX',
				'screenY'
			],
			fix: function fix(event, nativeEvent) {
				var eventDoc = undefined
				var doc = undefined
				var body = undefined
				var target = event.target
				var button = nativeEvent.button

				// Calculate pageX/Y if missing and clientX/Y available
				if (
					target &&
					isNullOrUndefined(event.pageX) &&
					!isNullOrUndefined(nativeEvent.clientX)
				) {
					eventDoc = target.ownerDocument || document
					doc = eventDoc.documentElement
					body = eventDoc.body
					event.pageX =
						nativeEvent.clientX +
						((doc && doc.scrollLeft) ||
							(body && body.scrollLeft) ||
							0) -
						((doc && doc.clientLeft) ||
							(body && body.clientLeft) ||
							0)
					event.pageY =
						nativeEvent.clientY +
						((doc && doc.scrollTop) ||
							(body && body.scrollTop) ||
							0) -
						((doc && doc.clientTop) ||
							(body && body.clientTop) ||
							0)
				}

				// which for click: 1 === left; 2 === middle; 3 === right
				// do not use button
				if (!event.which && button !== undefined) {
					if (button & 1) {
						event.which = 1
					} else if (button & 2) {
						event.which = 3
					} else if (button & 4) {
						event.which = 2
					} else {
						event.which = 0
					}
				}

				// add relatedTarget, if necessary
				if (!event.relatedTarget && event.fromElement) {
					event.relatedTarget =
						event.fromElement === target
							? event.toElement
							: event.fromElement
				}

				return event
			}
		}
	]

	function retTrue() {
		return TRUE
	}

	function retFalse() {
		return FALSE
	}

	function DomEventObject(nativeEvent) {
		var type = nativeEvent.type

		var isNative =
			typeof nativeEvent.stopPropagation === 'function' ||
			typeof nativeEvent.cancelBubble === 'boolean'

		_EventBaseObject2['default'].call(this)

		this.nativeEvent = nativeEvent

		// in case dom event has been mark as default prevented by lower dom node
		var isDefaultPrevented = retFalse
		if ('defaultPrevented' in nativeEvent) {
			isDefaultPrevented = nativeEvent.defaultPrevented
				? retTrue
				: retFalse
		} else if ('getPreventDefault' in nativeEvent) {
			// https://bugzilla.mozilla.org/show_bug.cgi?id=691151
			isDefaultPrevented = nativeEvent.getPreventDefault()
				? retTrue
				: retFalse
		} else if ('returnValue' in nativeEvent) {
			isDefaultPrevented =
				nativeEvent.returnValue === FALSE ? retTrue : retFalse
		}

		this.isDefaultPrevented = isDefaultPrevented

		var fixFns = []
		var fixFn = undefined
		var l = undefined
		var prop = undefined
		var props = commonProps.concat()

		eventNormalizers.forEach(function(normalizer) {
			if (type.match(normalizer.reg)) {
				props = props.concat(normalizer.props)
				if (normalizer.fix) {
					fixFns.push(normalizer.fix)
				}
			}
		})

		l = props.length

		// clone properties of the original event object
		while (l) {
			prop = props[--l]
			this[prop] = nativeEvent[prop]
		}

		// fix target property, if necessary
		if (!this.target && isNative) {
			this.target = nativeEvent.srcElement || document // srcElement might not be defined either
		}

		// check if target is a text node (safari)
		if (this.target && this.target.nodeType === 3) {
			this.target = this.target.parentNode
		}

		l = fixFns.length

		while (l) {
			fixFn = fixFns[--l]
			fixFn(this, nativeEvent)
		}

		this.timeStamp = nativeEvent.timeStamp || Date.now()
	}

	var EventBaseObjectProto = _EventBaseObject2['default'].prototype

	;(0,
	_objectAssign2['default'])(DomEventObject.prototype, EventBaseObjectProto, {
		constructor: DomEventObject,

		preventDefault: function preventDefault() {
			var e = this.nativeEvent

			// if preventDefault exists run it on the original event
			if (e.preventDefault) {
				e.preventDefault()
			} else {
				// otherwise set the returnValue property of the original event to FALSE (IE)
				e.returnValue = FALSE
			}

			EventBaseObjectProto.preventDefault.call(this)
		},

		stopPropagation: function stopPropagation() {
			var e = this.nativeEvent

			// if stopPropagation exists run it on the original event
			if (e.stopPropagation) {
				e.stopPropagation()
			} else {
				// otherwise set the cancelBubble property of the original event to TRUE (IE)
				e.cancelBubble = TRUE
			}

			EventBaseObjectProto.stopPropagation.call(this)
		}
	})

	exports['default'] = DomEventObject
	module.exports = exports['default']
})

unwrapExports(EventObject)

var lib = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = addEventListener

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _EventObject2 = _interopRequireDefault(EventObject)

	function addEventListener(target, eventType, callback, option) {
		function wrapCallback(e) {
			var ne = new _EventObject2['default'](e)
			callback.call(target, ne)
		}

		if (target.addEventListener) {
			var _ret = (function() {
				var useCapture = false
				if (typeof option === 'object') {
					useCapture = option.capture || false
				} else if (typeof option === 'boolean') {
					useCapture = option
				}

				target.addEventListener(
					eventType,
					wrapCallback,
					option || false
				)

				return {
					v: {
						remove: function remove() {
							target.removeEventListener(
								eventType,
								wrapCallback,
								useCapture
							)
						}
					}
				}
			})()

			if (typeof _ret === 'object') return _ret.v
		} else if (target.attachEvent) {
			target.attachEvent('on' + eventType, wrapCallback)
			return {
				remove: function remove() {
					target.detachEvent('on' + eventType, wrapCallback)
				}
			}
		}
	}

	module.exports = exports['default']
})

var addDOMEventListener = unwrapExports(lib)

function addEventListenerWrap(target, eventType, cb, option) {
	/* eslint camelcase: 2 */
	var callback = ReactDOM.unstable_batchedUpdates
		? function run(e) {
				ReactDOM.unstable_batchedUpdates(cb, e)
		  }
		: cb
	return addDOMEventListener(target, eventType, callback, option)
}

// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
_export(_export.S + _export.F * !_descriptors, 'Object', {
	defineProperty: _objectDp.f
})

var $Object$1 = _core.Object
var defineProperty$2 = function defineProperty(it, key, desc) {
	return $Object$1.defineProperty(it, key, desc)
}

var defineProperty$3 = createCommonjsModule(function(module) {
	module.exports = {default: defineProperty$2, __esModule: true}
})

unwrapExports(defineProperty$3)

var createClass$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _defineProperty2 = _interopRequireDefault(defineProperty$3)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				;(0, _defineProperty2.default)(
					target,
					descriptor.key,
					descriptor
				)
			}
		}

		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()
})

var _createClass$1 = unwrapExports(createClass$1)

var ContainerRender = (function(_React$Component) {
	_inherits$1(ContainerRender, _React$Component)

	function ContainerRender() {
		var _ref

		var _temp, _this, _ret

		_classCallCheck$1(this, ContainerRender)

		for (
			var _len = arguments.length, args = Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key]
		}

		return (
			(_ret =
				((_temp =
					((_this = _possibleConstructorReturn$1(
						this,
						(_ref =
							ContainerRender.__proto__ ||
							Object.getPrototypeOf(ContainerRender)).call.apply(
							_ref,
							[this].concat(args)
						)
					)),
					_this)),
				(_this.removeContainer = function() {
					if (_this.container) {
						ReactDOM.unmountComponentAtNode(_this.container)
						_this.container.parentNode.removeChild(_this.container)
						_this.container = null
					}
				}),
				(_this.renderComponent = function(props, ready) {
					var _this$props = _this.props,
						visible = _this$props.visible,
						getComponent = _this$props.getComponent,
						forceRender = _this$props.forceRender,
						getContainer = _this$props.getContainer,
						parent = _this$props.parent

					if (visible || parent._component || forceRender) {
						if (!_this.container) {
							_this.container = getContainer()
						}
						ReactDOM.unstable_renderSubtreeIntoContainer(
							parent,
							getComponent(props),
							_this.container,
							function callback() {
								if (ready) {
									ready.call(this)
								}
							}
						)
					}
				}),
				_temp)),
			_possibleConstructorReturn$1(_this, _ret)
		)
	}

	_createClass$1(ContainerRender, [
		{
			key: 'componentDidMount',
			value: function componentDidMount() {
				if (this.props.autoMount) {
					this.renderComponent()
				}
			}
		},
		{
			key: 'componentDidUpdate',
			value: function componentDidUpdate() {
				if (this.props.autoMount) {
					this.renderComponent()
				}
			}
		},
		{
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				if (this.props.autoDestroy) {
					this.removeContainer()
				}
			}
		},
		{
			key: 'render',
			value: function render() {
				return this.props.children({
					renderComponent: this.renderComponent,
					removeContainer: this.removeContainer
				})
			}
		}
	])

	return ContainerRender
})(React__default.Component)

ContainerRender.propTypes = {
	autoMount: propTypes.bool,
	autoDestroy: propTypes.bool,
	visible: propTypes.bool,
	forceRender: propTypes.bool,
	parent: propTypes.any,
	getComponent: propTypes.func.isRequired,
	getContainer: propTypes.func.isRequired,
	children: propTypes.func.isRequired
}
ContainerRender.defaultProps = {
	autoMount: true,
	autoDestroy: true,
	forceRender: false
}

var Portal = (function(_React$Component) {
	_inherits$1(Portal, _React$Component)

	function Portal() {
		_classCallCheck$1(this, Portal)

		return _possibleConstructorReturn$1(
			this,
			(Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(
				this,
				arguments
			)
		)
	}

	_createClass$1(Portal, [
		{
			key: 'componentDidMount',
			value: function componentDidMount() {
				this.createContainer()
			}
		},
		{
			key: 'componentDidUpdate',
			value: function componentDidUpdate(prevProps) {
				var didUpdate = this.props.didUpdate

				if (didUpdate) {
					didUpdate(prevProps)
				}
			}
		},
		{
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.removeContainer()
			}
		},
		{
			key: 'createContainer',
			value: function createContainer() {
				this._container = this.props.getContainer()
				this.forceUpdate()
			}
		},
		{
			key: 'removeContainer',
			value: function removeContainer() {
				if (this._container) {
					this._container.parentNode.removeChild(this._container)
				}
			}
		},
		{
			key: 'render',
			value: function render() {
				if (this._container) {
					return ReactDOM.createPortal(
						this.props.children,
						this._container
					)
				}
				return null
			}
		}
	])

	return Portal
})(React__default.Component)

Portal.propTypes = {
	getContainer: propTypes.func.isRequired,
	children: propTypes.node.isRequired,
	didUpdate: propTypes.func
}

var classnames = createCommonjsModule(function(module) {
	/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
	/* global define */

	;(function() {
		var hasOwn = {}.hasOwnProperty

		function classNames() {
			var classes = []

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i]
				if (!arg) continue

				var argType = typeof arg

				if (argType === 'string' || argType === 'number') {
					classes.push(arg)
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg)
					if (inner) {
						classes.push(inner)
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key)
						}
					}
				}
			}

			return classes.join(' ')
		}

		if (module.exports) {
			classNames.default = classNames
			module.exports = classNames
		} else {
			window.classNames = classNames
		}
	})()
})

function isPointsEq(a1, a2, isAlignPoint) {
	if (isAlignPoint) {
		return a1[0] === a2[0]
	}
	return a1[0] === a2[0] && a1[1] === a2[1]
}

function getAlignFromPlacement(builtinPlacements, placementStr, align) {
	var baseAlign = builtinPlacements[placementStr] || {}
	return _extends$1({}, baseAlign, align)
}

function getAlignPopupClassName(
	builtinPlacements,
	prefixCls,
	align,
	isAlignPoint
) {
	var points = align.points
	for (var placement in builtinPlacements) {
		if (builtinPlacements.hasOwnProperty(placement)) {
			if (
				isPointsEq(
					builtinPlacements[placement].points,
					points,
					isAlignPoint
				)
			) {
				return prefixCls + '-placement-' + placement
			}
		}
	}
	return ''
}

function saveRef(name, component) {
	this[name] = component
}

var vendorPrefix = void 0

var jsCssMap = {
	Webkit: '-webkit-',
	Moz: '-moz-',
	// IE did it wrong again ...
	ms: '-ms-',
	O: '-o-'
}

function getVendorPrefix() {
	if (vendorPrefix !== undefined) {
		return vendorPrefix
	}
	vendorPrefix = ''
	var style = document.createElement('p').style
	var testProp = 'Transform'
	for (var key in jsCssMap) {
		if (key + testProp in style) {
			vendorPrefix = key
		}
	}
	return vendorPrefix
}

function getTransitionName() {
	return getVendorPrefix()
		? getVendorPrefix() + 'TransitionProperty'
		: 'transitionProperty'
}

function getTransformName() {
	return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform'
}

function setTransitionProperty(node, value) {
	var name = getTransitionName()
	if (name) {
		node.style[name] = value
		if (name !== 'transitionProperty') {
			node.style.transitionProperty = value
		}
	}
}

function setTransform(node, value) {
	var name = getTransformName()
	if (name) {
		node.style[name] = value
		if (name !== 'transform') {
			node.style.transform = value
		}
	}
}

function getTransitionProperty(node) {
	return node.style.transitionProperty || node.style[getTransitionName()]
}

function getTransformXY(node) {
	var style = window.getComputedStyle(node, null)
	var transform =
		style.getPropertyValue('transform') ||
		style.getPropertyValue(getTransformName())
	if (transform && transform !== 'none') {
		var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',')
		return {
			x: parseFloat(matrix[12] || matrix[4], 0),
			y: parseFloat(matrix[13] || matrix[5], 0)
		}
	}
	return {
		x: 0,
		y: 0
	}
}

var matrix2d = /matrix\((.*)\)/
var matrix3d = /matrix3d\((.*)\)/

function setTransformXY(node, xy) {
	var style = window.getComputedStyle(node, null)
	var transform =
		style.getPropertyValue('transform') ||
		style.getPropertyValue(getTransformName())
	if (transform && transform !== 'none') {
		var arr = void 0
		var match2d = transform.match(matrix2d)
		if (match2d) {
			match2d = match2d[1]
			arr = match2d.split(',').map(function(item) {
				return parseFloat(item, 10)
			})
			arr[4] = xy.x
			arr[5] = xy.y
			setTransform(node, 'matrix(' + arr.join(',') + ')')
		} else {
			var match3d = transform.match(matrix3d)[1]
			arr = match3d.split(',').map(function(item) {
				return parseFloat(item, 10)
			})
			arr[12] = xy.x
			arr[13] = xy.y
			setTransform(node, 'matrix3d(' + arr.join(',') + ')')
		}
	} else {
		setTransform(
			node,
			'translateX(' +
				xy.x +
				'px) translateY(' +
				xy.y +
				'px) translateZ(0)'
		)
	}
}

var _typeof$1 =
	typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
		? function(obj) {
				return typeof obj
		  }
		: function(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
		  }

var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source

var getComputedStyleX = void 0

// https://stackoverflow.com/a/3485654/3040605
function forceRelayout(elem) {
	var originalStyle = elem.style.display
	elem.style.display = 'none'
	elem.offsetHeight // eslint-disable-line
	elem.style.display = originalStyle
}

function css(el, name, v) {
	var value = v
	if (
		(typeof name === 'undefined' ? 'undefined' : _typeof$1(name)) ===
		'object'
	) {
		for (var i in name) {
			if (name.hasOwnProperty(i)) {
				css(el, i, name[i])
			}
		}
		return undefined
	}
	if (typeof value !== 'undefined') {
		if (typeof value === 'number') {
			value = value + 'px'
		}
		el.style[name] = value
		return undefined
	}
	return getComputedStyleX(el, name)
}

function getClientPosition(elem) {
	var box = void 0
	var x = void 0
	var y = void 0
	var doc = elem.ownerDocument
	var body = doc.body
	var docElem = doc && doc.documentElement
	// 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
	box = elem.getBoundingClientRect()

	// 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
	// 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
	// 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

	x = box.left
	y = box.top

	// In IE, most of the time, 2 extra pixels are added to the top and left
	// due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	// IE6 standards mode, this border can be overridden by setting the
	// document element's border to zero -- thus, we cannot rely on the
	// offset always being 2 pixels.

	// In quirks mode, the offset can be determined by querying the body's
	// clientLeft/clientTop, but in standards mode, it is found by querying
	// the document element's clientLeft/clientTop.  Since we already called
	// getClientBoundingRect we have already forced a reflow, so it is not
	// too expensive just to query them all.

	// ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
	// 窗口边框标准是设 documentElement ,quirks 时设置 body
	// 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
	// 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
	// 标准 ie 下 docElem.clientTop 就是 border-top
	// ie7 html 即窗口边框改变不了。永远为 2
	// 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

	x -= docElem.clientLeft || body.clientLeft || 0
	y -= docElem.clientTop || body.clientTop || 0

	return {
		left: x,
		top: y
	}
}

function getScroll(w, top) {
	var ret = w['page' + (top ? 'Y' : 'X') + 'Offset']
	var method = 'scroll' + (top ? 'Top' : 'Left')
	if (typeof ret !== 'number') {
		var d = w.document
		// ie6,7,8 standard mode
		ret = d.documentElement[method]
		if (typeof ret !== 'number') {
			// quirks mode
			ret = d.body[method]
		}
	}
	return ret
}

function getScrollLeft(w) {
	return getScroll(w)
}

function getScrollTop(w) {
	return getScroll(w, true)
}

function getOffset(el) {
	var pos = getClientPosition(el)
	var doc = el.ownerDocument
	var w = doc.defaultView || doc.parentWindow
	pos.left += getScrollLeft(w)
	pos.top += getScrollTop(w)
	return pos
}

/**
 * A crude way of determining if an object is a window
 * @member util
 */
function isWindow(obj) {
	// must use == for ie8
	/* eslint eqeqeq:0 */
	return obj !== null && obj !== undefined && obj == obj.window
}

function getDocument(node) {
	if (isWindow(node)) {
		return node.document
	}
	if (node.nodeType === 9) {
		return node
	}
	return node.ownerDocument
}

function _getComputedStyle(elem, name, cs) {
	var computedStyle = cs
	var val = ''
	var d = getDocument(elem)
	computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null)

	// https://github.com/kissyteam/kissy/issues/61
	if (computedStyle) {
		val = computedStyle.getPropertyValue(name) || computedStyle[name]
	}

	return val
}

var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i')
var RE_POS = /^(top|right|bottom|left)$/
var CURRENT_STYLE = 'currentStyle'
var RUNTIME_STYLE = 'runtimeStyle'
var LEFT = 'left'
var PX = 'px'

function _getComputedStyleIE(elem, name) {
	// currentStyle maybe null
	// http://msdn.microsoft.com/en-us/library/ms535231.aspx
	var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name]

	// 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
	// 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
	// 在 ie 下不对，需要直接用 offset 方式
	// borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了

	// From the awesome hack by Dean Edwards
	// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	// If we're not dealing with a regular pixel number
	// but a number that has a weird ending, we need to convert it to pixels
	// exclude left right for relativity
	if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
		// Remember the original values
		var style = elem.style
		var left = style[LEFT]
		var rsLeft = elem[RUNTIME_STYLE][LEFT]

		// prevent flashing of content
		elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT]

		// Put in the new values to get a computed value out
		style[LEFT] = name === 'fontSize' ? '1em' : ret || 0
		ret = style.pixelLeft + PX

		// Revert the changed values
		style[LEFT] = left

		elem[RUNTIME_STYLE][LEFT] = rsLeft
	}
	return ret === '' ? 'auto' : ret
}

if (typeof window !== 'undefined') {
	getComputedStyleX = window.getComputedStyle
		? _getComputedStyle
		: _getComputedStyleIE
}

function getOffsetDirection(dir, option) {
	if (dir === 'left') {
		return option.useCssRight ? 'right' : dir
	}
	return option.useCssBottom ? 'bottom' : dir
}

function oppositeOffsetDirection(dir) {
	if (dir === 'left') {
		return 'right'
	} else if (dir === 'right') {
		return 'left'
	} else if (dir === 'top') {
		return 'bottom'
	} else if (dir === 'bottom') {
		return 'top'
	}
}

// 设置 elem 相对 elem.ownerDocument 的坐标
function setLeftTop(elem, offset, option) {
	// set position first, in-case top/left are set even on static elem
	if (css(elem, 'position') === 'static') {
		elem.style.position = 'relative'
	}
	var presetH = -999
	var presetV = -999
	var horizontalProperty = getOffsetDirection('left', option)
	var verticalProperty = getOffsetDirection('top', option)
	var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty)
	var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty)

	if (horizontalProperty !== 'left') {
		presetH = 999
	}

	if (verticalProperty !== 'top') {
		presetV = 999
	}
	var originalTransition = ''
	var originalOffset = getOffset(elem)
	if ('left' in offset || 'top' in offset) {
		originalTransition = getTransitionProperty(elem) || ''
		setTransitionProperty(elem, 'none')
	}
	if ('left' in offset) {
		elem.style[oppositeHorizontalProperty] = ''
		elem.style[horizontalProperty] = presetH + 'px'
	}
	if ('top' in offset) {
		elem.style[oppositeVerticalProperty] = ''
		elem.style[verticalProperty] = presetV + 'px'
	}
	// force relayout
	forceRelayout(elem)
	var old = getOffset(elem)
	var originalStyle = {}
	for (var key in offset) {
		if (offset.hasOwnProperty(key)) {
			var dir = getOffsetDirection(key, option)
			var preset = key === 'left' ? presetH : presetV
			var off = originalOffset[key] - old[key]
			if (dir === key) {
				originalStyle[dir] = preset + off
			} else {
				originalStyle[dir] = preset - off
			}
		}
	}
	css(elem, originalStyle)
	// force relayout
	forceRelayout(elem)
	if ('left' in offset || 'top' in offset) {
		setTransitionProperty(elem, originalTransition)
	}
	var ret = {}
	for (var _key in offset) {
		if (offset.hasOwnProperty(_key)) {
			var _dir = getOffsetDirection(_key, option)
			var _off = offset[_key] - originalOffset[_key]
			if (_key === _dir) {
				ret[_dir] = originalStyle[_dir] + _off
			} else {
				ret[_dir] = originalStyle[_dir] - _off
			}
		}
	}
	css(elem, ret)
}

function setTransform$1(elem, offset) {
	var originalOffset = getOffset(elem)
	var originalXY = getTransformXY(elem)
	var resultXY = {x: originalXY.x, y: originalXY.y}
	if ('left' in offset) {
		resultXY.x = originalXY.x + offset.left - originalOffset.left
	}
	if ('top' in offset) {
		resultXY.y = originalXY.y + offset.top - originalOffset.top
	}
	setTransformXY(elem, resultXY)
}

function setOffset(elem, offset, option) {
	if (option.ignoreShake) {
		var oriOffset = getOffset(elem)

		var oLeft = oriOffset.left.toFixed(0)
		var oTop = oriOffset.top.toFixed(0)
		var tLeft = offset.left.toFixed(0)
		var tTop = offset.top.toFixed(0)

		if (oLeft === tLeft && oTop === tTop) {
			return
		}
	}

	if (option.useCssRight || option.useCssBottom) {
		setLeftTop(elem, offset, option)
	} else if (
		option.useCssTransform &&
		getTransformName() in document.body.style
	) {
		setTransform$1(elem, offset)
	} else {
		setLeftTop(elem, offset, option)
	}
}

function each(arr, fn) {
	for (var i = 0; i < arr.length; i++) {
		fn(arr[i])
	}
}

function isBorderBoxFn(elem) {
	return getComputedStyleX(elem, 'boxSizing') === 'border-box'
}

var BOX_MODELS = ['margin', 'border', 'padding']
var CONTENT_INDEX = -1
var PADDING_INDEX = 2
var BORDER_INDEX = 1
var MARGIN_INDEX = 0

function swap(elem, options, callback) {
	var old = {}
	var style = elem.style
	var name = void 0

	// Remember the old values, and insert the new ones
	for (name in options) {
		if (options.hasOwnProperty(name)) {
			old[name] = style[name]
			style[name] = options[name]
		}
	}

	callback.call(elem)

	// Revert the old values
	for (name in options) {
		if (options.hasOwnProperty(name)) {
			style[name] = old[name]
		}
	}
}

function getPBMWidth(elem, props, which) {
	var value = 0
	var prop = void 0
	var j = void 0
	var i = void 0
	for (j = 0; j < props.length; j++) {
		prop = props[j]
		if (prop) {
			for (i = 0; i < which.length; i++) {
				var cssProp = void 0
				if (prop === 'border') {
					cssProp = '' + prop + which[i] + 'Width'
				} else {
					cssProp = prop + which[i]
				}
				value += parseFloat(getComputedStyleX(elem, cssProp)) || 0
			}
		}
	}
	return value
}

var domUtils = {
	getParent: function getParent(element) {
		var parent = element
		do {
			if (parent.nodeType === 11 && parent.host) {
				parent = parent.host
			} else {
				parent = parent.parentNode
			}
		} while (parent && parent.nodeType !== 1 && parent.nodeType !== 9)
		return parent
	}
}

each(['Width', 'Height'], function(name) {
	domUtils['doc' + name] = function(refWin) {
		var d = refWin.document
		return Math.max(
			// firefox chrome documentElement.scrollHeight< body.scrollHeight
			// ie standard mode : documentElement.scrollHeight> body.scrollHeight
			d.documentElement['scroll' + name],
			// quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
			d.body['scroll' + name],
			domUtils['viewport' + name](d)
		)
	}

	domUtils['viewport' + name] = function(win) {
		// pc browser includes scrollbar in window.innerWidth
		var prop = 'client' + name
		var doc = win.document
		var body = doc.body
		var documentElement = doc.documentElement
		var documentElementProp = documentElement[prop]
		// 标准模式取 documentElement
		// backcompat 取 body
		return (
			(doc.compatMode === 'CSS1Compat' && documentElementProp) ||
			(body && body[prop]) ||
			documentElementProp
		)
	}
})

/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */
function getWH(elem, name, ex) {
	var extra = ex
	if (isWindow(elem)) {
		return name === 'width'
			? domUtils.viewportWidth(elem)
			: domUtils.viewportHeight(elem)
	} else if (elem.nodeType === 9) {
		return name === 'width'
			? domUtils.docWidth(elem)
			: domUtils.docHeight(elem)
	}
	var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom']
	var borderBoxValue =
		name === 'width'
			? elem.getBoundingClientRect().width
			: elem.getBoundingClientRect().height
	var computedStyle = getComputedStyleX(elem)
	var isBorderBox = isBorderBoxFn(elem)
	var cssBoxValue = 0
	if (
		borderBoxValue === null ||
		borderBoxValue === undefined ||
		borderBoxValue <= 0
	) {
		borderBoxValue = undefined
		// Fall back to computed then un computed css if necessary
		cssBoxValue = getComputedStyleX(elem, name)
		if (
			cssBoxValue === null ||
			cssBoxValue === undefined ||
			Number(cssBoxValue) < 0
		) {
			cssBoxValue = elem.style[name] || 0
		}
		// Normalize '', auto, and prepare for extra
		cssBoxValue = parseFloat(cssBoxValue) || 0
	}
	if (extra === undefined) {
		extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX
	}
	var borderBoxValueOrIsBorderBox =
		borderBoxValue !== undefined || isBorderBox
	var val = borderBoxValue || cssBoxValue
	if (extra === CONTENT_INDEX) {
		if (borderBoxValueOrIsBorderBox) {
			return val - getPBMWidth(elem, ['border', 'padding'], which)
		}
		return cssBoxValue
	} else if (borderBoxValueOrIsBorderBox) {
		if (extra === BORDER_INDEX) {
			return val
		}
		return (
			val +
			(extra === PADDING_INDEX
				? -getPBMWidth(elem, ['border'], which)
				: getPBMWidth(elem, ['margin'], which))
		)
	}
	return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which)
}

var cssShow = {
	position: 'absolute',
	visibility: 'hidden',
	display: 'block'
}

// fix #119 : https://github.com/kissyteam/kissy/issues/119
function getWHIgnoreDisplay() {
	for (
		var _len = arguments.length, args = Array(_len), _key2 = 0;
		_key2 < _len;
		_key2++
	) {
		args[_key2] = arguments[_key2]
	}

	var val = void 0
	var elem = args[0]
	// in case elem is window
	// elem.offsetWidth === undefined
	if (elem.offsetWidth !== 0) {
		val = getWH.apply(undefined, args)
	} else {
		swap(elem, cssShow, function() {
			val = getWH.apply(undefined, args)
		})
	}
	return val
}

each(['width', 'height'], function(name) {
	var first = name.charAt(0).toUpperCase() + name.slice(1)
	domUtils['outer' + first] = function(el, includeMargin) {
		return (
			el &&
			getWHIgnoreDisplay(
				el,
				name,
				includeMargin ? MARGIN_INDEX : BORDER_INDEX
			)
		)
	}
	var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom']

	domUtils[name] = function(elem, v) {
		var val = v
		if (val !== undefined) {
			if (elem) {
				var computedStyle = getComputedStyleX(elem)
				var isBorderBox = isBorderBoxFn(elem)
				if (isBorderBox) {
					val += getPBMWidth(elem, ['padding', 'border'], which)
				}
				return css(elem, name, val)
			}
			return undefined
		}
		return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX)
	}
})

function mix(to, from) {
	for (var i in from) {
		if (from.hasOwnProperty(i)) {
			to[i] = from[i]
		}
	}
	return to
}

var utils = {
	getWindow: function getWindow(node) {
		if (node && node.document && node.setTimeout) {
			return node
		}
		var doc = node.ownerDocument || node
		return doc.defaultView || doc.parentWindow
	},

	getDocument: getDocument,
	offset: function offset(el, value, option) {
		if (typeof value !== 'undefined') {
			setOffset(el, value, option || {})
		} else {
			return getOffset(el)
		}
	},

	isWindow: isWindow,
	each: each,
	css: css,
	clone: function clone(obj) {
		var i = void 0
		var ret = {}
		for (i in obj) {
			if (obj.hasOwnProperty(i)) {
				ret[i] = obj[i]
			}
		}
		var overflow = obj.overflow
		if (overflow) {
			for (i in obj) {
				if (obj.hasOwnProperty(i)) {
					ret.overflow[i] = obj.overflow[i]
				}
			}
		}
		return ret
	},

	mix: mix,
	getWindowScrollLeft: function getWindowScrollLeft(w) {
		return getScrollLeft(w)
	},
	getWindowScrollTop: function getWindowScrollTop(w) {
		return getScrollTop(w)
	},
	merge: function merge() {
		var ret = {}

		for (
			var _len2 = arguments.length, args = Array(_len2), _key3 = 0;
			_key3 < _len2;
			_key3++
		) {
			args[_key3] = arguments[_key3]
		}

		for (var i = 0; i < args.length; i++) {
			utils.mix(ret, args[i])
		}
		return ret
	},

	viewportWidth: 0,
	viewportHeight: 0
}

mix(utils, domUtils)

/**
 * 得到会导致元素显示不全的祖先元素
 */
var getParent = utils.getParent

function getOffsetParent(element) {
	if (utils.isWindow(element) || element.nodeType === 9) {
		return null
	}
	// ie 这个也不是完全可行
	/*
   <div style="width: 50px;height: 100px;overflow: hidden">
   <div style="width: 50px;height: 100px;position: relative;" id="d6">
   元素 6 高 100px 宽 50px<br/>
   </div>
   </div>
   */
	// element.offsetParent does the right thing in ie7 and below. Return parent with layout!
	//  In other browsers it only includes elements with position absolute, relative or
	// fixed, not elements with overflow set to auto or scroll.
	//        if (UA.ie && ieMode < 8) {
	//            return element.offsetParent;
	//        }
	// 统一的 offsetParent 方法
	var doc = utils.getDocument(element)
	var body = doc.body
	var parent = void 0
	var positionStyle = utils.css(element, 'position')
	var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute'

	if (!skipStatic) {
		return element.nodeName.toLowerCase() === 'html'
			? null
			: getParent(element)
	}

	for (
		parent = getParent(element);
		parent && parent !== body;
		parent = getParent(parent)
	) {
		positionStyle = utils.css(parent, 'position')
		if (positionStyle !== 'static') {
			return parent
		}
	}
	return null
}

var getParent$1 = utils.getParent

function isAncestorFixed(element) {
	if (utils.isWindow(element) || element.nodeType === 9) {
		return false
	}

	var doc = utils.getDocument(element)
	var body = doc.body
	var parent = null
	for (
		parent = getParent$1(element);
		parent && parent !== body;
		parent = getParent$1(parent)
	) {
		var positionStyle = utils.css(parent, 'position')
		if (positionStyle === 'fixed') {
			return true
		}
	}
	return false
}

/**
 * 获得元素的显示部分的区域
 */
function getVisibleRectForElement(element) {
	var visibleRect = {
		left: 0,
		right: Infinity,
		top: 0,
		bottom: Infinity
	}
	var el = getOffsetParent(element)
	var doc = utils.getDocument(element)
	var win = doc.defaultView || doc.parentWindow
	var body = doc.body
	var documentElement = doc.documentElement

	// Determine the size of the visible rect by climbing the dom accounting for
	// all scrollable containers.
	while (el) {
		// clientWidth is zero for inline block elements in ie.
		if (
			(navigator.userAgent.indexOf('MSIE') === -1 ||
				el.clientWidth !== 0) &&
			// body may have overflow set on it, yet we still get the entire
			// viewport. In some browsers, el.offsetParent may be
			// document.documentElement, so check for that too.
			el !== body &&
			el !== documentElement &&
			utils.css(el, 'overflow') !== 'visible'
		) {
			var pos = utils.offset(el)
			// add border
			pos.left += el.clientLeft
			pos.top += el.clientTop
			visibleRect.top = Math.max(visibleRect.top, pos.top)
			visibleRect.right = Math.min(
				visibleRect.right,
				// consider area without scrollBar
				pos.left + el.clientWidth
			)
			visibleRect.bottom = Math.min(
				visibleRect.bottom,
				pos.top + el.clientHeight
			)
			visibleRect.left = Math.max(visibleRect.left, pos.left)
		} else if (el === body || el === documentElement) {
			break
		}
		el = getOffsetParent(el)
	}

	// Set element position to fixed
	// make sure absolute element itself don't affect it's visible area
	// https://github.com/ant-design/ant-design/issues/7601
	var originalPosition = null
	if (!utils.isWindow(element) && element.nodeType !== 9) {
		originalPosition = element.style.position
		var position = utils.css(element, 'position')
		if (position === 'absolute') {
			element.style.position = 'fixed'
		}
	}

	var scrollX = utils.getWindowScrollLeft(win)
	var scrollY = utils.getWindowScrollTop(win)
	var viewportWidth = utils.viewportWidth(win)
	var viewportHeight = utils.viewportHeight(win)
	var documentWidth = documentElement.scrollWidth
	var documentHeight = documentElement.scrollHeight

	// scrollXXX on html is sync with body which means overflow: hidden on body gets wrong scrollXXX.
	// We should cut this ourself.
	var bodyStyle = window.getComputedStyle(body)
	if (bodyStyle.overflowX === 'hidden') {
		documentWidth = win.innerWidth
	}
	if (bodyStyle.overflowY === 'hidden') {
		documentHeight = win.innerHeight
	}

	// Reset element position after calculate the visible area
	if (element.style) {
		element.style.position = originalPosition
	}

	if (isAncestorFixed(element)) {
		// Clip by viewport's size.
		visibleRect.left = Math.max(visibleRect.left, scrollX)
		visibleRect.top = Math.max(visibleRect.top, scrollY)
		visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth)
		visibleRect.bottom = Math.min(
			visibleRect.bottom,
			scrollY + viewportHeight
		)
	} else {
		// Clip by document's size.
		var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth)
		visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth)

		var maxVisibleHeight = Math.max(
			documentHeight,
			scrollY + viewportHeight
		)
		visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight)
	}

	return visibleRect.top >= 0 &&
		visibleRect.left >= 0 &&
		visibleRect.bottom > visibleRect.top &&
		visibleRect.right > visibleRect.left
		? visibleRect
		: null
}

function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
	var pos = utils.clone(elFuturePos)
	var size = {
		width: elRegion.width,
		height: elRegion.height
	}

	if (overflow.adjustX && pos.left < visibleRect.left) {
		pos.left = visibleRect.left
	}

	// Left edge inside and right edge outside viewport, try to resize it.
	if (
		overflow.resizeWidth &&
		pos.left >= visibleRect.left &&
		pos.left + size.width > visibleRect.right
	) {
		size.width -= pos.left + size.width - visibleRect.right
	}

	// Right edge outside viewport, try to move it.
	if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
		// 保证左边界和可视区域左边界对齐
		pos.left = Math.max(visibleRect.right - size.width, visibleRect.left)
	}

	// Top edge outside viewport, try to move it.
	if (overflow.adjustY && pos.top < visibleRect.top) {
		pos.top = visibleRect.top
	}

	// Top edge inside and bottom edge outside viewport, try to resize it.
	if (
		overflow.resizeHeight &&
		pos.top >= visibleRect.top &&
		pos.top + size.height > visibleRect.bottom
	) {
		size.height -= pos.top + size.height - visibleRect.bottom
	}

	// Bottom edge outside viewport, try to move it.
	if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
		// 保证上边界和可视区域上边界对齐
		pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top)
	}

	return utils.mix(pos, size)
}

function getRegion(node) {
	var offset = void 0
	var w = void 0
	var h = void 0
	if (!utils.isWindow(node) && node.nodeType !== 9) {
		offset = utils.offset(node)
		w = utils.outerWidth(node)
		h = utils.outerHeight(node)
	} else {
		var win = utils.getWindow(node)
		offset = {
			left: utils.getWindowScrollLeft(win),
			top: utils.getWindowScrollTop(win)
		}
		w = utils.viewportWidth(win)
		h = utils.viewportHeight(win)
	}
	offset.width = w
	offset.height = h
	return offset
}

/**
 * 获取 node 上的 align 对齐点 相对于页面的坐标
 */

function getAlignOffset(region, align) {
	var V = align.charAt(0)
	var H = align.charAt(1)
	var w = region.width
	var h = region.height

	var x = region.left
	var y = region.top

	if (V === 'c') {
		y += h / 2
	} else if (V === 'b') {
		y += h
	}

	if (H === 'c') {
		x += w / 2
	} else if (H === 'r') {
		x += w
	}

	return {
		left: x,
		top: y
	}
}

function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
	var p1 = getAlignOffset(refNodeRegion, points[1])
	var p2 = getAlignOffset(elRegion, points[0])
	var diff = [p2.left - p1.left, p2.top - p1.top]

	return {
		left: Math.round(elRegion.left - diff[0] + offset[0] - targetOffset[0]),
		top: Math.round(elRegion.top - diff[1] + offset[1] - targetOffset[1])
	}
}

/**
 * align dom node flexibly
 * @author yiminghe@gmail.com
 */

// http://yiminghe.iteye.com/blog/1124720

function isFailX(elFuturePos, elRegion, visibleRect) {
	return (
		elFuturePos.left < visibleRect.left ||
		elFuturePos.left + elRegion.width > visibleRect.right
	)
}

function isFailY(elFuturePos, elRegion, visibleRect) {
	return (
		elFuturePos.top < visibleRect.top ||
		elFuturePos.top + elRegion.height > visibleRect.bottom
	)
}

function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
	return (
		elFuturePos.left > visibleRect.right ||
		elFuturePos.left + elRegion.width < visibleRect.left
	)
}

function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
	return (
		elFuturePos.top > visibleRect.bottom ||
		elFuturePos.top + elRegion.height < visibleRect.top
	)
}

function flip(points, reg, map) {
	var ret = []
	utils.each(points, function(p) {
		ret.push(
			p.replace(reg, function(m) {
				return map[m]
			})
		)
	})
	return ret
}

function flipOffset(offset, index) {
	offset[index] = -offset[index]
	return offset
}

function convertOffset(str, offsetLen) {
	var n = void 0
	if (/%$/.test(str)) {
		n = (parseInt(str.substring(0, str.length - 1), 10) / 100) * offsetLen
	} else {
		n = parseInt(str, 10)
	}
	return n || 0
}

function normalizeOffset(offset, el) {
	offset[0] = convertOffset(offset[0], el.width)
	offset[1] = convertOffset(offset[1], el.height)
}

/**
 * @param el
 * @param tgtRegion 参照节点所占的区域: { left, top, width, height }
 * @param align
 */
function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
	var points = align.points
	var offset = align.offset || [0, 0]
	var targetOffset = align.targetOffset || [0, 0]
	var overflow = align.overflow
	var source = align.source || el
	offset = [].concat(offset)
	targetOffset = [].concat(targetOffset)
	overflow = overflow || {}
	var newOverflowCfg = {}
	var fail = 0
	// 当前节点可以被放置的显示区域
	var visibleRect = getVisibleRectForElement(source)
	// 当前节点所占的区域, left/top/width/height
	var elRegion = getRegion(source)
	// 将 offset 转换成数值，支持百分比
	normalizeOffset(offset, elRegion)
	normalizeOffset(targetOffset, tgtRegion)
	// 当前节点将要被放置的位置
	var elFuturePos = getElFuturePos(
		elRegion,
		tgtRegion,
		points,
		offset,
		targetOffset
	)
	// 当前节点将要所处的区域
	var newElRegion = utils.merge(elRegion, elFuturePos)

	// 如果可视区域不能完全放置当前节点时允许调整
	if (
		visibleRect &&
		(overflow.adjustX || overflow.adjustY) &&
		isTgtRegionVisible
	) {
		if (overflow.adjustX) {
			// 如果横向不能放下
			if (isFailX(elFuturePos, elRegion, visibleRect)) {
				// 对齐位置反下
				var newPoints = flip(points, /[lr]/gi, {
					l: 'r',
					r: 'l'
				})
				// 偏移量也反下
				var newOffset = flipOffset(offset, 0)
				var newTargetOffset = flipOffset(targetOffset, 0)
				var newElFuturePos = getElFuturePos(
					elRegion,
					tgtRegion,
					newPoints,
					newOffset,
					newTargetOffset
				)

				if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
					fail = 1
					points = newPoints
					offset = newOffset
					targetOffset = newTargetOffset
				}
			}
		}

		if (overflow.adjustY) {
			// 如果纵向不能放下
			if (isFailY(elFuturePos, elRegion, visibleRect)) {
				// 对齐位置反下
				var _newPoints = flip(points, /[tb]/gi, {
					t: 'b',
					b: 't'
				})
				// 偏移量也反下
				var _newOffset = flipOffset(offset, 1)
				var _newTargetOffset = flipOffset(targetOffset, 1)
				var _newElFuturePos = getElFuturePos(
					elRegion,
					tgtRegion,
					_newPoints,
					_newOffset,
					_newTargetOffset
				)

				if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
					fail = 1
					points = _newPoints
					offset = _newOffset
					targetOffset = _newTargetOffset
				}
			}
		}

		// 如果失败，重新计算当前节点将要被放置的位置
		if (fail) {
			elFuturePos = getElFuturePos(
				elRegion,
				tgtRegion,
				points,
				offset,
				targetOffset
			)
			utils.mix(newElRegion, elFuturePos)
		}
		var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect)
		var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect)
		// 检查反下后的位置是否可以放下了，如果仍然放不下：
		// 1. 复原修改过的定位参数
		if (isStillFailX || isStillFailY) {
			points = align.points
			offset = align.offset || [0, 0]
			targetOffset = align.targetOffset || [0, 0]
		}
		// 2. 只有指定了可以调整当前方向才调整
		newOverflowCfg.adjustX = overflow.adjustX && isStillFailX
		newOverflowCfg.adjustY = overflow.adjustY && isStillFailY

		// 确实要调整，甚至可能会调整高度宽度
		if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
			newElRegion = adjustForViewport(
				elFuturePos,
				elRegion,
				visibleRect,
				newOverflowCfg
			)
		}
	}

	// need judge to in case set fixed with in css on height auto element
	if (newElRegion.width !== elRegion.width) {
		utils.css(
			source,
			'width',
			utils.width(source) + newElRegion.width - elRegion.width
		)
	}

	if (newElRegion.height !== elRegion.height) {
		utils.css(
			source,
			'height',
			utils.height(source) + newElRegion.height - elRegion.height
		)
	}

	// https://github.com/kissyteam/kissy/issues/190
	// 相对于屏幕位置没变，而 left/top 变了
	// 例如 <div 'relative'><el absolute></div>
	utils.offset(
		source,
		{
			left: newElRegion.left,
			top: newElRegion.top
		},
		{
			useCssRight: align.useCssRight,
			useCssBottom: align.useCssBottom,
			useCssTransform: align.useCssTransform,
			ignoreShake: align.ignoreShake
		}
	)

	return {
		points: points,
		offset: offset,
		targetOffset: targetOffset,
		overflow: newOverflowCfg
	}
}
/**
 *  2012-04-26 yiminghe@gmail.com
 *   - 优化智能对齐算法
 *   - 慎用 resizeXX
 *
 *  2011-07-13 yiminghe@gmail.com note:
 *   - 增加智能对齐，以及大小调整选项
 **/

function isOutOfVisibleRect(target) {
	var visibleRect = getVisibleRectForElement(target)
	var targetRegion = getRegion(target)

	return (
		!visibleRect ||
		targetRegion.left + targetRegion.width <= visibleRect.left ||
		targetRegion.top + targetRegion.height <= visibleRect.top ||
		targetRegion.left >= visibleRect.right ||
		targetRegion.top >= visibleRect.bottom
	)
}

function alignElement(el, refNode, align) {
	var target = align.target || refNode
	var refNodeRegion = getRegion(target)

	var isTargetNotOutOfVisible = !isOutOfVisibleRect(target)

	return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible)
}

alignElement.__getOffsetParent = getOffsetParent

alignElement.__getVisibleRectForElement = getVisibleRectForElement

var _extends$2 =
	Object.assign ||
	function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i]
			for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key]
				}
			}
		}
		return target
	}

/**
 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
 * If client position provided, will internal convert to page position.
 */

function alignPoint(el, tgtPoint, align) {
	var pageX = void 0
	var pageY = void 0

	var doc = utils.getDocument(el)
	var win = doc.defaultView || doc.parentWindow

	var scrollX = utils.getWindowScrollLeft(win)
	var scrollY = utils.getWindowScrollTop(win)
	var viewportWidth = utils.viewportWidth(win)
	var viewportHeight = utils.viewportHeight(win)

	if ('pageX' in tgtPoint) {
		pageX = tgtPoint.pageX
	} else {
		pageX = scrollX + tgtPoint.clientX
	}

	if ('pageY' in tgtPoint) {
		pageY = tgtPoint.pageY
	} else {
		pageY = scrollY + tgtPoint.clientY
	}

	var tgtRegion = {
		left: pageX,
		top: pageY,
		width: 0,
		height: 0
	}

	var pointInView =
		pageX >= 0 &&
		pageX <= scrollX + viewportWidth &&
		pageY >= 0 &&
		pageY <= scrollY + viewportHeight

	// Provide default target point
	var points = [align.points[0], 'cc']

	return doAlign(
		el,
		tgtRegion,
		_extends$2({}, align, {points: points}),
		pointInView
	)
}

function buffer(fn, ms) {
	var timer = void 0

	function clear() {
		if (timer) {
			clearTimeout(timer)
			timer = null
		}
	}

	function bufferFn() {
		clear()
		timer = setTimeout(fn, ms)
	}

	bufferFn.clear = clear

	return bufferFn
}

function isSamePoint(prev, next) {
	if (prev === next) return true
	if (!prev || !next) return false

	if ('pageX' in next && 'pageY' in next) {
		return prev.pageX === next.pageX && prev.pageY === next.pageY
	}

	if ('clientX' in next && 'clientY' in next) {
		return prev.clientX === next.clientX && prev.clientY === next.clientY
	}

	return false
}

function isWindow$1(obj) {
	return obj && typeof obj === 'object' && obj.window === obj
}

function isSimilarValue(val1, val2) {
	var int1 = Math.floor(val1)
	var int2 = Math.floor(val2)
	return Math.abs(int1 - int2) <= 1
}

function restoreFocus(activeElement, container) {
	// Focus back if is in the container
	if (
		activeElement !== document.activeElement &&
		contains(container, activeElement)
	) {
		activeElement.focus()
	}
}

function getElement(func) {
	if (typeof func !== 'function' || !func) return null
	return func()
}

function getPoint(point) {
	if (typeof point !== 'object' || !point) return null
	return point
}

var Align = (function(_Component) {
	_inherits$1(Align, _Component)

	function Align() {
		var _ref

		var _temp, _this, _ret

		_classCallCheck$1(this, Align)

		for (
			var _len = arguments.length, args = Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key]
		}

		return (
			(_ret =
				((_temp =
					((_this = _possibleConstructorReturn$1(
						this,
						(_ref =
							Align.__proto__ ||
							Object.getPrototypeOf(Align)).call.apply(
							_ref,
							[this].concat(args)
						)
					)),
					_this)),
				(_this.forceAlign = function() {
					var _this$props = _this.props,
						disabled = _this$props.disabled,
						target = _this$props.target,
						align = _this$props.align,
						onAlign = _this$props.onAlign

					if (!disabled && target) {
						var source = ReactDOM.findDOMNode(_this)

						var result = void 0
						var element = getElement(target)
						var point = getPoint(target)

						// IE lose focus after element realign
						// We should record activeElement and restore later
						var activeElement = document.activeElement

						if (element) {
							result = alignElement(source, element, align)
						} else if (point) {
							result = alignPoint(source, point, align)
						}

						restoreFocus(activeElement, source)

						if (onAlign) {
							onAlign(source, result)
						}
					}
				}),
				_temp)),
			_possibleConstructorReturn$1(_this, _ret)
		)
	}

	_createClass$1(Align, [
		{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var props = this.props
				// if parent ref not attached .... use document.getElementById
				this.forceAlign()
				if (!props.disabled && props.monitorWindowResize) {
					this.startMonitorWindowResize()
				}
			}
		},
		{
			key: 'componentDidUpdate',
			value: function componentDidUpdate(prevProps) {
				var reAlign = false
				var props = this.props

				if (!props.disabled) {
					var source = ReactDOM.findDOMNode(this)
					var sourceRect = source
						? source.getBoundingClientRect()
						: null

					if (prevProps.disabled) {
						reAlign = true
					} else {
						var lastElement = getElement(prevProps.target)
						var currentElement = getElement(props.target)
						var lastPoint = getPoint(prevProps.target)
						var currentPoint = getPoint(props.target)

						if (
							isWindow$1(lastElement) &&
							isWindow$1(currentElement)
						) {
							// Skip if is window
							reAlign = false
						} else if (
							lastElement !== currentElement || // Element change
							(lastElement && !currentElement && currentPoint) || // Change from element to point
							(lastPoint && currentPoint && currentElement) || // Change from point to element
							(currentPoint &&
								!isSamePoint(lastPoint, currentPoint))
						) {
							reAlign = true
						}

						// If source element size changed
						var preRect = this.sourceRect || {}
						if (
							!reAlign &&
							source &&
							(!isSimilarValue(preRect.width, sourceRect.width) ||
								!isSimilarValue(
									preRect.height,
									sourceRect.height
								))
						) {
							reAlign = true
						}
					}

					this.sourceRect = sourceRect
				}

				if (reAlign) {
					this.forceAlign()
				}

				if (props.monitorWindowResize && !props.disabled) {
					this.startMonitorWindowResize()
				} else {
					this.stopMonitorWindowResize()
				}
			}
		},
		{
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.stopMonitorWindowResize()
			}
		},
		{
			key: 'startMonitorWindowResize',
			value: function startMonitorWindowResize() {
				if (!this.resizeHandler) {
					this.bufferMonitor = buffer(
						this.forceAlign,
						this.props.monitorBufferTime
					)
					this.resizeHandler = addEventListenerWrap(
						window,
						'resize',
						this.bufferMonitor
					)
				}
			}
		},
		{
			key: 'stopMonitorWindowResize',
			value: function stopMonitorWindowResize() {
				if (this.resizeHandler) {
					this.bufferMonitor.clear()
					this.resizeHandler.remove()
					this.resizeHandler = null
				}
			}
		},
		{
			key: 'render',
			value: function render() {
				var _this2 = this

				var _props = this.props,
					childrenProps = _props.childrenProps,
					children = _props.children

				var child = React__default.Children.only(children)
				if (childrenProps) {
					var newProps = {}
					var propList = Object.keys(childrenProps)
					propList.forEach(function(prop) {
						newProps[prop] = _this2.props[childrenProps[prop]]
					})

					return React__default.cloneElement(child, newProps)
				}
				return child
			}
		}
	])

	return Align
})(Component)

Align.propTypes = {
	childrenProps: propTypes.object,
	align: propTypes.object.isRequired,
	target: propTypes.oneOfType([
		propTypes.func,
		propTypes.shape({
			clientX: propTypes.number,
			clientY: propTypes.number,
			pageX: propTypes.number,
			pageY: propTypes.number
		})
	]),
	onAlign: propTypes.func,
	monitorBufferTime: propTypes.number,
	monitorWindowResize: propTypes.bool,
	disabled: propTypes.bool,
	children: propTypes.any
}
Align.defaultProps = {
	target: function target() {
		return window
	},
	monitorBufferTime: 50,
	monitorWindowResize: false,
	disabled: false
}

// export this package's api

var defineProperty$4 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _defineProperty2 = _interopRequireDefault(defineProperty$3)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = function(obj, key, value) {
		if (key in obj) {
			;(0, _defineProperty2.default)(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}

		return obj
	}
})

var _defineProperty$1 = unwrapExports(defineProperty$4)

function toArrayChildren(children) {
	var ret = []
	React__default.Children.forEach(children, function(child) {
		ret.push(child)
	})
	return ret
}

function findChildInChildrenByKey(children, key) {
	var ret = null
	if (children) {
		children.forEach(function(child) {
			if (ret) {
				return
			}
			if (child && child.key === key) {
				ret = child
			}
		})
	}
	return ret
}

function findShownChildInChildrenByKey(children, key, showProp) {
	var ret = null
	if (children) {
		children.forEach(function(child) {
			if (child && child.key === key && child.props[showProp]) {
				if (ret) {
					throw new Error(
						'two child with same key for <rc-animate> children'
					)
				}
				ret = child
			}
		})
	}
	return ret
}

function isSameChildren(c1, c2, showProp) {
	var same = c1.length === c2.length
	if (same) {
		c1.forEach(function(child, index) {
			var child2 = c2[index]
			if (child && child2) {
				if ((child && !child2) || (!child && child2)) {
					same = false
				} else if (child.key !== child2.key) {
					same = false
				} else if (
					showProp &&
					child.props[showProp] !== child2.props[showProp]
				) {
					same = false
				}
			}
		})
	}
	return same
}

function mergeChildren(prev, next) {
	var ret = []

	// For each key of `next`, the list of keys to insert before that key in
	// the combined list
	var nextChildrenPending = {}
	var pendingChildren = []
	prev.forEach(function(child) {
		if (child && findChildInChildrenByKey(next, child.key)) {
			if (pendingChildren.length) {
				nextChildrenPending[child.key] = pendingChildren
				pendingChildren = []
			}
		} else {
			pendingChildren.push(child)
		}
	})

	next.forEach(function(child) {
		if (
			child &&
			Object.prototype.hasOwnProperty.call(nextChildrenPending, child.key)
		) {
			ret = ret.concat(nextChildrenPending[child.key])
		}
		ret.push(child)
	})

	ret = ret.concat(pendingChildren)

	return ret
}

var START_EVENT_NAME_MAP = {
	transitionstart: {
		transition: 'transitionstart',
		WebkitTransition: 'webkitTransitionStart',
		MozTransition: 'mozTransitionStart',
		OTransition: 'oTransitionStart',
		msTransition: 'MSTransitionStart'
	},

	animationstart: {
		animation: 'animationstart',
		WebkitAnimation: 'webkitAnimationStart',
		MozAnimation: 'mozAnimationStart',
		OAnimation: 'oAnimationStart',
		msAnimation: 'MSAnimationStart'
	}
}

var END_EVENT_NAME_MAP = {
	transitionend: {
		transition: 'transitionend',
		WebkitTransition: 'webkitTransitionEnd',
		MozTransition: 'mozTransitionEnd',
		OTransition: 'oTransitionEnd',
		msTransition: 'MSTransitionEnd'
	},

	animationend: {
		animation: 'animationend',
		WebkitAnimation: 'webkitAnimationEnd',
		MozAnimation: 'mozAnimationEnd',
		OAnimation: 'oAnimationEnd',
		msAnimation: 'MSAnimationEnd'
	}
}

var startEvents = []
var endEvents = []

function detectEvents() {
	var testEl = document.createElement('div')
	var style = testEl.style

	if (!('AnimationEvent' in window)) {
		delete START_EVENT_NAME_MAP.animationstart.animation
		delete END_EVENT_NAME_MAP.animationend.animation
	}

	if (!('TransitionEvent' in window)) {
		delete START_EVENT_NAME_MAP.transitionstart.transition
		delete END_EVENT_NAME_MAP.transitionend.transition
	}

	function process(EVENT_NAME_MAP, events) {
		for (var baseEventName in EVENT_NAME_MAP) {
			if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
				var baseEvents = EVENT_NAME_MAP[baseEventName]
				for (var styleName in baseEvents) {
					if (styleName in style) {
						events.push(baseEvents[styleName])
						break
					}
				}
			}
		}
	}

	process(START_EVENT_NAME_MAP, startEvents)
	process(END_EVENT_NAME_MAP, endEvents)
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
	detectEvents()
}

function addEventListener(node, eventName, eventListener) {
	node.addEventListener(eventName, eventListener, false)
}

function removeEventListener(node, eventName, eventListener) {
	node.removeEventListener(eventName, eventListener, false)
}

var TransitionEvents = {
	// Start events
	startEvents: startEvents,

	addStartEventListener: function addStartEventListener(node, eventListener) {
		if (startEvents.length === 0) {
			window.setTimeout(eventListener, 0)
			return
		}
		startEvents.forEach(function(startEvent) {
			addEventListener(node, startEvent, eventListener)
		})
	},
	removeStartEventListener: function removeStartEventListener(
		node,
		eventListener
	) {
		if (startEvents.length === 0) {
			return
		}
		startEvents.forEach(function(startEvent) {
			removeEventListener(node, startEvent, eventListener)
		})
	},

	// End events
	endEvents: endEvents,

	addEndEventListener: function addEndEventListener(node, eventListener) {
		if (endEvents.length === 0) {
			window.setTimeout(eventListener, 0)
			return
		}
		endEvents.forEach(function(endEvent) {
			addEventListener(node, endEvent, eventListener)
		})
	},
	removeEndEventListener: function removeEndEventListener(
		node,
		eventListener
	) {
		if (endEvents.length === 0) {
			return
		}
		endEvents.forEach(function(endEvent) {
			removeEventListener(node, endEvent, eventListener)
		})
	}
}

var componentIndexof = function(arr, obj) {
	if (arr.indexOf) return arr.indexOf(obj)
	for (var i = 0; i < arr.length; ++i) {
		if (arr[i] === obj) return i
	}
	return -1
}

/**
 * Module dependencies.
 */

try {
	var index = componentIndexof
} catch (err) {
	var index = componentIndexof
}

/**
 * Whitespace regexp.
 */

var re = /\s+/

/**
 * toString reference.
 */

var toString$2 = Object.prototype.toString

/**
 * Wrap `el` in a `ClassList`.
 *
 * @param {Element} el
 * @return {ClassList}
 * @api public
 */

var componentClasses = function(el) {
	return new ClassList(el)
}

/**
 * Initialize a new ClassList for `el`.
 *
 * @param {Element} el
 * @api private
 */

function ClassList(el) {
	if (!el || !el.nodeType) {
		throw new Error('A DOM element reference is required')
	}
	this.el = el
	this.list = el.classList
}

/**
 * Add class `name` if not already present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.add = function(name) {
	// classList
	if (this.list) {
		this.list.add(name)
		return this
	}

	// fallback
	var arr = this.array()
	var i = index(arr, name)
	if (!~i) arr.push(name)
	this.el.className = arr.join(' ')
	return this
}

/**
 * Remove class `name` when present, or
 * pass a regular expression to remove
 * any which match.
 *
 * @param {String|RegExp} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.remove = function(name) {
	if ('[object RegExp]' == toString$2.call(name)) {
		return this.removeMatching(name)
	}

	// classList
	if (this.list) {
		this.list.remove(name)
		return this
	}

	// fallback
	var arr = this.array()
	var i = index(arr, name)
	if (~i) arr.splice(i, 1)
	this.el.className = arr.join(' ')
	return this
}

/**
 * Remove all classes matching `re`.
 *
 * @param {RegExp} re
 * @return {ClassList}
 * @api private
 */

ClassList.prototype.removeMatching = function(re) {
	var arr = this.array()
	for (var i = 0; i < arr.length; i++) {
		if (re.test(arr[i])) {
			this.remove(arr[i])
		}
	}
	return this
}

/**
 * Toggle class `name`, can force state via `force`.
 *
 * For browsers that support classList, but do not support `force` yet,
 * the mistake will be detected and corrected.
 *
 * @param {String} name
 * @param {Boolean} force
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.toggle = function(name, force) {
	// classList
	if (this.list) {
		if ('undefined' !== typeof force) {
			if (force !== this.list.toggle(name, force)) {
				this.list.toggle(name) // toggle again to correct
			}
		} else {
			this.list.toggle(name)
		}
		return this
	}

	// fallback
	if ('undefined' !== typeof force) {
		if (!force) {
			this.remove(name)
		} else {
			this.add(name)
		}
	} else {
		if (this.has(name)) {
			this.remove(name)
		} else {
			this.add(name)
		}
	}

	return this
}

/**
 * Return an array of classes.
 *
 * @return {Array}
 * @api public
 */

ClassList.prototype.array = function() {
	var className = this.el.getAttribute('class') || ''
	var str = className.replace(/^\s+|\s+$/g, '')
	var arr = str.split(re)
	if ('' === arr[0]) arr.shift()
	return arr
}

/**
 * Check if class `name` is present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.has = ClassList.prototype.contains = function(name) {
	return this.list ? this.list.contains(name) : !!~index(this.array(), name)
}

var isCssAnimationSupported = TransitionEvents.endEvents.length !== 0
var capitalPrefixes = [
	'Webkit',
	'Moz',
	'O',
	// ms is special .... !
	'ms'
]
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', '']

function getStyleProperty(node, name) {
	// old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
	var style = window.getComputedStyle(node, null)
	var ret = ''
	for (var i = 0; i < prefixes.length; i++) {
		ret = style.getPropertyValue(prefixes[i] + name)
		if (ret) {
			break
		}
	}
	return ret
}

function fixBrowserByTimeout(node) {
	if (isCssAnimationSupported) {
		var transitionDelay =
			parseFloat(getStyleProperty(node, 'transition-delay')) || 0
		var transitionDuration =
			parseFloat(getStyleProperty(node, 'transition-duration')) || 0
		var animationDelay =
			parseFloat(getStyleProperty(node, 'animation-delay')) || 0
		var animationDuration =
			parseFloat(getStyleProperty(node, 'animation-duration')) || 0
		var time = Math.max(
			transitionDuration + transitionDelay,
			animationDuration + animationDelay
		)
		// sometimes, browser bug
		node.rcEndAnimTimeout = setTimeout(function() {
			node.rcEndAnimTimeout = null
			if (node.rcEndListener) {
				node.rcEndListener()
			}
		}, time * 1000 + 200)
	}
}

function clearBrowserBugTimeout(node) {
	if (node.rcEndAnimTimeout) {
		clearTimeout(node.rcEndAnimTimeout)
		node.rcEndAnimTimeout = null
	}
}

var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
	var nameIsObj =
		(typeof transitionName === 'undefined'
			? 'undefined'
			: _typeof(transitionName)) === 'object'
	var className = nameIsObj ? transitionName.name : transitionName
	var activeClassName = nameIsObj
		? transitionName.active
		: transitionName + '-active'
	var end = endCallback
	var start = void 0
	var active = void 0
	var nodeClasses = componentClasses(node)

	if (
		endCallback &&
		Object.prototype.toString.call(endCallback) === '[object Object]'
	) {
		end = endCallback.end
		start = endCallback.start
		active = endCallback.active
	}

	if (node.rcEndListener) {
		node.rcEndListener()
	}

	node.rcEndListener = function(e) {
		if (e && e.target !== node) {
			return
		}

		if (node.rcAnimTimeout) {
			clearTimeout(node.rcAnimTimeout)
			node.rcAnimTimeout = null
		}

		clearBrowserBugTimeout(node)

		nodeClasses.remove(className)
		nodeClasses.remove(activeClassName)

		TransitionEvents.removeEndEventListener(node, node.rcEndListener)
		node.rcEndListener = null

		// Usually this optional end is used for informing an owner of
		// a leave animation and telling it to remove the child.
		if (end) {
			end()
		}
	}

	TransitionEvents.addEndEventListener(node, node.rcEndListener)

	if (start) {
		start()
	}
	nodeClasses.add(className)

	node.rcAnimTimeout = setTimeout(function() {
		node.rcAnimTimeout = null
		nodeClasses.add(activeClassName)
		if (active) {
			setTimeout(active, 0)
		}
		fixBrowserByTimeout(node)
		// 30ms for firefox
	}, 30)

	return {
		stop: function stop() {
			if (node.rcEndListener) {
				node.rcEndListener()
			}
		}
	}
}

cssAnimation.style = function(node, style, callback) {
	if (node.rcEndListener) {
		node.rcEndListener()
	}

	node.rcEndListener = function(e) {
		if (e && e.target !== node) {
			return
		}

		if (node.rcAnimTimeout) {
			clearTimeout(node.rcAnimTimeout)
			node.rcAnimTimeout = null
		}

		clearBrowserBugTimeout(node)

		TransitionEvents.removeEndEventListener(node, node.rcEndListener)
		node.rcEndListener = null

		// Usually this optional callback is used for informing an owner of
		// a leave animation and telling it to remove the child.
		if (callback) {
			callback()
		}
	}

	TransitionEvents.addEndEventListener(node, node.rcEndListener)

	node.rcAnimTimeout = setTimeout(function() {
		for (var s in style) {
			if (style.hasOwnProperty(s)) {
				node.style[s] = style[s]
			}
		}
		node.rcAnimTimeout = null
		fixBrowserByTimeout(node)
	}, 0)
}

cssAnimation.setTransition = function(node, p, value) {
	var property = p
	var v = value
	if (value === undefined) {
		v = property
		property = ''
	}
	property = property || ''
	capitalPrefixes.forEach(function(prefix) {
		node.style[prefix + 'Transition' + property] = v
	})
}

cssAnimation.isCssAnimationSupported = isCssAnimationSupported

var util = {
	isAppearSupported: function isAppearSupported(props) {
		return (
			(props.transitionName && props.transitionAppear) ||
			props.animation.appear
		)
	},
	isEnterSupported: function isEnterSupported(props) {
		return (
			(props.transitionName && props.transitionEnter) ||
			props.animation.enter
		)
	},
	isLeaveSupported: function isLeaveSupported(props) {
		return (
			(props.transitionName && props.transitionLeave) ||
			props.animation.leave
		)
	},
	allowAppearCallback: function allowAppearCallback(props) {
		return props.transitionAppear || props.animation.appear
	},
	allowEnterCallback: function allowEnterCallback(props) {
		return props.transitionEnter || props.animation.enter
	},
	allowLeaveCallback: function allowLeaveCallback(props) {
		return props.transitionLeave || props.animation.leave
	}
}

var transitionMap = {
	enter: 'transitionEnter',
	appear: 'transitionAppear',
	leave: 'transitionLeave'
}

var AnimateChild = (function(_React$Component) {
	_inherits$1(AnimateChild, _React$Component)

	function AnimateChild() {
		_classCallCheck$1(this, AnimateChild)

		return _possibleConstructorReturn$1(
			this,
			(
				AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)
			).apply(this, arguments)
		)
	}

	_createClass$1(AnimateChild, [
		{
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.stop()
			}
		},
		{
			key: 'componentWillEnter',
			value: function componentWillEnter(done) {
				if (util.isEnterSupported(this.props)) {
					this.transition('enter', done)
				} else {
					done()
				}
			}
		},
		{
			key: 'componentWillAppear',
			value: function componentWillAppear(done) {
				if (util.isAppearSupported(this.props)) {
					this.transition('appear', done)
				} else {
					done()
				}
			}
		},
		{
			key: 'componentWillLeave',
			value: function componentWillLeave(done) {
				if (util.isLeaveSupported(this.props)) {
					this.transition('leave', done)
				} else {
					// always sync, do not interupt with react component life cycle
					// update hidden -> animate hidden ->
					// didUpdate -> animate leave -> unmount (if animate is none)
					done()
				}
			}
		},
		{
			key: 'transition',
			value: function transition(animationType, finishCallback) {
				var _this2 = this

				var node = ReactDOM.findDOMNode(this)
				var props = this.props
				var transitionName = props.transitionName
				var nameIsObj = typeof transitionName === 'object'
				this.stop()
				var end = function end() {
					_this2.stopper = null
					finishCallback()
				}
				if (
					(isCssAnimationSupported ||
						!props.animation[animationType]) &&
					transitionName &&
					props[transitionMap[animationType]]
				) {
					var name = nameIsObj
						? transitionName[animationType]
						: transitionName + '-' + animationType
					var activeName = name + '-active'
					if (nameIsObj && transitionName[animationType + 'Active']) {
						activeName = transitionName[animationType + 'Active']
					}
					this.stopper = cssAnimation(
						node,
						{
							name: name,
							active: activeName
						},
						end
					)
				} else {
					this.stopper = props.animation[animationType](node, end)
				}
			}
		},
		{
			key: 'stop',
			value: function stop() {
				var stopper = this.stopper
				if (stopper) {
					this.stopper = null
					stopper.stop()
				}
			}
		},
		{
			key: 'render',
			value: function render() {
				return this.props.children
			}
		}
	])

	return AnimateChild
})(React__default.Component)

AnimateChild.propTypes = {
	children: propTypes.any
}

var defaultKey = 'rc_animate_' + Date.now()

function getChildrenFromProps(props) {
	var children = props.children
	if (React__default.isValidElement(children)) {
		if (!children.key) {
			return React__default.cloneElement(children, {
				key: defaultKey
			})
		}
	}
	return children
}

function noop() {}

var Animate = (function(_React$Component) {
	_inherits$1(Animate, _React$Component)

	// eslint-disable-line

	function Animate(props) {
		_classCallCheck$1(this, Animate)

		var _this = _possibleConstructorReturn$1(
			this,
			(Animate.__proto__ || Object.getPrototypeOf(Animate)).call(
				this,
				props
			)
		)

		_initialiseProps.call(_this)

		_this.currentlyAnimatingKeys = {}
		_this.keysToEnter = []
		_this.keysToLeave = []

		_this.state = {
			children: toArrayChildren(getChildrenFromProps(props))
		}

		_this.childrenRefs = {}
		return _this
	}

	_createClass$1(Animate, [
		{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var _this2 = this

				var showProp = this.props.showProp
				var children = this.state.children
				if (showProp) {
					children = children.filter(function(child) {
						return !!child.props[showProp]
					})
				}
				children.forEach(function(child) {
					if (child) {
						_this2.performAppear(child.key)
					}
				})
			}
		},
		{
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				var _this3 = this

				this.nextProps = nextProps
				var nextChildren = toArrayChildren(
					getChildrenFromProps(nextProps)
				)
				var props = this.props
				// exclusive needs immediate response
				if (props.exclusive) {
					Object.keys(this.currentlyAnimatingKeys).forEach(function(
						key
					) {
						_this3.stop(key)
					})
				}
				var showProp = props.showProp
				var currentlyAnimatingKeys = this.currentlyAnimatingKeys
				// last props children if exclusive
				var currentChildren = props.exclusive
					? toArrayChildren(getChildrenFromProps(props))
					: this.state.children
				// in case destroy in showProp mode
				var newChildren = []
				if (showProp) {
					currentChildren.forEach(function(currentChild) {
						var nextChild =
							currentChild &&
							findChildInChildrenByKey(
								nextChildren,
								currentChild.key
							)
						var newChild = void 0
						if (
							(!nextChild || !nextChild.props[showProp]) &&
							currentChild.props[showProp]
						) {
							newChild = React__default.cloneElement(
								nextChild || currentChild,
								_defineProperty$1({}, showProp, true)
							)
						} else {
							newChild = nextChild
						}
						if (newChild) {
							newChildren.push(newChild)
						}
					})
					nextChildren.forEach(function(nextChild) {
						if (
							!nextChild ||
							!findChildInChildrenByKey(
								currentChildren,
								nextChild.key
							)
						) {
							newChildren.push(nextChild)
						}
					})
				} else {
					newChildren = mergeChildren(currentChildren, nextChildren)
				}

				// need render to avoid update
				this.setState({
					children: newChildren
				})

				nextChildren.forEach(function(child) {
					var key = child && child.key
					if (child && currentlyAnimatingKeys[key]) {
						return
					}
					var hasPrev =
						child && findChildInChildrenByKey(currentChildren, key)
					if (showProp) {
						var showInNext = child.props[showProp]
						if (hasPrev) {
							var showInNow = findShownChildInChildrenByKey(
								currentChildren,
								key,
								showProp
							)
							if (!showInNow && showInNext) {
								_this3.keysToEnter.push(key)
							}
						} else if (showInNext) {
							_this3.keysToEnter.push(key)
						}
					} else if (!hasPrev) {
						_this3.keysToEnter.push(key)
					}
				})

				currentChildren.forEach(function(child) {
					var key = child && child.key
					if (child && currentlyAnimatingKeys[key]) {
						return
					}
					var hasNext =
						child && findChildInChildrenByKey(nextChildren, key)
					if (showProp) {
						var showInNow = child.props[showProp]
						if (hasNext) {
							var showInNext = findShownChildInChildrenByKey(
								nextChildren,
								key,
								showProp
							)
							if (!showInNext && showInNow) {
								_this3.keysToLeave.push(key)
							}
						} else if (showInNow) {
							_this3.keysToLeave.push(key)
						}
					} else if (!hasNext) {
						_this3.keysToLeave.push(key)
					}
				})
			}
		},
		{
			key: 'componentDidUpdate',
			value: function componentDidUpdate() {
				var keysToEnter = this.keysToEnter
				this.keysToEnter = []
				keysToEnter.forEach(this.performEnter)
				var keysToLeave = this.keysToLeave
				this.keysToLeave = []
				keysToLeave.forEach(this.performLeave)
			}
		},
		{
			key: 'isValidChildByKey',
			value: function isValidChildByKey(currentChildren, key) {
				var showProp = this.props.showProp
				if (showProp) {
					return findShownChildInChildrenByKey(
						currentChildren,
						key,
						showProp
					)
				}
				return findChildInChildrenByKey(currentChildren, key)
			}
		},
		{
			key: 'stop',
			value: function stop(key) {
				delete this.currentlyAnimatingKeys[key]
				var component = this.childrenRefs[key]
				if (component) {
					component.stop()
				}
			}
		},
		{
			key: 'render',
			value: function render() {
				var _this4 = this

				var props = this.props
				this.nextProps = props
				var stateChildren = this.state.children
				var children = null
				if (stateChildren) {
					children = stateChildren.map(function(child) {
						if (child === null || child === undefined) {
							return child
						}
						if (!child.key) {
							throw new Error(
								'must set key for <rc-animate> children'
							)
						}
						return React__default.createElement(
							AnimateChild,
							{
								key: child.key,
								ref: function ref(node) {
									_this4.childrenRefs[child.key] = node
								},
								animation: props.animation,
								transitionName: props.transitionName,
								transitionEnter: props.transitionEnter,
								transitionAppear: props.transitionAppear,
								transitionLeave: props.transitionLeave
							},
							child
						)
					})
				}
				var Component = props.component
				if (Component) {
					var passedProps = props
					if (typeof Component === 'string') {
						passedProps = _extends$1(
							{
								className: props.className,
								style: props.style
							},
							props.componentProps
						)
					}
					return React__default.createElement(
						Component,
						passedProps,
						children
					)
				}
				return children[0] || null
			}
		}
	])

	return Animate
})(React__default.Component)

Animate.isAnimate = true
Animate.propTypes = {
	component: propTypes.any,
	componentProps: propTypes.object,
	animation: propTypes.object,
	transitionName: propTypes.oneOfType([propTypes.string, propTypes.object]),
	transitionEnter: propTypes.bool,
	transitionAppear: propTypes.bool,
	exclusive: propTypes.bool,
	transitionLeave: propTypes.bool,
	onEnd: propTypes.func,
	onEnter: propTypes.func,
	onLeave: propTypes.func,
	onAppear: propTypes.func,
	showProp: propTypes.string,
	children: propTypes.node
}
Animate.defaultProps = {
	animation: {},
	component: 'span',
	componentProps: {},
	transitionEnter: true,
	transitionLeave: true,
	transitionAppear: false,
	onEnd: noop,
	onEnter: noop,
	onLeave: noop,
	onAppear: noop
}

var _initialiseProps = function _initialiseProps() {
	var _this5 = this

	this.performEnter = function(key) {
		// may already remove by exclusive
		if (_this5.childrenRefs[key]) {
			_this5.currentlyAnimatingKeys[key] = true
			_this5.childrenRefs[key].componentWillEnter(
				_this5.handleDoneAdding.bind(_this5, key, 'enter')
			)
		}
	}

	this.performAppear = function(key) {
		if (_this5.childrenRefs[key]) {
			_this5.currentlyAnimatingKeys[key] = true
			_this5.childrenRefs[key].componentWillAppear(
				_this5.handleDoneAdding.bind(_this5, key, 'appear')
			)
		}
	}

	this.handleDoneAdding = function(key, type) {
		var props = _this5.props
		delete _this5.currentlyAnimatingKeys[key]
		// if update on exclusive mode, skip check
		if (props.exclusive && props !== _this5.nextProps) {
			return
		}
		var currentChildren = toArrayChildren(getChildrenFromProps(props))
		if (!_this5.isValidChildByKey(currentChildren, key)) {
			// exclusive will not need this
			_this5.performLeave(key)
		} else if (type === 'appear') {
			if (util.allowAppearCallback(props)) {
				props.onAppear(key)
				props.onEnd(key, true)
			}
		} else if (util.allowEnterCallback(props)) {
			props.onEnter(key)
			props.onEnd(key, true)
		}
	}

	this.performLeave = function(key) {
		// may already remove by exclusive
		if (_this5.childrenRefs[key]) {
			_this5.currentlyAnimatingKeys[key] = true
			_this5.childrenRefs[key].componentWillLeave(
				_this5.handleDoneLeaving.bind(_this5, key)
			)
		}
	}

	this.handleDoneLeaving = function(key) {
		var props = _this5.props
		delete _this5.currentlyAnimatingKeys[key]
		// if update on exclusive mode, skip check
		if (props.exclusive && props !== _this5.nextProps) {
			return
		}
		var currentChildren = toArrayChildren(getChildrenFromProps(props))
		// in case state change is too fast
		if (_this5.isValidChildByKey(currentChildren, key)) {
			_this5.performEnter(key)
		} else {
			var end = function end() {
				if (util.allowLeaveCallback(props)) {
					props.onLeave(key)
					props.onEnd(key, false)
				}
			}
			if (
				!isSameChildren(
					_this5.state.children,
					currentChildren,
					props.showProp
				)
			) {
				_this5.setState(
					{
						children: currentChildren
					},
					end
				)
			} else {
				end()
			}
		}
	}
}

var objectWithoutProperties$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	exports.default = function(obj, keys) {
		var target = {}

		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}

		return target
	}
})

var _objectWithoutProperties$1 = unwrapExports(objectWithoutProperties$1)

var LazyRenderBox = (function(_Component) {
	_inherits$1(LazyRenderBox, _Component)

	function LazyRenderBox() {
		_classCallCheck$1(this, LazyRenderBox)

		return _possibleConstructorReturn$1(
			this,
			_Component.apply(this, arguments)
		)
	}

	LazyRenderBox.prototype.shouldComponentUpdate = function shouldComponentUpdate(
		nextProps
	) {
		return nextProps.hiddenClassName || nextProps.visible
	}

	LazyRenderBox.prototype.render = function render() {
		var _props = this.props,
			hiddenClassName = _props.hiddenClassName,
			visible = _props.visible,
			props = _objectWithoutProperties$1(_props, [
				'hiddenClassName',
				'visible'
			])

		if (
			hiddenClassName ||
			React__default.Children.count(props.children) > 1
		) {
			if (!visible && hiddenClassName) {
				props.className += ' ' + hiddenClassName
			}
			return React__default.createElement('div', props)
		}

		return React__default.Children.only(props.children)
	}

	return LazyRenderBox
})(Component)

LazyRenderBox.propTypes = {
	children: propTypes.any,
	className: propTypes.string,
	visible: propTypes.bool,
	hiddenClassName: propTypes.string
}

var PopupInner = (function(_Component) {
	_inherits$1(PopupInner, _Component)

	function PopupInner() {
		_classCallCheck$1(this, PopupInner)

		return _possibleConstructorReturn$1(
			this,
			_Component.apply(this, arguments)
		)
	}

	PopupInner.prototype.render = function render() {
		var props = this.props
		var className = props.className
		if (!props.visible) {
			className += ' ' + props.hiddenClassName
		}
		return React__default.createElement(
			'div',
			{
				className: className,
				onMouseEnter: props.onMouseEnter,
				onMouseLeave: props.onMouseLeave,
				onMouseDown: props.onMouseDown,
				onTouchStart: props.onTouchStart,
				style: props.style
			},
			React__default.createElement(
				LazyRenderBox,
				{
					className: props.prefixCls + '-content',
					visible: props.visible
				},
				props.children
			)
		)
	}

	return PopupInner
})(Component)

PopupInner.propTypes = {
	hiddenClassName: propTypes.string,
	className: propTypes.string,
	prefixCls: propTypes.string,
	onMouseEnter: propTypes.func,
	onMouseLeave: propTypes.func,
	onMouseDown: propTypes.func,
	onTouchStart: propTypes.func,
	children: propTypes.any
}

var Popup = (function(_Component) {
	_inherits$1(Popup, _Component)

	function Popup(props) {
		_classCallCheck$1(this, Popup)

		var _this = _possibleConstructorReturn$1(
			this,
			_Component.call(this, props)
		)

		_initialiseProps$1.call(_this)

		_this.state = {
			// Used for stretch
			stretchChecked: false,
			targetWidth: undefined,
			targetHeight: undefined
		}

		_this.savePopupRef = saveRef.bind(_this, 'popupInstance')
		_this.saveAlignRef = saveRef.bind(_this, 'alignInstance')
		return _this
	}

	Popup.prototype.componentDidMount = function componentDidMount() {
		this.rootNode = this.getPopupDomNode()
		this.setStretchSize()
	}

	Popup.prototype.componentDidUpdate = function componentDidUpdate() {
		this.setStretchSize()
	}

	// Record size if stretch needed

	Popup.prototype.getPopupDomNode = function getPopupDomNode() {
		return ReactDOM.findDOMNode(this.popupInstance)
	}

	// `target` on `rc-align` can accept as a function to get the bind element or a point.
	// ref: https://www.npmjs.com/package/rc-align

	Popup.prototype.getMaskTransitionName = function getMaskTransitionName() {
		var props = this.props
		var transitionName = props.maskTransitionName
		var animation = props.maskAnimation
		if (!transitionName && animation) {
			transitionName = props.prefixCls + '-' + animation
		}
		return transitionName
	}

	Popup.prototype.getTransitionName = function getTransitionName() {
		var props = this.props
		var transitionName = props.transitionName
		if (!transitionName && props.animation) {
			transitionName = props.prefixCls + '-' + props.animation
		}
		return transitionName
	}

	Popup.prototype.getClassName = function getClassName(
		currentAlignClassName
	) {
		return (
			this.props.prefixCls +
			' ' +
			this.props.className +
			' ' +
			currentAlignClassName
		)
	}

	Popup.prototype.getPopupElement = function getPopupElement() {
		var _this2 = this

		var savePopupRef = this.savePopupRef
		var _state = this.state,
			stretchChecked = _state.stretchChecked,
			targetHeight = _state.targetHeight,
			targetWidth = _state.targetWidth
		var _props = this.props,
			align = _props.align,
			visible = _props.visible,
			prefixCls = _props.prefixCls,
			style = _props.style,
			getClassNameFromAlign = _props.getClassNameFromAlign,
			destroyPopupOnHide = _props.destroyPopupOnHide,
			stretch = _props.stretch,
			children = _props.children,
			onMouseEnter = _props.onMouseEnter,
			onMouseLeave = _props.onMouseLeave,
			onMouseDown = _props.onMouseDown,
			onTouchStart = _props.onTouchStart

		var className = this.getClassName(
			this.currentAlignClassName || getClassNameFromAlign(align)
		)
		var hiddenClassName = prefixCls + '-hidden'

		if (!visible) {
			this.currentAlignClassName = null
		}

		var sizeStyle = {}
		if (stretch) {
			// Stretch with target
			if (stretch.indexOf('height') !== -1) {
				sizeStyle.height = targetHeight
			} else if (stretch.indexOf('minHeight') !== -1) {
				sizeStyle.minHeight = targetHeight
			}
			if (stretch.indexOf('width') !== -1) {
				sizeStyle.width = targetWidth
			} else if (stretch.indexOf('minWidth') !== -1) {
				sizeStyle.minWidth = targetWidth
			}

			// Delay force align to makes ui smooth
			if (!stretchChecked) {
				sizeStyle.visibility = 'hidden'
				setTimeout(function() {
					if (_this2.alignInstance) {
						_this2.alignInstance.forceAlign()
					}
				}, 0)
			}
		}

		var newStyle = _extends$1({}, sizeStyle, style, this.getZIndexStyle())

		var popupInnerProps = {
			className: className,
			prefixCls: prefixCls,
			ref: savePopupRef,
			onMouseEnter: onMouseEnter,
			onMouseLeave: onMouseLeave,
			onMouseDown: onMouseDown,
			onTouchStart: onTouchStart,
			style: newStyle
		}
		if (destroyPopupOnHide) {
			return React__default.createElement(
				Animate,
				{
					component: '',
					exclusive: true,
					transitionAppear: true,
					transitionName: this.getTransitionName()
				},
				visible
					? React__default.createElement(
							Align,
							{
								target: this.getAlignTarget(),
								key: 'popup',
								ref: this.saveAlignRef,
								monitorWindowResize: true,
								align: align,
								onAlign: this.onAlign
							},
							React__default.createElement(
								PopupInner,
								_extends$1(
									{
										visible: true
									},
									popupInnerProps
								),
								children
							)
					  )
					: null
			)
		}

		return React__default.createElement(
			Animate,
			{
				component: '',
				exclusive: true,
				transitionAppear: true,
				transitionName: this.getTransitionName(),
				showProp: 'xVisible'
			},
			React__default.createElement(
				Align,
				{
					target: this.getAlignTarget(),
					key: 'popup',
					ref: this.saveAlignRef,
					monitorWindowResize: true,
					xVisible: visible,
					childrenProps: {visible: 'xVisible'},
					disabled: !visible,
					align: align,
					onAlign: this.onAlign
				},
				React__default.createElement(
					PopupInner,
					_extends$1(
						{
							hiddenClassName: hiddenClassName
						},
						popupInnerProps
					),
					children
				)
			)
		)
	}

	Popup.prototype.getZIndexStyle = function getZIndexStyle() {
		var style = {}
		var props = this.props
		if (props.zIndex !== undefined) {
			style.zIndex = props.zIndex
		}
		return style
	}

	Popup.prototype.getMaskElement = function getMaskElement() {
		var props = this.props
		var maskElement = void 0
		if (props.mask) {
			var maskTransition = this.getMaskTransitionName()
			maskElement = React__default.createElement(LazyRenderBox, {
				style: this.getZIndexStyle(),
				key: 'mask',
				className: props.prefixCls + '-mask',
				hiddenClassName: props.prefixCls + '-mask-hidden',
				visible: props.visible
			})
			if (maskTransition) {
				maskElement = React__default.createElement(
					Animate,
					{
						key: 'mask',
						showProp: 'visible',
						transitionAppear: true,
						component: '',
						transitionName: maskTransition
					},
					maskElement
				)
			}
		}
		return maskElement
	}

	Popup.prototype.render = function render() {
		return React__default.createElement(
			'div',
			null,
			this.getMaskElement(),
			this.getPopupElement()
		)
	}

	return Popup
})(Component)

Popup.propTypes = {
	visible: propTypes.bool,
	style: propTypes.object,
	getClassNameFromAlign: propTypes.func,
	onAlign: propTypes.func,
	getRootDomNode: propTypes.func,
	align: propTypes.any,
	destroyPopupOnHide: propTypes.bool,
	className: propTypes.string,
	prefixCls: propTypes.string,
	onMouseEnter: propTypes.func,
	onMouseLeave: propTypes.func,
	onMouseDown: propTypes.func,
	onTouchStart: propTypes.func,
	stretch: propTypes.string,
	children: propTypes.node,
	point: propTypes.shape({
		pageX: propTypes.number,
		pageY: propTypes.number
	})
}

var _initialiseProps$1 = function _initialiseProps() {
	var _this3 = this

	this.onAlign = function(popupDomNode, align) {
		var props = _this3.props
		var currentAlignClassName = props.getClassNameFromAlign(align)
		// FIX: https://github.com/react-component/trigger/issues/56
		// FIX: https://github.com/react-component/tooltip/issues/79
		if (_this3.currentAlignClassName !== currentAlignClassName) {
			_this3.currentAlignClassName = currentAlignClassName
			popupDomNode.className = _this3.getClassName(currentAlignClassName)
		}
		props.onAlign(popupDomNode, align)
	}

	this.setStretchSize = function() {
		var _props2 = _this3.props,
			stretch = _props2.stretch,
			getRootDomNode = _props2.getRootDomNode,
			visible = _props2.visible
		var _state2 = _this3.state,
			stretchChecked = _state2.stretchChecked,
			targetHeight = _state2.targetHeight,
			targetWidth = _state2.targetWidth

		if (!stretch || !visible) {
			if (stretchChecked) {
				_this3.setState({stretchChecked: false})
			}
			return
		}

		var $ele = getRootDomNode()
		if (!$ele) return

		var height = $ele.offsetHeight
		var width = $ele.offsetWidth

		if (
			targetHeight !== height ||
			targetWidth !== width ||
			!stretchChecked
		) {
			_this3.setState({
				stretchChecked: true,
				targetHeight: height,
				targetWidth: width
			})
		}
	}

	this.getTargetElement = function() {
		return _this3.props.getRootDomNode()
	}

	this.getAlignTarget = function() {
		var point = _this3.props.point

		if (point) {
			return point
		}
		return _this3.getTargetElement
	}
}

function noop$1() {}

function returnEmptyString() {
	return ''
}

function returnDocument() {
	return window.document
}

var ALL_HANDLERS = [
	'onClick',
	'onMouseDown',
	'onTouchStart',
	'onMouseEnter',
	'onMouseLeave',
	'onFocus',
	'onBlur',
	'onContextMenu'
]

var IS_REACT_16 = !!createPortal

var contextTypes = {
	rcTrigger: propTypes.shape({
		onPopupMouseDown: propTypes.func
	})
}

var Trigger = (function(_React$Component) {
	_inherits$1(Trigger, _React$Component)

	function Trigger(props) {
		_classCallCheck$1(this, Trigger)

		var _this = _possibleConstructorReturn$1(
			this,
			_React$Component.call(this, props)
		)

		_initialiseProps$2.call(_this)

		var popupVisible = void 0
		if ('popupVisible' in props) {
			popupVisible = !!props.popupVisible
		} else {
			popupVisible = !!props.defaultPopupVisible
		}

		_this.prevPopupVisible = popupVisible

		_this.state = {
			popupVisible: popupVisible
		}
		return _this
	}

	Trigger.prototype.getChildContext = function getChildContext() {
		return {
			rcTrigger: {
				onPopupMouseDown: this.onPopupMouseDown
			}
		}
	}

	Trigger.prototype.componentWillMount = function componentWillMount() {
		var _this2 = this

		ALL_HANDLERS.forEach(function(h) {
			_this2['fire' + h] = function(e) {
				_this2.fireEvents(h, e)
			}
		})
	}

	Trigger.prototype.componentDidMount = function componentDidMount() {
		this.componentDidUpdate(
			{},
			{
				popupVisible: this.state.popupVisible
			}
		)
	}

	Trigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(
		_ref
	) {
		var popupVisible = _ref.popupVisible

		if (popupVisible !== undefined) {
			this.setState({
				popupVisible: popupVisible
			})
		}
	}

	Trigger.prototype.componentDidUpdate = function componentDidUpdate(
		_,
		prevState
	) {
		var props = this.props
		var state = this.state
		var triggerAfterPopupVisibleChange = function triggerAfterPopupVisibleChange() {
			if (prevState.popupVisible !== state.popupVisible) {
				props.afterPopupVisibleChange(state.popupVisible)
			}
		}
		if (!IS_REACT_16) {
			this.renderComponent(null, triggerAfterPopupVisibleChange)
		}

		this.prevPopupVisible = prevState.popupVisible

		// We must listen to `mousedown` or `touchstart`, edge case:
		// https://github.com/ant-design/ant-design/issues/5804
		// https://github.com/react-component/calendar/issues/250
		// https://github.com/react-component/trigger/issues/50
		if (state.popupVisible) {
			var currentDocument = void 0
			if (
				!this.clickOutsideHandler &&
				(this.isClickToHide() || this.isContextMenuToShow())
			) {
				currentDocument = props.getDocument()
				this.clickOutsideHandler = addEventListenerWrap(
					currentDocument,
					'mousedown',
					this.onDocumentClick
				)
			}
			// always hide on mobile
			if (!this.touchOutsideHandler) {
				currentDocument = currentDocument || props.getDocument()
				this.touchOutsideHandler = addEventListenerWrap(
					currentDocument,
					'touchstart',
					this.onDocumentClick
				)
			}
			// close popup when trigger type contains 'onContextMenu' and document is scrolling.
			if (
				!this.contextMenuOutsideHandler1 &&
				this.isContextMenuToShow()
			) {
				currentDocument = currentDocument || props.getDocument()
				this.contextMenuOutsideHandler1 = addEventListenerWrap(
					currentDocument,
					'scroll',
					this.onContextMenuClose
				)
			}
			// close popup when trigger type contains 'onContextMenu' and window is blur.
			if (
				!this.contextMenuOutsideHandler2 &&
				this.isContextMenuToShow()
			) {
				this.contextMenuOutsideHandler2 = addEventListenerWrap(
					window,
					'blur',
					this.onContextMenuClose
				)
			}
			return
		}

		this.clearOutsideHandler()
	}

	Trigger.prototype.componentWillUnmount = function componentWillUnmount() {
		this.clearDelayTimer()
		this.clearOutsideHandler()
		clearTimeout(this.mouseDownTimeout)
	}

	Trigger.prototype.getPopupDomNode = function getPopupDomNode() {
		// for test
		if (this._component && this._component.getPopupDomNode) {
			return this._component.getPopupDomNode()
		}
		return null
	}

	Trigger.prototype.getPopupAlign = function getPopupAlign() {
		var props = this.props
		var popupPlacement = props.popupPlacement,
			popupAlign = props.popupAlign,
			builtinPlacements = props.builtinPlacements

		if (popupPlacement && builtinPlacements) {
			return getAlignFromPlacement(
				builtinPlacements,
				popupPlacement,
				popupAlign
			)
		}
		return popupAlign
	}

	/**
	 * @param popupVisible    Show or not the popup element
	 * @param event           SyntheticEvent, used for `pointAlign`
	 */
	Trigger.prototype.setPopupVisible = function setPopupVisible(
		popupVisible,
		event
	) {
		var alignPoint = this.props.alignPoint

		this.clearDelayTimer()

		if (this.state.popupVisible !== popupVisible) {
			if (!('popupVisible' in this.props)) {
				this.setState({popupVisible: popupVisible})
			}
			this.props.onPopupVisibleChange(popupVisible)
		}

		// Always record the point position since mouseEnterDelay will delay the show
		if (alignPoint && event) {
			this.setPoint(event)
		}
	}

	Trigger.prototype.delaySetPopupVisible = function delaySetPopupVisible(
		visible,
		delayS,
		event
	) {
		var _this3 = this

		var delay = delayS * 1000
		this.clearDelayTimer()
		if (delay) {
			var point = event ? {pageX: event.pageX, pageY: event.pageY} : null
			this.delayTimer = setTimeout(function() {
				_this3.setPopupVisible(visible, point)
				_this3.clearDelayTimer()
			}, delay)
		} else {
			this.setPopupVisible(visible, event)
		}
	}

	Trigger.prototype.clearDelayTimer = function clearDelayTimer() {
		if (this.delayTimer) {
			clearTimeout(this.delayTimer)
			this.delayTimer = null
		}
	}

	Trigger.prototype.clearOutsideHandler = function clearOutsideHandler() {
		if (this.clickOutsideHandler) {
			this.clickOutsideHandler.remove()
			this.clickOutsideHandler = null
		}

		if (this.contextMenuOutsideHandler1) {
			this.contextMenuOutsideHandler1.remove()
			this.contextMenuOutsideHandler1 = null
		}

		if (this.contextMenuOutsideHandler2) {
			this.contextMenuOutsideHandler2.remove()
			this.contextMenuOutsideHandler2 = null
		}

		if (this.touchOutsideHandler) {
			this.touchOutsideHandler.remove()
			this.touchOutsideHandler = null
		}
	}

	Trigger.prototype.createTwoChains = function createTwoChains(event) {
		var childPros = this.props.children.props
		var props = this.props
		if (childPros[event] && props[event]) {
			return this['fire' + event]
		}
		return childPros[event] || props[event]
	}

	Trigger.prototype.isClickToShow = function isClickToShow() {
		var _props = this.props,
			action = _props.action,
			showAction = _props.showAction

		return (
			action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1
		)
	}

	Trigger.prototype.isContextMenuToShow = function isContextMenuToShow() {
		var _props2 = this.props,
			action = _props2.action,
			showAction = _props2.showAction

		return (
			action.indexOf('contextMenu') !== -1 ||
			showAction.indexOf('contextMenu') !== -1
		)
	}

	Trigger.prototype.isClickToHide = function isClickToHide() {
		var _props3 = this.props,
			action = _props3.action,
			hideAction = _props3.hideAction

		return (
			action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1
		)
	}

	Trigger.prototype.isMouseEnterToShow = function isMouseEnterToShow() {
		var _props4 = this.props,
			action = _props4.action,
			showAction = _props4.showAction

		return (
			action.indexOf('hover') !== -1 ||
			showAction.indexOf('mouseEnter') !== -1
		)
	}

	Trigger.prototype.isMouseLeaveToHide = function isMouseLeaveToHide() {
		var _props5 = this.props,
			action = _props5.action,
			hideAction = _props5.hideAction

		return (
			action.indexOf('hover') !== -1 ||
			hideAction.indexOf('mouseLeave') !== -1
		)
	}

	Trigger.prototype.isFocusToShow = function isFocusToShow() {
		var _props6 = this.props,
			action = _props6.action,
			showAction = _props6.showAction

		return (
			action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1
		)
	}

	Trigger.prototype.isBlurToHide = function isBlurToHide() {
		var _props7 = this.props,
			action = _props7.action,
			hideAction = _props7.hideAction

		return (
			action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1
		)
	}

	Trigger.prototype.forcePopupAlign = function forcePopupAlign() {
		if (
			this.state.popupVisible &&
			this._component &&
			this._component.alignInstance
		) {
			this._component.alignInstance.forceAlign()
		}
	}

	Trigger.prototype.fireEvents = function fireEvents(type, e) {
		var childCallback = this.props.children.props[type]
		if (childCallback) {
			childCallback(e)
		}
		var callback = this.props[type]
		if (callback) {
			callback(e)
		}
	}

	Trigger.prototype.close = function close() {
		this.setPopupVisible(false)
	}

	Trigger.prototype.render = function render() {
		var _this4 = this

		var popupVisible = this.state.popupVisible
		var _props8 = this.props,
			children = _props8.children,
			forceRender = _props8.forceRender,
			alignPoint = _props8.alignPoint,
			className = _props8.className

		var child = React__default.Children.only(children)
		var newChildProps = {key: 'trigger'}

		if (this.isContextMenuToShow()) {
			newChildProps.onContextMenu = this.onContextMenu
		} else {
			newChildProps.onContextMenu = this.createTwoChains('onContextMenu')
		}

		if (this.isClickToHide() || this.isClickToShow()) {
			newChildProps.onClick = this.onClick
			newChildProps.onMouseDown = this.onMouseDown
			newChildProps.onTouchStart = this.onTouchStart
		} else {
			newChildProps.onClick = this.createTwoChains('onClick')
			newChildProps.onMouseDown = this.createTwoChains('onMouseDown')
			newChildProps.onTouchStart = this.createTwoChains('onTouchStart')
		}
		if (this.isMouseEnterToShow()) {
			newChildProps.onMouseEnter = this.onMouseEnter
			if (alignPoint) {
				newChildProps.onMouseMove = this.onMouseMove
			}
		} else {
			newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter')
		}
		if (this.isMouseLeaveToHide()) {
			newChildProps.onMouseLeave = this.onMouseLeave
		} else {
			newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave')
		}
		if (this.isFocusToShow() || this.isBlurToHide()) {
			newChildProps.onFocus = this.onFocus
			newChildProps.onBlur = this.onBlur
		} else {
			newChildProps.onFocus = this.createTwoChains('onFocus')
			newChildProps.onBlur = this.createTwoChains('onBlur')
		}

		var childrenClassName = classnames(
			child && child.props && child.props.className,
			className
		)
		if (childrenClassName) {
			newChildProps.className = childrenClassName
		}
		var trigger = React__default.cloneElement(child, newChildProps)

		if (!IS_REACT_16) {
			return React__default.createElement(
				ContainerRender,
				{
					parent: this,
					visible: popupVisible,
					autoMount: false,
					forceRender: forceRender,
					getComponent: this.getComponent,
					getContainer: this.getContainer
				},
				function(_ref2) {
					var renderComponent = _ref2.renderComponent

					_this4.renderComponent = renderComponent
					return trigger
				}
			)
		}

		var portal = void 0
		// prevent unmounting after it's rendered
		if (popupVisible || this._component || forceRender) {
			portal = React__default.createElement(
				Portal,
				{
					key: 'portal',
					getContainer: this.getContainer,
					didUpdate: this.handlePortalUpdate
				},
				this.getComponent()
			)
		}

		return [trigger, portal]
	}

	return Trigger
})(React__default.Component)

Trigger.propTypes = {
	children: propTypes.any,
	action: propTypes.oneOfType([
		propTypes.string,
		propTypes.arrayOf(propTypes.string)
	]),
	showAction: propTypes.any,
	hideAction: propTypes.any,
	getPopupClassNameFromAlign: propTypes.any,
	onPopupVisibleChange: propTypes.func,
	afterPopupVisibleChange: propTypes.func,
	popup: propTypes.oneOfType([propTypes.node, propTypes.func]).isRequired,
	popupStyle: propTypes.object,
	prefixCls: propTypes.string,
	popupClassName: propTypes.string,
	className: propTypes.string,
	popupPlacement: propTypes.string,
	builtinPlacements: propTypes.object,
	popupTransitionName: propTypes.oneOfType([
		propTypes.string,
		propTypes.object
	]),
	popupAnimation: propTypes.any,
	mouseEnterDelay: propTypes.number,
	mouseLeaveDelay: propTypes.number,
	zIndex: propTypes.number,
	focusDelay: propTypes.number,
	blurDelay: propTypes.number,
	getPopupContainer: propTypes.func,
	getDocument: propTypes.func,
	forceRender: propTypes.bool,
	destroyPopupOnHide: propTypes.bool,
	mask: propTypes.bool,
	maskClosable: propTypes.bool,
	onPopupAlign: propTypes.func,
	popupAlign: propTypes.object,
	popupVisible: propTypes.bool,
	defaultPopupVisible: propTypes.bool,
	maskTransitionName: propTypes.oneOfType([
		propTypes.string,
		propTypes.object
	]),
	maskAnimation: propTypes.string,
	stretch: propTypes.string,
	alignPoint: propTypes.bool // Maybe we can support user pass position in the future
}
Trigger.contextTypes = contextTypes
Trigger.childContextTypes = contextTypes
Trigger.defaultProps = {
	prefixCls: 'rc-trigger-popup',
	getPopupClassNameFromAlign: returnEmptyString,
	getDocument: returnDocument,
	onPopupVisibleChange: noop$1,
	afterPopupVisibleChange: noop$1,
	onPopupAlign: noop$1,
	popupClassName: '',
	mouseEnterDelay: 0,
	mouseLeaveDelay: 0.1,
	focusDelay: 0,
	blurDelay: 0.15,
	popupStyle: {},
	destroyPopupOnHide: false,
	popupAlign: {},
	defaultPopupVisible: false,
	mask: false,
	maskClosable: true,
	action: [],
	showAction: [],
	hideAction: []
}

var _initialiseProps$2 = function _initialiseProps() {
	var _this5 = this

	this.onMouseEnter = function(e) {
		var mouseEnterDelay = _this5.props.mouseEnterDelay

		_this5.fireEvents('onMouseEnter', e)
		_this5.delaySetPopupVisible(
			true,
			mouseEnterDelay,
			mouseEnterDelay ? null : e
		)
	}

	this.onMouseMove = function(e) {
		_this5.fireEvents('onMouseMove', e)
		_this5.setPoint(e)
	}

	this.onMouseLeave = function(e) {
		_this5.fireEvents('onMouseLeave', e)
		_this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay)
	}

	this.onPopupMouseEnter = function() {
		_this5.clearDelayTimer()
	}

	this.onPopupMouseLeave = function(e) {
		// https://github.com/react-component/trigger/pull/13
		// react bug?
		if (
			e.relatedTarget &&
			!e.relatedTarget.setTimeout &&
			_this5._component &&
			_this5._component.getPopupDomNode &&
			contains(_this5._component.getPopupDomNode(), e.relatedTarget)
		) {
			return
		}
		_this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay)
	}

	this.onFocus = function(e) {
		_this5.fireEvents('onFocus', e)
		// incase focusin and focusout
		_this5.clearDelayTimer()
		if (_this5.isFocusToShow()) {
			_this5.focusTime = Date.now()
			_this5.delaySetPopupVisible(true, _this5.props.focusDelay)
		}
	}

	this.onMouseDown = function(e) {
		_this5.fireEvents('onMouseDown', e)
		_this5.preClickTime = Date.now()
	}

	this.onTouchStart = function(e) {
		_this5.fireEvents('onTouchStart', e)
		_this5.preTouchTime = Date.now()
	}

	this.onBlur = function(e) {
		_this5.fireEvents('onBlur', e)
		_this5.clearDelayTimer()
		if (_this5.isBlurToHide()) {
			_this5.delaySetPopupVisible(false, _this5.props.blurDelay)
		}
	}

	this.onContextMenu = function(e) {
		e.preventDefault()
		_this5.fireEvents('onContextMenu', e)
		_this5.setPopupVisible(true, e)
	}

	this.onContextMenuClose = function() {
		if (_this5.isContextMenuToShow()) {
			_this5.close()
		}
	}

	this.onClick = function(event) {
		_this5.fireEvents('onClick', event)
		// focus will trigger click
		if (_this5.focusTime) {
			var preTime = void 0
			if (_this5.preClickTime && _this5.preTouchTime) {
				preTime = Math.min(_this5.preClickTime, _this5.preTouchTime)
			} else if (_this5.preClickTime) {
				preTime = _this5.preClickTime
			} else if (_this5.preTouchTime) {
				preTime = _this5.preTouchTime
			}
			if (Math.abs(preTime - _this5.focusTime) < 20) {
				return
			}
			_this5.focusTime = 0
		}
		_this5.preClickTime = 0
		_this5.preTouchTime = 0

		// Only prevent default when all the action is click.
		// https://github.com/ant-design/ant-design/issues/17043
		// https://github.com/ant-design/ant-design/issues/17291
		if (
			_this5.isClickToShow() &&
			(_this5.isClickToHide() || _this5.isBlurToHide()) &&
			event &&
			event.preventDefault
		) {
			event.preventDefault()
		}
		var nextVisible = !_this5.state.popupVisible
		if (
			(_this5.isClickToHide() && !nextVisible) ||
			(nextVisible && _this5.isClickToShow())
		) {
			_this5.setPopupVisible(!_this5.state.popupVisible, event)
		}
	}

	this.onPopupMouseDown = function() {
		var _context$rcTrigger = _this5.context.rcTrigger,
			rcTrigger =
				_context$rcTrigger === undefined ? {} : _context$rcTrigger

		_this5.hasPopupMouseDown = true

		clearTimeout(_this5.mouseDownTimeout)
		_this5.mouseDownTimeout = setTimeout(function() {
			_this5.hasPopupMouseDown = false
		}, 0)

		if (rcTrigger.onPopupMouseDown) {
			rcTrigger.onPopupMouseDown.apply(rcTrigger, arguments)
		}
	}

	this.onDocumentClick = function(event) {
		if (_this5.props.mask && !_this5.props.maskClosable) {
			return
		}

		var target = event.target
		var root = findDOMNode(_this5)
		if (!contains(root, target) && !_this5.hasPopupMouseDown) {
			_this5.close()
		}
	}

	this.getRootDomNode = function() {
		return findDOMNode(_this5)
	}

	this.getPopupClassNameFromAlign = function(align) {
		var className = []
		var _props9 = _this5.props,
			popupPlacement = _props9.popupPlacement,
			builtinPlacements = _props9.builtinPlacements,
			prefixCls = _props9.prefixCls,
			alignPoint = _props9.alignPoint,
			getPopupClassNameFromAlign = _props9.getPopupClassNameFromAlign

		if (popupPlacement && builtinPlacements) {
			className.push(
				getAlignPopupClassName(
					builtinPlacements,
					prefixCls,
					align,
					alignPoint
				)
			)
		}
		if (getPopupClassNameFromAlign) {
			className.push(getPopupClassNameFromAlign(align))
		}
		return className.join(' ')
	}

	this.getComponent = function() {
		var _props10 = _this5.props,
			prefixCls = _props10.prefixCls,
			destroyPopupOnHide = _props10.destroyPopupOnHide,
			popupClassName = _props10.popupClassName,
			action = _props10.action,
			onPopupAlign = _props10.onPopupAlign,
			popupAnimation = _props10.popupAnimation,
			popupTransitionName = _props10.popupTransitionName,
			popupStyle = _props10.popupStyle,
			mask = _props10.mask,
			maskAnimation = _props10.maskAnimation,
			maskTransitionName = _props10.maskTransitionName,
			zIndex = _props10.zIndex,
			popup = _props10.popup,
			stretch = _props10.stretch,
			alignPoint = _props10.alignPoint
		var _state = _this5.state,
			popupVisible = _state.popupVisible,
			point = _state.point

		var align = _this5.getPopupAlign()

		var mouseProps = {}
		if (_this5.isMouseEnterToShow()) {
			mouseProps.onMouseEnter = _this5.onPopupMouseEnter
		}
		if (_this5.isMouseLeaveToHide()) {
			mouseProps.onMouseLeave = _this5.onPopupMouseLeave
		}

		mouseProps.onMouseDown = _this5.onPopupMouseDown
		mouseProps.onTouchStart = _this5.onPopupMouseDown

		return React__default.createElement(
			Popup,
			_extends$1(
				{
					prefixCls: prefixCls,
					destroyPopupOnHide: destroyPopupOnHide,
					visible: popupVisible,
					point: alignPoint && point,
					className: popupClassName,
					action: action,
					align: align,
					onAlign: onPopupAlign,
					animation: popupAnimation,
					getClassNameFromAlign: _this5.getPopupClassNameFromAlign
				},
				mouseProps,
				{
					stretch: stretch,
					getRootDomNode: _this5.getRootDomNode,
					style: popupStyle,
					mask: mask,
					zIndex: zIndex,
					transitionName: popupTransitionName,
					maskAnimation: maskAnimation,
					maskTransitionName: maskTransitionName,
					ref: _this5.savePopup
				}
			),
			typeof popup === 'function' ? popup() : popup
		)
	}

	this.getContainer = function() {
		var props = _this5.props

		var popupContainer = document.createElement('div')
		// Make sure default popup container will never cause scrollbar appearing
		// https://github.com/react-component/trigger/issues/41
		popupContainer.style.position = 'absolute'
		popupContainer.style.top = '0'
		popupContainer.style.left = '0'
		popupContainer.style.width = '100%'
		var mountNode = props.getPopupContainer
			? props.getPopupContainer(findDOMNode(_this5))
			: props.getDocument().body
		mountNode.appendChild(popupContainer)
		return popupContainer
	}

	this.setPoint = function(point) {
		var alignPoint = _this5.props.alignPoint

		if (!alignPoint || !point) return

		_this5.setState({
			point: {
				pageX: point.pageX,
				pageY: point.pageY
			}
		})
	}

	this.handlePortalUpdate = function() {
		if (_this5.prevPopupVisible !== _this5.state.popupVisible) {
			_this5.props.afterPopupVisibleChange(_this5.state.popupVisible)
		}
	}

	this.savePopup = function(node) {
		_this5._component = node
	}
}

function getPopupAlign(align) {
	return {
		offset: [align.offsetX, align.offsetY],
		overflow: {
			adjustX: 1,
			adjustY: 1
		}
	}
}
/**
 * Применяется для создания всплывающих элементов.
 * */

var Positional =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Positional, _Component)

		function Positional() {
			classCallCheck(this, Positional)

			return possibleConstructorReturn(
				this,
				getPrototypeOf(Positional).apply(this, arguments)
			)
		}

		createClass(Positional, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						align = _this$props.align,
						builtinPlacements = _this$props.builtinPlacements,
						children = _this$props.children,
						destroyPopupOnHide = _this$props.destroyPopupOnHide,
						events = _this$props.events,
						placement = _this$props.placement,
						popupComponent = _this$props.popupComponent,
						stretch = _this$props.stretch,
						transitionName = _this$props.transitionName
					return React__default.createElement(
						Trigger,
						{
							destroyPopupOnHide: destroyPopupOnHide,
							popup: popupComponent,
							popupAlign: getPopupAlign(align),
							popupPlacement: placement,
							popupTransitionName: transitionName,
							action: events,
							builtinPlacements: builtinPlacements,
							stretch: stretch
						},
						children
					)
				}
			}
		])

		return Positional
	})(Component)

Positional.propTypes = {
	/** Отступы от родительского контейнера в пикселях */
	align: propTypes.shape({
		offsetX: propTypes.number,
		offsetY: propTypes.number
	}),

	/** Настройки позиционирования компонента относительно родительского контейнера */
	builtinPlacements: propTypes.object,

	/** Элемент, относительно которого будет позиционироваться наш компонент */
	children: propTypes.element,

	/** Уничтожать ли попап когда он скрыт */
	destroyPopupOnHide: propTypes.bool,

	/** Ивенты, вызывающие появляение компонента. Возможные ивенты - click, contextMenu, focus, hover */
	events: propTypes.arrayOf(propTypes.string),

	/** Задержка перед появлением компонента (в секундах) */
	mouseEnterDelay: propTypes.number,

	/** Задержка перед исчезанием компонента (в секундах) */
	mouseLeaveDelay: propTypes.number,

	/** Позиционирование компонента относительно родительского компонента. Аргументы формируются исходя из параметра builtinPlacements */
	placement: propTypes.oneOf([
		'left',
		'right',
		'top',
		'bottom',
		'topLeft',
		'topRight',
		'bottomLeft',
		'bottomRight'
	]),

	/** Компонент для отображения */
	popupComponent: propTypes.element,

	/** Дает возможность попап элементу растягиваться относительно родительского контейнера. Варианты - 'width', 'minWidth', 'height', 'minHeight' и их вариации, напр. 'height minWidth' */
	stretch: propTypes.string,

	/** Имя класса для анимаций. Например, rc-trigger-popup-zoom */
	transitionName: propTypes.string
}
Positional.defaultProps = {
	align: {
		offsetX: 0,
		offsetY: 0
	},
	builtinPlacements: {
		left: {
			points: ['cr', 'cl']
		},
		right: {
			points: ['cl', 'cr']
		},
		top: {
			points: ['bc', 'tc']
		},
		bottom: {
			points: ['tc', 'bc']
		},
		topLeft: {
			points: ['bl', 'tl']
		},
		topRight: {
			points: ['br', 'tr']
		},
		bottomRight: {
			points: ['tr', 'br']
		},
		bottomLeft: {
			points: ['tl', 'bl']
		}
	},
	destroyPopupOnHide: false,
	events: ['click', 'hover'],
	mouseEnterDelay: 0,
	mouseLeaveDelay: 0.1,
	placement: 'left',
	popupComponent: React__default.createElement(
		'h5',
		null,
		"I'm default popup element!"
	),
	stretch: null,
	transitionName: null
}
Positional.displayName = 'Positional'

function _templateObject$6() {
	var data = taggedTemplateLiteral([
		'\n  color: ',
		';\n\n  ',
		' \n  ',
		' \n  ',
		' \n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		' \n  ',
		'\n  ',
		'\n  ',
		';\n'
	])

	_templateObject$6 = function _templateObject() {
		return data
	}

	return data
}

var align = function align(_ref) {
	var align = _ref.align
	return (
		Boolean(align) && {
			textAlign: align
		}
	)
}

var regular = function regular(_ref2) {
	var regular = _ref2.regular,
		theme = _ref2.theme
	return (
		Boolean(regular) && {
			fontWeight: theme.fontWeights.regular
		}
	)
}

var bold = function bold(_ref3) {
	var bold = _ref3.bold,
		theme = _ref3.theme
	return (
		Boolean(bold) && {
			fontWeight: theme.fontWeights.bold
		}
	)
}

var italic = function italic(_ref4) {
	var italic = _ref4.italic
	return (
		Boolean(italic) && {
			fontStyle: 'italic'
		}
	)
}

var caps = function caps(_ref5) {
	var caps = _ref5.caps
	return (
		Boolean(caps) && {
			textTransform: 'uppercase'
		}
	)
}

var inline = function inline(_ref6) {
	var inline = _ref6.inline
	return (
		Boolean(inline) && {
			display: 'inline-block'
		}
	)
}

var strike = function strike(_ref7) {
	var strike = _ref7.strike
	return (
		Boolean(strike) && {
			textDecoration: 'line-through'
		}
	)
}

var truncated = function truncated(_ref8) {
	var truncated = _ref8.truncated
	return (
		Boolean(truncated) && {
			overflow: 'hidden',
			whiteSpace: 'nowrap',
			textOverflow: 'ellipsis'
			/**
			 * Используется для вывода любой текстовой информации.
			 */
		}
	)
}

var Text$1 = styled.div(
	_templateObject$6(),
	function(props) {
		return props.theme.colors.text
	},
	italic,
	fontSize,
	space,
	truncated,
	color,
	caps,
	regular,
	bold,
	align,
	inline,
	strike
) // Text.span = Text.withComponent('span')
// Text.p = Text.withComponent('p')
// Text.s = Text.withComponent('s')

Text$1.displayName = 'Text'
Text$1.propTypes = {
	/** Размер шрифта */
	fontSize: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Выравнивание текста по горизонтали */
	align: propTypes.oneOf(['left', 'center', 'right', 'justify']),

	/** Капитель */
	caps: propTypes.bool,

	/** Толщина текста по-умолчанию */
	regular: propTypes.bool,

	/** Жирный текст */
	bold: propTypes.bool,

	/** Курсивный текст  */
	italic: propTypes.bool,

	/** Цвет текста */
	color: propTypes.string,

	/** Обрезать текст по ширине родительского блока */
	truncated: propTypes.bool,

	/** Инлайновый текст */
	inline: propTypes.bool,

	/** Зачеркнутый текст */
	strike: propTypes.bool,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** @ignore */
	theme: propTypes.any
}
Text$1.defaultProps = {
	fontSize: 1,
	regular: true,
	bold: false,
	italic: false,
	caps: false,
	truncated: false,
	theme: theme
	/** @component */
}

var _extends_1 = createCommonjsModule(function(module) {
	function _extends() {
		module.exports = _extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]

					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}

				return target
			}

		return _extends.apply(this, arguments)
	}

	module.exports = _extends
})

function Heading(_ref) {
	var tag = _ref.tag,
		props = objectWithoutProperties(_ref, ['tag'])

	var headings = {
		h1: {
			fontSize: 6,
			caps: false,
			bold: true
		},
		h2: {
			fontSize: 5,
			caps: false,
			bold: true
		},
		h3: {
			fontSize: 4,
			caps: false,
			bold: false
		},
		h4: {
			fontSize: 3,
			caps: false,
			bold: false
		},
		h5: {
			fontSize: 2,
			caps: false,
			bold: true
		},
		h6: {
			fontSize: 1,
			caps: true,
			bold: false
		}
	}
	return React__default.createElement(
		Text$1,
		_extends_1({}, props, headings[tag])
	)
}

Heading.propTypes = {
	tag: propTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
}
Heading.defaultProps = {
	tag: 'h3',
	m: 0
}
Heading.displayName = 'Heading'

function _templateObject$7() {
	var data = taggedTemplateLiteral([
		'\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-weight: 400;\n  line-height: 1.5;\n  cursor: ',
		';\n  border-radius: ',
		';\n  color: ',
		';\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  outline: none;\n  transition: all ',
		';\n  position: relative;\n  min-width: 64px;\n\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		';\n'
	])

	_templateObject$7 = function _templateObject() {
		return data
	}

	return data
}
var sizes = {
	verySmall: {
		fontSize: 0,
		diameter: 26,
		px: 8,
		py: 2
	},
	small: {
		fontSize: 1,
		diameter: 32,
		px: 8,
		py: 6
	},
	medium: {
		fontSize: 1,
		diameter: 40,
		px: 8,
		py: 10
	},
	large: {
		fontSize: 1,
		diameter: 48,
		px: 8,
		py: 18
	}
}

var getSizeParams = function getSizeParams(size) {
	return sizes[size] || sizes.medium
}

var size = function size(props) {
	var _getSizeParams = getSizeParams(props.size),
		px = _getSizeParams.px,
		py = _getSizeParams.py,
		fontSize = _getSizeParams.fontSize

	return {
		fontSize: ''.concat(props.theme.fontSizes[fontSize], 'px'),
		padding: ''.concat(py, 'px ').concat(px, 'px')
	}
}

var block = function block(props) {
	return (
		Boolean(props.block) && {
			width: '100%'
		}
	)
}

var shapeCircle = function shapeCircle(props) {
	if (props.circle) {
		var _ref = sizes[props.size] || sizes.medium,
			diameter = _ref.diameter

		return {
			borderRadius: '50%',
			padding: 0,
			width: ''.concat(diameter, 'px'),
			height: ''.concat(diameter, 'px'),
			minWidth: 'auto'
		}
	}
}

var type = function type(props) {
	var theme = props.theme,
		disabled = props.disabled,
		size = props.size,
		block = props.block,
		type = props.type
	var colors = theme.colors

	var _getSizeParams2 = getSizeParams(size),
		px = _getSizeParams2.px,
		py = _getSizeParams2.py

	switch (type) {
		case 'bordered':
			return {
				color: disabled ? colors.lightGrey : colors.black,
				borderColor: disabled ? colors.lightGrey : colors.grey,
				backgroundColor: 'transparent',
				'&:hover': !disabled && {
					color: colors.blue,
					borderColor: colors.blue
				},
				'&:active': !disabled && {
					color: colors.darkBlue,
					borderColor: colors.darkBlue
				}
			}

		case 'dashed':
			return {
				color: disabled ? colors.lightGrey : colors.black,
				borderColor: disabled ? colors.lightGrey : colors.grey,
				backgroundColor: 'transparent',
				borderStyle: 'dashed',
				borderWidth: '1px',
				padding: ''.concat(py, 'px ').concat(px, 'px'),
				'&:hover': !disabled && {
					color: colors.blue,
					borderColor: colors.blue
				},
				'&:active': !disabled && {
					color: colors.darkBlue,
					borderColor: colors.darkBlue
				}
			}

		case 'flat':
			return {
				backgroundColor: 'transparent',
				color: disabled ? colors.lightGrey : colors.black,
				'&:hover': !disabled && {
					color: colors.blue
				},
				'&:active': !disabled && {
					color: colors.darkBlue
				}
			}

		case 'secondary': {
			return {
				backgroundColor: disabled ? colors.disabled : colors.lightGrey,
				color: colors.black
			}
		}

		case 'primary':
		default:
			return {
				color: colors.white,
				borderColor: disabled ? colors.lightGrey : colors.primary,
				backgroundColor: disabled ? colors.disabled : colors.lightBlue,
				'&:hover': !disabled && {
					backgroundColor: colors.blue,
					borderColor: colors.blue
				},
				'&:active': !disabled && {
					backgroundColor: colors.darkBlue,
					borderColor: colors.darkBlue
				}
			}
	}
}
/**
 * Используется для инициации каких-либо действий или процессов.
 */

var Button = styled.button(
	_templateObject$7(),
	function(props) {
		return props.disabled ? 'not-allowed' : 'pointer'
	},
	function(props) {
		return props.theme.radii[1] + 'px'
	},
	function(props) {
		return props.theme.colors.white
	},
	function(props) {
		return props.theme.duration.fast
	},
	block,
	space,
	size,
	type,
	shapeCircle
)
Button.propTypes = {
	/** Вид кнопки */
	type: propTypes.oneOf([
		'primary',
		'secondary',
		'bordered',
		'dashed',
		'flat'
	]),

	/** Размер кнопки */
	size: propTypes.oneOf(['verySmall', 'small', 'medium', 'large']),

	/** Растягивает кнопку на 100% родительского блока */
	block: propTypes.bool,

	/** Круглая кнопка */
	circle: propTypes.bool,

	/** Функция, которая выполняется после нажатия */
	onClick: propTypes.func,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** @ignore */
	theme: propTypes.any
}
Button.defaultProps = {
	type: 'primary',
	size: 'medium',
	circle: false,
	block: false,

	/** @ignore */
	theme: theme
}
Button.displayName = 'Button'

var sizes$1 = {
	0: ' md-14',
	1: ' md-18',
	2: ' md-24',
	3: ' md-36',
	4: ' md-48'
}
var colors$1 = {
	primary: ' blue',
	hover: ' lightBlue',
	success: ' green',
	warning: ' orange',
	error: ' red',
	border: ' semiLightGrey',
	disabled: ' grey',
	highlight: ' lightGrey',
	onclick: ' darkBlue',
	scrollbar: ' grey',
	black: ' black',
	white: ' white',
	text: ' black'
}

var Icon$1 = function Icon(_ref) {
	var name = _ref.name,
		size = _ref.size,
		color = _ref.color,
		props = objectWithoutProperties(_ref, ['name', 'size', 'color'])

	var nameForClass = 'material-icons '

	if (sizes$1[size] !== undefined) {
		nameForClass = nameForClass + sizes$1[size]
	} else {
		nameForClass = nameForClass + 'md-18 '
	}

	if (colors$1[color] !== undefined) {
		nameForClass = nameForClass + colors$1[color]
	} else {
		nameForClass = nameForClass + 'black '
	}

	if (props.hasOwnProperty('spin'));

	if (props.hasOwnProperty('hidden')) {
		nameForClass = nameForClass + ' hidden'
	}

	return React__default.createElement(
		'i',
		{
			className: ''.concat(nameForClass)
		},
		name
	)
}

Icon$1.displayName = 'Icon'
Icon$1.propTypes = {
	name: propTypes.string,
	color: propTypes.string,
	size: propTypes.number // rotate,
}
Icon$1.defaultProps = {
	name: 'live_help',
	size: 2,
	color: 'text'
	/** @component */
}

function _templateObject$8() {
	var data = taggedTemplateLiteral([
		'\n  position: relative;\n  border: 0;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-color: ',
		';\n  background-color: ',
		';\n\n  ',
		'\n  ',
		';\n'
	])

	_templateObject$8 = function _templateObject() {
		return data
	}

	return data
}

var vertical = function vertical(_ref) {
	var vertical = _ref.vertical
	return (
		vertical && {
			display: 'inline-block',
			borderBottom: 0,
			width: '1px',
			height: '0.9em',
			top: '0.1em'
			/** Используется для разделения информации линиями. */
		}
	)
}

var DividerComponent = styled.div(
	_templateObject$8(),
	function(props) {
		return props.theme.colors[props.color]
	},
	function(props) {
		return props.theme.colors[props.color]
	},
	space,
	vertical
)
var HorizontalDivider = Object.assign({}, DividerComponent)
HorizontalDivider.defaultProps = {
	theme: theme,
	mt: 3,
	mb: 3,
	ml: 0,
	mr: 0
}
var VerticalDivider = Object.assign({}, DividerComponent)
VerticalDivider.defaultProps = {
	theme: theme,
	mt: 0,
	mb: 0,
	ml: 3,
	mr: 3
	/** @component */
}

var Divider = function Divider(_ref2) {
	var vertical = _ref2.vertical,
		rest = objectWithoutProperties(_ref2, ['vertical'])

	if (vertical)
		return React__default.createElement(
			VerticalDivider,
			_extends_1(
				{
					vertical: true
				},
				rest
			)
		)
	return React__default.createElement(
		HorizontalDivider,
		_extends_1(
			{
				vertical: false
			},
			rest
		)
	)
}

Divider.displayName = 'Divider'
Divider.propTypes = {
	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Делает линию вертикальной и превращает ее в инлайн элемент */
	vertical: propTypes.bool,

	/** Цвет */
	color: propTypes.string,

	/** @ignore */
	theme: propTypes.any
}
Divider.defaultProps = {
	color: 'border'
}

function _arrayWithoutHoles(arr) {
	if (Array.isArray(arr)) {
		for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
			arr2[i] = arr[i]
		}

		return arr2
	}
}

var arrayWithoutHoles = _arrayWithoutHoles

function _iterableToArray(iter) {
	if (
		Symbol.iterator in Object(iter) ||
		Object.prototype.toString.call(iter) === '[object Arguments]'
	)
		return Array.from(iter)
}

var iterableToArray = _iterableToArray

function _nonIterableSpread() {
	throw new TypeError('Invalid attempt to spread non-iterable instance')
}

var nonIterableSpread = _nonIterableSpread

function _toConsumableArray(arr) {
	return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread()
}

var toConsumableArray = _toConsumableArray

function _templateObject5() {
	var data = taggedTemplateLiteral([
		'\n  overflow: hidden;\n  font-size: ',
		';\n  color: ',
		';\n  ',
		'\n'
	])

	_templateObject5 = function _templateObject5() {
		return data
	}

	return data
}

function _templateObject4() {
	var data = taggedTemplateLiteral([
		'\n  height: 32px;\n  align-items: center;\n  border-bottom: 1px solid ',
		';\n  ',
		'\n'
	])

	_templateObject4 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3() {
	var data = taggedTemplateLiteral([
		'\n  font-size: 10px;\n  color: ',
		';\n  transition: transform ',
		';\n  ',
		'\n'
	])

	_templateObject3 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$1() {
	var data = taggedTemplateLiteral(['\n  ', '\n  overflow: hidden;\n'])

	_templateObject2$1 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$9() {
	var data = taggedTemplateLiteral([
		'\n      opacity: 0.4;\n      cursor: not-allowed;\n    '
	])

	_templateObject$9 = function _templateObject() {
		return data
	}

	return data
}

var noop$2 = function noop() {}

var disabled = function disabled(props) {
	return props.disabled && css$3(_templateObject$9())
}

var PanelContent = styled(Box$1)(_templateObject2$1(), function(props) {
	return 'transition: height '.concat(props.theme.duration.normal, ';')
}) // To fix warning because of passing isOpen prop to <svg />

var AnimatedScaledIcon = styled(function(_ref) {
	var isOpen = _ref.isOpen,
		rest = objectWithoutProperties(_ref, ['isOpen'])

	return React__default.createElement(Icon$1, rest)
})(
	_templateObject3(),
	themeGet('color.black', '#080808'),
	themeGet('duration.normal', '300ms'),
	function(props) {
		return props.isOpen && 'transform: rotate(180deg);'
	}
)
var PanelHeaderWrapper = styled(Flex)(
	_templateObject4(),
	themeGet('colors.border', '#ecebeb'),
	function(props) {
		return props.disabled ? 'cursor: not-allowed;' : 'cursor: pointer;'
	}
)
var PanelWrapper = styled(Flex)(
	_templateObject5(),
	function(props) {
		return props.theme.fontSizes[1] + 'px'
	},
	function(props) {
		return props.theme.colors.black
	},
	disabled
)

var PanelHeader = function PanelHeader(_ref2) {
	var title = _ref2.title,
		togglePanel = _ref2.togglePanel,
		isOpen = _ref2.isOpen,
		panelKey = _ref2.panelKey,
		disabled = _ref2.disabled
	return React__default.createElement(
		PanelHeaderWrapper,
		{
			disabled: disabled,
			onClick: disabled
				? noop$2
				: function() {
						return togglePanel(panelKey)
				  }
		},
		React__default.createElement(
			Flex,
			{
				justifyContent: 'center',
				alignItems: 'center',
				width: 16,
				height: 16
			},
			isOpen
				? React__default.createElement(AnimatedScaledIcon, {
						isOpen: isOpen,
						name: 'keyboard_arrow_up',
						size: 1
				  })
				: React__default.createElement(AnimatedScaledIcon, {
						isOpen: isOpen,
						name: 'keyboard_arrow_down',
						size: 1
				  })
		),
		React__default.createElement(
			Box$1,
			{
				ml: 2
			},
			title
		)
	)
}
/** Отвечает за вывод содержимого */

var CollapsePanel =
	/*#__PURE__*/
	(function(_React$Component) {
		inherits(CollapsePanel, _React$Component)

		function CollapsePanel() {
			var _getPrototypeOf2

			var _this

			classCallCheck(this, CollapsePanel)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = possibleConstructorReturn(
				this,
				(_getPrototypeOf2 = getPrototypeOf(CollapsePanel)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			defineProperty(assertThisInitialized(_this), 'state', {
				contentHeight: 0
			})

			return _this
		}

		createClass(CollapsePanel, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.setState({
						contentHeight: this.measure && this.measure.clientHeight
					})
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevState) {
					if (this.measure) {
						if (
							prevState.contentHeight !==
							this.measure.clientHeight
						)
							this.setState({
								contentHeight: this.measure.clientHeight
							})
					}
				}
			},
			{
				key: 'render',
				value: function render() {
					var _this2 = this

					var mergedStyle = objectSpread({}, this.props.style, {
						height: this.props.isOpen ? this.state.contentHeight : 0
					})

					return React__default.createElement(
						PanelWrapper,
						{
							flexDirection: 'column',
							disabled: this.props.disabled
						},
						React__default.createElement(PanelHeader, this.props),
						React__default.createElement(
							PanelContent,
							_extends_1({}, this.props, {
								style: mergedStyle
							}),
							React__default.createElement(
								Box$1,
								{
									ref: function ref(measure) {
										return (_this2.measure = measure)
									}
								},
								this.props.children
							)
						)
					)
				}
			}
		])

		return CollapsePanel
	})(React__default.Component)

CollapsePanel.propTypes = {
	/** Возможность скрыть-раскрыть панель */
	disabled: propTypes.bool,

	/** Заголовок панели. */
	title: propTypes.oneOfType([propTypes.string, propTypes.element])
}
CollapsePanel.defaultProps = {
	disabled: false,
	title: ''
}
CollapsePanel.displayName = 'Collapse.Panel'

/** Используется, если необходимо сгруппировать или скрыть большое количество содержимого. */

var Collapse =
	/*#__PURE__*/
	(function(_React$Component) {
		inherits(Collapse, _React$Component)

		function Collapse(_props) {
			var _this

			classCallCheck(this, Collapse)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Collapse).call(this, _props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(newActiveKeys) {
					_this.setState({
						activeKeys: newActiveKeys
					})

					_this.props.onChange && _this.props.onChange(newActiveKeys)
				}
			)

			defineProperty(
				assertThisInitialized(_this),
				'onPanelClick',
				function(panelKey) {
					var activeKeys = _this.state.activeKeys

					var newActiveKeys = toConsumableArray(activeKeys)

					if (activeKeys.includes(panelKey)) {
						// Closed the panel
						newActiveKeys = activeKeys.filter(function(key) {
							return key !== panelKey
						})
					} else {
						// Opened the panel
						newActiveKeys = [].concat(
							toConsumableArray(activeKeys),
							[panelKey]
						)
					}

					_this.handleChange(newActiveKeys)
				}
			)

			defineProperty(
				assertThisInitialized(_this),
				'getChildren',
				function() {
					var children = _this.props.children
					return children.map(function(child, i) {
						var key = child.key || String(i)
						var props = {
							key: child.key || String(i),
							panelKey: key,
							togglePanel: _this.onPanelClick,
							// If controlled, props should be the source of truth.
							isOpen: _this.props.activeKeys
								? _this.props.activeKeys.includes(key)
								: _this.state.activeKeys.includes(key)
						}
						return React__default.cloneElement(child, props)
					})
				}
			)

			_this.state = {
				activeKeys:
					_this.props.activeKeys ||
					_this.props.defaultActiveKeys ||
					[]
			}
			return _this
		}

		createClass(Collapse, [
			{
				key: 'render',
				value: function render() {
					return React__default.createElement(
						Box$1,
						null,
						this.getChildren()
					)
				}
			}
		])

		return Collapse
	})(React__default.Component)

Collapse.propTypes = {
	/** Список открытых панелей. */
	activeKeys: propTypes.arrayOf(propTypes.string),

	/** Список открытых панелей по умолчанию */
	defaultActiveKeys: propTypes.arrayOf(propTypes.string),

	/** Функция-хендлер */
	onChange: propTypes.func
}
Collapse.Panel = CollapsePanel

function _templateObject$a() {
	var data = taggedTemplateLiteral(['\n  ', '\n  ', ';\n'])

	_templateObject$a = function _templateObject() {
		return data
	}

	return data
}
var TabPane = styled(Box$1)(
	_templateObject$a(),
	function(props) {
		return !props.isActive && 'display: none;'
	},
	space
)
TabPane.propTypes = {
	/** Активна ли вкладка */
	isActive: propTypes.bool,

	/** Текст вкладки. */
	tab: propTypes.oneOfType([propTypes.string, propTypes.element]),

	/** Уникальный ключ вкладки */
	tabKey: propTypes.string.isRequired,

	/** Заблокирована ли вкладка */
	disabled: propTypes.bool,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** @ignore */
	theme: propTypes.any
}
TabPane.defaultProps = {
	p: 2,
	disabled: false,
	theme: theme
}
TabPane.displayName = 'Tabs.TabPane'

function _templateObject4$1() {
	var data = taggedTemplateLiteral([
		'\n  display: inline-flex;\n  align-items: center;\n  font-size: ',
		';\n  padding-right: ',
		';\n  padding-left: ',
		';\n  height: ',
		';\n  cursor: pointer;\n  /* \u0427\u0442\u043E\u0431\u044B \u043D\u0435 "\u043F\u0440\u044B\u0433\u0430\u043B\u0438" \u043F\u0440\u0438 hover/active */\n  border-bottom: 1px solid ',
		';\n  ',
		'\n  ',
		'\n'
	])

	_templateObject4$1 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$1() {
	var data = taggedTemplateLiteral([
		'\n  justify-content: flex-start;\n  flex-direction: row;\n  font-size: ',
		';\n'
	])

	_templateObject3$1 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$2() {
	var data = taggedTemplateLiteral([
		'\n    cursor: not-allowed;\n    opacity: 0.4;\n  '
	])

	_templateObject2$2 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$b() {
	var data = taggedTemplateLiteral(['\n  ', '\n  :hover {\n    ', '\n  }\n'])

	_templateObject$b = function _templateObject() {
		return data
	}

	return data
}

var noop$3 = function noop() {}

var borderBottom = function borderBottom(props) {
	return css$3(
		_templateObject$b(),
		props.isActive &&
			'border-bottom: 1px solid '.concat(props.theme.colors.tabs.active),
		!props.disabled &&
			!props.isActive &&
			'border-bottom: 1px solid '.concat(props.theme.colors.tabs.hover)
	)
}

var isDisabled = function isDisabled(props) {
	return props.disabled && css$3(_templateObject2$2())
}

var TabsList = styled(Flex)(_templateObject3$1(), function(props) {
	return props.theme.fontSizes[1] + 'px'
})
var Tab = styled(Flex)(
	_templateObject4$1(),
	function(props) {
		return props.theme.fontSizes[1] + 'px'
	},
	themeGet('space[3]', '16px'),
	themeGet('space[3]', '16px'),
	themeGet('heights.medium', '48px'),
	function(props) {
		return props.theme.colors.semiLightGrey
	},
	borderBottom,
	isDisabled
)
/** Используется, если необходимо сгруппировать или разграничить содержимое страницы. */

var Tabs =
	/*#__PURE__*/
	(function(_React$Component) {
		inherits(Tabs, _React$Component)

		function Tabs(_props) {
			var _this

			classCallCheck(this, Tabs)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Tabs).call(this, _props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(newActiveKey) {
					_this.setState({
						activeKey: newActiveKey
					})

					_this.props.onChange && _this.props.onChange(newActiveKey)
				}
			)

			defineProperty(assertThisInitialized(_this), 'onTabClick', function(
				tabKey
			) {
				var activeKey = _this.state.activeKey

				if (tabKey !== activeKey) {
					_this.handleChange(tabKey)
				}
			})

			defineProperty(
				assertThisInitialized(_this),
				'getTabsItems',
				function() {
					var children = _this.props.children
					var activeKey = _this.state.activeKey
					return children.map(function(child) {
						var _child$props = child.props,
							tabKey = _child$props.tabKey,
							tab = _child$props.tab,
							disabled = _child$props.disabled
						return React__default.createElement(
							Tab,
							{
								isActive: activeKey === tabKey,
								onClick: disabled
									? noop$3
									: function() {
											return _this.onTabClick(tabKey)
									  },
								disabled: disabled
							},
							tab
						)
					})
				}
			)

			defineProperty(
				assertThisInitialized(_this),
				'getChildren',
				function() {
					var children = _this.props.children
					var activeKey = _this.state.activeKey
					return children.map(function(child) {
						var tabKey = child.props.tabKey
						var props = {
							isActive: activeKey === tabKey
						}
						return React__default.cloneElement(child, props)
					})
				}
			)

			_props.children.forEach(function(child) {
				if (typeof child.props.tabKey === 'undefined') {
					console.error(
						'<TabPane /> components must have an unique "tabKey" prop. Check <Tabs/> component children.'
					)
				}
			})

			var _props$children = _props.children,
				_children = _props$children === void 0 ? [] : _props$children

			var firstChildKey = _children[0].props && _children[0].props.tabKey
			_this.state = {
				activeKey:
					_this.props.activeKey ||
					_this.props.defaultActiveKey ||
					firstChildKey
			}
			return _this
		}

		createClass(
			Tabs,
			[
				{
					key: 'render',
					value: function render() {
						return React__default.createElement(
							Box$1,
							null,
							React__default.createElement(
								TabsList,
								null,
								this.getTabsItems()
							),
							this.getChildren()
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						if ('activeKey' in nextProps) {
							return {
								activeKey: nextProps.activeKey
							}
						}

						return null
					}
				}
			]
		)

		return Tabs
	})(React__default.Component)

Tabs.TabPane = TabPane
Tabs.propTypes = {
	/** Активная вкладка */
	activeKey: propTypes.string,

	/** Активная вкладка по умолчанию */
	defaultActiveKey: propTypes.string,

	/** Функция-хендлер */
	onChange: propTypes.func
	/** @component */
}

function _templateObject10() {
	var data = taggedTemplateLiteral(['\n  font-size: ', ';\n'])

	_templateObject10 = function _templateObject10() {
		return data
	}

	return data
}

function _templateObject9() {
	var data = taggedTemplateLiteral([
		'\n          left: 0%;\n          top: 50%;\n        '
	])

	_templateObject9 = function _templateObject9() {
		return data
	}

	return data
}

function _templateObject8() {
	var data = taggedTemplateLiteral([
		'\n          left: 100%;\n          top: 50%;\n        '
	])

	_templateObject8 = function _templateObject8() {
		return data
	}

	return data
}

function _templateObject7() {
	var data = taggedTemplateLiteral([
		'\n          left: 75%;\n          top: 0%;\n        '
	])

	_templateObject7 = function _templateObject7() {
		return data
	}

	return data
}

function _templateObject6() {
	var data = taggedTemplateLiteral([
		'\n          left: 25%;\n          top: 0%;\n        '
	])

	_templateObject6 = function _templateObject6() {
		return data
	}

	return data
}

function _templateObject5$1() {
	var data = taggedTemplateLiteral([
		'\n          left: 50%;\n          top: 0%;\n        '
	])

	_templateObject5$1 = function _templateObject5() {
		return data
	}

	return data
}

function _templateObject4$2() {
	var data = taggedTemplateLiteral([
		'\n          left: 75%;\n          top: 100%;\n        '
	])

	_templateObject4$2 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$2() {
	var data = taggedTemplateLiteral([
		'\n          left: 25%;\n          top: 100%;\n        '
	])

	_templateObject3$2 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$3() {
	var data = taggedTemplateLiteral([
		'\n        left: 50%;\n        top: 100%;\n      '
	])

	_templateObject2$3 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$c() {
	var data = taggedTemplateLiteral([
		'\n  position: relative;\n  font-family: ',
		';\n  font-size: ',
		';\n  padding: ',
		';\n  background-color: ',
		';\n  border-radius: ',
		";\n  opacity: 0.85;\n  animation: all 0.5s;\n  min-width: 50px;\n  text-align: center;\n\n  & p {\n    color: #ffffff;\n    margin: 0;\n  }\n\n  &:after {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    content: '';\n    transform: rotate(45deg);\n    background-color: ",
		';\n    margin: -4px 0 0 -4px;\n\n    ',
		'\n\n      ',
		'\n      ',
		'\n      ',
		'\n      ',
		'\n      ',
		'\n      ',
		'\n      ',
		'\n  }\n'
	])

	_templateObject$c = function _templateObject() {
		return data
	}

	return data
}
var Body = styled.div.attrs(function(props) {
	return {
		font: props.font,
		placement: props.placement
	}
})(
	_templateObject$c(),
	function(props) {
		return props.font
	},
	function(props) {
		return props.theme.fontSizes[0] + 'px'
	},
	function(props) {
		return ''
			.concat(props.theme.space[2], 'px ')
			.concat(props.theme.space[3], 'px')
	},
	function(props) {
		return props.theme.colors.black
	},
	function(props) {
		return props.theme.radii[2] + 'px'
	},
	function(props) {
		return props.theme.colors.black
	},
	function(props) {
		return props.placement === 'top' && css$3(_templateObject2$3())
	},
	function(props) {
		return props.placement === 'topLeft' && css$3(_templateObject3$2())
	},
	function(props) {
		return props.placement === 'topRight' && css$3(_templateObject4$2())
	},
	function(props) {
		return props.placement === 'bottom' && css$3(_templateObject5$1())
	},
	function(props) {
		return props.placement === 'bottomLeft' && css$3(_templateObject6())
	},
	function(props) {
		return props.placement === 'bottomRight' && css$3(_templateObject7())
	},
	function(props) {
		return props.placement === 'left' && css$3(_templateObject8())
	},
	function(props) {
		return props.placement === 'right' && css$3(_templateObject9())
	}
)
var Wrapper = styled.span(_templateObject10(), function(props) {
	return props.theme.fontSizes[1] + 'px'
})

var getAlign = function getAlign(placement) {
	switch (placement) {
		case 'left':
			return {
				offsetX: -8,
				offsetY: 0
			}

		case 'right':
			return {
				offsetX: 8,
				offsetY: 0
			}

		case 'bottom':
		case 'bottomRight':
		case 'bottomLeft':
			return {
				offsetX: 0,
				offsetY: 8
			}

		case 'topRight':
		case 'topLeft':
		case 'top':
			return {
				offsetX: 0,
				offsetY: -8
			}

		default:
			return {
				offsetX: 0,
				offsetY: 0
			}
	}
}
/** Применяется для вывода уточняющей информации во всплывающем окне */

var Tooltip =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Tooltip, _Component)

		function Tooltip() {
			classCallCheck(this, Tooltip)

			return possibleConstructorReturn(
				this,
				getPrototypeOf(Tooltip).apply(this, arguments)
			)
		}

		createClass(Tooltip, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						children = _this$props.children,
						events = _this$props.events,
						font = _this$props.font,
						placement = _this$props.placement,
						text = _this$props.text,
						transitionName = _this$props.transitionName
					var popupComponent = React__default.createElement(
						Body,
						{
							font: font,
							placement: placement
						},
						React__default.createElement('p', null, text)
					)
					return React__default.createElement(
						Positional,
						{
							align: getAlign(placement),
							events: events,
							placement: placement,
							popupComponent: popupComponent,
							transitionName: transitionName
						},
						React__default.createElement(Wrapper, null, children)
					)
				}
			}
		])

		return Tooltip
	})(Component)

Tooltip.propTypes = {
	/** Элемент, относительно которого будет позиционироваться тултип */
	children: propTypes.element,

	/** Ивенты, вызывающие появляение тултипа. Возможные ивенты - click, contextMenu, focus, hover */
	events: propTypes.arrayOf(propTypes.string),

	/** Шрифт, используемый в тултипе */
	font: propTypes.string,

	/** Позиционирование компонента относительно родительского компонента. Аргументы формируются исходя из параметра builtinPlacements */
	placement: propTypes.oneOf([
		'left',
		'right',
		'top',
		'bottom',
		'topLeft',
		'topRight',
		'bottomLeft',
		'bottomRight'
	]),

	/** Текст в тултипе */
	text: propTypes.string,

	/** Имя класса для анимаций. Например, rc-trigger-popup-zoom. Стандартная анимация убирается передачей null */
	transitionName: propTypes.string
}
Tooltip.defaultProps = {
	children: React__default.createElement('span', null, 'Default tooltip'),
	events: ['hover'],
	font: theme.font.main,
	placement: 'top',
	text: 'help',
	transitionName: 'rc-trigger-popup-fade',
	theme: theme
}
Tooltip.displayName = 'Tooltip'

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray

var isArray_1 = isArray

/** Detect free variable `global` from Node.js. */
var freeGlobal =
	typeof commonjsGlobal == 'object' &&
	commonjsGlobal &&
	commonjsGlobal.Object === Object &&
	commonjsGlobal

var _freeGlobal = freeGlobal

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self

/** Used as a reference to the global object. */
var root = _freeGlobal || freeSelf || Function('return this')()

var _root = root

/** Built-in value references. */
var Symbol$1 = _root.Symbol

var _Symbol = Symbol$1

/** Used for built-in method references. */
var objectProto = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto.hasOwnProperty

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
	var isOwn = hasOwnProperty$2.call(value, symToStringTag),
		tag = value[symToStringTag]

	try {
		value[symToStringTag] = undefined
		var unmasked = true
	} catch (e) {}

	var result = nativeObjectToString.call(value)
	if (unmasked) {
		if (isOwn) {
			value[symToStringTag] = tag
		} else {
			delete value[symToStringTag]
		}
	}
	return result
}

var _getRawTag = getRawTag

/** Used for built-in method references. */
var objectProto$1 = Object.prototype

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$1.toString

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
	return nativeObjectToString$1.call(value)
}

var _objectToString = objectToString

/** `Object#toString` result references. */
var nullTag = '[object Null]',
	undefinedTag = '[object Undefined]'

/** Built-in value references. */
var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
	if (value == null) {
		return value === undefined ? undefinedTag : nullTag
	}
	return symToStringTag$1 && symToStringTag$1 in Object(value)
		? _getRawTag(value)
		: _objectToString(value)
}

var _baseGetTag = baseGetTag

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
	return value != null && typeof value == 'object'
}

var isObjectLike_1 = isObjectLike

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]'

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol$1(value) {
	return (
		typeof value == 'symbol' ||
		(isObjectLike_1(value) && _baseGetTag(value) == symbolTag)
	)
}

var isSymbol_1 = isSymbol$1

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	reIsPlainProp = /^\w*$/

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
	if (isArray_1(value)) {
		return false
	}
	var type = typeof value
	if (
		type == 'number' ||
		type == 'symbol' ||
		type == 'boolean' ||
		value == null ||
		isSymbol_1(value)
	) {
		return true
	}
	return (
		reIsPlainProp.test(value) ||
		!reIsDeepProp.test(value) ||
		(object != null && value in Object(object))
	)
}

var _isKey = isKey

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
	var type = typeof value
	return value != null && (type == 'object' || type == 'function')
}

var isObject_1 = isObject

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
	funcTag = '[object Function]',
	genTag = '[object GeneratorFunction]',
	proxyTag = '[object Proxy]'

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
	if (!isObject_1(value)) {
		return false
	}
	// The use of `Object#toString` avoids issues with the `typeof` operator
	// in Safari 9 which returns 'object' for typed arrays and other constructors.
	var tag = _baseGetTag(value)
	return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag
}

var isFunction_1 = isFunction

/** Used to detect overreaching core-js shims. */
var coreJsData = _root['__core-js_shared__']

var _coreJsData = coreJsData

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
	var uid = /[^.]+$/.exec(
		(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO) || ''
	)
	return uid ? 'Symbol(src)_1.' + uid : ''
})()

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
	return !!maskSrcKey && maskSrcKey in func
}

var _isMasked = isMasked

/** Used for built-in method references. */
var funcProto = Function.prototype

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
	if (func != null) {
		try {
			return funcToString.call(func)
		} catch (e) {}
		try {
			return func + ''
		} catch (e) {}
	}
	return ''
}

var _toSource = toSource

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/

/** Used for built-in method references. */
var funcProto$1 = Function.prototype,
	objectProto$2 = Object.prototype

/** Used to resolve the decompiled source of functions. */
var funcToString$1 = funcProto$1.toString

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$2.hasOwnProperty

/** Used to detect if a method is native. */
var reIsNative = RegExp(
	'^' +
		funcToString$1
			.call(hasOwnProperty$3)
			.replace(reRegExpChar, '\\$&')
			.replace(
				/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
				'$1.*?'
			) +
		'$'
)

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
	if (!isObject_1(value) || _isMasked(value)) {
		return false
	}
	var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor
	return pattern.test(_toSource(value))
}

var _baseIsNative = baseIsNative

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
	return object == null ? undefined : object[key]
}

var _getValue = getValue

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
	var value = _getValue(object, key)
	return _baseIsNative(value) ? value : undefined
}

var _getNative = getNative

/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create')

var _nativeCreate = nativeCreate

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
	this.__data__ = _nativeCreate ? _nativeCreate(null) : {}
	this.size = 0
}

var _hashClear = hashClear

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
	var result = this.has(key) && delete this.__data__[key]
	this.size -= result ? 1 : 0
	return result
}

var _hashDelete = hashDelete

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__'

/** Used for built-in method references. */
var objectProto$3 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$4 = objectProto$3.hasOwnProperty

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
	var data = this.__data__
	if (_nativeCreate) {
		var result = data[key]
		return result === HASH_UNDEFINED ? undefined : result
	}
	return hasOwnProperty$4.call(data, key) ? data[key] : undefined
}

var _hashGet = hashGet

/** Used for built-in method references. */
var objectProto$4 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$5 = objectProto$4.hasOwnProperty

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
	var data = this.__data__
	return _nativeCreate
		? data[key] !== undefined
		: hasOwnProperty$5.call(data, key)
}

var _hashHas = hashHas

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$1 = '__lodash_hash_undefined__'

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
	var data = this.__data__
	this.size += this.has(key) ? 0 : 1
	data[key] = _nativeCreate && value === undefined ? HASH_UNDEFINED$1 : value
	return this
}

var _hashSet = hashSet

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
	var index = -1,
		length = entries == null ? 0 : entries.length

	this.clear()
	while (++index < length) {
		var entry = entries[index]
		this.set(entry[0], entry[1])
	}
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear
Hash.prototype['delete'] = _hashDelete
Hash.prototype.get = _hashGet
Hash.prototype.has = _hashHas
Hash.prototype.set = _hashSet

var _Hash = Hash

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
	this.__data__ = []
	this.size = 0
}

var _listCacheClear = listCacheClear

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
	return value === other || (value !== value && other !== other)
}

var eq_1 = eq

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
	var length = array.length
	while (length--) {
		if (eq_1(array[length][0], key)) {
			return length
		}
	}
	return -1
}

var _assocIndexOf = assocIndexOf

/** Used for built-in method references. */
var arrayProto = Array.prototype

/** Built-in value references. */
var splice = arrayProto.splice

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
	var data = this.__data__,
		index = _assocIndexOf(data, key)

	if (index < 0) {
		return false
	}
	var lastIndex = data.length - 1
	if (index == lastIndex) {
		data.pop()
	} else {
		splice.call(data, index, 1)
	}
	--this.size
	return true
}

var _listCacheDelete = listCacheDelete

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
	var data = this.__data__,
		index = _assocIndexOf(data, key)

	return index < 0 ? undefined : data[index][1]
}

var _listCacheGet = listCacheGet

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
	return _assocIndexOf(this.__data__, key) > -1
}

var _listCacheHas = listCacheHas

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
	var data = this.__data__,
		index = _assocIndexOf(data, key)

	if (index < 0) {
		++this.size
		data.push([key, value])
	} else {
		data[index][1] = value
	}
	return this
}

var _listCacheSet = listCacheSet

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
	var index = -1,
		length = entries == null ? 0 : entries.length

	this.clear()
	while (++index < length) {
		var entry = entries[index]
		this.set(entry[0], entry[1])
	}
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear
ListCache.prototype['delete'] = _listCacheDelete
ListCache.prototype.get = _listCacheGet
ListCache.prototype.has = _listCacheHas
ListCache.prototype.set = _listCacheSet

var _ListCache = ListCache

/* Built-in method references that are verified to be native. */
var Map = _getNative(_root, 'Map')

var _Map = Map

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
	this.size = 0
	this.__data__ = {
		hash: new _Hash(),
		map: new (_Map || _ListCache)(),
		string: new _Hash()
	}
}

var _mapCacheClear = mapCacheClear

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
	var type = typeof value
	return type == 'string' ||
		type == 'number' ||
		type == 'symbol' ||
		type == 'boolean'
		? value !== '__proto__'
		: value === null
}

var _isKeyable = isKeyable

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
	var data = map.__data__
	return _isKeyable(key)
		? data[typeof key == 'string' ? 'string' : 'hash']
		: data.map
}

var _getMapData = getMapData

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
	var result = _getMapData(this, key)['delete'](key)
	this.size -= result ? 1 : 0
	return result
}

var _mapCacheDelete = mapCacheDelete

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
	return _getMapData(this, key).get(key)
}

var _mapCacheGet = mapCacheGet

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
	return _getMapData(this, key).has(key)
}

var _mapCacheHas = mapCacheHas

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
	var data = _getMapData(this, key),
		size = data.size

	data.set(key, value)
	this.size += data.size == size ? 0 : 1
	return this
}

var _mapCacheSet = mapCacheSet

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
	var index = -1,
		length = entries == null ? 0 : entries.length

	this.clear()
	while (++index < length) {
		var entry = entries[index]
		this.set(entry[0], entry[1])
	}
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear
MapCache.prototype['delete'] = _mapCacheDelete
MapCache.prototype.get = _mapCacheGet
MapCache.prototype.has = _mapCacheHas
MapCache.prototype.set = _mapCacheSet

var _MapCache = MapCache

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function'

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
	if (
		typeof func != 'function' ||
		(resolver != null && typeof resolver != 'function')
	) {
		throw new TypeError(FUNC_ERROR_TEXT)
	}
	var memoized = function() {
		var args = arguments,
			key = resolver ? resolver.apply(this, args) : args[0],
			cache = memoized.cache

		if (cache.has(key)) {
			return cache.get(key)
		}
		var result = func.apply(this, args)
		memoized.cache = cache.set(key, result) || cache
		return result
	}
	memoized.cache = new (memoize.Cache || _MapCache)()
	return memoized
}

// Expose `MapCache`.
memoize.Cache = _MapCache

var memoize_1 = memoize

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
	var result = memoize_1(func, function(key) {
		if (cache.size === MAX_MEMOIZE_SIZE) {
			cache.clear()
		}
		return key
	})

	var cache = result.cache
	return result
}

var _memoizeCapped = memoizeCapped

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
	var result = []
	if (string.charCodeAt(0) === 46 /* . */) {
		result.push('')
	}
	string.replace(rePropName, function(match, number, quote, subString) {
		result.push(
			quote ? subString.replace(reEscapeChar, '$1') : number || match
		)
	})
	return result
})

var _stringToPath = stringToPath

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
	var index = -1,
		length = array == null ? 0 : array.length,
		result = Array(length)

	while (++index < length) {
		result[index] = iteratee(array[index], index, array)
	}
	return result
}

var _arrayMap = arrayMap

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
	symbolToString = symbolProto ? symbolProto.toString : undefined

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
	// Exit early for strings to avoid a performance hit in some environments.
	if (typeof value == 'string') {
		return value
	}
	if (isArray_1(value)) {
		// Recursively convert values (susceptible to call stack limits).
		return _arrayMap(value, baseToString) + ''
	}
	if (isSymbol_1(value)) {
		return symbolToString ? symbolToString.call(value) : ''
	}
	var result = value + ''
	return result == '0' && 1 / value == -INFINITY ? '-0' : result
}

var _baseToString = baseToString

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString$3(value) {
	return value == null ? '' : _baseToString(value)
}

var toString_1 = toString$3

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
	if (isArray_1(value)) {
		return value
	}
	return _isKey(value, object) ? [value] : _stringToPath(toString_1(value))
}

var _castPath = castPath

/** Used as references for various `Number` constants. */
var INFINITY$1 = 1 / 0

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
	if (typeof value == 'string' || isSymbol_1(value)) {
		return value
	}
	var result = value + ''
	return result == '0' && 1 / value == -INFINITY$1 ? '-0' : result
}

var _toKey = toKey

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
	path = _castPath(path, object)

	var index = 0,
		length = path.length

	while (object != null && index < length) {
		object = object[_toKey(path[index++])]
	}
	return index && index == length ? object : undefined
}

var _baseGet = baseGet

var defineProperty$5 = (function() {
	try {
		var func = _getNative(Object, 'defineProperty')
		func({}, '', {})
		return func
	} catch (e) {}
})()

var _defineProperty$2 = defineProperty$5

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
	if (key == '__proto__' && _defineProperty$2) {
		_defineProperty$2(object, key, {
			configurable: true,
			enumerable: true,
			value: value,
			writable: true
		})
	} else {
		object[key] = value
	}
}

var _baseAssignValue = baseAssignValue

/** Used for built-in method references. */
var objectProto$5 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$6 = objectProto$5.hasOwnProperty

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
	var objValue = object[key]
	if (
		!(hasOwnProperty$6.call(object, key) && eq_1(objValue, value)) ||
		(value === undefined && !(key in object))
	) {
		_baseAssignValue(object, key, value)
	}
}

var _assignValue = assignValue

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
	var type = typeof value
	length = length == null ? MAX_SAFE_INTEGER : length

	return (
		!!length &&
		(type == 'number' || (type != 'symbol' && reIsUint.test(value))) &&
		(value > -1 && value % 1 == 0 && value < length)
	)
}

var _isIndex = isIndex

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
	if (!isObject_1(object)) {
		return object
	}
	path = _castPath(path, object)

	var index = -1,
		length = path.length,
		lastIndex = length - 1,
		nested = object

	while (nested != null && ++index < length) {
		var key = _toKey(path[index]),
			newValue = value

		if (index != lastIndex) {
			var objValue = nested[key]
			newValue = customizer
				? customizer(objValue, key, nested)
				: undefined
			if (newValue === undefined) {
				newValue = isObject_1(objValue)
					? objValue
					: _isIndex(path[index + 1])
					? []
					: {}
			}
		}
		_assignValue(nested, key, newValue)
		nested = nested[key]
	}
	return object
}

var _baseSet = baseSet

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
	var index = -1,
		length = paths.length,
		result = {}

	while (++index < length) {
		var path = paths[index],
			value = _baseGet(object, path)

		if (predicate(value, path)) {
			_baseSet(result, _castPath(path, object), value)
		}
	}
	return result
}

var _basePickBy = basePickBy

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
	return object != null && key in Object(object)
}

var _baseHasIn = baseHasIn

/** `Object#toString` result references. */
var argsTag = '[object Arguments]'

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
	return isObjectLike_1(value) && _baseGetTag(value) == argsTag
}

var _baseIsArguments = baseIsArguments

/** Used for built-in method references. */
var objectProto$6 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$7 = objectProto$6.hasOwnProperty

/** Built-in value references. */
var propertyIsEnumerable = objectProto$6.propertyIsEnumerable

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(
	(function() {
		return arguments
	})()
)
	? _baseIsArguments
	: function(value) {
			return (
				isObjectLike_1(value) &&
				hasOwnProperty$7.call(value, 'callee') &&
				!propertyIsEnumerable.call(value, 'callee')
			)
	  }

var isArguments_1 = isArguments

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
	return (
		typeof value == 'number' &&
		value > -1 &&
		value % 1 == 0 &&
		value <= MAX_SAFE_INTEGER$1
	)
}

var isLength_1 = isLength

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
	path = _castPath(path, object)

	var index = -1,
		length = path.length,
		result = false

	while (++index < length) {
		var key = _toKey(path[index])
		if (!(result = object != null && hasFunc(object, key))) {
			break
		}
		object = object[key]
	}
	if (result || ++index != length) {
		return result
	}
	length = object == null ? 0 : object.length
	return (
		!!length &&
		isLength_1(length) &&
		_isIndex(key, length) &&
		(isArray_1(object) || isArguments_1(object))
	)
}

var _hasPath = hasPath

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
	return object != null && _hasPath(object, path, _baseHasIn)
}

var hasIn_1 = hasIn

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
	return _basePickBy(object, paths, function(value, path) {
		return hasIn_1(object, path)
	})
}

var _basePick = basePick

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
	var index = -1,
		length = values.length,
		offset = array.length

	while (++index < length) {
		array[offset + index] = values[index]
	}
	return array
}

var _arrayPush = arrayPush

/** Built-in value references. */
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
	return (
		isArray_1(value) ||
		isArguments_1(value) ||
		!!(spreadableSymbol && value && value[spreadableSymbol])
	)
}

var _isFlattenable = isFlattenable

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
	var index = -1,
		length = array.length

	predicate || (predicate = _isFlattenable)
	result || (result = [])

	while (++index < length) {
		var value = array[index]
		if (depth > 0 && predicate(value)) {
			if (depth > 1) {
				// Recursively flatten arrays (susceptible to call stack limits).
				baseFlatten(value, depth - 1, predicate, isStrict, result)
			} else {
				_arrayPush(result, value)
			}
		} else if (!isStrict) {
			result[result.length] = value
		}
	}
	return result
}

var _baseFlatten = baseFlatten

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
	var length = array == null ? 0 : array.length
	return length ? _baseFlatten(array, 1) : []
}

var flatten_1 = flatten

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
	switch (args.length) {
		case 0:
			return func.call(thisArg)
		case 1:
			return func.call(thisArg, args[0])
		case 2:
			return func.call(thisArg, args[0], args[1])
		case 3:
			return func.call(thisArg, args[0], args[1], args[2])
	}
	return func.apply(thisArg, args)
}

var _apply = apply

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
	start = nativeMax(start === undefined ? func.length - 1 : start, 0)
	return function() {
		var args = arguments,
			index = -1,
			length = nativeMax(args.length - start, 0),
			array = Array(length)

		while (++index < length) {
			array[index] = args[start + index]
		}
		index = -1
		var otherArgs = Array(start + 1)
		while (++index < start) {
			otherArgs[index] = args[index]
		}
		otherArgs[start] = transform(array)
		return _apply(func, this, otherArgs)
	}
}

var _overRest = overRest

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
	return function() {
		return value
	}
}

var constant_1 = constant

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
	return value
}

var identity_1 = identity

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty$2
	? identity_1
	: function(func, string) {
			return _defineProperty$2(func, 'toString', {
				configurable: true,
				enumerable: false,
				value: constant_1(string),
				writable: true
			})
	  }

var _baseSetToString = baseSetToString

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
	HOT_SPAN = 16

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
	var count = 0,
		lastCalled = 0

	return function() {
		var stamp = nativeNow(),
			remaining = HOT_SPAN - (stamp - lastCalled)

		lastCalled = stamp
		if (remaining > 0) {
			if (++count >= HOT_COUNT) {
				return arguments[0]
			}
		} else {
			count = 0
		}
		return func.apply(undefined, arguments)
	}
}

var _shortOut = shortOut

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString)

var _setToString = setToString

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
	return _setToString(_overRest(func, undefined, flatten_1), func + '')
}

var _flatRest = flatRest

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = _flatRest(function(object, paths) {
	return object == null ? {} : _basePick(object, paths)
})

var pick_1 = pick

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
	this.__data__ = new _ListCache()
	this.size = 0
}

var _stackClear = stackClear

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
	var data = this.__data__,
		result = data['delete'](key)

	this.size = data.size
	return result
}

var _stackDelete = stackDelete

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
	return this.__data__.get(key)
}

var _stackGet = stackGet

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
	return this.__data__.has(key)
}

var _stackHas = stackHas

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
	var data = this.__data__
	if (data instanceof _ListCache) {
		var pairs = data.__data__
		if (!_Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
			pairs.push([key, value])
			this.size = ++data.size
			return this
		}
		data = this.__data__ = new _MapCache(pairs)
	}
	data.set(key, value)
	this.size = data.size
	return this
}

var _stackSet = stackSet

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
	var data = (this.__data__ = new _ListCache(entries))
	this.size = data.size
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear
Stack.prototype['delete'] = _stackDelete
Stack.prototype.get = _stackGet
Stack.prototype.has = _stackHas
Stack.prototype.set = _stackSet

var _Stack = Stack

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
	var index = -1,
		length = array == null ? 0 : array.length

	while (++index < length) {
		if (iteratee(array[index], index, array) === false) {
			break
		}
	}
	return array
}

var _arrayEach = arrayEach

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
	var isNew = !object
	object || (object = {})

	var index = -1,
		length = props.length

	while (++index < length) {
		var key = props[index]

		var newValue = customizer
			? customizer(object[key], source[key], key, object, source)
			: undefined

		if (newValue === undefined) {
			newValue = source[key]
		}
		if (isNew) {
			_baseAssignValue(object, key, newValue)
		} else {
			_assignValue(object, key, newValue)
		}
	}
	return object
}

var _copyObject = copyObject

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
	var index = -1,
		result = Array(n)

	while (++index < n) {
		result[index] = iteratee(index)
	}
	return result
}

var _baseTimes = baseTimes

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
	return false
}

var stubFalse_1 = stubFalse

var isBuffer_1 = createCommonjsModule(function(module, exports) {
	/** Detect free variable `exports`. */
	var freeExports = exports && !exports.nodeType && exports

	/** Detect free variable `module`. */
	var freeModule =
		freeExports &&
		'object' == 'object' &&
		module &&
		!module.nodeType &&
		module

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports

	/** Built-in value references. */
	var Buffer = moduleExports ? _root.Buffer : undefined

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse_1

	module.exports = isBuffer
})

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]',
	arrayTag = '[object Array]',
	boolTag = '[object Boolean]',
	dateTag = '[object Date]',
	errorTag = '[object Error]',
	funcTag$1 = '[object Function]',
	mapTag = '[object Map]',
	numberTag = '[object Number]',
	objectTag = '[object Object]',
	regexpTag = '[object RegExp]',
	setTag = '[object Set]',
	stringTag = '[object String]',
	weakMapTag = '[object WeakMap]'

var arrayBufferTag = '[object ArrayBuffer]',
	dataViewTag = '[object DataView]',
	float32Tag = '[object Float32Array]',
	float64Tag = '[object Float64Array]',
	int8Tag = '[object Int8Array]',
	int16Tag = '[object Int16Array]',
	int32Tag = '[object Int32Array]',
	uint8Tag = '[object Uint8Array]',
	uint8ClampedTag = '[object Uint8ClampedArray]',
	uint16Tag = '[object Uint16Array]',
	uint32Tag = '[object Uint32Array]'

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {}
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[
	int8Tag
] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[
	uint8Tag
] = typedArrayTags[uint8ClampedTag] = typedArrayTags[
	uint16Tag
] = typedArrayTags[uint32Tag] = true
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] = typedArrayTags[
	arrayBufferTag
] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[
	dateTag
] = typedArrayTags[errorTag] = typedArrayTags[funcTag$1] = typedArrayTags[
	mapTag
] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[
	regexpTag
] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[
	weakMapTag
] = false

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
	return (
		isObjectLike_1(value) &&
		isLength_1(value.length) &&
		!!typedArrayTags[_baseGetTag(value)]
	)
}

var _baseIsTypedArray = baseIsTypedArray

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
	return function(value) {
		return func(value)
	}
}

var _baseUnary = baseUnary

var _nodeUtil = createCommonjsModule(function(module, exports) {
	/** Detect free variable `exports`. */
	var freeExports = exports && !exports.nodeType && exports

	/** Detect free variable `module`. */
	var freeModule =
		freeExports &&
		'object' == 'object' &&
		module &&
		!module.nodeType &&
		module

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && _freeGlobal.process

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
		try {
			// Use `util.types` for Node.js 10+.
			var types =
				freeModule &&
				freeModule.require &&
				freeModule.require('util').types

			if (types) {
				return types
			}

			// Legacy `process.binding('util')` for Node.js < 10.
			return (
				freeProcess &&
				freeProcess.binding &&
				freeProcess.binding('util')
			)
		} catch (e) {}
	})()

	module.exports = nodeUtil
})

/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray
	? _baseUnary(nodeIsTypedArray)
	: _baseIsTypedArray

var isTypedArray_1 = isTypedArray

/** Used for built-in method references. */
var objectProto$7 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$8 = objectProto$7.hasOwnProperty

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
	var isArr = isArray_1(value),
		isArg = !isArr && isArguments_1(value),
		isBuff = !isArr && !isArg && isBuffer_1(value),
		isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),
		skipIndexes = isArr || isArg || isBuff || isType,
		result = skipIndexes ? _baseTimes(value.length, String) : [],
		length = result.length

	for (var key in value) {
		if (
			(inherited || hasOwnProperty$8.call(value, key)) &&
			!(
				skipIndexes &&
				// Safari 9 has enumerable `arguments.length` in strict mode.
				(key == 'length' ||
					// Node.js 0.10 has enumerable non-index properties on buffers.
					(isBuff && (key == 'offset' || key == 'parent')) ||
					// PhantomJS 2 has enumerable non-index properties on typed arrays.
					(isType &&
						(key == 'buffer' ||
							key == 'byteLength' ||
							key == 'byteOffset')) ||
					// Skip index properties.
					_isIndex(key, length))
			)
		) {
			result.push(key)
		}
	}
	return result
}

var _arrayLikeKeys = arrayLikeKeys

/** Used for built-in method references. */
var objectProto$8 = Object.prototype

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
	var Ctor = value && value.constructor,
		proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$8

	return value === proto
}

var _isPrototype = isPrototype

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
	return function(arg) {
		return func(transform(arg))
	}
}

var _overArg = overArg

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = _overArg(Object.keys, Object)

var _nativeKeys = nativeKeys

/** Used for built-in method references. */
var objectProto$9 = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$9 = objectProto$9.hasOwnProperty

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
	if (!_isPrototype(object)) {
		return _nativeKeys(object)
	}
	var result = []
	for (var key in Object(object)) {
		if (hasOwnProperty$9.call(object, key) && key != 'constructor') {
			result.push(key)
		}
	}
	return result
}

var _baseKeys = baseKeys

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
	return value != null && isLength_1(value.length) && !isFunction_1(value)
}

var isArrayLike_1 = isArrayLike

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
	return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object)
}

var keys_1 = keys

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
	return object && _copyObject(source, keys_1(source), object)
}

var _baseAssign = baseAssign

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
	var result = []
	if (object != null) {
		for (var key in Object(object)) {
			result.push(key)
		}
	}
	return result
}

var _nativeKeysIn = nativeKeysIn

/** Used for built-in method references. */
var objectProto$a = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$a = objectProto$a.hasOwnProperty

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
	if (!isObject_1(object)) {
		return _nativeKeysIn(object)
	}
	var isProto = _isPrototype(object),
		result = []

	for (var key in object) {
		if (
			!(
				key == 'constructor' &&
				(isProto || !hasOwnProperty$a.call(object, key))
			)
		) {
			result.push(key)
		}
	}
	return result
}

var _baseKeysIn = baseKeysIn

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn$1(object) {
	return isArrayLike_1(object)
		? _arrayLikeKeys(object, true)
		: _baseKeysIn(object)
}

var keysIn_1 = keysIn$1

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
	return object && _copyObject(source, keysIn_1(source), object)
}

var _baseAssignIn = baseAssignIn

var _cloneBuffer = createCommonjsModule(function(module, exports) {
	/** Detect free variable `exports`. */
	var freeExports = exports && !exports.nodeType && exports

	/** Detect free variable `module`. */
	var freeModule =
		freeExports &&
		'object' == 'object' &&
		module &&
		!module.nodeType &&
		module

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports

	/** Built-in value references. */
	var Buffer = moduleExports ? _root.Buffer : undefined,
		allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
		if (isDeep) {
			return buffer.slice()
		}
		var length = buffer.length,
			result = allocUnsafe
				? allocUnsafe(length)
				: new buffer.constructor(length)

		buffer.copy(result)
		return result
	}

	module.exports = cloneBuffer
})

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
	var index = -1,
		length = source.length

	array || (array = Array(length))
	while (++index < length) {
		array[index] = source[index]
	}
	return array
}

var _copyArray = copyArray

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
	var index = -1,
		length = array == null ? 0 : array.length,
		resIndex = 0,
		result = []

	while (++index < length) {
		var value = array[index]
		if (predicate(value, index, array)) {
			result[resIndex++] = value
		}
	}
	return result
}

var _arrayFilter = arrayFilter

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
	return []
}

var stubArray_1 = stubArray

/** Used for built-in method references. */
var objectProto$b = Object.prototype

/** Built-in value references. */
var propertyIsEnumerable$1 = objectProto$b.propertyIsEnumerable

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols
	? stubArray_1
	: function(object) {
			if (object == null) {
				return []
			}
			object = Object(object)
			return _arrayFilter(nativeGetSymbols(object), function(symbol) {
				return propertyIsEnumerable$1.call(object, symbol)
			})
	  }

var _getSymbols = getSymbols

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
	return _copyObject(source, _getSymbols(source), object)
}

var _copySymbols = copySymbols

/** Built-in value references. */
var getPrototype = _overArg(Object.getPrototypeOf, Object)

var _getPrototype = getPrototype

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols$1 = Object.getOwnPropertySymbols

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols$1
	? stubArray_1
	: function(object) {
			var result = []
			while (object) {
				_arrayPush(result, _getSymbols(object))
				object = _getPrototype(object)
			}
			return result
	  }

var _getSymbolsIn = getSymbolsIn

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
	return _copyObject(source, _getSymbolsIn(source), object)
}

var _copySymbolsIn = copySymbolsIn

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	var result = keysFunc(object)
	return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object))
}

var _baseGetAllKeys = baseGetAllKeys

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
	return _baseGetAllKeys(object, keys_1, _getSymbols)
}

var _getAllKeys = getAllKeys

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
	return _baseGetAllKeys(object, keysIn_1, _getSymbolsIn)
}

var _getAllKeysIn = getAllKeysIn

/* Built-in method references that are verified to be native. */
var DataView = _getNative(_root, 'DataView')

var _DataView = DataView

/* Built-in method references that are verified to be native. */
var Promise$1 = _getNative(_root, 'Promise')

var _Promise = Promise$1

/* Built-in method references that are verified to be native. */
var Set = _getNative(_root, 'Set')

var _Set = Set

/* Built-in method references that are verified to be native. */
var WeakMap$1 = _getNative(_root, 'WeakMap')

var _WeakMap = WeakMap$1

/** `Object#toString` result references. */
var mapTag$1 = '[object Map]',
	objectTag$1 = '[object Object]',
	promiseTag = '[object Promise]',
	setTag$1 = '[object Set]',
	weakMapTag$1 = '[object WeakMap]'

var dataViewTag$1 = '[object DataView]'

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
	mapCtorString = _toSource(_Map),
	promiseCtorString = _toSource(_Promise),
	setCtorString = _toSource(_Set),
	weakMapCtorString = _toSource(_WeakMap)

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if (
	(_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag$1) ||
	(_Map && getTag(new _Map()) != mapTag$1) ||
	(_Promise && getTag(_Promise.resolve()) != promiseTag) ||
	(_Set && getTag(new _Set()) != setTag$1) ||
	(_WeakMap && getTag(new _WeakMap()) != weakMapTag$1)
) {
	getTag = function(value) {
		var result = _baseGetTag(value),
			Ctor = result == objectTag$1 ? value.constructor : undefined,
			ctorString = Ctor ? _toSource(Ctor) : ''

		if (ctorString) {
			switch (ctorString) {
				case dataViewCtorString:
					return dataViewTag$1
				case mapCtorString:
					return mapTag$1
				case promiseCtorString:
					return promiseTag
				case setCtorString:
					return setTag$1
				case weakMapCtorString:
					return weakMapTag$1
			}
		}
		return result
	}
}

var _getTag = getTag

/** Used for built-in method references. */
var objectProto$c = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$b = objectProto$c.hasOwnProperty

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
	var length = array.length,
		result = new array.constructor(length)

	// Add properties assigned by `RegExp#exec`.
	if (
		length &&
		typeof array[0] == 'string' &&
		hasOwnProperty$b.call(array, 'index')
	) {
		result.index = array.index
		result.input = array.input
	}
	return result
}

var _initCloneArray = initCloneArray

/** Built-in value references. */
var Uint8Array = _root.Uint8Array

var _Uint8Array = Uint8Array

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
	var result = new arrayBuffer.constructor(arrayBuffer.byteLength)
	new _Uint8Array(result).set(new _Uint8Array(arrayBuffer))
	return result
}

var _cloneArrayBuffer = cloneArrayBuffer

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
	var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer
	return new dataView.constructor(
		buffer,
		dataView.byteOffset,
		dataView.byteLength
	)
}

var _cloneDataView = cloneDataView

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
	var result = new regexp.constructor(regexp.source, reFlags.exec(regexp))
	result.lastIndex = regexp.lastIndex
	return result
}

var _cloneRegExp = cloneRegExp

/** Used to convert symbols to primitives and strings. */
var symbolProto$1 = _Symbol ? _Symbol.prototype : undefined,
	symbolValueOf = symbolProto$1 ? symbolProto$1.valueOf : undefined

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
	return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {}
}

var _cloneSymbol = cloneSymbol

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
	var buffer = isDeep
		? _cloneArrayBuffer(typedArray.buffer)
		: typedArray.buffer
	return new typedArray.constructor(
		buffer,
		typedArray.byteOffset,
		typedArray.length
	)
}

var _cloneTypedArray = cloneTypedArray

/** `Object#toString` result references. */
var boolTag$1 = '[object Boolean]',
	dateTag$1 = '[object Date]',
	mapTag$2 = '[object Map]',
	numberTag$1 = '[object Number]',
	regexpTag$1 = '[object RegExp]',
	setTag$2 = '[object Set]',
	stringTag$1 = '[object String]',
	symbolTag$1 = '[object Symbol]'

var arrayBufferTag$1 = '[object ArrayBuffer]',
	dataViewTag$2 = '[object DataView]',
	float32Tag$1 = '[object Float32Array]',
	float64Tag$1 = '[object Float64Array]',
	int8Tag$1 = '[object Int8Array]',
	int16Tag$1 = '[object Int16Array]',
	int32Tag$1 = '[object Int32Array]',
	uint8Tag$1 = '[object Uint8Array]',
	uint8ClampedTag$1 = '[object Uint8ClampedArray]',
	uint16Tag$1 = '[object Uint16Array]',
	uint32Tag$1 = '[object Uint32Array]'

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
	var Ctor = object.constructor
	switch (tag) {
		case arrayBufferTag$1:
			return _cloneArrayBuffer(object)

		case boolTag$1:
		case dateTag$1:
			return new Ctor(+object)

		case dataViewTag$2:
			return _cloneDataView(object, isDeep)

		case float32Tag$1:
		case float64Tag$1:
		case int8Tag$1:
		case int16Tag$1:
		case int32Tag$1:
		case uint8Tag$1:
		case uint8ClampedTag$1:
		case uint16Tag$1:
		case uint32Tag$1:
			return _cloneTypedArray(object, isDeep)

		case mapTag$2:
			return new Ctor()

		case numberTag$1:
		case stringTag$1:
			return new Ctor(object)

		case regexpTag$1:
			return _cloneRegExp(object)

		case setTag$2:
			return new Ctor()

		case symbolTag$1:
			return _cloneSymbol(object)
	}
}

var _initCloneByTag = initCloneByTag

/** Built-in value references. */
var objectCreate = Object.create

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
	function object() {}
	return function(proto) {
		if (!isObject_1(proto)) {
			return {}
		}
		if (objectCreate) {
			return objectCreate(proto)
		}
		object.prototype = proto
		var result = new object()
		object.prototype = undefined
		return result
	}
})()

var _baseCreate = baseCreate

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
	return typeof object.constructor == 'function' && !_isPrototype(object)
		? _baseCreate(_getPrototype(object))
		: {}
}

var _initCloneObject = initCloneObject

/** `Object#toString` result references. */
var mapTag$3 = '[object Map]'

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
	return isObjectLike_1(value) && _getTag(value) == mapTag$3
}

var _baseIsMap = baseIsMap

/* Node.js helper references. */
var nodeIsMap = _nodeUtil && _nodeUtil.isMap

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap

var isMap_1 = isMap

/** `Object#toString` result references. */
var setTag$3 = '[object Set]'

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
	return isObjectLike_1(value) && _getTag(value) == setTag$3
}

var _baseIsSet = baseIsSet

/* Node.js helper references. */
var nodeIsSet = _nodeUtil && _nodeUtil.isSet

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet

var isSet_1 = isSet

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
	CLONE_FLAT_FLAG = 2,
	CLONE_SYMBOLS_FLAG = 4

/** `Object#toString` result references. */
var argsTag$2 = '[object Arguments]',
	arrayTag$1 = '[object Array]',
	boolTag$2 = '[object Boolean]',
	dateTag$2 = '[object Date]',
	errorTag$1 = '[object Error]',
	funcTag$2 = '[object Function]',
	genTag$1 = '[object GeneratorFunction]',
	mapTag$4 = '[object Map]',
	numberTag$2 = '[object Number]',
	objectTag$2 = '[object Object]',
	regexpTag$2 = '[object RegExp]',
	setTag$4 = '[object Set]',
	stringTag$2 = '[object String]',
	symbolTag$2 = '[object Symbol]',
	weakMapTag$2 = '[object WeakMap]'

var arrayBufferTag$2 = '[object ArrayBuffer]',
	dataViewTag$3 = '[object DataView]',
	float32Tag$2 = '[object Float32Array]',
	float64Tag$2 = '[object Float64Array]',
	int8Tag$2 = '[object Int8Array]',
	int16Tag$2 = '[object Int16Array]',
	int32Tag$2 = '[object Int32Array]',
	uint8Tag$2 = '[object Uint8Array]',
	uint8ClampedTag$2 = '[object Uint8ClampedArray]',
	uint16Tag$2 = '[object Uint16Array]',
	uint32Tag$2 = '[object Uint32Array]'

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {}
cloneableTags[argsTag$2] = cloneableTags[arrayTag$1] = cloneableTags[
	arrayBufferTag$2
] = cloneableTags[dataViewTag$3] = cloneableTags[boolTag$2] = cloneableTags[
	dateTag$2
] = cloneableTags[float32Tag$2] = cloneableTags[float64Tag$2] = cloneableTags[
	int8Tag$2
] = cloneableTags[int16Tag$2] = cloneableTags[int32Tag$2] = cloneableTags[
	mapTag$4
] = cloneableTags[numberTag$2] = cloneableTags[objectTag$2] = cloneableTags[
	regexpTag$2
] = cloneableTags[setTag$4] = cloneableTags[stringTag$2] = cloneableTags[
	symbolTag$2
] = cloneableTags[uint8Tag$2] = cloneableTags[
	uint8ClampedTag$2
] = cloneableTags[uint16Tag$2] = cloneableTags[uint32Tag$2] = true
cloneableTags[errorTag$1] = cloneableTags[funcTag$2] = cloneableTags[
	weakMapTag$2
] = false

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
	var result,
		isDeep = bitmask & CLONE_DEEP_FLAG,
		isFlat = bitmask & CLONE_FLAT_FLAG,
		isFull = bitmask & CLONE_SYMBOLS_FLAG

	if (customizer) {
		result = object
			? customizer(value, key, object, stack)
			: customizer(value)
	}
	if (result !== undefined) {
		return result
	}
	if (!isObject_1(value)) {
		return value
	}
	var isArr = isArray_1(value)
	if (isArr) {
		result = _initCloneArray(value)
		if (!isDeep) {
			return _copyArray(value, result)
		}
	} else {
		var tag = _getTag(value),
			isFunc = tag == funcTag$2 || tag == genTag$1

		if (isBuffer_1(value)) {
			return _cloneBuffer(value, isDeep)
		}
		if (tag == objectTag$2 || tag == argsTag$2 || (isFunc && !object)) {
			result = isFlat || isFunc ? {} : _initCloneObject(value)
			if (!isDeep) {
				return isFlat
					? _copySymbolsIn(value, _baseAssignIn(result, value))
					: _copySymbols(value, _baseAssign(result, value))
			}
		} else {
			if (!cloneableTags[tag]) {
				return object ? value : {}
			}
			result = _initCloneByTag(value, tag, isDeep)
		}
	}
	// Check for circular references and return its corresponding clone.
	stack || (stack = new _Stack())
	var stacked = stack.get(value)
	if (stacked) {
		return stacked
	}
	stack.set(value, result)

	if (isSet_1(value)) {
		value.forEach(function(subValue) {
			result.add(
				baseClone(subValue, bitmask, customizer, subValue, value, stack)
			)
		})

		return result
	}

	if (isMap_1(value)) {
		value.forEach(function(subValue, key) {
			result.set(
				key,
				baseClone(subValue, bitmask, customizer, key, value, stack)
			)
		})

		return result
	}

	var keysFunc = isFull
		? isFlat
			? _getAllKeysIn
			: _getAllKeys
		: isFlat
		? keysIn
		: keys_1

	var props = isArr ? undefined : keysFunc(value)
	_arrayEach(props || value, function(subValue, key) {
		if (props) {
			key = subValue
			subValue = value[key]
		}
		// Recursively populate clone (susceptible to call stack limits).
		_assignValue(
			result,
			key,
			baseClone(subValue, bitmask, customizer, key, value, stack)
		)
	})
	return result
}

var _baseClone = baseClone

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
	var length = array == null ? 0 : array.length
	return length ? array[length - 1] : undefined
}

var last_1 = last

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
	var index = -1,
		length = array.length

	if (start < 0) {
		start = -start > length ? 0 : length + start
	}
	end = end > length ? length : end
	if (end < 0) {
		end += length
	}
	length = start > end ? 0 : (end - start) >>> 0
	start >>>= 0

	var result = Array(length)
	while (++index < length) {
		result[index] = array[index + start]
	}
	return result
}

var _baseSlice = baseSlice

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
	return path.length < 2 ? object : _baseGet(object, _baseSlice(path, 0, -1))
}

var _parent = parent

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
	path = _castPath(path, object)
	object = _parent(object, path)
	return object == null || delete object[_toKey(last_1(path))]
}

var _baseUnset = baseUnset

/** `Object#toString` result references. */
var objectTag$3 = '[object Object]'

/** Used for built-in method references. */
var funcProto$2 = Function.prototype,
	objectProto$d = Object.prototype

/** Used to resolve the decompiled source of functions. */
var funcToString$2 = funcProto$2.toString

/** Used to check objects for own properties. */
var hasOwnProperty$c = objectProto$d.hasOwnProperty

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString$2.call(Object)

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
	if (!isObjectLike_1(value) || _baseGetTag(value) != objectTag$3) {
		return false
	}
	var proto = _getPrototype(value)
	if (proto === null) {
		return true
	}
	var Ctor = hasOwnProperty$c.call(proto, 'constructor') && proto.constructor
	return (
		typeof Ctor == 'function' &&
		Ctor instanceof Ctor &&
		funcToString$2.call(Ctor) == objectCtorString
	)
}

var isPlainObject_1 = isPlainObject

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
	return isPlainObject_1(value) ? undefined : value
}

var _customOmitClone = customOmitClone

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG$1 = 1,
	CLONE_FLAT_FLAG$1 = 2,
	CLONE_SYMBOLS_FLAG$1 = 4

/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */
var omit = _flatRest(function(object, paths) {
	var result = {}
	if (object == null) {
		return result
	}
	var isDeep = false
	paths = _arrayMap(paths, function(path) {
		path = _castPath(path, object)
		isDeep || (isDeep = path.length > 1)
		return path
	})
	_copyObject(object, _getAllKeysIn(object), result)
	if (isDeep) {
		result = _baseClone(
			result,
			CLONE_DEEP_FLAG$1 | CLONE_FLAT_FLAG$1 | CLONE_SYMBOLS_FLAG$1,
			_customOmitClone
		)
	}
	var length = paths.length
	while (length--) {
		_baseUnset(result, paths[length])
	}
	return result
})

var omit_1 = omit

function _templateObject4$3() {
	var data = taggedTemplateLiteral([
		'\n  display: inline-flex;\n  align-content: center;\n'
	])

	_templateObject4$3 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$3() {
	var data = taggedTemplateLiteral([
		'\n  display: inline-flex;\n  align-items: center;\n  cursor: ',
		';\n  ',
		'\n'
	])

	_templateObject3$3 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$4() {
	var data = taggedTemplateLiteral([
		'\n  justify-content: center;\n  align-items: center;\n  border-radius: ',
		'px;\n  transition: all ',
		';\n  ',
		'\n  ',
		'\n  ',
		'\n\n  ',
		':focus + & {\n    box-shadow: 0 0 0 1px ',
		';\n  }\n'
	])

	_templateObject2$4 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$d() {
	var data = taggedTemplateLiteral([
		'\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n'
	])

	_templateObject$d = function _templateObject() {
		return data
	}

	return data
}

var size$1 = function size(_ref) {
	var _ref$size = _ref.size,
		size = _ref$size === void 0 ? 'medium' : _ref$size
	var sizes = {
		small: {
			width: '14px',
			height: '14px'
		},
		medium: {
			width: '16px',
			height: '16px'
		},
		large: {
			width: '20px',
			height: '20px'
		}
	}
	return css$3(sizes[size])
}

var background = function background(_ref3) {
	var checked = _ref3.checked,
		disabled = _ref3.disabled,
		rest = objectWithoutProperties(_ref3, ['checked', 'disabled'])

	var checkbox = rest.theme.colors.checkbox

	var getColor = function getColor(checked, disabled) {
		if (disabled) {
			return checkbox.disabled
		}

		return checked ? checkbox.checked : checkbox.unchecked
	}

	return 'background: '.concat(getColor(checked, disabled))
}

var border = function border(_ref4) {
	var checked = _ref4.checked,
		disabled = _ref4.disabled,
		rest = objectWithoutProperties(_ref4, ['checked', 'disabled'])

	var colors = rest.theme.colors
	return !(checked || disabled) && 'border: 1px solid '.concat(colors.black)
}

var CheckboxInput = styled.input.attrs({
	type: 'checkbox'
})(_templateObject$d())
var StyledCheckbox = styled(Flex)(
	_templateObject2$4(),
	themeGet('radii[0]', 4),
	themeGet('duration.fast', 300),
	size$1,
	background,
	border,
	CheckboxInput,
	function(props) {
		return props.theme.colors.blue
	}
)
var Label = styled.label(
	_templateObject3$3(),
	function(props) {
		return props.disabled ? 'not-allowed' : 'pointer'
	},
	space
)
var CheckboxContainer = styled(Flex)(_templateObject4$3())
/** Используется для выбора одного или нескольких значений из представленных вариантов */

var Checkbox =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Checkbox, _Component)

		function Checkbox(props) {
			var _this

			classCallCheck(this, Checkbox)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Checkbox).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					var checked = event.target.checked

					_this.setState({
						checked: checked
					})

					_this.props.onChange && _this.props.onChange(checked, event)
				}
			)

			_this.state = {
				checked:
					typeof props.checked !== 'undefined' ? props.checked : false
			}
			return _this
		}

		createClass(
			Checkbox,
			[
				{
					key: 'render',
					value: function render() {
						return React__default.createElement(
							Label,
							this.props,
							React__default.createElement(
								CheckboxContainer,
								{
									onChange: this.handleChange
								},
								React__default.createElement(
									CheckboxInput,
									_extends_1(
										{},
										omit_1(this.props, [
											'onChange',
											'value'
										]),
										{
											checked: this.state.checked,
											readOnly: true
										}
									)
								),
								React__default.createElement(
									StyledCheckbox,
									{
										checked: this.state.checked,
										size: this.props.size,
										disabled: this.props.disabled
									},
									this.state.checked
										? React__default.createElement(Icon$1, {
												name: 'check',
												color: 'white',
												size: 0
										  })
										: React__default.createElement(Icon$1, {
												name: 'check',
												color: 'white',
												hidden: true,
												size: 0
										  })
								)
							),
							React__default.createElement(
								Text$1,
								{
									inline: true,
									regular: true,
									ml: 2
								},
								this.props.label
							)
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						// If controlled by form
						if (nextProps[FIELD_DATA_PROP]) {
							return {
								checked: nextProps.value
							}
						}

						if ('checked' in nextProps) {
							return {
								checked: nextProps.checked
							}
						}

						return null
					}
				}
			]
		)

		return Checkbox
	})(Component)

Checkbox.propTypes = {
	/** Состояние чекбокса - выбран или нет. */
	checked: propTypes.bool,

	/** Возможность редактирования */
	disabled: propTypes.bool,

	/** Текст чекбокса. */
	label: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.node
	]),

	/** Размер чекбокса */
	size: propTypes.oneOf(['small', 'medium', 'large']),

	/** Функция - хендлер, вызывается при клике на чекбокс */
	onChange: propTypes.func,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	])
	/** @component */
}

function _templateObject5$2() {
	var data = taggedTemplateLiteral(['\n  color: ', ';\n  font-size: ', ';\n'])

	_templateObject5$2 = function _templateObject5() {
		return data
	}

	return data
}

function _templateObject4$4() {
	var data = taggedTemplateLiteral(['\n  margin-top: ', 'px;\n  ', '\n'])

	_templateObject4$4 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$4() {
	var data = taggedTemplateLiteral([
		'\n  width: ',
		';\n  & > label {\n    font-size: ',
		'px;\n  }\n  ',
		'\n'
	])

	_templateObject3$4 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$5() {
	var data = taggedTemplateLiteral([
		'\n    margin-bottom: ',
		'px;\n    /* \u041F\u043E\u0434\u0445\u043E\u0434 \u0435\u0441\u043B\u0438 \u0447\u0435\u0441\u0442\u043D\u043E \u0442\u0430\u043A \u0441\u0435\u0431\u0435, \u043D\u043E \u044F \u0431\u0435\u0437 \u043F\u043E\u043D\u044F\u0442\u0438\u044F \u043A\u0430\u043A \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043B\u0443\u0447\u0448\u0435\n      #TODO: \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C border: error \u043A \u043E\u0441\u0442\u0430\u043B\u044C\u043D\u044B\u043C \u0442\u0438\u043F\u0430\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432? \u041A\u0430\u043A?\n    */\n    & input {\n      border-color: ',
		';\n      /* Dunno, I just fly the drone\u2122 */\n      background: ',
		';\n    }\n    ',
		' {\n      border-color: ',
		';\n    }\n  '
	])

	_templateObject2$5 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$e() {
	var data = taggedTemplateLiteral([
		'\n    & > ',
		":after {\n      content: ' *';\n      display: inline-block;\n      margin-right: ",
		'px;\n      margin-left: ',
		'px;\n      line-height: 1;\n      color: ',
		';\n      font-size: ',
		'px;\n    }\n  '
	])

	_templateObject$e = function _templateObject() {
		return data
	}

	return data
}
/*Общий комментарий:
  Большая часть кода взята из antd Form и Form.Item
  В основном все изменения:
  1) Замена родных дом элементов на styled компоненты + примитивы
  2) CSS => CSS-in-JS.

  Магия тут остается, но я постарался разобраться и откомментить непрозрачные моменты.
*/

function intersperseSpace(list) {
	return list
		.reduce(function(current, item) {
			return [].concat(toConsumableArray(current), [' ', item])
		}, [])
		.slice(1)
}

var withRequiredAsterisk = function withRequiredAsterisk(props) {
	return (
		props.required &&
		css$3(
			_templateObject$e(),
			Label$1,
			props.theme.space[1],
			props.theme.space[1],
			props.theme.colors.error,
			props.theme.fontSizes[2]
		)
	)
}

var hasError = function hasError(props) {
	return (
		props.help &&
		css$3(
			_templateObject2$5(),
			props.theme.space[2],
			props.theme.colors.error,
			props.theme.colors.white,
			StyledCheckbox,
			props.theme.colors.error
		)
	)
}

var LabelWrapper = styled(Box$1)(
	_templateObject3$4(),
	function(props) {
		return props.inline ? '20%' : '100%'
	},
	function(props) {
		return props.theme.fontSizes[1]
	},
	withRequiredAsterisk
)
var ControlWrapper = styled(Box$1)(
	_templateObject4$4(),
	function(props) {
		return props.theme.space[2]
	},
	hasError
)
var HelpWrapper = styled(Box$1)(
	_templateObject5$2(),
	function(props) {
		return props.theme.colors.error
	},
	function(props) {
		return props.theme.fontSizes[1]
	}
)

var Label$1 = function Label(_ref) {
	var label = _ref.label,
		labelProps = _ref.labelProps,
		id = _ref.id,
		required = _ref.required,
		onLabelClick = _ref.onLabelClick
	return (
		Boolean(label) &&
		React__default.createElement(
			LabelWrapper,
			_extends_1(
				{
					key: 'label',
					required: required
				},
				labelProps
			),
			React__default.createElement(
				'label',
				{
					htmlFor: id,
					title: typeof label === 'string' ? label : '',
					onClick: onLabelClick
				},
				label
			)
		)
	)
}

var Help = function Help(_ref2) {
	var children = _ref2.children
	return React__default.createElement(
		HelpWrapper,
		{
			className: 'help',
			key: 'help',
			color: 'red'
		},
		children
	)
}

var FormItem =
	/*#__PURE__*/
	(function(_React$Component) {
		inherits(FormItem, _React$Component)

		function FormItem() {
			var _getPrototypeOf2

			var _this

			classCallCheck(this, FormItem)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = possibleConstructorReturn(
				this,
				(_getPrototypeOf2 = getPrototypeOf(FormItem)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			defineProperty(
				assertThisInitialized(_this),
				'isRequired',
				function() {
					var required = _this.props.required

					if (required !== undefined) {
						return required
					}

					if (_this.getOnlyControl()) {
						var meta = _this.getMeta() || {}
						var validate = meta.validate || []
						return validate
							.filter(function(item) {
								return !!item.rules
							})
							.some(function(item) {
								return item.rules.some(function(rule) {
									return rule.required
								})
							})
					}

					return false
				}
			)

			return _this
		}

		createClass(FormItem, [
			{
				key: 'getControls',
				value: function getControls(children, recursively) {
					var controls = []
					var childrenArray = React__default.Children.toArray(
						children
					)

					for (var i = 0; i < childrenArray.length; i++) {
						if (!recursively && controls.length > 0) {
							break
						}

						var child = childrenArray[i]

						if (
							child.type &&
							(child.type === FormItem ||
								child.type.displayName === 'FormItem')
						) {
							continue
						}

						if (!child.props) {
							continue
						}

						if (FIELD_META_PROP in child.props) {
							// And means FIELD_DATA_PROP in child.props, too.
							controls.push(child)
						} else if (child.props.children) {
							controls = controls.concat(
								this.getControls(
									child.props.children,
									recursively
								)
							)
						}
					}

					return controls
				}
				/** Возвращает ноду элемента, который вводит данные, например - <Input /> */
			},
			{
				key: 'getOnlyControl',
				value: function getOnlyControl() {
					var child = this.getControls(this.props.children, false)[0]
					return child !== undefined ? child : null
				}
			},
			{
				key: 'getChildProp',
				value: function getChildProp(prop) {
					var child = this.getOnlyControl()
					return child && child.props && child.props[prop]
				}
			},
			{
				key: 'getId',
				value: function getId() {
					return this.getChildProp('id')
				}
				/**
     * Забирает мета-данные из пропсов контрол элемента, заинженченных rc-form.
     * returns: {
     * initialValue,
        name,
        originalProps,
        ref,
        rules,
        trigger,
        validate,
        valuePropName,
     * }
     */
			},
			{
				key: 'getMeta',
				value: function getMeta() {
					return this.getChildProp(FIELD_META_PROP)
				}
				/**
     * Забирает данные из пропсов контрол элемента, заинженченных rc-form.
     * returns {
     * dirty: Boolean,
        errors: Array.of(
          {
            message, field
          }
        ),
        name: String,
        validating: Boolean,
        value: String|Number|Boolean ?
     * }
     */
			},
			{
				key: 'getField',
				value: function getField() {
					return this.getChildProp(FIELD_DATA_PROP)
				}
			},
			{
				key: 'getHelpMessage',
				value: function getHelpMessage() {
					var help = this.props.help

					if (help === undefined && this.getOnlyControl()) {
						var field = this.getField()
						var errors = this.getField().errors

						if (errors) {
							return intersperseSpace(
								errors.map(function(e, index) {
									var node = null

									if (React__default.isValidElement(e)) {
										node = e
									} else if (
										React__default.isValidElement(e.message)
									) {
										node = e.message
									}

									return node
										? React__default.cloneElement(node, {
												key: index
										  })
										: e.message
								})
							)
						}

						return ''
					}

					return help
				}
			},
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						style = _this$props.style,
						children = _this$props.children,
						props = objectWithoutProperties(_this$props, [
							'style',
							'children'
						])

					var help = this.getHelpMessage()
					return React__default.createElement(
						Box$1,
						_extends_1(
							{
								style: style,
								help: help
							},
							props
						),
						React__default.createElement(
							Label$1,
							_extends_1(
								{},
								pick_1(this.props, ['label', 'labelProps']),
								{
									id: this.props.id || this.getId(),
									required: this.isRequired(),
									onLabelClick: this.onLabelClick
								}
							)
						),
						React__default.createElement(
							ControlWrapper,
							_extends_1({}, this.props.controlProps, {
								help: help
							}),
							children,
							help &&
								React__default.createElement(Help, null, help)
						)
					)
				}
			}
		])

		return FormItem
	})(React__default.Component)

FormItem.defaultProps = {}
FormItem.propTypes = {
	/** Стили обертки. */
	style: propTypes.object,

	/** Содержимое лейбла */
	label: propTypes.oneOfType([propTypes.string, propTypes.element]),

	/** Пропсы для обертки лейбла */
	labelProps: propTypes.object,

	/** Пропсы для обертки элемента, в который вводят данные */
	controlProps: propTypes.object,

	/** Обязательность поля. */
	required: propTypes.bool,

	/** Однострочное поле. */
	inline: propTypes.bool
	/** @component */
}

var _extends$3 =
	Object.assign ||
	function(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i]
			for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key]
				}
			}
		}
		return target
	}

var _typeof$2 =
	typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
		? function(obj) {
				return typeof obj
		  }
		: function(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol
					? 'symbol'
					: typeof obj
		  }

var RE_NUM$1 = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source

function getClientPosition$1(elem) {
	var box = undefined
	var x = undefined
	var y = undefined
	var doc = elem.ownerDocument
	var body = doc.body
	var docElem = doc && doc.documentElement
	// 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
	box = elem.getBoundingClientRect()

	// 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
	// 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
	// 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin

	x = box.left
	y = box.top

	// In IE, most of the time, 2 extra pixels are added to the top and left
	// due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	// IE6 standards mode, this border can be overridden by setting the
	// document element's border to zero -- thus, we cannot rely on the
	// offset always being 2 pixels.

	// In quirks mode, the offset can be determined by querying the body's
	// clientLeft/clientTop, but in standards mode, it is found by querying
	// the document element's clientLeft/clientTop.  Since we already called
	// getClientBoundingRect we have already forced a reflow, so it is not
	// too expensive just to query them all.

	// ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
	// 窗口边框标准是设 documentElement ,quirks 时设置 body
	// 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
	// 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
	// 标准 ie 下 docElem.clientTop 就是 border-top
	// ie7 html 即窗口边框改变不了。永远为 2
	// 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0

	x -= docElem.clientLeft || body.clientLeft || 0
	y -= docElem.clientTop || body.clientTop || 0

	return {
		left: x,
		top: y
	}
}

function getScroll$1(w, top) {
	var ret = w['page' + (top ? 'Y' : 'X') + 'Offset']
	var method = 'scroll' + (top ? 'Top' : 'Left')
	if (typeof ret !== 'number') {
		var d = w.document
		// ie6,7,8 standard mode
		ret = d.documentElement[method]
		if (typeof ret !== 'number') {
			// quirks mode
			ret = d.body[method]
		}
	}
	return ret
}

function getScrollLeft$1(w) {
	return getScroll$1(w)
}

function getScrollTop$1(w) {
	return getScroll$1(w, true)
}

function getOffset$1(el) {
	var pos = getClientPosition$1(el)
	var doc = el.ownerDocument
	var w = doc.defaultView || doc.parentWindow
	pos.left += getScrollLeft$1(w)
	pos.top += getScrollTop$1(w)
	return pos
}
function _getComputedStyle$1(elem, name, computedStyle_) {
	var val = ''
	var d = elem.ownerDocument
	var computedStyle =
		computedStyle_ || d.defaultView.getComputedStyle(elem, null)

	// https://github.com/kissyteam/kissy/issues/61
	if (computedStyle) {
		val = computedStyle.getPropertyValue(name) || computedStyle[name]
	}

	return val
}

var _RE_NUM_NO_PX$1 = new RegExp('^(' + RE_NUM$1 + ')(?!px)[a-z%]+$', 'i')
var RE_POS$1 = /^(top|right|bottom|left)$/
var CURRENT_STYLE$1 = 'currentStyle'
var RUNTIME_STYLE$1 = 'runtimeStyle'
var LEFT$1 = 'left'
var PX$1 = 'px'

function _getComputedStyleIE$1(elem, name) {
	// currentStyle maybe null
	// http://msdn.microsoft.com/en-us/library/ms535231.aspx
	var ret = elem[CURRENT_STYLE$1] && elem[CURRENT_STYLE$1][name]

	// 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
	// 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
	// 在 ie 下不对，需要直接用 offset 方式
	// borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了

	// From the awesome hack by Dean Edwards
	// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	// If we're not dealing with a regular pixel number
	// but a number that has a weird ending, we need to convert it to pixels
	// exclude left right for relativity
	if (_RE_NUM_NO_PX$1.test(ret) && !RE_POS$1.test(name)) {
		// Remember the original values
		var style = elem.style
		var left = style[LEFT$1]
		var rsLeft = elem[RUNTIME_STYLE$1][LEFT$1]

		// prevent flashing of content
		elem[RUNTIME_STYLE$1][LEFT$1] = elem[CURRENT_STYLE$1][LEFT$1]

		// Put in the new values to get a computed value out
		style[LEFT$1] = name === 'fontSize' ? '1em' : ret || 0
		ret = style.pixelLeft + PX$1

		// Revert the changed values
		style[LEFT$1] = left

		elem[RUNTIME_STYLE$1][LEFT$1] = rsLeft
	}
	return ret === '' ? 'auto' : ret
}

var getComputedStyleX$1 = undefined
if (typeof window !== 'undefined') {
	getComputedStyleX$1 = window.getComputedStyle
		? _getComputedStyle$1
		: _getComputedStyleIE$1
}

function each$1(arr, fn) {
	for (var i = 0; i < arr.length; i++) {
		fn(arr[i])
	}
}

function isBorderBoxFn$1(elem) {
	return getComputedStyleX$1(elem, 'boxSizing') === 'border-box'
}

var BOX_MODELS$1 = ['margin', 'border', 'padding']
var CONTENT_INDEX$1 = -1
var PADDING_INDEX$1 = 2
var BORDER_INDEX$1 = 1
var MARGIN_INDEX$1 = 0

function swap$1(elem, options, callback) {
	var old = {}
	var style = elem.style
	var name = undefined

	// Remember the old values, and insert the new ones
	for (name in options) {
		if (options.hasOwnProperty(name)) {
			old[name] = style[name]
			style[name] = options[name]
		}
	}

	callback.call(elem)

	// Revert the old values
	for (name in options) {
		if (options.hasOwnProperty(name)) {
			style[name] = old[name]
		}
	}
}

function getPBMWidth$1(elem, props, which) {
	var value = 0
	var prop = undefined
	var j = undefined
	var i = undefined
	for (j = 0; j < props.length; j++) {
		prop = props[j]
		if (prop) {
			for (i = 0; i < which.length; i++) {
				var cssProp = undefined
				if (prop === 'border') {
					cssProp = prop + which[i] + 'Width'
				} else {
					cssProp = prop + which[i]
				}
				value += parseFloat(getComputedStyleX$1(elem, cssProp)) || 0
			}
		}
	}
	return value
}

/**
 * A crude way of determining if an object is a window
 * @member util
 */
function isWindow$2(obj) {
	// must use == for ie8
	/* eslint eqeqeq:0 */
	return obj != null && obj == obj.window
}

var domUtils$1 = {}

each$1(['Width', 'Height'], function(name) {
	domUtils$1['doc' + name] = function(refWin) {
		var d = refWin.document
		return Math.max(
			// firefox chrome documentElement.scrollHeight< body.scrollHeight
			// ie standard mode : documentElement.scrollHeight> body.scrollHeight
			d.documentElement['scroll' + name],
			// quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
			d.body['scroll' + name],
			domUtils$1['viewport' + name](d)
		)
	}

	domUtils$1['viewport' + name] = function(win) {
		// pc browser includes scrollbar in window.innerWidth
		var prop = 'client' + name
		var doc = win.document
		var body = doc.body
		var documentElement = doc.documentElement
		var documentElementProp = documentElement[prop]
		// 标准模式取 documentElement
		// backcompat 取 body
		return (
			(doc.compatMode === 'CSS1Compat' && documentElementProp) ||
			(body && body[prop]) ||
			documentElementProp
		)
	}
})

/*
 得到元素的大小信息
 @param elem
 @param name
 @param {String} [extra]  'padding' : (css width) + padding
 'border' : (css width) + padding + border
 'margin' : (css width) + padding + border + margin
 */
function getWH$1(elem, name, extra) {
	if (isWindow$2(elem)) {
		return name === 'width'
			? domUtils$1.viewportWidth(elem)
			: domUtils$1.viewportHeight(elem)
	} else if (elem.nodeType === 9) {
		return name === 'width'
			? domUtils$1.docWidth(elem)
			: domUtils$1.docHeight(elem)
	}
	var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom']
	var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight
	var computedStyle = getComputedStyleX$1(elem)
	var isBorderBox = isBorderBoxFn$1(elem)
	var cssBoxValue = 0
	if (borderBoxValue == null || borderBoxValue <= 0) {
		borderBoxValue = undefined
		// Fall back to computed then un computed css if necessary
		cssBoxValue = getComputedStyleX$1(elem, name)
		if (cssBoxValue == null || Number(cssBoxValue) < 0) {
			cssBoxValue = elem.style[name] || 0
		}
		// Normalize '', auto, and prepare for extra
		cssBoxValue = parseFloat(cssBoxValue) || 0
	}
	if (extra === undefined) {
		extra = isBorderBox ? BORDER_INDEX$1 : CONTENT_INDEX$1
	}
	var borderBoxValueOrIsBorderBox =
		borderBoxValue !== undefined || isBorderBox
	var val = borderBoxValue || cssBoxValue
	if (extra === CONTENT_INDEX$1) {
		if (borderBoxValueOrIsBorderBox) {
			return val - getPBMWidth$1(elem, ['border', 'padding'], which)
		}
		return cssBoxValue
	}
	if (borderBoxValueOrIsBorderBox) {
		var padding =
			extra === PADDING_INDEX$1
				? -getPBMWidth$1(elem, ['border'], which)
				: getPBMWidth$1(elem, ['margin'], which)
		return val + (extra === BORDER_INDEX$1 ? 0 : padding)
	}
	return cssBoxValue + getPBMWidth$1(elem, BOX_MODELS$1.slice(extra), which)
}

var cssShow$1 = {
	position: 'absolute',
	visibility: 'hidden',
	display: 'block'
}

// fix #119 : https://github.com/kissyteam/kissy/issues/119
function getWHIgnoreDisplay$1(elem) {
	var val = undefined
	var args = arguments
	// in case elem is window
	// elem.offsetWidth === undefined
	if (elem.offsetWidth !== 0) {
		val = getWH$1.apply(undefined, args)
	} else {
		swap$1(elem, cssShow$1, function() {
			val = getWH$1.apply(undefined, args)
		})
	}
	return val
}

function css$1(el, name, v) {
	var value = v
	if (
		(typeof name === 'undefined' ? 'undefined' : _typeof$2(name)) ===
		'object'
	) {
		for (var i in name) {
			if (name.hasOwnProperty(i)) {
				css$1(el, i, name[i])
			}
		}
		return undefined
	}
	if (typeof value !== 'undefined') {
		if (typeof value === 'number') {
			value += 'px'
		}
		el.style[name] = value
		return undefined
	}
	return getComputedStyleX$1(el, name)
}

each$1(['width', 'height'], function(name) {
	var first = name.charAt(0).toUpperCase() + name.slice(1)
	domUtils$1['outer' + first] = function(el, includeMargin) {
		return (
			el &&
			getWHIgnoreDisplay$1(
				el,
				name,
				includeMargin ? MARGIN_INDEX$1 : BORDER_INDEX$1
			)
		)
	}
	var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom']

	domUtils$1[name] = function(elem, val) {
		if (val !== undefined) {
			if (elem) {
				var computedStyle = getComputedStyleX$1(elem)
				var isBorderBox = isBorderBoxFn$1(elem)
				if (isBorderBox) {
					val += getPBMWidth$1(elem, ['padding', 'border'], which)
				}
				return css$1(elem, name, val)
			}
			return undefined
		}
		return elem && getWHIgnoreDisplay$1(elem, name, CONTENT_INDEX$1)
	}
})

// 设置 elem 相对 elem.ownerDocument 的坐标
function setOffset$1(elem, offset) {
	// set position first, in-case top/left are set even on static elem
	if (css$1(elem, 'position') === 'static') {
		elem.style.position = 'relative'
	}

	var old = getOffset$1(elem)
	var ret = {}
	var current = undefined
	var key = undefined

	for (key in offset) {
		if (offset.hasOwnProperty(key)) {
			current = parseFloat(css$1(elem, key)) || 0
			ret[key] = current + offset[key] - old[key]
		}
	}
	css$1(elem, ret)
}

var util$1 = _extends$3(
	{
		getWindow: function getWindow(node) {
			var doc = node.ownerDocument || node
			return doc.defaultView || doc.parentWindow
		},
		offset: function offset(el, value) {
			if (typeof value !== 'undefined') {
				setOffset$1(el, value)
			} else {
				return getOffset$1(el)
			}
		},

		isWindow: isWindow$2,
		each: each$1,
		css: css$1,
		clone: function clone(obj) {
			var ret = {}
			for (var i in obj) {
				if (obj.hasOwnProperty(i)) {
					ret[i] = obj[i]
				}
			}
			var overflow = obj.overflow
			if (overflow) {
				for (var i in obj) {
					if (obj.hasOwnProperty(i)) {
						ret.overflow[i] = obj.overflow[i]
					}
				}
			}
			return ret
		},
		scrollLeft: function scrollLeft(w, v) {
			if (isWindow$2(w)) {
				if (v === undefined) {
					return getScrollLeft$1(w)
				}
				window.scrollTo(v, getScrollTop$1(w))
			} else {
				if (v === undefined) {
					return w.scrollLeft
				}
				w.scrollLeft = v
			}
		},
		scrollTop: function scrollTop(w, v) {
			if (isWindow$2(w)) {
				if (v === undefined) {
					return getScrollTop$1(w)
				}
				window.scrollTo(getScrollLeft$1(w), v)
			} else {
				if (v === undefined) {
					return w.scrollTop
				}
				w.scrollTop = v
			}
		},

		viewportWidth: 0,
		viewportHeight: 0
	},
	domUtils$1
)

function scrollIntoView(elem, container, config) {
	config = config || {}
	// document 归一化到 window
	if (container.nodeType === 9) {
		container = util$1.getWindow(container)
	}

	var allowHorizontalScroll = config.allowHorizontalScroll
	var onlyScrollIfNeeded = config.onlyScrollIfNeeded
	var alignWithTop = config.alignWithTop
	var alignWithLeft = config.alignWithLeft
	var offsetTop = config.offsetTop || 0
	var offsetLeft = config.offsetLeft || 0
	var offsetBottom = config.offsetBottom || 0
	var offsetRight = config.offsetRight || 0

	allowHorizontalScroll =
		allowHorizontalScroll === undefined ? true : allowHorizontalScroll

	var isWin = util$1.isWindow(container)
	var elemOffset = util$1.offset(elem)
	var eh = util$1.outerHeight(elem)
	var ew = util$1.outerWidth(elem)
	var containerOffset = undefined
	var ch = undefined
	var cw = undefined
	var containerScroll = undefined
	var diffTop = undefined
	var diffBottom = undefined
	var win = undefined
	var winScroll = undefined
	var ww = undefined
	var wh = undefined

	if (isWin) {
		win = container
		wh = util$1.height(win)
		ww = util$1.width(win)
		winScroll = {
			left: util$1.scrollLeft(win),
			top: util$1.scrollTop(win)
		}
		// elem 相对 container 可视视窗的距离
		diffTop = {
			left: elemOffset.left - winScroll.left - offsetLeft,
			top: elemOffset.top - winScroll.top - offsetTop
		}
		diffBottom = {
			left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,
			top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom
		}
		containerScroll = winScroll
	} else {
		containerOffset = util$1.offset(container)
		ch = container.clientHeight
		cw = container.clientWidth
		containerScroll = {
			left: container.scrollLeft,
			top: container.scrollTop
		}
		// elem 相对 container 可视视窗的距离
		// 注意边框, offset 是边框到根节点
		diffTop = {
			left:
				elemOffset.left -
				(containerOffset.left +
					(parseFloat(util$1.css(container, 'borderLeftWidth')) ||
						0)) -
				offsetLeft,
			top:
				elemOffset.top -
				(containerOffset.top +
					(parseFloat(util$1.css(container, 'borderTopWidth')) ||
						0)) -
				offsetTop
		}
		diffBottom = {
			left:
				elemOffset.left +
				ew -
				(containerOffset.left +
					cw +
					(parseFloat(util$1.css(container, 'borderRightWidth')) ||
						0)) +
				offsetRight,
			top:
				elemOffset.top +
				eh -
				(containerOffset.top +
					ch +
					(parseFloat(util$1.css(container, 'borderBottomWidth')) ||
						0)) +
				offsetBottom
		}
	}

	if (diffTop.top < 0 || diffBottom.top > 0) {
		// 强制向上
		if (alignWithTop === true) {
			util$1.scrollTop(container, containerScroll.top + diffTop.top)
		} else if (alignWithTop === false) {
			util$1.scrollTop(container, containerScroll.top + diffBottom.top)
		} else {
			// 自动调整
			if (diffTop.top < 0) {
				util$1.scrollTop(container, containerScroll.top + diffTop.top)
			} else {
				util$1.scrollTop(
					container,
					containerScroll.top + diffBottom.top
				)
			}
		}
	} else {
		if (!onlyScrollIfNeeded) {
			alignWithTop = alignWithTop === undefined ? true : !!alignWithTop
			if (alignWithTop) {
				util$1.scrollTop(container, containerScroll.top + diffTop.top)
			} else {
				util$1.scrollTop(
					container,
					containerScroll.top + diffBottom.top
				)
			}
		}
	}

	if (allowHorizontalScroll) {
		if (diffTop.left < 0 || diffBottom.left > 0) {
			// 强制向上
			if (alignWithLeft === true) {
				util$1.scrollLeft(
					container,
					containerScroll.left + diffTop.left
				)
			} else if (alignWithLeft === false) {
				util$1.scrollLeft(
					container,
					containerScroll.left + diffBottom.left
				)
			} else {
				// 自动调整
				if (diffTop.left < 0) {
					util$1.scrollLeft(
						container,
						containerScroll.left + diffTop.left
					)
				} else {
					util$1.scrollLeft(
						container,
						containerScroll.left + diffBottom.left
					)
				}
			}
		} else {
			if (!onlyScrollIfNeeded) {
				alignWithLeft =
					alignWithLeft === undefined ? true : !!alignWithLeft
				if (alignWithLeft) {
					util$1.scrollLeft(
						container,
						containerScroll.left + diffTop.left
					)
				} else {
					util$1.scrollLeft(
						container,
						containerScroll.left + diffBottom.left
					)
				}
			}
		}
	}
}

var domScrollIntoView = scrollIntoView

var lib$1 = domScrollIntoView

/** Used for built-in method references. */
var objectProto$e = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$d = objectProto$e.hasOwnProperty

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
	return object != null && hasOwnProperty$d.call(object, key)
}

var _baseHas = baseHas

/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has$2(object, path) {
	return object != null && _hasPath(object, path, _baseHas)
}

var has_1 = has$2

// call something on iterator step with safe closing on error

var _iterCall = function(iterator, fn, value, entries) {
	try {
		return entries ? fn(_anObject(value)[0], value[1]) : fn(value)
		// 7.4.6 IteratorClose(iterator, completion)
	} catch (e) {
		var ret = iterator['return']
		if (ret !== undefined) _anObject(ret.call(iterator))
		throw e
	}
}

// check on default Array iterator

var ITERATOR$1 = _wks('iterator')
var ArrayProto = Array.prototype

var _isArrayIter = function(it) {
	return (
		it !== undefined &&
		(_iterators.Array === it || ArrayProto[ITERATOR$1] === it)
	)
}

var _createProperty = function(object, index, value) {
	if (index in object) _objectDp.f(object, index, _propertyDesc(0, value))
	else object[index] = value
}

// getting tag from 19.1.3.6 Object.prototype.toString()

var TAG$1 = _wks('toStringTag')
// ES3 wrong here
var ARG =
	_cof(
		(function() {
			return arguments
		})()
	) == 'Arguments'

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key) {
	try {
		return it[key]
	} catch (e) {
		/* empty */
	}
}

var _classof = function(it) {
	var O, T, B
	return it === undefined
		? 'Undefined'
		: it === null
		? 'Null'
		: // @@toStringTag case
		typeof (T = tryGet((O = Object(it)), TAG$1)) == 'string'
		? T
		: // builtinTag case
		ARG
		? _cof(O)
		: // ES3 arguments fallback
		(B = _cof(O)) == 'Object' && typeof O.callee == 'function'
		? 'Arguments'
		: B
}

var ITERATOR$2 = _wks('iterator')

var core_getIteratorMethod = (_core.getIteratorMethod = function(it) {
	if (it != undefined)
		return it[ITERATOR$2] || it['@@iterator'] || _iterators[_classof(it)]
})

var ITERATOR$3 = _wks('iterator')
var SAFE_CLOSING = false

try {
	var riter = [7][ITERATOR$3]()
	riter['return'] = function() {
		SAFE_CLOSING = true
	}
	// eslint-disable-next-line no-throw-literal
	Array.from(riter, function() {
		throw 2
	})
} catch (e) {
	/* empty */
}

var _iterDetect = function(exec, skipClosing) {
	if (!skipClosing && !SAFE_CLOSING) return false
	var safe = false
	try {
		var arr = [7]
		var iter = arr[ITERATOR$3]()
		iter.next = function() {
			return {done: (safe = true)}
		}
		arr[ITERATOR$3] = function() {
			return iter
		}
		exec(arr)
	} catch (e) {
		/* empty */
	}
	return safe
}

_export(
	_export.S +
		_export.F *
			!_iterDetect(function(iter) {
				Array.from(iter)
			}),
	'Array',
	{
		// 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
		from: function from(
			arrayLike /* , mapfn = undefined, thisArg = undefined */
		) {
			var O = _toObject(arrayLike)
			var C = typeof this == 'function' ? this : Array
			var aLen = arguments.length
			var mapfn = aLen > 1 ? arguments[1] : undefined
			var mapping = mapfn !== undefined
			var index = 0
			var iterFn = core_getIteratorMethod(O)
			var length, result, step, iterator
			if (mapping)
				mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2)
			// if object isn't iterable or it's array with default iterator - use simple case
			if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {
				for (
					iterator = iterFn.call(O), result = new C();
					!(step = iterator.next()).done;
					index++
				) {
					_createProperty(
						result,
						index,
						mapping
							? _iterCall(
									iterator,
									mapfn,
									[step.value, index],
									true
							  )
							: step.value
					)
				}
			} else {
				length = _toLength(O.length)
				for (result = new C(length); length > index; index++) {
					_createProperty(
						result,
						index,
						mapping ? mapfn(O[index], index) : O[index]
					)
				}
			}
			result.length = index
			return result
		}
	}
)

var from_1 = _core.Array.from

var from_1$1 = createCommonjsModule(function(module) {
	module.exports = {default: from_1, __esModule: true}
})

unwrapExports(from_1$1)

var toConsumableArray$1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true

	var _from2 = _interopRequireDefault(from_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = function(arr) {
		if (Array.isArray(arr)) {
			for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
				arr2[i] = arr[i]
			}

			return arr2
		} else {
			return (0, _from2.default)(arr)
		}
	}
})

unwrapExports(toConsumableArray$1)

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

var emptyObject = {}

if (process.env.NODE_ENV !== 'production') {
	Object.freeze(emptyObject)
}

var emptyObject_1 = emptyObject

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {}

if (process.env.NODE_ENV !== 'production') {
	validateFormat = function validateFormat(format) {
		if (format === undefined) {
			throw new Error('invariant requires an error message argument')
		}
	}
}

function invariant(condition, format, a, b, c, d, e, f) {
	validateFormat(format)

	if (!condition) {
		var error
		if (format === undefined) {
			error = new Error(
				'Minified exception occurred; use the non-minified dev environment ' +
					'for the full error message and additional helpful warnings.'
			)
		} else {
			var args = [a, b, c, d, e, f]
			var argIndex = 0
			error = new Error(
				format.replace(/%s/g, function() {
					return args[argIndex++]
				})
			)
			error.name = 'Invariant Violation'
		}

		error.framesToPop = 1 // we don't care about invariant's own frame
		throw error
	}
}

var invariant_1 = invariant

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 */

function makeEmptyFunction(arg) {
	return function() {
		return arg
	}
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction$1 = function emptyFunction() {}

emptyFunction$1.thatReturns = makeEmptyFunction
emptyFunction$1.thatReturnsFalse = makeEmptyFunction(false)
emptyFunction$1.thatReturnsTrue = makeEmptyFunction(true)
emptyFunction$1.thatReturnsNull = makeEmptyFunction(null)
emptyFunction$1.thatReturnsThis = function() {
	return this
}
emptyFunction$1.thatReturnsArgument = function(arg) {
	return arg
}

var emptyFunction_1 = emptyFunction$1

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction_1

if (process.env.NODE_ENV !== 'production') {
	var printWarning$2 = function printWarning(format) {
		for (
			var _len = arguments.length,
				args = Array(_len > 1 ? _len - 1 : 0),
				_key = 1;
			_key < _len;
			_key++
		) {
			args[_key - 1] = arguments[_key]
		}

		var argIndex = 0
		var message =
			'Warning: ' +
			format.replace(/%s/g, function() {
				return args[argIndex++]
			})
		if (typeof console !== 'undefined') {
			console.error(message)
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message)
		} catch (x) {}
	}

	warning = function warning(condition, format) {
		if (format === undefined) {
			throw new Error(
				'`warning(condition, format, ...args)` requires a warning ' +
					'message argument'
			)
		}

		if (format.indexOf('Failed Composite propType: ') === 0) {
			return // Ignore CompositeComponent proptype check.
		}

		if (!condition) {
			for (
				var _len2 = arguments.length,
					args = Array(_len2 > 2 ? _len2 - 2 : 0),
					_key2 = 2;
				_key2 < _len2;
				_key2++
			) {
				args[_key2 - 2] = arguments[_key2]
			}

			printWarning$2.apply(undefined, [format].concat(args))
		}
	}
}

var warning_1 = warning

if (process.env.NODE_ENV !== 'production') {
	var warning$1 = warning_1
}

var MIXINS_KEY = 'mixins'

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity$1(fn) {
	return fn
}

var ReactPropTypeLocationNames
if (process.env.NODE_ENV !== 'production') {
	ReactPropTypeLocationNames = {
		prop: 'prop',
		context: 'context',
		childContext: 'child context'
	}
} else {
	ReactPropTypeLocationNames = {}
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */

	var injectedMixins = []

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
		/**
		 * An array of Mixin objects to include when defining your component.
		 *
		 * @type {array}
		 * @optional
		 */
		mixins: 'DEFINE_MANY',

		/**
		 * An object containing properties and methods that should be defined on
		 * the component's constructor instead of its prototype (static methods).
		 *
		 * @type {object}
		 * @optional
		 */
		statics: 'DEFINE_MANY',

		/**
		 * Definition of prop types for this component.
		 *
		 * @type {object}
		 * @optional
		 */
		propTypes: 'DEFINE_MANY',

		/**
		 * Definition of context types for this component.
		 *
		 * @type {object}
		 * @optional
		 */
		contextTypes: 'DEFINE_MANY',

		/**
		 * Definition of context types this component sets for its children.
		 *
		 * @type {object}
		 * @optional
		 */
		childContextTypes: 'DEFINE_MANY',

		// ==== Definition methods ====

		/**
		 * Invoked when the component is mounted. Values in the mapping will be set on
		 * `this.props` if that prop is not specified (i.e. using an `in` check).
		 *
		 * This method is invoked before `getInitialState` and therefore cannot rely
		 * on `this.state` or use `this.setState`.
		 *
		 * @return {object}
		 * @optional
		 */
		getDefaultProps: 'DEFINE_MANY_MERGED',

		/**
		 * Invoked once before the component is mounted. The return value will be used
		 * as the initial value of `this.state`.
		 *
		 *   getInitialState: function() {
		 *     return {
		 *       isOn: false,
		 *       fooBaz: new BazFoo()
		 *     }
		 *   }
		 *
		 * @return {object}
		 * @optional
		 */
		getInitialState: 'DEFINE_MANY_MERGED',

		/**
		 * @return {object}
		 * @optional
		 */
		getChildContext: 'DEFINE_MANY_MERGED',

		/**
		 * Uses props from `this.props` and state from `this.state` to render the
		 * structure of the component.
		 *
		 * No guarantees are made about when or how often this method is invoked, so
		 * it must not have side effects.
		 *
		 *   render: function() {
		 *     var name = this.props.name;
		 *     return <div>Hello, {name}!</div>;
		 *   }
		 *
		 * @return {ReactComponent}
		 * @required
		 */
		render: 'DEFINE_ONCE',

		// ==== Delegate methods ====

		/**
		 * Invoked when the component is initially created and about to be mounted.
		 * This may have side effects, but any external subscriptions or data created
		 * by this method must be cleaned up in `componentWillUnmount`.
		 *
		 * @optional
		 */
		componentWillMount: 'DEFINE_MANY',

		/**
		 * Invoked when the component has been mounted and has a DOM representation.
		 * However, there is no guarantee that the DOM node is in the document.
		 *
		 * Use this as an opportunity to operate on the DOM when the component has
		 * been mounted (initialized and rendered) for the first time.
		 *
		 * @param {DOMElement} rootNode DOM element representing the component.
		 * @optional
		 */
		componentDidMount: 'DEFINE_MANY',

		/**
		 * Invoked before the component receives new props.
		 *
		 * Use this as an opportunity to react to a prop transition by updating the
		 * state using `this.setState`. Current props are accessed via `this.props`.
		 *
		 *   componentWillReceiveProps: function(nextProps, nextContext) {
		 *     this.setState({
		 *       likesIncreasing: nextProps.likeCount > this.props.likeCount
		 *     });
		 *   }
		 *
		 * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
		 * transition may cause a state change, but the opposite is not true. If you
		 * need it, you are probably looking for `componentWillUpdate`.
		 *
		 * @param {object} nextProps
		 * @optional
		 */
		componentWillReceiveProps: 'DEFINE_MANY',

		/**
		 * Invoked while deciding if the component should be updated as a result of
		 * receiving new props, state and/or context.
		 *
		 * Use this as an opportunity to `return false` when you're certain that the
		 * transition to the new props/state/context will not require a component
		 * update.
		 *
		 *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
		 *     return !equal(nextProps, this.props) ||
		 *       !equal(nextState, this.state) ||
		 *       !equal(nextContext, this.context);
		 *   }
		 *
		 * @param {object} nextProps
		 * @param {?object} nextState
		 * @param {?object} nextContext
		 * @return {boolean} True if the component should update.
		 * @optional
		 */
		shouldComponentUpdate: 'DEFINE_ONCE',

		/**
		 * Invoked when the component is about to update due to a transition from
		 * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
		 * and `nextContext`.
		 *
		 * Use this as an opportunity to perform preparation before an update occurs.
		 *
		 * NOTE: You **cannot** use `this.setState()` in this method.
		 *
		 * @param {object} nextProps
		 * @param {?object} nextState
		 * @param {?object} nextContext
		 * @param {ReactReconcileTransaction} transaction
		 * @optional
		 */
		componentWillUpdate: 'DEFINE_MANY',

		/**
		 * Invoked when the component's DOM representation has been updated.
		 *
		 * Use this as an opportunity to operate on the DOM when the component has
		 * been updated.
		 *
		 * @param {object} prevProps
		 * @param {?object} prevState
		 * @param {?object} prevContext
		 * @param {DOMElement} rootNode DOM element representing the component.
		 * @optional
		 */
		componentDidUpdate: 'DEFINE_MANY',

		/**
		 * Invoked when the component is about to be removed from its parent and have
		 * its DOM representation destroyed.
		 *
		 * Use this as an opportunity to deallocate any external resources.
		 *
		 * NOTE: There is no `componentDidUnmount` since your component will have been
		 * destroyed by that point.
		 *
		 * @optional
		 */
		componentWillUnmount: 'DEFINE_MANY',

		/**
		 * Replacement for (deprecated) `componentWillMount`.
		 *
		 * @optional
		 */
		UNSAFE_componentWillMount: 'DEFINE_MANY',

		/**
		 * Replacement for (deprecated) `componentWillReceiveProps`.
		 *
		 * @optional
		 */
		UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',

		/**
		 * Replacement for (deprecated) `componentWillUpdate`.
		 *
		 * @optional
		 */
		UNSAFE_componentWillUpdate: 'DEFINE_MANY',

		// ==== Advanced methods ====

		/**
		 * Updates the component's currently mounted DOM representation.
		 *
		 * By default, this implements React's rendering and reconciliation algorithm.
		 * Sophisticated clients may wish to override this.
		 *
		 * @param {ReactReconcileTransaction} transaction
		 * @internal
		 * @overridable
		 */
		updateComponent: 'OVERRIDE_BASE'
	}

	/**
	 * Similar to ReactClassInterface but for static methods.
	 */
	var ReactClassStaticInterface = {
		/**
		 * This method is invoked after a component is instantiated and when it
		 * receives new props. Return an object to update state in response to
		 * prop changes. Return null to indicate no change to state.
		 *
		 * If an object is returned, its keys will be merged into the existing state.
		 *
		 * @return {object || null}
		 * @optional
		 */
		getDerivedStateFromProps: 'DEFINE_MANY_MERGED'
	}

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
		displayName: function(Constructor, displayName) {
			Constructor.displayName = displayName
		},
		mixins: function(Constructor, mixins) {
			if (mixins) {
				for (var i = 0; i < mixins.length; i++) {
					mixSpecIntoComponent(Constructor, mixins[i])
				}
			}
		},
		childContextTypes: function(Constructor, childContextTypes) {
			if (process.env.NODE_ENV !== 'production') {
				validateTypeDef(Constructor, childContextTypes, 'childContext')
			}
			Constructor.childContextTypes = objectAssign(
				{},
				Constructor.childContextTypes,
				childContextTypes
			)
		},
		contextTypes: function(Constructor, contextTypes) {
			if (process.env.NODE_ENV !== 'production') {
				validateTypeDef(Constructor, contextTypes, 'context')
			}
			Constructor.contextTypes = objectAssign(
				{},
				Constructor.contextTypes,
				contextTypes
			)
		},
		/**
		 * Special case getDefaultProps which should move into statics but requires
		 * automatic merging.
		 */
		getDefaultProps: function(Constructor, getDefaultProps) {
			if (Constructor.getDefaultProps) {
				Constructor.getDefaultProps = createMergedResultFunction(
					Constructor.getDefaultProps,
					getDefaultProps
				)
			} else {
				Constructor.getDefaultProps = getDefaultProps
			}
		},
		propTypes: function(Constructor, propTypes) {
			if (process.env.NODE_ENV !== 'production') {
				validateTypeDef(Constructor, propTypes, 'prop')
			}
			Constructor.propTypes = objectAssign(
				{},
				Constructor.propTypes,
				propTypes
			)
		},
		statics: function(Constructor, statics) {
			mixStaticSpecIntoComponent(Constructor, statics)
		},
		autobind: function() {}
	}

	function validateTypeDef(Constructor, typeDef, location) {
		for (var propName in typeDef) {
			if (typeDef.hasOwnProperty(propName)) {
				// use a warning instead of an _invariant so components
				// don't show up in prod but only in __DEV__
				if (process.env.NODE_ENV !== 'production') {
					warning$1(
						typeof typeDef[propName] === 'function',
						'%s: %s type `%s` is invalid; it must be a function, usually from ' +
							'React.PropTypes.',
						Constructor.displayName || 'ReactClass',
						ReactPropTypeLocationNames[location],
						propName
					)
				}
			}
		}
	}

	function validateMethodOverride(isAlreadyDefined, name) {
		var specPolicy = ReactClassInterface.hasOwnProperty(name)
			? ReactClassInterface[name]
			: null

		// Disallow overriding of base class methods unless explicitly allowed.
		if (ReactClassMixin.hasOwnProperty(name)) {
			invariant_1(
				specPolicy === 'OVERRIDE_BASE',
				'ReactClassInterface: You are attempting to override ' +
					'`%s` from your class specification. Ensure that your method names ' +
					'do not overlap with React methods.',
				name
			)
		}

		// Disallow defining methods more than once unless explicitly allowed.
		if (isAlreadyDefined) {
			invariant_1(
				specPolicy === 'DEFINE_MANY' ||
					specPolicy === 'DEFINE_MANY_MERGED',
				'ReactClassInterface: You are attempting to define ' +
					'`%s` on your component more than once. This conflict may be due ' +
					'to a mixin.',
				name
			)
		}
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
		if (!spec) {
			if (process.env.NODE_ENV !== 'production') {
				var typeofSpec = typeof spec
				var isMixinValid = typeofSpec === 'object' && spec !== null

				if (process.env.NODE_ENV !== 'production') {
					warning$1(
						isMixinValid,
						"%s: You're attempting to include a mixin that is either null " +
							'or not an object. Check the mixins included by the component, ' +
							'as well as any mixins they include themselves. ' +
							'Expected object but got %s.',
						Constructor.displayName || 'ReactClass',
						spec === null ? null : typeofSpec
					)
				}
			}

			return
		}

		invariant_1(
			typeof spec !== 'function',
			"ReactClass: You're attempting to " +
				'use a component class or function as a mixin. Instead, just use a ' +
				'regular object.'
		)
		invariant_1(
			!isValidElement(spec),
			"ReactClass: You're attempting to " +
				'use a component as a mixin. Instead, just use a regular object.'
		)

		var proto = Constructor.prototype
		var autoBindPairs = proto.__reactAutoBindPairs

		// By handling mixins before any other properties, we ensure the same
		// chaining order is applied to methods with DEFINE_MANY policy, whether
		// mixins are listed before or after these methods in the spec.
		if (spec.hasOwnProperty(MIXINS_KEY)) {
			RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins)
		}

		for (var name in spec) {
			if (!spec.hasOwnProperty(name)) {
				continue
			}

			if (name === MIXINS_KEY) {
				// We have already handled mixins in a special case above.
				continue
			}

			var property = spec[name]
			var isAlreadyDefined = proto.hasOwnProperty(name)
			validateMethodOverride(isAlreadyDefined, name)

			if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
				RESERVED_SPEC_KEYS[name](Constructor, property)
			} else {
				// Setup methods on prototype:
				// The following member methods should not be automatically bound:
				// 1. Expected ReactClass methods (in the "interface").
				// 2. Overridden methods (that were mixed in).
				var isReactClassMethod = ReactClassInterface.hasOwnProperty(
					name
				)
				var isFunction = typeof property === 'function'
				var shouldAutoBind =
					isFunction &&
					!isReactClassMethod &&
					!isAlreadyDefined &&
					spec.autobind !== false

				if (shouldAutoBind) {
					autoBindPairs.push(name, property)
					proto[name] = property
				} else {
					if (isAlreadyDefined) {
						var specPolicy = ReactClassInterface[name]

						// These cases should already be caught by validateMethodOverride.
						invariant_1(
							isReactClassMethod &&
								(specPolicy === 'DEFINE_MANY_MERGED' ||
									specPolicy === 'DEFINE_MANY'),
							'ReactClass: Unexpected spec policy %s for key %s ' +
								'when mixing in component specs.',
							specPolicy,
							name
						)

						// For methods which are defined more than once, call the existing
						// methods before calling the new property, merging if appropriate.
						if (specPolicy === 'DEFINE_MANY_MERGED') {
							proto[name] = createMergedResultFunction(
								proto[name],
								property
							)
						} else if (specPolicy === 'DEFINE_MANY') {
							proto[name] = createChainedFunction(
								proto[name],
								property
							)
						}
					} else {
						proto[name] = property
						if (process.env.NODE_ENV !== 'production') {
							// Add verbose displayName to the function, which helps when looking
							// at profiling tools.
							if (
								typeof property === 'function' &&
								spec.displayName
							) {
								proto[name].displayName =
									spec.displayName + '_' + name
							}
						}
					}
				}
			}
		}
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
		if (!statics) {
			return
		}

		for (var name in statics) {
			var property = statics[name]
			if (!statics.hasOwnProperty(name)) {
				continue
			}

			var isReserved = name in RESERVED_SPEC_KEYS
			invariant_1(
				!isReserved,
				'ReactClass: You are attempting to define a reserved ' +
					'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
					'as an instance property instead; it will still be accessible on the ' +
					'constructor.',
				name
			)

			var isAlreadyDefined = name in Constructor
			if (isAlreadyDefined) {
				var specPolicy = ReactClassStaticInterface.hasOwnProperty(name)
					? ReactClassStaticInterface[name]
					: null

				invariant_1(
					specPolicy === 'DEFINE_MANY_MERGED',
					'ReactClass: You are attempting to define ' +
						'`%s` on your component more than once. This conflict may be ' +
						'due to a mixin.',
					name
				)

				Constructor[name] = createMergedResultFunction(
					Constructor[name],
					property
				)

				return
			}

			Constructor[name] = property
		}
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
		invariant_1(
			one && two && typeof one === 'object' && typeof two === 'object',
			'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
		)

		for (var key in two) {
			if (two.hasOwnProperty(key)) {
				invariant_1(
					one[key] === undefined,
					'mergeIntoWithNoDuplicateKeys(): ' +
						'Tried to merge two objects with the same key: `%s`. This conflict ' +
						'may be due to a mixin; in particular, this may be caused by two ' +
						'getInitialState() or getDefaultProps() methods returning objects ' +
						'with clashing keys.',
					key
				)
				one[key] = two[key]
			}
		}
		return one
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
		return function mergedResult() {
			var a = one.apply(this, arguments)
			var b = two.apply(this, arguments)
			if (a == null) {
				return b
			} else if (b == null) {
				return a
			}
			var c = {}
			mergeIntoWithNoDuplicateKeys(c, a)
			mergeIntoWithNoDuplicateKeys(c, b)
			return c
		}
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
		return function chainedFunction() {
			one.apply(this, arguments)
			two.apply(this, arguments)
		}
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
		var boundMethod = method.bind(component)
		if (process.env.NODE_ENV !== 'production') {
			boundMethod.__reactBoundContext = component
			boundMethod.__reactBoundMethod = method
			boundMethod.__reactBoundArguments = null
			var componentName = component.constructor.displayName
			var _bind = boundMethod.bind
			boundMethod.bind = function(newThis) {
				for (
					var _len = arguments.length,
						args = Array(_len > 1 ? _len - 1 : 0),
						_key = 1;
					_key < _len;
					_key++
				) {
					args[_key - 1] = arguments[_key]
				}

				// User is trying to bind() an autobound method; we effectively will
				// ignore the value of "this" that the user is trying to use, so
				// let's warn.
				if (newThis !== component && newThis !== null) {
					if (process.env.NODE_ENV !== 'production') {
						warning$1(
							false,
							'bind(): React component methods may only be bound to the ' +
								'component instance. See %s',
							componentName
						)
					}
				} else if (!args.length) {
					if (process.env.NODE_ENV !== 'production') {
						warning$1(
							false,
							'bind(): You are binding a component method to the component. ' +
								'React does this for you automatically in a high-performance ' +
								'way, so you can safely remove this call. See %s',
							componentName
						)
					}
					return boundMethod
				}
				var reboundMethod = _bind.apply(boundMethod, arguments)
				reboundMethod.__reactBoundContext = component
				reboundMethod.__reactBoundMethod = method
				reboundMethod.__reactBoundArguments = args
				return reboundMethod
			}
		}
		return boundMethod
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
		var pairs = component.__reactAutoBindPairs
		for (var i = 0; i < pairs.length; i += 2) {
			var autoBindKey = pairs[i]
			var method = pairs[i + 1]
			component[autoBindKey] = bindAutoBindMethod(component, method)
		}
	}

	var IsMountedPreMixin = {
		componentDidMount: function() {
			this.__isMounted = true
		}
	}

	var IsMountedPostMixin = {
		componentWillUnmount: function() {
			this.__isMounted = false
		}
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
		/**
		 * TODO: This will be deprecated because state should always keep a consistent
		 * type signature and the only use case for this, is to avoid that.
		 */
		replaceState: function(newState, callback) {
			this.updater.enqueueReplaceState(this, newState, callback)
		},

		/**
		 * Checks whether or not this composite component is mounted.
		 * @return {boolean} True if mounted, false otherwise.
		 * @protected
		 * @final
		 */
		isMounted: function() {
			if (process.env.NODE_ENV !== 'production') {
				warning$1(
					this.__didWarnIsMounted,
					'%s: isMounted is deprecated. Instead, make sure to clean up ' +
						'subscriptions and pending requests in componentWillUnmount to ' +
						'prevent memory leaks.',
					(this.constructor && this.constructor.displayName) ||
						this.name ||
						'Component'
				)
				this.__didWarnIsMounted = true
			}
			return !!this.__isMounted
		}
	}

	var ReactClassComponent = function() {}
	objectAssign(
		ReactClassComponent.prototype,
		ReactComponent.prototype,
		ReactClassMixin
	)

	/**
	 * Creates a composite component class given a class specification.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	 *
	 * @param {object} spec Class specification (which must define `render`).
	 * @return {function} Component constructor function.
	 * @public
	 */
	function createClass(spec) {
		// To keep our warnings more understandable, we'll use a little hack here to
		// ensure that Constructor.name !== 'Constructor'. This makes sure we don't
		// unnecessarily identify a class without displayName as 'Constructor'.
		var Constructor = identity$1(function(props, context, updater) {
			// This constructor gets overridden by mocks. The argument is used
			// by mocks to assert on what gets mounted.

			if (process.env.NODE_ENV !== 'production') {
				warning$1(
					this instanceof Constructor,
					'Something is calling a React component directly. Use a factory or ' +
						'JSX instead. See: https://fb.me/react-legacyfactory'
				)
			}

			// Wire up auto-binding
			if (this.__reactAutoBindPairs.length) {
				bindAutoBindMethods(this)
			}

			this.props = props
			this.context = context
			this.refs = emptyObject_1
			this.updater = updater || ReactNoopUpdateQueue

			this.state = null

			// ReactClasses doesn't have constructors. Instead, they use the
			// getInitialState and componentWillMount methods for initialization.

			var initialState = this.getInitialState
				? this.getInitialState()
				: null
			if (process.env.NODE_ENV !== 'production') {
				// We allow auto-mocks to proceed as if they're returning null.
				if (
					initialState === undefined &&
					this.getInitialState._isMockFunction
				) {
					// This is probably bad practice. Consider warning here and
					// deprecating this convenience.
					initialState = null
				}
			}
			invariant_1(
				typeof initialState === 'object' &&
					!Array.isArray(initialState),
				'%s.getInitialState(): must return an object or null',
				Constructor.displayName || 'ReactCompositeComponent'
			)

			this.state = initialState
		})
		Constructor.prototype = new ReactClassComponent()
		Constructor.prototype.constructor = Constructor
		Constructor.prototype.__reactAutoBindPairs = []

		injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor))

		mixSpecIntoComponent(Constructor, IsMountedPreMixin)
		mixSpecIntoComponent(Constructor, spec)
		mixSpecIntoComponent(Constructor, IsMountedPostMixin)

		// Initialize the defaultProps property after all mixins have been merged.
		if (Constructor.getDefaultProps) {
			Constructor.defaultProps = Constructor.getDefaultProps()
		}

		if (process.env.NODE_ENV !== 'production') {
			// This is a tag to indicate that the use of these method names is ok,
			// since it's used with createClass. If it's not, then it's likely a
			// mistake so we'll warn you to use the static property, property
			// initializer or constructor respectively.
			if (Constructor.getDefaultProps) {
				Constructor.getDefaultProps.isReactClassApproved = {}
			}
			if (Constructor.prototype.getInitialState) {
				Constructor.prototype.getInitialState.isReactClassApproved = {}
			}
		}

		invariant_1(
			Constructor.prototype.render,
			'createClass(...): Class specification must implement a `render` method.'
		)

		if (process.env.NODE_ENV !== 'production') {
			warning$1(
				!Constructor.prototype.componentShouldUpdate,
				'%s has a method called ' +
					'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
					'The name is phrased as a question because the function is ' +
					'expected to return a value.',
				spec.displayName || 'A component'
			)
			warning$1(
				!Constructor.prototype.componentWillRecieveProps,
				'%s has a method called ' +
					'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
				spec.displayName || 'A component'
			)
			warning$1(
				!Constructor.prototype.UNSAFE_componentWillRecieveProps,
				'%s has a method called UNSAFE_componentWillRecieveProps(). ' +
					'Did you mean UNSAFE_componentWillReceiveProps()?',
				spec.displayName || 'A component'
			)
		}

		// Reduce time spent doing lookups by setting these on the prototype.
		for (var methodName in ReactClassInterface) {
			if (!Constructor.prototype[methodName]) {
				Constructor.prototype[methodName] = null
			}
		}

		return Constructor
	}

	return createClass
}

var factory_1 = factory

if (typeof React__default === 'undefined') {
	throw Error(
		'create-react-class could not find the React object. If you are using script tags, ' +
			'make sure that React is being loaded before create-react-class.'
	)
}

// Hack to grab NoopUpdateQueue from isomorphic React
var ReactNoopUpdateQueue = new React__default.Component().updater

var createReactClass = factory_1(
	React__default.Component,
	React__default.isValidElement,
	ReactNoopUpdateQueue
)

var _anInstance = function(it, Constructor, name, forbiddenField) {
	if (
		!(it instanceof Constructor) ||
		(forbiddenField !== undefined && forbiddenField in it)
	) {
		throw TypeError(name + ': incorrect invocation!')
	}
	return it
}

var _forOf = createCommonjsModule(function(module) {
	var BREAK = {}
	var RETURN = {}
	var exports = (module.exports = function(
		iterable,
		entries,
		fn,
		that,
		ITERATOR
	) {
		var iterFn = ITERATOR
			? function() {
					return iterable
			  }
			: core_getIteratorMethod(iterable)
		var f = _ctx(fn, that, entries ? 2 : 1)
		var index = 0
		var length, step, iterator, result
		if (typeof iterFn != 'function')
			throw TypeError(iterable + ' is not iterable!')
		// fast case for arrays with default iterator
		if (_isArrayIter(iterFn))
			for (length = _toLength(iterable.length); length > index; index++) {
				result = entries
					? f(_anObject((step = iterable[index]))[0], step[1])
					: f(iterable[index])
				if (result === BREAK || result === RETURN) return result
			}
		else
			for (
				iterator = iterFn.call(iterable);
				!(step = iterator.next()).done;

			) {
				result = _iterCall(iterator, f, step.value, entries)
				if (result === BREAK || result === RETURN) return result
			}
	})
	exports.BREAK = BREAK
	exports.RETURN = RETURN
})

// 7.3.20 SpeciesConstructor(O, defaultConstructor)

var SPECIES = _wks('species')
var _speciesConstructor = function(O, D) {
	var C = _anObject(O).constructor
	var S
	return C === undefined || (S = _anObject(C)[SPECIES]) == undefined
		? D
		: _aFunction(S)
}

// fast apply, http://jsperf.lnkit.com/fast-apply/5
var _invoke = function(fn, args, that) {
	var un = that === undefined
	switch (args.length) {
		case 0:
			return un ? fn() : fn.call(that)
		case 1:
			return un ? fn(args[0]) : fn.call(that, args[0])
		case 2:
			return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1])
		case 3:
			return un
				? fn(args[0], args[1], args[2])
				: fn.call(that, args[0], args[1], args[2])
		case 4:
			return un
				? fn(args[0], args[1], args[2], args[3])
				: fn.call(that, args[0], args[1], args[2], args[3])
	}
	return fn.apply(that, args)
}

var process$1 = _global.process
var setTask = _global.setImmediate
var clearTask = _global.clearImmediate
var MessageChannel = _global.MessageChannel
var Dispatch = _global.Dispatch
var counter = 0
var queue = {}
var ONREADYSTATECHANGE = 'onreadystatechange'
var defer, channel, port
var run = function() {
	var id = +this
	// eslint-disable-next-line no-prototype-builtins
	if (queue.hasOwnProperty(id)) {
		var fn = queue[id]
		delete queue[id]
		fn()
	}
}
var listener = function(event) {
	run.call(event.data)
}
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
	setTask = function setImmediate(fn) {
		var args = []
		var i = 1
		while (arguments.length > i) args.push(arguments[i++])
		queue[++counter] = function() {
			// eslint-disable-next-line no-new-func
			_invoke(typeof fn == 'function' ? fn : Function(fn), args)
		}
		defer(counter)
		return counter
	}
	clearTask = function clearImmediate(id) {
		delete queue[id]
	}
	// Node.js 0.8-
	if (_cof(process$1) == 'process') {
		defer = function(id) {
			process$1.nextTick(_ctx(run, id, 1))
		}
		// Sphere (JS game engine) Dispatch API
	} else if (Dispatch && Dispatch.now) {
		defer = function(id) {
			Dispatch.now(_ctx(run, id, 1))
		}
		// Browsers with MessageChannel, includes WebWorkers
	} else if (MessageChannel) {
		channel = new MessageChannel()
		port = channel.port2
		channel.port1.onmessage = listener
		defer = _ctx(port.postMessage, port, 1)
		// Browsers with postMessage, skip WebWorkers
		// IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	} else if (
		_global.addEventListener &&
		typeof postMessage == 'function' &&
		!_global.importScripts
	) {
		defer = function(id) {
			_global.postMessage(id + '', '*')
		}
		_global.addEventListener('message', listener, false)
		// IE8-
	} else if (ONREADYSTATECHANGE in _domCreate('script')) {
		defer = function(id) {
			_html.appendChild(_domCreate('script'))[
				ONREADYSTATECHANGE
			] = function() {
				_html.removeChild(this)
				run.call(id)
			}
		}
		// Rest old browsers
	} else {
		defer = function(id) {
			setTimeout(_ctx(run, id, 1), 0)
		}
	}
}
var _task = {
	set: setTask,
	clear: clearTask
}

var macrotask = _task.set
var Observer = _global.MutationObserver || _global.WebKitMutationObserver
var process$2 = _global.process
var Promise$2 = _global.Promise
var isNode = _cof(process$2) == 'process'

var _microtask = function() {
	var head, last, notify

	var flush = function() {
		var parent, fn
		if (isNode && (parent = process$2.domain)) parent.exit()
		while (head) {
			fn = head.fn
			head = head.next
			try {
				fn()
			} catch (e) {
				if (head) notify()
				else last = undefined
				throw e
			}
		}
		last = undefined
		if (parent) parent.enter()
	}

	// Node.js
	if (isNode) {
		notify = function() {
			process$2.nextTick(flush)
		}
		// browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
	} else if (
		Observer &&
		!(_global.navigator && _global.navigator.standalone)
	) {
		var toggle = true
		var node = document.createTextNode('')
		new Observer(flush).observe(node, {characterData: true}) // eslint-disable-line no-new
		notify = function() {
			node.data = toggle = !toggle
		}
		// environments with maybe non-completely correct, but existent Promise
	} else if (Promise$2 && Promise$2.resolve) {
		// Promise.resolve without an argument throws an error in LG WebOS 2
		var promise = Promise$2.resolve(undefined)
		notify = function() {
			promise.then(flush)
		}
		// for other environments - macrotask based on:
		// - setImmediate
		// - MessageChannel
		// - window.postMessag
		// - onreadystatechange
		// - setTimeout
	} else {
		notify = function() {
			// strange IE + webpack dev server bug - use .call(global)
			macrotask.call(_global, flush)
		}
	}

	return function(fn) {
		var task = {fn: fn, next: undefined}
		if (last) last.next = task
		if (!head) {
			head = task
			notify()
		}
		last = task
	}
}

// 25.4.1.5 NewPromiseCapability(C)

function PromiseCapability(C) {
	var resolve, reject
	this.promise = new C(function($$resolve, $$reject) {
		if (resolve !== undefined || reject !== undefined)
			throw TypeError('Bad Promise constructor')
		resolve = $$resolve
		reject = $$reject
	})
	this.resolve = _aFunction(resolve)
	this.reject = _aFunction(reject)
}

var f$7 = function(C) {
	return new PromiseCapability(C)
}

var _newPromiseCapability = {
	f: f$7
}

var _perform = function(exec) {
	try {
		return {e: false, v: exec()}
	} catch (e) {
		return {e: true, v: e}
	}
}

var navigator$1 = _global.navigator

var _userAgent = (navigator$1 && navigator$1.userAgent) || ''

var _promiseResolve = function(C, x) {
	_anObject(C)
	if (_isObject(x) && x.constructor === C) return x
	var promiseCapability = _newPromiseCapability.f(C)
	var resolve = promiseCapability.resolve
	resolve(x)
	return promiseCapability.promise
}

var _redefineAll = function(target, src, safe) {
	for (var key in src) {
		if (safe && target[key]) target[key] = src[key]
		else _hide(target, key, src[key])
	}
	return target
}

var SPECIES$1 = _wks('species')

var _setSpecies = function(KEY) {
	var C = typeof _core[KEY] == 'function' ? _core[KEY] : _global[KEY]
	if (_descriptors && C && !C[SPECIES$1])
		_objectDp.f(C, SPECIES$1, {
			configurable: true,
			get: function() {
				return this
			}
		})
}

var task = _task.set
var microtask = _microtask()

var PROMISE = 'Promise'
var TypeError$1 = _global.TypeError
var process$3 = _global.process
var versions = process$3 && process$3.versions
var v8 = (versions && versions.v8) || ''
var $Promise = _global[PROMISE]
var isNode$1 = _classof(process$3) == 'process'
var empty = function() {
	/* empty */
}
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper$1
var newPromiseCapability = (newGenericPromiseCapability =
	_newPromiseCapability.f)

var USE_NATIVE$1 = !!(function() {
	try {
		// correct subclassing with @@species support
		var promise = $Promise.resolve(1)
		var FakePromise = ((promise.constructor = {})[
			_wks('species')
		] = function(exec) {
			exec(empty, empty)
		})
		// unhandled rejections tracking support, NodeJS Promise without it fails @@species test
		return (
			(isNode$1 || typeof PromiseRejectionEvent == 'function') &&
			promise.then(empty) instanceof FakePromise &&
			// v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
			// https://bugs.chromium.org/p/chromium/issues/detail?id=830565
			// we can't detect it synchronously, so just check versions
			v8.indexOf('6.6') !== 0 &&
			_userAgent.indexOf('Chrome/66') === -1
		)
	} catch (e) {
		/* empty */
	}
})()

// helpers
var isThenable = function(it) {
	var then
	return _isObject(it) && typeof (then = it.then) == 'function' ? then : false
}
var notify = function(promise, isReject) {
	if (promise._n) return
	promise._n = true
	var chain = promise._c
	microtask(function() {
		var value = promise._v
		var ok = promise._s == 1
		var i = 0
		var run = function(reaction) {
			var handler = ok ? reaction.ok : reaction.fail
			var resolve = reaction.resolve
			var reject = reaction.reject
			var domain = reaction.domain
			var result, then, exited
			try {
				if (handler) {
					if (!ok) {
						if (promise._h == 2) onHandleUnhandled(promise)
						promise._h = 1
					}
					if (handler === true) result = value
					else {
						if (domain) domain.enter()
						result = handler(value) // may throw
						if (domain) {
							domain.exit()
							exited = true
						}
					}
					if (result === reaction.promise) {
						reject(TypeError$1('Promise-chain cycle'))
					} else if ((then = isThenable(result))) {
						then.call(result, resolve, reject)
					} else resolve(result)
				} else reject(value)
			} catch (e) {
				if (domain && !exited) domain.exit()
				reject(e)
			}
		}
		while (chain.length > i) run(chain[i++]) // variable length - can't use forEach
		promise._c = []
		promise._n = false
		if (isReject && !promise._h) onUnhandled(promise)
	})
}
var onUnhandled = function(promise) {
	task.call(_global, function() {
		var value = promise._v
		var unhandled = isUnhandled(promise)
		var result, handler, console
		if (unhandled) {
			result = _perform(function() {
				if (isNode$1) {
					process$3.emit('unhandledRejection', value, promise)
				} else if ((handler = _global.onunhandledrejection)) {
					handler({promise: promise, reason: value})
				} else if ((console = _global.console) && console.error) {
					console.error('Unhandled promise rejection', value)
				}
			})
			// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
			promise._h = isNode$1 || isUnhandled(promise) ? 2 : 1
		}
		promise._a = undefined
		if (unhandled && result.e) throw result.v
	})
}
var isUnhandled = function(promise) {
	return promise._h !== 1 && (promise._a || promise._c).length === 0
}
var onHandleUnhandled = function(promise) {
	task.call(_global, function() {
		var handler
		if (isNode$1) {
			process$3.emit('rejectionHandled', promise)
		} else if ((handler = _global.onrejectionhandled)) {
			handler({promise: promise, reason: promise._v})
		}
	})
}
var $reject = function(value) {
	var promise = this
	if (promise._d) return
	promise._d = true
	promise = promise._w || promise // unwrap
	promise._v = value
	promise._s = 2
	if (!promise._a) promise._a = promise._c.slice()
	notify(promise, true)
}
var $resolve = function(value) {
	var promise = this
	var then
	if (promise._d) return
	promise._d = true
	promise = promise._w || promise // unwrap
	try {
		if (promise === value)
			throw TypeError$1("Promise can't be resolved itself")
		if ((then = isThenable(value))) {
			microtask(function() {
				var wrapper = {_w: promise, _d: false} // wrap
				try {
					then.call(
						value,
						_ctx($resolve, wrapper, 1),
						_ctx($reject, wrapper, 1)
					)
				} catch (e) {
					$reject.call(wrapper, e)
				}
			})
		} else {
			promise._v = value
			promise._s = 1
			notify(promise, false)
		}
	} catch (e) {
		$reject.call({_w: promise, _d: false}, e) // wrap
	}
}

// constructor polyfill
if (!USE_NATIVE$1) {
	// 25.4.3.1 Promise(executor)
	$Promise = function Promise(executor) {
		_anInstance(this, $Promise, PROMISE, '_h')
		_aFunction(executor)
		Internal.call(this)
		try {
			executor(_ctx($resolve, this, 1), _ctx($reject, this, 1))
		} catch (err) {
			$reject.call(this, err)
		}
	}
	// eslint-disable-next-line no-unused-vars
	Internal = function Promise(executor) {
		this._c = [] // <- awaiting reactions
		this._a = undefined // <- checked in isUnhandled reactions
		this._s = 0 // <- state
		this._d = false // <- done
		this._v = undefined // <- value
		this._h = 0 // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
		this._n = false // <- notify
	}
	Internal.prototype = _redefineAll($Promise.prototype, {
		// 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
		then: function then(onFulfilled, onRejected) {
			var reaction = newPromiseCapability(
				_speciesConstructor(this, $Promise)
			)
			reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true
			reaction.fail = typeof onRejected == 'function' && onRejected
			reaction.domain = isNode$1 ? process$3.domain : undefined
			this._c.push(reaction)
			if (this._a) this._a.push(reaction)
			if (this._s) notify(this, false)
			return reaction.promise
		},
		// 25.4.5.1 Promise.prototype.catch(onRejected)
		catch: function(onRejected) {
			return this.then(undefined, onRejected)
		}
	})
	OwnPromiseCapability = function() {
		var promise = new Internal()
		this.promise = promise
		this.resolve = _ctx($resolve, promise, 1)
		this.reject = _ctx($reject, promise, 1)
	}
	_newPromiseCapability.f = newPromiseCapability = function(C) {
		return C === $Promise || C === Wrapper$1
			? new OwnPromiseCapability(C)
			: newGenericPromiseCapability(C)
	}
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE$1, {Promise: $Promise})
_setToStringTag($Promise, PROMISE)
_setSpecies(PROMISE)
Wrapper$1 = _core[PROMISE]

// statics
_export(_export.S + _export.F * !USE_NATIVE$1, PROMISE, {
	// 25.4.4.5 Promise.reject(r)
	reject: function reject(r) {
		var capability = newPromiseCapability(this)
		var $$reject = capability.reject
		$$reject(r)
		return capability.promise
	}
})
_export(_export.S + _export.F * _library, PROMISE, {
	// 25.4.4.6 Promise.resolve(x)
	resolve: function resolve(x) {
		return _promiseResolve(this === Wrapper$1 ? $Promise : this, x)
	}
})
_export(
	_export.S +
		_export.F *
			!(
				USE_NATIVE$1 &&
				_iterDetect(function(iter) {
					$Promise.all(iter)['catch'](empty)
				})
			),
	PROMISE,
	{
		// 25.4.4.1 Promise.all(iterable)
		all: function all(iterable) {
			var C = this
			var capability = newPromiseCapability(C)
			var resolve = capability.resolve
			var reject = capability.reject
			var result = _perform(function() {
				var values = []
				var index = 0
				var remaining = 1
				_forOf(iterable, false, function(promise) {
					var $index = index++
					var alreadyCalled = false
					values.push(undefined)
					remaining++
					C.resolve(promise).then(function(value) {
						if (alreadyCalled) return
						alreadyCalled = true
						values[$index] = value
						--remaining || resolve(values)
					}, reject)
				})
				--remaining || resolve(values)
			})
			if (result.e) reject(result.v)
			return capability.promise
		},
		// 25.4.4.4 Promise.race(iterable)
		race: function race(iterable) {
			var C = this
			var capability = newPromiseCapability(C)
			var reject = capability.reject
			var result = _perform(function() {
				_forOf(iterable, false, function(promise) {
					C.resolve(promise).then(capability.resolve, reject)
				})
			})
			if (result.e) reject(result.v)
			return capability.promise
		}
	}
)

_export(_export.P + _export.R, 'Promise', {
	finally: function(onFinally) {
		var C = _speciesConstructor(this, _core.Promise || _global.Promise)
		var isFunction = typeof onFinally == 'function'
		return this.then(
			isFunction
				? function(x) {
						return _promiseResolve(C, onFinally()).then(function() {
							return x
						})
				  }
				: onFinally,
			isFunction
				? function(e) {
						return _promiseResolve(C, onFinally()).then(function() {
							throw e
						})
				  }
				: onFinally
		)
	}
})

// https://github.com/tc39/proposal-promise-try

_export(_export.S, 'Promise', {
	try: function(callbackfn) {
		var promiseCapability = _newPromiseCapability.f(this)
		var result = _perform(callbackfn)
		;(result.e ? promiseCapability.reject : promiseCapability.resolve)(
			result.v
		)
		return promiseCapability.promise
	}
})

var promise = _core.Promise

var promise$1 = createCommonjsModule(function(module) {
	module.exports = {default: promise, __esModule: true}
})

unwrapExports(promise$1)

// most Object methods by ES6 should accept primitives

var _objectSap = function(KEY, exec) {
	var fn = (_core.Object || {})[KEY] || Object[KEY]
	var exp = {}
	exp[KEY] = exec(fn)
	_export(
		_export.S +
			_export.F *
				_fails(function() {
					fn(1)
				}),
		'Object',
		exp
	)
}

// 19.1.2.14 Object.keys(O)

_objectSap('keys', function() {
	return function keys(it) {
		return _objectKeys(_toObject(it))
	}
})

var keys$1 = _core.Object.keys

var keys$2 = createCommonjsModule(function(module) {
	module.exports = {default: keys$1, __esModule: true}
})

unwrapExports(keys$2)

var $JSON$1 = _core.JSON || (_core.JSON = {stringify: JSON.stringify})
var stringify = function stringify(it) {
	// eslint-disable-line no-unused-vars
	return $JSON$1.stringify.apply($JSON$1, arguments)
}

var stringify$1 = createCommonjsModule(function(module) {
	module.exports = {default: stringify, __esModule: true}
})

unwrapExports(stringify$1)

var util$2 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.warning = undefined

	var _extends3 = _interopRequireDefault(_extends)

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	var _promise2 = _interopRequireDefault(promise$1)

	var _keys2 = _interopRequireDefault(keys$2)

	var _stringify2 = _interopRequireDefault(stringify$1)

	exports.convertFieldsError = convertFieldsError
	exports.format = format
	exports.isEmptyValue = isEmptyValue
	exports.isEmptyObject = isEmptyObject
	exports.asyncMap = asyncMap
	exports.complementError = complementError
	exports.deepMerge = deepMerge

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/* eslint no-console:0 */

	var formatRegExp = /%[sdj%]/g

	var warning = (exports.warning = function warning() {})

	// don't print warning message when in production env or node runtime
	if (
		process.env.NODE_ENV !== 'production' &&
		typeof window !== 'undefined' &&
		typeof document !== 'undefined'
	) {
		exports.warning = warning = function warning(type, errors) {
			if (typeof console !== 'undefined' && console.warn) {
				if (
					errors.every(function(e) {
						return typeof e === 'string'
					})
				) {
					console.warn(type, errors)
				}
			}
		}
	}

	function convertFieldsError(errors) {
		if (!errors || !errors.length) return null
		var fields = {}
		errors.forEach(function(error) {
			var field = error.field
			fields[field] = fields[field] || []
			fields[field].push(error)
		})
		return fields
	}

	function format() {
		for (
			var _len = arguments.length, args = Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			args[_key] = arguments[_key]
		}

		var i = 1
		var f = args[0]
		var len = args.length
		if (typeof f === 'function') {
			return f.apply(null, args.slice(1))
		}
		if (typeof f === 'string') {
			var str = String(f).replace(formatRegExp, function(x) {
				if (x === '%%') {
					return '%'
				}
				if (i >= len) {
					return x
				}
				switch (x) {
					case '%s':
						return String(args[i++])
					case '%d':
						return Number(args[i++])
					case '%j':
						try {
							return (0, _stringify2['default'])(args[i++])
						} catch (_) {
							return '[Circular]'
						}
						break
					default:
						return x
				}
			})
			for (var arg = args[i]; i < len; arg = args[++i]) {
				str += ' ' + arg
			}
			return str
		}
		return f
	}

	function isNativeStringType(type) {
		return (
			type === 'string' ||
			type === 'url' ||
			type === 'hex' ||
			type === 'email' ||
			type === 'pattern'
		)
	}

	function isEmptyValue(value, type) {
		if (value === undefined || value === null) {
			return true
		}
		if (type === 'array' && Array.isArray(value) && !value.length) {
			return true
		}
		if (isNativeStringType(type) && typeof value === 'string' && !value) {
			return true
		}
		return false
	}

	function isEmptyObject(obj) {
		return (0, _keys2['default'])(obj).length === 0
	}

	function asyncParallelArray(arr, func, callback) {
		var results = []
		var total = 0
		var arrLength = arr.length

		function count(errors) {
			results.push.apply(results, errors)
			total++
			if (total === arrLength) {
				callback(results)
			}
		}

		arr.forEach(function(a) {
			func(a, count)
		})
	}

	function asyncSerialArray(arr, func, callback) {
		var index = 0
		var arrLength = arr.length

		function next(errors) {
			if (errors && errors.length) {
				callback(errors)
				return
			}
			var original = index
			index = index + 1
			if (original < arrLength) {
				func(arr[original], next)
			} else {
				callback([])
			}
		}

		next([])
	}

	function flattenObjArr(objArr) {
		var ret = []
		;(0, _keys2['default'])(objArr).forEach(function(k) {
			ret.push.apply(ret, objArr[k])
		})
		return ret
	}

	function asyncMap(objArr, option, func, callback) {
		if (option.first) {
			var flattenArr = flattenObjArr(objArr)
			return asyncSerialArray(flattenArr, func, callback)
		}
		var firstFields = option.firstFields || []
		if (firstFields === true) {
			firstFields = (0, _keys2['default'])(objArr)
		}
		var objArrKeys = (0, _keys2['default'])(objArr)
		var objArrLength = objArrKeys.length
		var total = 0
		var results = []
		var pending = new _promise2['default'](function(resolve, reject) {
			var next = function next(errors) {
				results.push.apply(results, errors)
				total++
				if (total === objArrLength) {
					callback(results)
					return results.length
						? reject({
								errors: results,
								fields: convertFieldsError(results)
						  })
						: resolve()
				}
			}
			objArrKeys.forEach(function(key) {
				var arr = objArr[key]
				if (firstFields.indexOf(key) !== -1) {
					asyncSerialArray(arr, func, next)
				} else {
					asyncParallelArray(arr, func, next)
				}
			})
		})
		pending['catch'](function(e) {
			return e
		})
		return pending
	}

	function complementError(rule) {
		return function(oe) {
			if (oe && oe.message) {
				oe.field = oe.field || rule.fullField
				return oe
			}
			return {
				message: typeof oe === 'function' ? oe() : oe,
				field: oe.field || rule.fullField
			}
		}
	}

	function deepMerge(target, source) {
		if (source) {
			for (var s in source) {
				if (source.hasOwnProperty(s)) {
					var value = source[s]
					if (
						(typeof value === 'undefined'
							? 'undefined'
							: (0, _typeof3['default'])(value)) === 'object' &&
						(0, _typeof3['default'])(target[s]) === 'object'
					) {
						target[s] = (0, _extends3['default'])(
							{},
							target[s],
							value
						)
					} else {
						target[s] = value
					}
				}
			}
		}
		return target
	}
})

unwrapExports(util$2)
var util_1 = util$2.warning
var util_2 = util$2.convertFieldsError
var util_3 = util$2.format
var util_4 = util$2.isEmptyValue
var util_5 = util$2.isEmptyObject
var util_6 = util$2.asyncMap
var util_7 = util$2.complementError
var util_8 = util$2.deepMerge

var required_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var util = _interopRequireWildcard(util$2)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	/**
	 *  Rule for validating required fields.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function required(rule, value, source, errors, options, type) {
		if (
			rule.required &&
			(!source.hasOwnProperty(rule.field) ||
				util.isEmptyValue(value, type || rule.type))
		) {
			errors.push(util.format(options.messages.required, rule.fullField))
		}
	}

	exports['default'] = required
})

unwrapExports(required_1)

var whitespace_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var util = _interopRequireWildcard(util$2)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	/**
	 *  Rule for validating whitespace.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function whitespace(rule, value, source, errors, options) {
		if (/^\s+$/.test(value) || value === '') {
			errors.push(
				util.format(options.messages.whitespace, rule.fullField)
			)
		}
	}

	exports['default'] = whitespace
})

unwrapExports(whitespace_1)

var type_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	var util = _interopRequireWildcard(util$2)

	var _required2 = _interopRequireDefault(required_1)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/* eslint max-len:0 */

	var pattern = {
		// http://emailregex.com/
		email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
		url: new RegExp(
			'^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
			'i'
		),
		hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
	}

	var types = {
		integer: function integer(value) {
			return types.number(value) && parseInt(value, 10) === value
		},
		float: function float(value) {
			return types.number(value) && !types.integer(value)
		},
		array: function array(value) {
			return Array.isArray(value)
		},
		regexp: function regexp(value) {
			if (value instanceof RegExp) {
				return true
			}
			try {
				return !!new RegExp(value)
			} catch (e) {
				return false
			}
		},
		date: function date(value) {
			return (
				typeof value.getTime === 'function' &&
				typeof value.getMonth === 'function' &&
				typeof value.getYear === 'function'
			)
		},
		number: function number(value) {
			if (isNaN(value)) {
				return false
			}
			return typeof value === 'number'
		},
		object: function object(value) {
			return (
				(typeof value === 'undefined'
					? 'undefined'
					: (0, _typeof3['default'])(value)) === 'object' &&
				!types.array(value)
			)
		},
		method: function method(value) {
			return typeof value === 'function'
		},
		email: function email(value) {
			return (
				typeof value === 'string' &&
				!!value.match(pattern.email) &&
				value.length < 255
			)
		},
		url: function url(value) {
			return typeof value === 'string' && !!value.match(pattern.url)
		},
		hex: function hex(value) {
			return typeof value === 'string' && !!value.match(pattern.hex)
		}
	}

	/**
	 *  Rule for validating the type of a value.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function type(rule, value, source, errors, options) {
		if (rule.required && value === undefined) {
			;(0, _required2['default'])(rule, value, source, errors, options)
			return
		}
		var custom = [
			'integer',
			'float',
			'array',
			'regexp',
			'object',
			'method',
			'email',
			'number',
			'date',
			'url',
			'hex'
		]
		var ruleType = rule.type
		if (custom.indexOf(ruleType) > -1) {
			if (!types[ruleType](value)) {
				errors.push(
					util.format(
						options.messages.types[ruleType],
						rule.fullField,
						rule.type
					)
				)
			}
			// straight typeof check
		} else if (
			ruleType &&
			(typeof value === 'undefined'
				? 'undefined'
				: (0, _typeof3['default'])(value)) !== rule.type
		) {
			errors.push(
				util.format(
					options.messages.types[ruleType],
					rule.fullField,
					rule.type
				)
			)
		}
	}

	exports['default'] = type
})

unwrapExports(type_1)

var range_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var util = _interopRequireWildcard(util$2)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	/**
	 *  Rule for validating minimum and maximum allowed values.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function range(rule, value, source, errors, options) {
		var len = typeof rule.len === 'number'
		var min = typeof rule.min === 'number'
		var max = typeof rule.max === 'number'
		// 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）
		var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g
		var val = value
		var key = null
		var num = typeof value === 'number'
		var str = typeof value === 'string'
		var arr = Array.isArray(value)
		if (num) {
			key = 'number'
		} else if (str) {
			key = 'string'
		} else if (arr) {
			key = 'array'
		}
		// if the value is not of a supported type for range validation
		// the validation rule rule should use the
		// type property to also test for a particular type
		if (!key) {
			return false
		}
		if (arr) {
			val = value.length
		}
		if (str) {
			// 处理码点大于U+010000的文字length属性不准确的bug，如"𠮷𠮷𠮷".lenght !== 3
			val = value.replace(spRegexp, '_').length
		}
		if (len) {
			if (val !== rule.len) {
				errors.push(
					util.format(
						options.messages[key].len,
						rule.fullField,
						rule.len
					)
				)
			}
		} else if (min && !max && val < rule.min) {
			errors.push(
				util.format(options.messages[key].min, rule.fullField, rule.min)
			)
		} else if (max && !min && val > rule.max) {
			errors.push(
				util.format(options.messages[key].max, rule.fullField, rule.max)
			)
		} else if (min && max && (val < rule.min || val > rule.max)) {
			errors.push(
				util.format(
					options.messages[key].range,
					rule.fullField,
					rule.min,
					rule.max
				)
			)
		}
	}

	exports['default'] = range
})

unwrapExports(range_1)

var _enum = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var util = _interopRequireWildcard(util$2)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	var ENUM = 'enum'

	/**
	 *  Rule for validating a value exists in an enumerable list.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function enumerable(rule, value, source, errors, options) {
		rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : []
		if (rule[ENUM].indexOf(value) === -1) {
			errors.push(
				util.format(
					options.messages[ENUM],
					rule.fullField,
					rule[ENUM].join(', ')
				)
			)
		}
	}

	exports['default'] = enumerable
})

unwrapExports(_enum)

var pattern_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var util = _interopRequireWildcard(util$2)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj['default'] = obj
			return newObj
		}
	}

	/**
	 *  Rule for validating a regular expression pattern.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param source The source object being validated.
	 *  @param errors An array of errors that this rule may add
	 *  validation errors to.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function pattern(rule, value, source, errors, options) {
		if (rule.pattern) {
			if (rule.pattern instanceof RegExp) {
				// if a RegExp instance is passed, reset `lastIndex` in case its `global`
				// flag is accidentally set to `true`, which in a validation scenario
				// is not necessary and the result might be misleading
				rule.pattern.lastIndex = 0
				if (!rule.pattern.test(value)) {
					errors.push(
						util.format(
							options.messages.pattern.mismatch,
							rule.fullField,
							value,
							rule.pattern
						)
					)
				}
			} else if (typeof rule.pattern === 'string') {
				var _pattern = new RegExp(rule.pattern)
				if (!_pattern.test(value)) {
					errors.push(
						util.format(
							options.messages.pattern.mismatch,
							rule.fullField,
							value,
							rule.pattern
						)
					)
				}
			}
		}
	}

	exports['default'] = pattern
})

unwrapExports(pattern_1)

var rule = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _required2 = _interopRequireDefault(required_1)

	var _whitespace2 = _interopRequireDefault(whitespace_1)

	var _type2 = _interopRequireDefault(type_1)

	var _range2 = _interopRequireDefault(range_1)

	var _enum2 = _interopRequireDefault(_enum)

	var _pattern2 = _interopRequireDefault(pattern_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports['default'] = {
		required: _required2['default'],
		whitespace: _whitespace2['default'],
		type: _type2['default'],
		range: _range2['default'],
		enum: _enum2['default'],
		pattern: _pattern2['default']
	}
})

unwrapExports(rule)

var string_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Performs validation for string types.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function string(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value, 'string') && !rule.required) {
				return callback()
			}
			_rule2['default'].required(
				rule,
				value,
				source,
				errors,
				options,
				'string'
			)
			if (!(0, util$2.isEmptyValue)(value, 'string')) {
				_rule2['default'].type(rule, value, source, errors, options)
				_rule2['default'].range(rule, value, source, errors, options)
				_rule2['default'].pattern(rule, value, source, errors, options)
				if (rule.whitespace === true) {
					_rule2['default'].whitespace(
						rule,
						value,
						source,
						errors,
						options
					)
				}
			}
		}
		callback(errors)
	}

	exports['default'] = string
})

unwrapExports(string_1)

var method_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a function.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function method(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = method
})

unwrapExports(method_1)

var number_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a number.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function number(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if (value === '') {
				value = undefined
			}
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
				_rule2['default'].range(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = number
})

unwrapExports(number_1)

var boolean_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a boolean.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function boolean(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = boolean
})

unwrapExports(boolean_1)

var regexp_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates the regular expression type.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function regexp(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (!(0, util$2.isEmptyValue)(value)) {
				_rule2['default'].type(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = regexp
})

unwrapExports(regexp_1)

var integer_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a number is an integer.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function integer(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
				_rule2['default'].range(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = integer
})

unwrapExports(integer_1)

var float_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a number is a floating point number.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function floatFn(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
				_rule2['default'].range(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = floatFn
})

unwrapExports(float_1)

var array_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates an array.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function array(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value, 'array') && !rule.required) {
				return callback()
			}
			_rule2['default'].required(
				rule,
				value,
				source,
				errors,
				options,
				'array'
			)
			if (!(0, util$2.isEmptyValue)(value, 'array')) {
				_rule2['default'].type(rule, value, source, errors, options)
				_rule2['default'].range(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = array
})

unwrapExports(array_1)

var object_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates an object.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function object(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value !== undefined) {
				_rule2['default'].type(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = object
})

unwrapExports(object_1)

var _enum$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var ENUM = 'enum'

	/**
	 *  Validates an enumerable list.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function enumerable(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (value) {
				_rule2['default'][ENUM](rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = enumerable
})

unwrapExports(_enum$1)

var pattern_1$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Validates a regular expression pattern.
	 *
	 *  Performs validation when a rule only contains
	 *  a pattern property but is not declared as a string type.
	 *
	 *  @param rule The validation rule.
	 *  @param value The value of the field on the source object.
	 *  @param callback The callback function.
	 *  @param source The source object being validated.
	 *  @param options The validation options.
	 *  @param options.messages The validation messages.
	 */
	function pattern(rule, value, callback, source, options) {
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value, 'string') && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (!(0, util$2.isEmptyValue)(value, 'string')) {
				_rule2['default'].pattern(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = pattern
})

unwrapExports(pattern_1$1)

var date_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function date(rule, value, callback, source, options) {
		// console.log('integer rule called %j', rule);
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		// console.log('validate on %s value', value);
		if (validate) {
			if ((0, util$2.isEmptyValue)(value) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(rule, value, source, errors, options)
			if (!(0, util$2.isEmptyValue)(value)) {
				var dateObject = void 0

				if (typeof value === 'number') {
					dateObject = new Date(value)
				} else {
					dateObject = value
				}

				_rule2['default'].type(
					rule,
					dateObject,
					source,
					errors,
					options
				)
				if (dateObject) {
					_rule2['default'].range(
						rule,
						dateObject.getTime(),
						source,
						errors,
						options
					)
				}
			}
		}
		callback(errors)
	}

	exports['default'] = date
})

unwrapExports(date_1)

var required_1$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function required(rule, value, callback, source, options) {
		var errors = []
		var type = Array.isArray(value)
			? 'array'
			: typeof value === 'undefined'
			? 'undefined'
			: (0, _typeof3['default'])(value)
		_rule2['default'].required(rule, value, source, errors, options, type)
		callback(errors)
	}

	exports['default'] = required
})

unwrapExports(required_1$1)

var type_1$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _rule2 = _interopRequireDefault(rule)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function type(rule, value, callback, source, options) {
		var ruleType = rule.type
		var errors = []
		var validate =
			rule.required ||
			(!rule.required && source.hasOwnProperty(rule.field))
		if (validate) {
			if ((0, util$2.isEmptyValue)(value, ruleType) && !rule.required) {
				return callback()
			}
			_rule2['default'].required(
				rule,
				value,
				source,
				errors,
				options,
				ruleType
			)
			if (!(0, util$2.isEmptyValue)(value, ruleType)) {
				_rule2['default'].type(rule, value, source, errors, options)
			}
		}
		callback(errors)
	}

	exports['default'] = type
})

unwrapExports(type_1$1)

var validator = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _string2 = _interopRequireDefault(string_1)

	var _method2 = _interopRequireDefault(method_1)

	var _number2 = _interopRequireDefault(number_1)

	var _boolean2 = _interopRequireDefault(boolean_1)

	var _regexp2 = _interopRequireDefault(regexp_1)

	var _integer2 = _interopRequireDefault(integer_1)

	var _float2 = _interopRequireDefault(float_1)

	var _array2 = _interopRequireDefault(array_1)

	var _object2 = _interopRequireDefault(object_1)

	var _enum2 = _interopRequireDefault(_enum$1)

	var _pattern2 = _interopRequireDefault(pattern_1$1)

	var _date2 = _interopRequireDefault(date_1)

	var _required2 = _interopRequireDefault(required_1$1)

	var _type2 = _interopRequireDefault(type_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports['default'] = {
		string: _string2['default'],
		method: _method2['default'],
		number: _number2['default'],
		boolean: _boolean2['default'],
		regexp: _regexp2['default'],
		integer: _integer2['default'],
		float: _float2['default'],
		array: _array2['default'],
		object: _object2['default'],
		enum: _enum2['default'],
		pattern: _pattern2['default'],
		date: _date2['default'],
		url: _type2['default'],
		hex: _type2['default'],
		email: _type2['default'],
		required: _required2['default']
	}
})

unwrapExports(validator)

var messages_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.messages = undefined

	var _stringify2 = _interopRequireDefault(stringify$1)

	exports.newMessages = newMessages

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function newMessages() {
		return {
			default: 'Validation error on field %s',
			required: '%s is required',
			enum: '%s must be one of %s',
			whitespace: '%s cannot be empty',
			date: {
				format: '%s date %s is invalid for format %s',
				parse: '%s date could not be parsed, %s is invalid ',
				invalid: '%s date %s is invalid'
			},
			types: {
				string: '%s is not a %s',
				method: '%s is not a %s (function)',
				array: '%s is not an %s',
				object: '%s is not an %s',
				number: '%s is not a %s',
				date: '%s is not a %s',
				boolean: '%s is not a %s',
				integer: '%s is not an %s',
				float: '%s is not a %s',
				regexp: '%s is not a valid %s',
				email: '%s is not a valid %s',
				url: '%s is not a valid %s',
				hex: '%s is not a valid %s'
			},
			string: {
				len: '%s must be exactly %s characters',
				min: '%s must be at least %s characters',
				max: '%s cannot be longer than %s characters',
				range: '%s must be between %s and %s characters'
			},
			number: {
				len: '%s must equal %s',
				min: '%s cannot be less than %s',
				max: '%s cannot be greater than %s',
				range: '%s must be between %s and %s'
			},
			array: {
				len: '%s must be exactly %s in length',
				min: '%s cannot be less than %s in length',
				max: '%s cannot be greater than %s in length',
				range: '%s must be between %s and %s in length'
			},
			pattern: {
				mismatch: '%s value %s does not match pattern %s'
			},
			clone: function clone() {
				var cloned = JSON.parse((0, _stringify2['default'])(this))
				cloned.clone = this.clone
				return cloned
			}
		}
	}

	var messages = (exports.messages = newMessages())
})

unwrapExports(messages_1)
var messages_2 = messages_1.messages
var messages_3 = messages_1.newMessages

var es = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends3 = _interopRequireDefault(_extends)

	var _promise2 = _interopRequireDefault(promise$1)

	var _keys2 = _interopRequireDefault(keys$2)

	var _typeof3 = _interopRequireDefault(_typeof_1$1)

	var _validator2 = _interopRequireDefault(validator)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/**
	 *  Encapsulates a validation schema.
	 *
	 *  @param descriptor An object declaring validation rules
	 *  for this schema.
	 */
	function Schema(descriptor) {
		this.rules = null
		this._messages = messages_1.messages
		this.define(descriptor)
	}

	Schema.prototype = {
		messages: function messages(_messages) {
			if (_messages) {
				this._messages = (0, util$2.deepMerge)(
					(0, messages_1.newMessages)(),
					_messages
				)
			}
			return this._messages
		},
		define: function define(rules) {
			if (!rules) {
				throw new Error('Cannot configure a schema with no rules')
			}
			if (
				(typeof rules === 'undefined'
					? 'undefined'
					: (0, _typeof3['default'])(rules)) !== 'object' ||
				Array.isArray(rules)
			) {
				throw new Error('Rules must be an object')
			}
			this.rules = {}
			var z = void 0
			var item = void 0
			for (z in rules) {
				if (rules.hasOwnProperty(z)) {
					item = rules[z]
					this.rules[z] = Array.isArray(item) ? item : [item]
				}
			}
		},
		validate: function validate(source_) {
			var _this = this

			var o =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: {}
			var oc =
				arguments.length > 2 && arguments[2] !== undefined
					? arguments[2]
					: function() {}

			var source = source_
			var options = o
			var callback = oc
			if (typeof options === 'function') {
				callback = options
				options = {}
			}
			if (
				!this.rules ||
				(0, _keys2['default'])(this.rules).length === 0
			) {
				if (callback) {
					callback()
				}
				return _promise2['default'].resolve()
			}

			function complete(results) {
				var i = void 0
				var errors = []
				var fields = {}

				function add(e) {
					if (Array.isArray(e)) {
						var _errors

						errors = (_errors = errors).concat.apply(_errors, e)
					} else {
						errors.push(e)
					}
				}

				for (i = 0; i < results.length; i++) {
					add(results[i])
				}
				if (!errors.length) {
					errors = null
					fields = null
				} else {
					fields = (0, util$2.convertFieldsError)(errors)
				}
				callback(errors, fields)
			}

			if (options.messages) {
				var messages = this.messages()
				if (messages === messages_1.messages) {
					messages = (0, messages_1.newMessages)()
				}
				;(0, util$2.deepMerge)(messages, options.messages)
				options.messages = messages
			} else {
				options.messages = this.messages()
			}
			var arr = void 0
			var value = void 0
			var series = {}
			var keys = options.keys || (0, _keys2['default'])(this.rules)
			keys.forEach(function(z) {
				arr = _this.rules[z]
				value = source[z]
				arr.forEach(function(r) {
					var rule = r
					if (typeof rule.transform === 'function') {
						if (source === source_) {
							source = (0, _extends3['default'])({}, source)
						}
						value = source[z] = rule.transform(value)
					}
					if (typeof rule === 'function') {
						rule = {
							validator: rule
						}
					} else {
						rule = (0, _extends3['default'])({}, rule)
					}
					rule.validator = _this.getValidationMethod(rule)
					rule.field = z
					rule.fullField = rule.fullField || z
					rule.type = _this.getType(rule)
					if (!rule.validator) {
						return
					}
					series[z] = series[z] || []
					series[z].push({
						rule: rule,
						value: value,
						source: source,
						field: z
					})
				})
			})
			var errorFields = {}
			return (0, util$2.asyncMap)(
				series,
				options,
				function(data, doIt) {
					var rule = data.rule
					var deep =
						(rule.type === 'object' || rule.type === 'array') &&
						((0, _typeof3['default'])(rule.fields) === 'object' ||
							(0, _typeof3['default'])(rule.defaultField) ===
								'object')
					deep =
						deep &&
						(rule.required || (!rule.required && data.value))
					rule.field = data.field

					function addFullfield(key, schema) {
						return (0, _extends3['default'])({}, schema, {
							fullField: rule.fullField + '.' + key
						})
					}

					function cb() {
						var e =
							arguments.length > 0 && arguments[0] !== undefined
								? arguments[0]
								: []

						var errors = e
						if (!Array.isArray(errors)) {
							errors = [errors]
						}
						if (!options.suppressWarning && errors.length) {
							Schema.warning('async-validator:', errors)
						}
						if (errors.length && rule.message) {
							errors = [].concat(rule.message)
						}

						errors = errors.map((0, util$2.complementError)(rule))

						if (options.first && errors.length) {
							errorFields[rule.field] = 1
							return doIt(errors)
						}
						if (!deep) {
							doIt(errors)
						} else {
							// if rule is required but the target object
							// does not exist fail at the rule level and don't
							// go deeper
							if (rule.required && !data.value) {
								if (rule.message) {
									errors = []
										.concat(rule.message)
										.map((0, util$2.complementError)(rule))
								} else if (options.error) {
									errors = [
										options.error(
											rule,
											(0, util$2.format)(
												options.messages.required,
												rule.field
											)
										)
									]
								} else {
									errors = []
								}
								return doIt(errors)
							}

							var fieldsSchema = {}
							if (rule.defaultField) {
								for (var k in data.value) {
									if (data.value.hasOwnProperty(k)) {
										fieldsSchema[k] = rule.defaultField
									}
								}
							}
							fieldsSchema = (0, _extends3['default'])(
								{},
								fieldsSchema,
								data.rule.fields
							)
							for (var f in fieldsSchema) {
								if (fieldsSchema.hasOwnProperty(f)) {
									var fieldSchema = Array.isArray(
										fieldsSchema[f]
									)
										? fieldsSchema[f]
										: [fieldsSchema[f]]
									fieldsSchema[f] = fieldSchema.map(
										addFullfield.bind(null, f)
									)
								}
							}
							var schema = new Schema(fieldsSchema)
							schema.messages(options.messages)
							if (data.rule.options) {
								data.rule.options.messages = options.messages
								data.rule.options.error = options.error
							}
							schema.validate(
								data.value,
								data.rule.options || options,
								function(errs) {
									var finalErrors = []
									if (errors && errors.length) {
										finalErrors.push.apply(
											finalErrors,
											errors
										)
									}
									if (errs && errs.length) {
										finalErrors.push.apply(
											finalErrors,
											errs
										)
									}
									doIt(
										finalErrors.length ? finalErrors : null
									)
								}
							)
						}
					}

					var res = void 0
					if (rule.asyncValidator) {
						res = rule.asyncValidator(
							rule,
							data.value,
							cb,
							data.source,
							options
						)
					} else if (rule.validator) {
						res = rule.validator(
							rule,
							data.value,
							cb,
							data.source,
							options
						)
						if (res === true) {
							cb()
						} else if (res === false) {
							cb(rule.message || rule.field + ' fails')
						} else if (res instanceof Array) {
							cb(res)
						} else if (res instanceof Error) {
							cb(res.message)
						}
					}
					if (res && res.then) {
						res.then(
							function() {
								return cb()
							},
							function(e) {
								return cb(e)
							}
						)
					}
				},
				function(results) {
					complete(results)
				}
			)
		},
		getType: function getType(rule) {
			if (rule.type === undefined && rule.pattern instanceof RegExp) {
				rule.type = 'pattern'
			}
			if (
				typeof rule.validator !== 'function' &&
				rule.type &&
				!_validator2['default'].hasOwnProperty(rule.type)
			) {
				throw new Error(
					(0, util$2.format)('Unknown rule type %s', rule.type)
				)
			}
			return rule.type || 'string'
		},
		getValidationMethod: function getValidationMethod(rule) {
			if (typeof rule.validator === 'function') {
				return rule.validator
			}
			var keys = (0, _keys2['default'])(rule)
			var messageIndex = keys.indexOf('message')
			if (messageIndex !== -1) {
				keys.splice(messageIndex, 1)
			}
			if (keys.length === 1 && keys[0] === 'required') {
				return _validator2['default'].required
			}
			return _validator2['default'][this.getType(rule)] || false
		}
	}

	Schema.register = function register(type, validator) {
		if (typeof validator !== 'function') {
			throw new Error(
				'Cannot register a validator by type, validator is not a function'
			)
		}
		_validator2['default'][type] = validator
	}

	Schema.warning = util$2.warning

	Schema.messages = messages_1.messages

	exports['default'] = Schema
})

unwrapExports(es)

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var __DEV__ = process.env.NODE_ENV !== 'production'

var warning$2 = function() {}

if (__DEV__) {
	var printWarning$3 = function printWarning(format, args) {
		var len = arguments.length
		args = new Array(len > 1 ? len - 1 : 0)
		for (var key = 1; key < len; key++) {
			args[key - 1] = arguments[key]
		}
		var argIndex = 0
		var message =
			'Warning: ' +
			format.replace(/%s/g, function() {
				return args[argIndex++]
			})
		if (typeof console !== 'undefined') {
			console.error(message)
		}
		try {
			// --- Welcome to debugging React ---
			// This error was thrown as a convenience so that you can use this stack
			// to find the callsite that caused this warning to fire.
			throw new Error(message)
		} catch (x) {}
	}

	warning$2 = function(condition, format, args) {
		var len = arguments.length
		args = new Array(len > 2 ? len - 2 : 0)
		for (var key = 2; key < len; key++) {
			args[key - 2] = arguments[key]
		}
		if (format === undefined) {
			throw new Error(
				'`warning(condition, format, ...args)` requires a warning ' +
					'message argument'
			)
		}
		if (!condition) {
			printWarning$3.apply(null, [format].concat(args))
		}
	}
}

var warning_1$1 = warning$2

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
	var result = object == null ? undefined : _baseGet(object, path)
	return result === undefined ? defaultValue : result
}

var get_1 = get

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
	return object == null ? object : _baseSet(object, path, value)
}

var set_1 = set

var createFormField_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends3 = _interopRequireDefault(_extends)

	var _classCallCheck3 = _interopRequireDefault(classCallCheck$1)

	exports.isFormField = isFormField
	exports['default'] = createFormField

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var Field = function Field(fields) {
		;(0, _classCallCheck3['default'])(this, Field)
		;(0, _extends3['default'])(this, fields)
	}

	function isFormField(obj) {
		return obj instanceof Field
	}

	function createFormField(field) {
		if (isFormField(field)) {
			return field
		}
		return new Field(field)
	}
})

var createFormField = unwrapExports(createFormField_1)
var createFormField_2 = createFormField_1.isFormField

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

var REACT_STATICS = {
	childContextTypes: true,
	contextType: true,
	contextTypes: true,
	defaultProps: true,
	displayName: true,
	getDefaultProps: true,
	getDerivedStateFromError: true,
	getDerivedStateFromProps: true,
	mixins: true,
	propTypes: true,
	type: true
}

var KNOWN_STATICS = {
	name: true,
	length: true,
	prototype: true,
	caller: true,
	callee: true,
	arguments: true,
	arity: true
}

var FORWARD_REF_STATICS = {
	$$typeof: true,
	render: true,
	defaultProps: true,
	displayName: true,
	propTypes: true
}

var MEMO_STATICS = {
	$$typeof: true,
	compare: true,
	defaultProps: true,
	displayName: true,
	propTypes: true,
	type: true
}

var TYPE_STATICS = {}
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS

function getStatics(component) {
	if (reactIs.isMemo(component)) {
		return MEMO_STATICS
	}
	return TYPE_STATICS[component['$$typeof']] || REACT_STATICS
}

var defineProperty$6 = Object.defineProperty
var getOwnPropertyNames = Object.getOwnPropertyNames
var getOwnPropertySymbols$1 = Object.getOwnPropertySymbols
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor
var getPrototypeOf$1 = Object.getPrototypeOf
var objectPrototype = Object.prototype

function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	if (typeof sourceComponent !== 'string') {
		// don't hoist over string (html) components

		if (objectPrototype) {
			var inheritedComponent = getPrototypeOf$1(sourceComponent)
			if (inheritedComponent && inheritedComponent !== objectPrototype) {
				hoistNonReactStatics(
					targetComponent,
					inheritedComponent,
					blacklist
				)
			}
		}

		var keys = getOwnPropertyNames(sourceComponent)

		if (getOwnPropertySymbols$1) {
			keys = keys.concat(getOwnPropertySymbols$1(sourceComponent))
		}

		var targetStatics = getStatics(targetComponent)
		var sourceStatics = getStatics(sourceComponent)

		for (var i = 0; i < keys.length; ++i) {
			var key = keys[i]
			if (
				!KNOWN_STATICS[key] &&
				!(blacklist && blacklist[key]) &&
				!(sourceStatics && sourceStatics[key]) &&
				!(targetStatics && targetStatics[key])
			) {
				var descriptor = getOwnPropertyDescriptor(sourceComponent, key)
				try {
					// Avoid failures from read-only properties
					defineProperty$6(targetComponent, key, descriptor)
				} catch (e) {}
			}
		}

		return targetComponent
	}

	return targetComponent
}

var hoistNonReactStatics_cjs = hoistNonReactStatics

var utils$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends3 = _interopRequireDefault(_extends)

	exports.argumentContainer = argumentContainer
	exports.identity = identity
	exports.flattenArray = flattenArray
	exports.treeTraverse = treeTraverse
	exports.flattenFields = flattenFields
	exports.normalizeValidateRules = normalizeValidateRules
	exports.getValidateTriggers = getValidateTriggers
	exports.getValueFromEvent = getValueFromEvent
	exports.getErrorStrs = getErrorStrs
	exports.getParams = getParams
	exports.isEmptyObject = isEmptyObject
	exports.hasRules = hasRules
	exports.startsWith = startsWith

	var _hoistNonReactStatics2 = _interopRequireDefault(
		hoistNonReactStatics_cjs
	)

	var _warning2 = _interopRequireDefault(warning_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function getDisplayName(WrappedComponent) {
		return (
			WrappedComponent.displayName ||
			WrappedComponent.name ||
			'WrappedComponent'
		)
	}

	function argumentContainer(Container, WrappedComponent) {
		/* eslint no-param-reassign:0 */
		Container.displayName = 'Form(' + getDisplayName(WrappedComponent) + ')'
		Container.WrappedComponent = WrappedComponent
		return (0,
		_hoistNonReactStatics2['default'])(Container, WrappedComponent)
	}

	function identity(obj) {
		return obj
	}

	function flattenArray(arr) {
		return Array.prototype.concat.apply([], arr)
	}

	function treeTraverse() {
		var path =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: ''
		var tree = arguments[1]
		var isLeafNode = arguments[2]
		var errorMessage = arguments[3]
		var callback = arguments[4]

		if (isLeafNode(path, tree)) {
			callback(path, tree)
		} else if (tree === undefined || tree === null);
		else if (Array.isArray(tree)) {
			tree.forEach(function(subTree, index) {
				return treeTraverse(
					path + '[' + index + ']',
					subTree,
					isLeafNode,
					errorMessage,
					callback
				)
			})
		} else {
			// It's object and not a leaf node
			if (typeof tree !== 'object') {
				;(0, _warning2['default'])(false, errorMessage)
				return
			}
			Object.keys(tree).forEach(function(subTreeKey) {
				var subTree = tree[subTreeKey]
				treeTraverse(
					'' + path + (path ? '.' : '') + subTreeKey,
					subTree,
					isLeafNode,
					errorMessage,
					callback
				)
			})
		}
	}

	function flattenFields(maybeNestedFields, isLeafNode, errorMessage) {
		var fields = {}
		treeTraverse(
			undefined,
			maybeNestedFields,
			isLeafNode,
			errorMessage,
			function(path, node) {
				fields[path] = node
			}
		)
		return fields
	}

	function normalizeValidateRules(validate, rules, validateTrigger) {
		var validateRules = validate.map(function(item) {
			var newItem = (0, _extends3['default'])({}, item, {
				trigger: item.trigger || []
			})
			if (typeof newItem.trigger === 'string') {
				newItem.trigger = [newItem.trigger]
			}
			return newItem
		})
		if (rules) {
			validateRules.push({
				trigger: validateTrigger ? [].concat(validateTrigger) : [],
				rules: rules
			})
		}
		return validateRules
	}

	function getValidateTriggers(validateRules) {
		return validateRules
			.filter(function(item) {
				return !!item.rules && item.rules.length
			})
			.map(function(item) {
				return item.trigger
			})
			.reduce(function(pre, curr) {
				return pre.concat(curr)
			}, [])
	}

	function getValueFromEvent(e) {
		// To support custom element
		if (!e || !e.target) {
			return e
		}
		var target = e.target

		return target.type === 'checkbox' ? target.checked : target.value
	}

	function getErrorStrs(errors) {
		if (errors) {
			return errors.map(function(e) {
				if (e && e.message) {
					return e.message
				}
				return e
			})
		}
		return errors
	}

	function getParams(ns, opt, cb) {
		var names = ns
		var options = opt
		var callback = cb
		if (cb === undefined) {
			if (typeof names === 'function') {
				callback = names
				options = {}
				names = undefined
			} else if (Array.isArray(names)) {
				if (typeof options === 'function') {
					callback = options
					options = {}
				} else {
					options = options || {}
				}
			} else {
				callback = options
				options = names || {}
				names = undefined
			}
		}
		return {
			names: names,
			options: options,
			callback: callback
		}
	}

	function isEmptyObject(obj) {
		return Object.keys(obj).length === 0
	}

	function hasRules(validate) {
		if (validate) {
			return validate.some(function(item) {
				return item.rules && item.rules.length
			})
		}
		return false
	}

	function startsWith(str, prefix) {
		return str.lastIndexOf(prefix, 0) === 0
	}
})

unwrapExports(utils$1)
var utils_1 = utils$1.argumentContainer
var utils_2 = utils$1.identity
var utils_3 = utils$1.flattenArray
var utils_4 = utils$1.treeTraverse
var utils_5 = utils$1.flattenFields
var utils_6 = utils$1.normalizeValidateRules
var utils_7 = utils$1.getValidateTriggers
var utils_8 = utils$1.getValueFromEvent
var utils_9 = utils$1.getErrorStrs
var utils_10 = utils$1.getParams
var utils_11 = utils$1.isEmptyObject
var utils_12 = utils$1.hasRules
var utils_13 = utils$1.startsWith

var createFieldsStore_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _defineProperty3 = _interopRequireDefault(defineProperty$4)

	var _extends3 = _interopRequireDefault(_extends)

	var _classCallCheck3 = _interopRequireDefault(classCallCheck$1)

	var _createClass3 = _interopRequireDefault(createClass$1)

	exports['default'] = createFieldsStore

	var _set2 = _interopRequireDefault(set_1)

	var _createFormField2 = _interopRequireDefault(createFormField_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function partOf(a, b) {
		return b.indexOf(a) === 0 && ['.', '['].indexOf(b[a.length]) !== -1
	}

	function internalFlattenFields(fields) {
		return (0, utils$1.flattenFields)(
			fields,
			function(_, node) {
				return (0, createFormField_1.isFormField)(node)
			},
			'You must wrap field data with `createFormField`.'
		)
	}

	var FieldsStore = (function() {
		function FieldsStore(fields) {
			;(0, _classCallCheck3['default'])(this, FieldsStore)

			_initialiseProps.call(this)

			this.fields = internalFlattenFields(fields)
			this.fieldsMeta = {}
		}

		;(0, _createClass3['default'])(FieldsStore, [
			{
				key: 'updateFields',
				value: function updateFields(fields) {
					this.fields = internalFlattenFields(fields)
				}
			},
			{
				key: 'flattenRegisteredFields',
				value: function flattenRegisteredFields(fields) {
					var validFieldsName = this.getAllFieldsName()
					return (0, utils$1.flattenFields)(
						fields,
						function(path) {
							return validFieldsName.indexOf(path) >= 0
						},
						'You cannot set a form field before rendering a field associated with the value.'
					)
				}
			},
			{
				key: 'setFields',
				value: function setFields(fields) {
					var _this = this

					var fieldsMeta = this.fieldsMeta
					var nowFields = (0, _extends3['default'])(
						{},
						this.fields,
						fields
					)
					var nowValues = {}
					Object.keys(fieldsMeta).forEach(function(f) {
						nowValues[f] = _this.getValueFromFields(f, nowFields)
					})
					Object.keys(nowValues).forEach(function(f) {
						var value = nowValues[f]
						var fieldMeta = _this.getFieldMeta(f)
						if (fieldMeta && fieldMeta.normalize) {
							var nowValue = fieldMeta.normalize(
								value,
								_this.getValueFromFields(f, _this.fields),
								nowValues
							)
							if (nowValue !== value) {
								nowFields[f] = (0, _extends3['default'])(
									{},
									nowFields[f],
									{
										value: nowValue
									}
								)
							}
						}
					})
					this.fields = nowFields
				}
			},
			{
				key: 'resetFields',
				value: function resetFields(ns) {
					var fields = this.fields

					var names = ns
						? this.getValidFieldsFullName(ns)
						: this.getAllFieldsName()
					return names.reduce(function(acc, name) {
						var field = fields[name]
						if (field && 'value' in field) {
							acc[name] = {}
						}
						return acc
					}, {})
				}
			},
			{
				key: 'setFieldMeta',
				value: function setFieldMeta(name, meta) {
					this.fieldsMeta[name] = meta
				}
			},
			{
				key: 'setFieldsAsDirty',
				value: function setFieldsAsDirty() {
					var _this2 = this

					Object.keys(this.fields).forEach(function(name) {
						var field = _this2.fields[name]
						var fieldMeta = _this2.fieldsMeta[name]
						if (
							field &&
							fieldMeta &&
							(0, utils$1.hasRules)(fieldMeta.validate)
						) {
							_this2.fields[name] = (0, _extends3['default'])(
								{},
								field,
								{
									dirty: true
								}
							)
						}
					})
				}
			},
			{
				key: 'getFieldMeta',
				value: function getFieldMeta(name) {
					this.fieldsMeta[name] = this.fieldsMeta[name] || {}
					return this.fieldsMeta[name]
				}
			},
			{
				key: 'getValueFromFields',
				value: function getValueFromFields(name, fields) {
					var field = fields[name]
					if (field && 'value' in field) {
						return field.value
					}
					var fieldMeta = this.getFieldMeta(name)
					return fieldMeta && fieldMeta.initialValue
				}
			},
			{
				key: 'getValidFieldsName',
				value: function getValidFieldsName() {
					var _this3 = this

					var fieldsMeta = this.fieldsMeta

					return fieldsMeta
						? Object.keys(fieldsMeta).filter(function(name) {
								return !_this3.getFieldMeta(name).hidden
						  })
						: []
				}
			},
			{
				key: 'getAllFieldsName',
				value: function getAllFieldsName() {
					var fieldsMeta = this.fieldsMeta

					return fieldsMeta ? Object.keys(fieldsMeta) : []
				}
			},
			{
				key: 'getValidFieldsFullName',
				value: function getValidFieldsFullName(maybePartialName) {
					var maybePartialNames = Array.isArray(maybePartialName)
						? maybePartialName
						: [maybePartialName]
					return this.getValidFieldsName().filter(function(fullName) {
						return maybePartialNames.some(function(partialName) {
							return (
								fullName === partialName ||
								((0, utils$1.startsWith)(
									fullName,
									partialName
								) &&
									['.', '['].indexOf(
										fullName[partialName.length]
									) >= 0)
							)
						})
					})
				}
			},
			{
				key: 'getFieldValuePropValue',
				value: function getFieldValuePropValue(fieldMeta) {
					var name = fieldMeta.name,
						getValueProps = fieldMeta.getValueProps,
						valuePropName = fieldMeta.valuePropName

					var field = this.getField(name)
					var fieldValue =
						'value' in field ? field.value : fieldMeta.initialValue
					if (getValueProps) {
						return getValueProps(fieldValue)
					}
					return (0, _defineProperty3['default'])(
						{},
						valuePropName,
						fieldValue
					)
				}
			},
			{
				key: 'getField',
				value: function getField(name) {
					return (0, _extends3['default'])({}, this.fields[name], {
						name: name
					})
				}
			},
			{
				key: 'getNotCollectedFields',
				value: function getNotCollectedFields() {
					var _this4 = this

					var fieldsName = this.getValidFieldsName()
					return fieldsName
						.filter(function(name) {
							return !_this4.fields[name]
						})
						.map(function(name) {
							return {
								name: name,
								dirty: false,
								value: _this4.getFieldMeta(name).initialValue
							}
						})
						.reduce(function(acc, field) {
							return (0,
							_set2[
								'default'
							])(acc, field.name, (0, _createFormField2['default'])(field))
						}, {})
				}
			},
			{
				key: 'getNestedAllFields',
				value: function getNestedAllFields() {
					var _this5 = this

					return Object.keys(this.fields).reduce(function(acc, name) {
						return (0,
						_set2[
							'default'
						])(acc, name, (0, _createFormField2['default'])(_this5.fields[name]))
					}, this.getNotCollectedFields())
				}
			},
			{
				key: 'getFieldMember',
				value: function getFieldMember(name, member) {
					return this.getField(name)[member]
				}
			},
			{
				key: 'getNestedFields',
				value: function getNestedFields(names, getter) {
					var fields = names || this.getValidFieldsName()
					return fields.reduce(function(acc, f) {
						return (0, _set2['default'])(acc, f, getter(f))
					}, {})
				}
			},
			{
				key: 'getNestedField',
				value: function getNestedField(name, getter) {
					var fullNames = this.getValidFieldsFullName(name)
					if (
						fullNames.length === 0 || // Not registered
						(fullNames.length === 1 && fullNames[0] === name) // Name already is full name.
					) {
						return getter(name)
					}
					var isArrayValue = fullNames[0][name.length] === '['
					var suffixNameStartIndex = isArrayValue
						? name.length
						: name.length + 1
					return fullNames.reduce(
						function(acc, fullName) {
							return (0, _set2['default'])(
								acc,
								fullName.slice(suffixNameStartIndex),
								getter(fullName)
							)
						},
						isArrayValue ? [] : {}
					)
				}
			},
			{
				key: 'isValidNestedFieldName',

				// @private
				// BG: `a` and `a.b` cannot be use in the same form
				value: function isValidNestedFieldName(name) {
					var names = this.getAllFieldsName()
					return names.every(function(n) {
						return !partOf(n, name) && !partOf(name, n)
					})
				}
			},
			{
				key: 'clearField',
				value: function clearField(name) {
					delete this.fields[name]
					delete this.fieldsMeta[name]
				}
			}
		])
		return FieldsStore
	})()

	var _initialiseProps = function _initialiseProps() {
		var _this6 = this

		this.setFieldsInitialValue = function(initialValues) {
			var flattenedInitialValues = _this6.flattenRegisteredFields(
				initialValues
			)
			var fieldsMeta = _this6.fieldsMeta
			Object.keys(flattenedInitialValues).forEach(function(name) {
				if (fieldsMeta[name]) {
					_this6.setFieldMeta(
						name,
						(0, _extends3['default'])(
							{},
							_this6.getFieldMeta(name),
							{
								initialValue: flattenedInitialValues[name]
							}
						)
					)
				}
			})
		}

		this.getAllValues = function() {
			var fieldsMeta = _this6.fieldsMeta,
				fields = _this6.fields

			return Object.keys(fieldsMeta).reduce(function(acc, name) {
				return (0,
				_set2[
					'default'
				])(acc, name, _this6.getValueFromFields(name, fields))
			}, {})
		}

		this.getFieldsValue = function(names) {
			return _this6.getNestedFields(names, _this6.getFieldValue)
		}

		this.getFieldValue = function(name) {
			var fields = _this6.fields

			return _this6.getNestedField(name, function(fullName) {
				return _this6.getValueFromFields(fullName, fields)
			})
		}

		this.getFieldsError = function(names) {
			return _this6.getNestedFields(names, _this6.getFieldError)
		}

		this.getFieldError = function(name) {
			return _this6.getNestedField(name, function(fullName) {
				return (0,
				utils$1.getErrorStrs)(_this6.getFieldMember(fullName, 'errors'))
			})
		}

		this.isFieldValidating = function(name) {
			return _this6.getFieldMember(name, 'validating')
		}

		this.isFieldsValidating = function(ns) {
			var names = ns || _this6.getValidFieldsName()
			return names.some(function(n) {
				return _this6.isFieldValidating(n)
			})
		}

		this.isFieldTouched = function(name) {
			return _this6.getFieldMember(name, 'touched')
		}

		this.isFieldsTouched = function(ns) {
			var names = ns || _this6.getValidFieldsName()
			return names.some(function(n) {
				return _this6.isFieldTouched(n)
			})
		}
	}

	function createFieldsStore(fields) {
		return new FieldsStore(fields)
	}
	module.exports = exports['default']
})

unwrapExports(createFieldsStore_1)

var createBaseForm_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _objectWithoutProperties3 = _interopRequireDefault(
		objectWithoutProperties$1
	)

	var _defineProperty3 = _interopRequireDefault(defineProperty$4)

	var _extends6 = _interopRequireDefault(_extends)

	var _toConsumableArray3 = _interopRequireDefault(toConsumableArray$1)

	var _react2 = _interopRequireDefault(React__default)

	var _createReactClass2 = _interopRequireDefault(createReactClass)

	var _asyncValidator2 = _interopRequireDefault(es)

	var _warning2 = _interopRequireDefault(warning_1$1)

	var _get2 = _interopRequireDefault(get_1)

	var _set2 = _interopRequireDefault(set_1)

	var _eq2 = _interopRequireDefault(eq_1)

	var _createFieldsStore2 = _interopRequireDefault(createFieldsStore_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var DEFAULT_TRIGGER = 'onChange' /* eslint-disable react/prefer-es6-class */
	/* eslint-disable prefer-promise-reject-errors */

	function createBaseForm() {
		var option =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: {}
		var mixins =
			arguments.length > 1 && arguments[1] !== undefined
				? arguments[1]
				: []
		var validateMessages = option.validateMessages,
			onFieldsChange = option.onFieldsChange,
			onValuesChange = option.onValuesChange,
			_option$mapProps = option.mapProps,
			mapProps =
				_option$mapProps === undefined
					? utils$1.identity
					: _option$mapProps,
			mapPropsToFields = option.mapPropsToFields,
			fieldNameProp = option.fieldNameProp,
			fieldMetaProp = option.fieldMetaProp,
			fieldDataProp = option.fieldDataProp,
			_option$formPropName = option.formPropName,
			formPropName =
				_option$formPropName === undefined
					? 'form'
					: _option$formPropName,
			formName = option.name,
			withRef = option.withRef

		return function decorate(WrappedComponent) {
			var Form = (0, _createReactClass2['default'])({
				displayName: 'Form',

				mixins: mixins,

				getInitialState: function getInitialState() {
					var _this = this

					var fields =
						mapPropsToFields && mapPropsToFields(this.props)
					this.fieldsStore = (0, _createFieldsStore2['default'])(
						fields || {}
					)

					this.instances = {}
					this.cachedBind = {}
					this.clearedFieldMetaCache = {}

					this.renderFields = {}
					this.domFields = {}

					// HACK: https://github.com/ant-design/ant-design/issues/6406
					;[
						'getFieldsValue',
						'getFieldValue',
						'setFieldsInitialValue',
						'getFieldsError',
						'getFieldError',
						'isFieldValidating',
						'isFieldsValidating',
						'isFieldsTouched',
						'isFieldTouched'
					].forEach(function(key) {
						_this[key] = function() {
							var _fieldsStore

							if (process.env.NODE_ENV !== 'production') {
								;(0, _warning2['default'])(
									false,
									'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' +
										'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140'
								)
							}
							return (_fieldsStore = _this.fieldsStore)[
								key
							].apply(_fieldsStore, arguments)
						}
					})

					return {
						submitting: false
					}
				},
				componentDidMount: function componentDidMount() {
					this.cleanUpUselessFields()
				},
				componentWillReceiveProps: function componentWillReceiveProps(
					nextProps
				) {
					if (mapPropsToFields) {
						this.fieldsStore.updateFields(
							mapPropsToFields(nextProps)
						)
					}
				},
				componentDidUpdate: function componentDidUpdate() {
					this.cleanUpUselessFields()
				},
				onCollectCommon: function onCollectCommon(name, action, args) {
					var fieldMeta = this.fieldsStore.getFieldMeta(name)
					if (fieldMeta[action]) {
						fieldMeta[action].apply(
							fieldMeta,
							(0, _toConsumableArray3['default'])(args)
						)
					} else if (
						fieldMeta.originalProps &&
						fieldMeta.originalProps[action]
					) {
						var _fieldMeta$originalPr
						;(_fieldMeta$originalPr = fieldMeta.originalProps)[
							action
						].apply(
							_fieldMeta$originalPr,
							(0, _toConsumableArray3['default'])(args)
						)
					}
					var value = fieldMeta.getValueFromEvent
						? fieldMeta.getValueFromEvent.apply(
								fieldMeta,
								(0, _toConsumableArray3['default'])(args)
						  )
						: utils$1.getValueFromEvent.apply(
								undefined,
								(0, _toConsumableArray3['default'])(args)
						  )
					if (
						onValuesChange &&
						value !== this.fieldsStore.getFieldValue(name)
					) {
						var valuesAll = this.fieldsStore.getAllValues()
						var valuesAllSet = {}
						valuesAll[name] = value
						Object.keys(valuesAll).forEach(function(key) {
							return (0,
							_set2['default'])(valuesAllSet, key, valuesAll[key])
						})
						onValuesChange(
							(0, _extends6['default'])(
								(0, _defineProperty3['default'])(
									{},
									formPropName,
									this.getForm()
								),
								this.props
							),
							(0, _set2['default'])({}, name, value),
							valuesAllSet
						)
					}
					var field = this.fieldsStore.getField(name)
					return {
						name: name,
						field: (0, _extends6['default'])({}, field, {
							value: value,
							touched: true
						}),
						fieldMeta: fieldMeta
					}
				},
				onCollect: function onCollect(name_, action) {
					for (
						var _len = arguments.length,
							args = Array(_len > 2 ? _len - 2 : 0),
							_key = 2;
						_key < _len;
						_key++
					) {
						args[_key - 2] = arguments[_key]
					}

					var _onCollectCommon = this.onCollectCommon(
							name_,
							action,
							args
						),
						name = _onCollectCommon.name,
						field = _onCollectCommon.field,
						fieldMeta = _onCollectCommon.fieldMeta

					var validate = fieldMeta.validate

					this.fieldsStore.setFieldsAsDirty()

					var newField = (0, _extends6['default'])({}, field, {
						dirty: (0, utils$1.hasRules)(validate)
					})
					this.setFields(
						(0, _defineProperty3['default'])({}, name, newField)
					)
				},
				onCollectValidate: function onCollectValidate(name_, action) {
					for (
						var _len2 = arguments.length,
							args = Array(_len2 > 2 ? _len2 - 2 : 0),
							_key2 = 2;
						_key2 < _len2;
						_key2++
					) {
						args[_key2 - 2] = arguments[_key2]
					}

					var _onCollectCommon2 = this.onCollectCommon(
							name_,
							action,
							args
						),
						field = _onCollectCommon2.field,
						fieldMeta = _onCollectCommon2.fieldMeta

					var newField = (0, _extends6['default'])({}, field, {
						dirty: true
					})

					this.fieldsStore.setFieldsAsDirty()

					this.validateFieldsInternal([newField], {
						action: action,
						options: {
							firstFields: !!fieldMeta.validateFirst
						}
					})
				},
				getCacheBind: function getCacheBind(name, action, fn) {
					if (!this.cachedBind[name]) {
						this.cachedBind[name] = {}
					}
					var cache = this.cachedBind[name]
					if (!cache[action] || cache[action].oriFn !== fn) {
						cache[action] = {
							fn: fn.bind(this, name, action),
							oriFn: fn
						}
					}
					return cache[action].fn
				},
				getFieldDecorator: function getFieldDecorator(
					name,
					fieldOption
				) {
					var _this2 = this

					var props = this.getFieldProps(name, fieldOption)
					return function(fieldElem) {
						// We should put field in record if it is rendered
						_this2.renderFields[name] = true

						var fieldMeta = _this2.fieldsStore.getFieldMeta(name)
						var originalProps = fieldElem.props
						if (process.env.NODE_ENV !== 'production') {
							var valuePropName = fieldMeta.valuePropName
							;(0, _warning2['default'])(
								!(valuePropName in originalProps),
								'`getFieldDecorator` will override `' +
									valuePropName +
									'`, ' +
									("so please don't set `" +
										valuePropName +
										'` directly ') +
									'and use `setFieldsValue` to set it.'
							)
							var defaultValuePropName =
								'default' +
								valuePropName[0].toUpperCase() +
								valuePropName.slice(1)
							;(0, _warning2['default'])(
								!(defaultValuePropName in originalProps),
								'`' +
									defaultValuePropName +
									'` is invalid ' +
									('for `getFieldDecorator` will set `' +
										valuePropName +
										'`,') +
									' please use `option.initialValue` instead.'
							)
						}
						fieldMeta.originalProps = originalProps
						fieldMeta.ref = fieldElem.ref
						return _react2['default'].cloneElement(
							fieldElem,
							(0, _extends6['default'])(
								{},
								props,
								_this2.fieldsStore.getFieldValuePropValue(
									fieldMeta
								)
							)
						)
					}
				},
				getFieldProps: function getFieldProps(name) {
					var _this3 = this

					var usersFieldOption =
						arguments.length > 1 && arguments[1] !== undefined
							? arguments[1]
							: {}

					if (!name) {
						throw new Error(
							'Must call `getFieldProps` with valid name string!'
						)
					}
					if (process.env.NODE_ENV !== 'production') {
						;(0, _warning2['default'])(
							this.fieldsStore.isValidNestedFieldName(name),
							'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' +
								name
						)
						;(0, _warning2['default'])(
							!('exclusive' in usersFieldOption),
							'`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.'
						)
					}

					delete this.clearedFieldMetaCache[name]

					var fieldOption = (0, _extends6['default'])(
						{
							name: name,
							trigger: DEFAULT_TRIGGER,
							valuePropName: 'value',
							validate: []
						},
						usersFieldOption
					)

					var rules = fieldOption.rules,
						trigger = fieldOption.trigger,
						_fieldOption$validate = fieldOption.validateTrigger,
						validateTrigger =
							_fieldOption$validate === undefined
								? trigger
								: _fieldOption$validate,
						validate = fieldOption.validate

					var fieldMeta = this.fieldsStore.getFieldMeta(name)
					if ('initialValue' in fieldOption) {
						fieldMeta.initialValue = fieldOption.initialValue
					}

					var inputProps = (0, _extends6['default'])(
						{},
						this.fieldsStore.getFieldValuePropValue(fieldOption),
						{
							ref: this.getCacheBind(
								name,
								name + '__ref',
								this.saveRef
							)
						}
					)
					if (fieldNameProp) {
						inputProps[fieldNameProp] = formName
							? formName + '_' + name
							: name
					}

					var validateRules = (0, utils$1.normalizeValidateRules)(
						validate,
						rules,
						validateTrigger
					)
					var validateTriggers = (0, utils$1.getValidateTriggers)(
						validateRules
					)
					validateTriggers.forEach(function(action) {
						if (inputProps[action]) return
						inputProps[action] = _this3.getCacheBind(
							name,
							action,
							_this3.onCollectValidate
						)
					})

					// make sure that the value will be collect
					if (trigger && validateTriggers.indexOf(trigger) === -1) {
						inputProps[trigger] = this.getCacheBind(
							name,
							trigger,
							this.onCollect
						)
					}

					var meta = (0, _extends6['default'])(
						{},
						fieldMeta,
						fieldOption,
						{
							validate: validateRules
						}
					)
					this.fieldsStore.setFieldMeta(name, meta)
					if (fieldMetaProp) {
						inputProps[fieldMetaProp] = meta
					}

					if (fieldDataProp) {
						inputProps[fieldDataProp] = this.fieldsStore.getField(
							name
						)
					}

					// This field is rendered, record it
					this.renderFields[name] = true

					return inputProps
				},
				getFieldInstance: function getFieldInstance(name) {
					return this.instances[name]
				},
				getRules: function getRules(fieldMeta, action) {
					var actionRules = fieldMeta.validate
						.filter(function(item) {
							return !action || item.trigger.indexOf(action) >= 0
						})
						.map(function(item) {
							return item.rules
						})
					return (0, utils$1.flattenArray)(actionRules)
				},
				setFields: function setFields(maybeNestedFields, callback) {
					var _this4 = this

					var fields = this.fieldsStore.flattenRegisteredFields(
						maybeNestedFields
					)
					this.fieldsStore.setFields(fields)
					if (onFieldsChange) {
						var changedFields = Object.keys(fields).reduce(function(
							acc,
							name
						) {
							return (0, _set2['default'])(
								acc,
								name,
								_this4.fieldsStore.getField(name)
							)
						},
						{})
						onFieldsChange(
							(0, _extends6['default'])(
								(0, _defineProperty3['default'])(
									{},
									formPropName,
									this.getForm()
								),
								this.props
							),
							changedFields,
							this.fieldsStore.getNestedAllFields()
						)
					}
					this.forceUpdate(callback)
				},
				setFieldsValue: function setFieldsValue(
					changedValues,
					callback
				) {
					var fieldsMeta = this.fieldsStore.fieldsMeta

					var values = this.fieldsStore.flattenRegisteredFields(
						changedValues
					)
					var newFields = Object.keys(values).reduce(function(
						acc,
						name
					) {
						var isRegistered = fieldsMeta[name]
						if (process.env.NODE_ENV !== 'production') {
							;(0, _warning2['default'])(
								isRegistered,
								'Cannot use `setFieldsValue` until ' +
									'you use `getFieldDecorator` or `getFieldProps` to register it.'
							)
						}
						if (isRegistered) {
							var value = values[name]
							acc[name] = {
								value: value
							}
						}
						return acc
					},
					{})
					this.setFields(newFields, callback)
					if (onValuesChange) {
						var allValues = this.fieldsStore.getAllValues()
						onValuesChange(
							(0, _extends6['default'])(
								(0, _defineProperty3['default'])(
									{},
									formPropName,
									this.getForm()
								),
								this.props
							),
							changedValues,
							allValues
						)
					}
				},
				saveRef: function saveRef(name, _, component) {
					if (!component) {
						var _fieldMeta = this.fieldsStore.getFieldMeta(name)
						if (!_fieldMeta.preserve) {
							// after destroy, delete data
							this.clearedFieldMetaCache[name] = {
								field: this.fieldsStore.getField(name),
								meta: _fieldMeta
							}
							this.clearField(name)
						}
						delete this.domFields[name]
						return
					}
					this.domFields[name] = true
					this.recoverClearedField(name)
					var fieldMeta = this.fieldsStore.getFieldMeta(name)
					if (fieldMeta) {
						var ref = fieldMeta.ref
						if (ref) {
							if (typeof ref === 'string') {
								throw new Error(
									'can not set ref string for ' + name
								)
							} else if (typeof ref === 'function') {
								ref(component)
							} else if (
								Object.prototype.hasOwnProperty.call(
									ref,
									'current'
								)
							) {
								ref.current = component
							}
						}
					}
					this.instances[name] = component
				},
				cleanUpUselessFields: function cleanUpUselessFields() {
					var _this5 = this

					var fieldList = this.fieldsStore.getAllFieldsName()
					var removedList = fieldList.filter(function(field) {
						var fieldMeta = _this5.fieldsStore.getFieldMeta(field)
						return (
							!_this5.renderFields[field] &&
							!_this5.domFields[field] &&
							!fieldMeta.preserve
						)
					})
					if (removedList.length) {
						removedList.forEach(this.clearField)
					}
					this.renderFields = {}
				},
				clearField: function clearField(name) {
					this.fieldsStore.clearField(name)
					delete this.instances[name]
					delete this.cachedBind[name]
				},
				resetFields: function resetFields(ns) {
					var _this6 = this

					var newFields = this.fieldsStore.resetFields(ns)
					if (Object.keys(newFields).length > 0) {
						this.setFields(newFields)
					}
					if (ns) {
						var names = Array.isArray(ns) ? ns : [ns]
						names.forEach(function(name) {
							return delete _this6.clearedFieldMetaCache[name]
						})
					} else {
						this.clearedFieldMetaCache = {}
					}
				},
				recoverClearedField: function recoverClearedField(name) {
					if (this.clearedFieldMetaCache[name]) {
						this.fieldsStore.setFields(
							(0, _defineProperty3['default'])(
								{},
								name,
								this.clearedFieldMetaCache[name].field
							)
						)
						this.fieldsStore.setFieldMeta(
							name,
							this.clearedFieldMetaCache[name].meta
						)
						delete this.clearedFieldMetaCache[name]
					}
				},
				validateFieldsInternal: function validateFieldsInternal(
					fields,
					_ref,
					callback
				) {
					var _this7 = this

					var fieldNames = _ref.fieldNames,
						action = _ref.action,
						_ref$options = _ref.options,
						options = _ref$options === undefined ? {} : _ref$options

					var allRules = {}
					var allValues = {}
					var allFields = {}
					var alreadyErrors = {}
					fields.forEach(function(field) {
						var name = field.name
						if (options.force !== true && field.dirty === false) {
							if (field.errors) {
								;(0, _set2['default'])(alreadyErrors, name, {
									errors: field.errors
								})
							}
							return
						}
						var fieldMeta = _this7.fieldsStore.getFieldMeta(name)
						var newField = (0, _extends6['default'])({}, field)
						newField.errors = undefined
						newField.validating = true
						newField.dirty = true
						allRules[name] = _this7.getRules(fieldMeta, action)
						allValues[name] = newField.value
						allFields[name] = newField
					})
					this.setFields(allFields)
					// in case normalize
					Object.keys(allValues).forEach(function(f) {
						allValues[f] = _this7.fieldsStore.getFieldValue(f)
					})
					if (callback && (0, utils$1.isEmptyObject)(allFields)) {
						callback(
							(0, utils$1.isEmptyObject)(alreadyErrors)
								? null
								: alreadyErrors,
							this.fieldsStore.getFieldsValue(fieldNames)
						)
						return
					}
					var validator = new _asyncValidator2['default'](allRules)
					if (validateMessages) {
						validator.messages(validateMessages)
					}
					validator.validate(allValues, options, function(errors) {
						var errorsGroup = (0, _extends6['default'])(
							{},
							alreadyErrors
						)
						if (errors && errors.length) {
							errors.forEach(function(e) {
								var errorFieldName = e.field
								var fieldName = errorFieldName

								// Handle using array validation rule.
								// ref: https://github.com/ant-design/ant-design/issues/14275
								Object.keys(allRules).some(function(
									ruleFieldName
								) {
									var rules = allRules[ruleFieldName] || []

									// Exist if match rule
									if (ruleFieldName === errorFieldName) {
										fieldName = ruleFieldName
										return true
									}

									// Skip if not match array type
									if (
										rules.every(function(_ref2) {
											var type = _ref2.type
											return type !== 'array'
										}) &&
										errorFieldName.indexOf(
											ruleFieldName
										) !== 0
									) {
										return false
									}

									// Exist if match the field name
									var restPath = errorFieldName.slice(
										ruleFieldName.length + 1
									)
									if (/^\d+$/.test(restPath)) {
										fieldName = ruleFieldName
										return true
									}

									return false
								})

								var field = (0, _get2['default'])(
									errorsGroup,
									fieldName
								)
								if (
									typeof field !== 'object' ||
									Array.isArray(field)
								) {
									;(0, _set2['default'])(
										errorsGroup,
										fieldName,
										{errors: []}
									)
								}
								var fieldErrors = (0, _get2['default'])(
									errorsGroup,
									fieldName.concat('.errors')
								)
								fieldErrors.push(e)
							})
						}
						var expired = []
						var nowAllFields = {}
						Object.keys(allRules).forEach(function(name) {
							var fieldErrors = (0, _get2['default'])(
								errorsGroup,
								name
							)
							var nowField = _this7.fieldsStore.getField(name)
							// avoid concurrency problems
							if (
								!(0, _eq2['default'])(
									nowField.value,
									allValues[name]
								)
							) {
								expired.push({
									name: name
								})
							} else {
								nowField.errors =
									fieldErrors && fieldErrors.errors
								nowField.value = allValues[name]
								nowField.validating = false
								nowField.dirty = false
								nowAllFields[name] = nowField
							}
						})
						_this7.setFields(nowAllFields)
						if (callback) {
							if (expired.length) {
								expired.forEach(function(_ref3) {
									var name = _ref3.name

									var fieldErrors = [
										{
											message:
												name + ' need to revalidate',
											field: name
										}
									]
									;(0, _set2['default'])(errorsGroup, name, {
										expired: true,
										errors: fieldErrors
									})
								})
							}

							callback(
								(0, utils$1.isEmptyObject)(errorsGroup)
									? null
									: errorsGroup,
								_this7.fieldsStore.getFieldsValue(fieldNames)
							)
						}
					})
				},
				validateFields: function validateFields(ns, opt, cb) {
					var _this8 = this

					var pending = new Promise(function(resolve, reject) {
						var _getParams = (0, utils$1.getParams)(ns, opt, cb),
							names = _getParams.names,
							options = _getParams.options

						var _getParams2 = (0, utils$1.getParams)(ns, opt, cb),
							callback = _getParams2.callback

						if (!callback || typeof callback === 'function') {
							var oldCb = callback
							callback = function callback(errors, values) {
								if (oldCb) {
									oldCb(errors, values)
								} else if (errors) {
									reject({errors: errors, values: values})
								} else {
									resolve(values)
								}
							}
						}
						var fieldNames = names
							? _this8.fieldsStore.getValidFieldsFullName(names)
							: _this8.fieldsStore.getValidFieldsName()
						var fields = fieldNames
							.filter(function(name) {
								var fieldMeta = _this8.fieldsStore.getFieldMeta(
									name
								)
								return (0, utils$1.hasRules)(fieldMeta.validate)
							})
							.map(function(name) {
								var field = _this8.fieldsStore.getField(name)
								field.value = _this8.fieldsStore.getFieldValue(
									name
								)
								return field
							})
						if (!fields.length) {
							callback(
								null,
								_this8.fieldsStore.getFieldsValue(fieldNames)
							)
							return
						}
						if (!('firstFields' in options)) {
							options.firstFields = fieldNames.filter(function(
								name
							) {
								var fieldMeta = _this8.fieldsStore.getFieldMeta(
									name
								)
								return !!fieldMeta.validateFirst
							})
						}
						_this8.validateFieldsInternal(
							fields,
							{
								fieldNames: fieldNames,
								options: options
							},
							callback
						)
					})
					pending['catch'](function(e) {
						if (
							console.error &&
							process.env.NODE_ENV !== 'production'
						) {
							console.error(e)
						}
						return e
					})
					return pending
				},
				isSubmitting: function isSubmitting() {
					if (
						process.env.NODE_ENV !== 'production' &&
						process.env.NODE_ENV !== 'test'
					) {
						;(0, _warning2['default'])(
							false,
							'`isSubmitting` is deprecated. ' +
								"Actually, it's more convenient to handle submitting status by yourself."
						)
					}
					return this.state.submitting
				},
				submit: function submit(callback) {
					var _this9 = this

					if (
						process.env.NODE_ENV !== 'production' &&
						process.env.NODE_ENV !== 'test'
					) {
						;(0, _warning2['default'])(
							false,
							'`submit` is deprecated. ' +
								"Actually, it's more convenient to handle submitting status by yourself."
						)
					}
					var fn = function fn() {
						_this9.setState({
							submitting: false
						})
					}
					this.setState({
						submitting: true
					})
					callback(fn)
				},
				render: function render() {
					var _props = this.props,
						wrappedComponentRef = _props.wrappedComponentRef,
						restProps = (0, _objectWithoutProperties3['default'])(
							_props,
							['wrappedComponentRef']
						) // eslint-disable-line

					var formProps = (0, _defineProperty3['default'])(
						{},
						formPropName,
						this.getForm()
					)
					if (withRef) {
						if (
							process.env.NODE_ENV !== 'production' &&
							process.env.NODE_ENV !== 'test'
						) {
							;(0, _warning2['default'])(
								false,
								'`withRef` is deprecated, please use `wrappedComponentRef` instead. ' +
									'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140'
							)
						}
						formProps.ref = 'wrappedComponent'
					} else if (wrappedComponentRef) {
						formProps.ref = wrappedComponentRef
					}
					var props = mapProps.call(
						this,
						(0, _extends6['default'])({}, formProps, restProps)
					)
					return _react2['default'].createElement(
						WrappedComponent,
						props
					)
				}
			})

			return (0, utils$1.argumentContainer)(Form, WrappedComponent)
		}
	}

	exports['default'] = createBaseForm
	module.exports = exports['default']
})

unwrapExports(createBaseForm_1)

var createForm_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.mixin = undefined

	var _createBaseForm2 = _interopRequireDefault(createBaseForm_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var mixin = (exports.mixin = {
		getForm: function getForm() {
			return {
				getFieldsValue: this.fieldsStore.getFieldsValue,
				getFieldValue: this.fieldsStore.getFieldValue,
				getFieldInstance: this.getFieldInstance,
				setFieldsValue: this.setFieldsValue,
				setFields: this.setFields,
				setFieldsInitialValue: this.fieldsStore.setFieldsInitialValue,
				getFieldDecorator: this.getFieldDecorator,
				getFieldProps: this.getFieldProps,
				getFieldsError: this.fieldsStore.getFieldsError,
				getFieldError: this.fieldsStore.getFieldError,
				isFieldValidating: this.fieldsStore.isFieldValidating,
				isFieldsValidating: this.fieldsStore.isFieldsValidating,
				isFieldsTouched: this.fieldsStore.isFieldsTouched,
				isFieldTouched: this.fieldsStore.isFieldTouched,
				isSubmitting: this.isSubmitting,
				submit: this.submit,
				validateFields: this.validateFields,
				resetFields: this.resetFields
			}
		}
	})

	function createForm(options) {
		return (0, _createBaseForm2['default'])(options, [mixin])
	}

	exports['default'] = createForm
})

unwrapExports(createForm_1)
var createForm_2 = createForm_1.mixin

var createDOMForm_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends3 = _interopRequireDefault(_extends)

	var _reactDom2 = _interopRequireDefault(ReactDOM)

	var _domScrollIntoView2 = _interopRequireDefault(lib$1)

	var _has2 = _interopRequireDefault(has_1)

	var _createBaseForm2 = _interopRequireDefault(createBaseForm_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function computedStyle(el, prop) {
		var getComputedStyle = window.getComputedStyle
		var style =
			// If we have getComputedStyle
			getComputedStyle
				? // Query it
				  // TODO: From CSS-Query notes, we might need (node, null) for FF
				  getComputedStyle(el)
				: // Otherwise, we are in IE and use currentStyle
				  el.currentStyle
		if (style) {
			return style[
				// Switch to camelCase for CSSOM
				// DEV: Grabbed from jQuery
				// https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194
				// https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597
				prop.replace(/-(\w)/gi, function(word, letter) {
					return letter.toUpperCase()
				})
			]
		}
		return undefined
	}

	function getScrollableContainer(n) {
		var node = n
		var nodeName = void 0
		/* eslint no-cond-assign:0 */
		while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {
			var overflowY = computedStyle(node, 'overflowY')
			// https://stackoverflow.com/a/36900407/3040605
			if (
				node !== n &&
				(overflowY === 'auto' || overflowY === 'scroll') &&
				node.scrollHeight > node.clientHeight
			) {
				return node
			}
			node = node.parentNode
		}
		return nodeName === 'body' ? node.ownerDocument : node
	}

	var mixin = {
		getForm: function getForm() {
			return (0, _extends3['default'])(
				{},
				createForm_1.mixin.getForm.call(this),
				{
					validateFieldsAndScroll: this.validateFieldsAndScroll
				}
			)
		},
		validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {
			var _this = this

			var _getParams = (0, utils$1.getParams)(ns, opt, cb),
				names = _getParams.names,
				callback = _getParams.callback,
				options = _getParams.options

			var newCb = function newCb(error, values) {
				if (error) {
					var validNames = _this.fieldsStore.getValidFieldsName()
					var firstNode = void 0
					var firstTop = void 0

					validNames.forEach(function(name) {
						if ((0, _has2['default'])(error, name)) {
							var instance = _this.getFieldInstance(name)
							if (instance) {
								var node = _reactDom2['default'].findDOMNode(
									instance
								)
								var top = node.getBoundingClientRect().top
								if (
									node.type !== 'hidden' &&
									(firstTop === undefined || firstTop > top)
								) {
									firstTop = top
									firstNode = node
								}
							}
						}
					})

					if (firstNode) {
						var c =
							options.container ||
							getScrollableContainer(firstNode)
						;(0, _domScrollIntoView2['default'])(
							firstNode,
							c,
							(0, _extends3['default'])(
								{
									onlyScrollIfNeeded: true
								},
								options.scroll
							)
						)
					}
				}

				if (typeof callback === 'function') {
					callback(error, values)
				}
			}

			return this.validateFields(names, options, newCb)
		}
	}

	function createDOMForm(option) {
		return (0,
		_createBaseForm2[
			'default'
		])((0, _extends3['default'])({}, option), [mixin])
	}

	exports['default'] = createDOMForm
	module.exports = exports['default']
})

var createDOMForm = unwrapExports(createDOMForm_1)

var FIELD_META_PROP = 'form-item-meta'
var FIELD_DATA_PROP = 'form-item-data'

var Form =
	/*#__PURE__*/
	(function(_React$Component) {
		inherits(Form, _React$Component)

		function Form() {
			classCallCheck(this, Form)

			return possibleConstructorReturn(
				this,
				getPrototypeOf(Form).apply(this, arguments)
			)
		}

		createClass(Form, [
			{
				key: 'render',
				value: function render() {
					return React__default.createElement('form', this.props)
				}
			}
		])

		return Form
	})(React__default.Component)

defineProperty(Form, 'create', function(options) {
	return createDOMForm(
		objectSpread(
			{
				fieldNameProp: 'id'
			},
			options,
			{
				fieldMetaProp: FIELD_META_PROP,
				fieldDataProp: FIELD_DATA_PROP
			}
		)
	)
})

defineProperty(Form, 'createFormField', createFormField)

Form.Item = FormItem

function _templateObject2$6() {
	var data = taggedTemplateLiteral([
		'\n  font-family: ',
		';\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-radius: ',
		';\n  transition: all ',
		';\n  :hover {\n    border-color: ',
		'\n  } \n  :focus {\n    outline: none;\n    background: ',
		';\n    border-color: ',
		';\n  }\n  background: ',
		';\n\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		';\n'
	])

	_templateObject2$6 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$f() {
	var data = taggedTemplateLiteral([
		'\n    background: ',
		';\n    cursor: not-allowed;\n  '
	])

	_templateObject$f = function _templateObject() {
		return data
	}

	return data
}

var propsToOmit = [
	'suffix',
	'prefix',
	'width',
	'value',
	'wrapperStyle',
	'onChange'
]

var disabled$1 = function disabled(props) {
	return (
		props.disabled &&
		css$3(_templateObject$f(), themeGet('colors.input.disabled', '#b5b5b5'))
	)
}

var size$2 = function size(_ref) {
	var _ref$size = _ref.size,
		size = _ref$size === void 0 ? 'medium' : _ref$size,
		theme = _ref.theme
	var sizes = {
		// Same as button heights, but with height, instead of paddings.
		small: {
			fontSize: theme.fontSizes[0],
			height: 32
		},
		medium: {
			fontSize: theme.fontSizes[1],
			height: 40
		},
		large: {
			fontSize: theme.fontSizes[2],
			height: 48
		}
	}
	return sizes[size]
}

var inline$1 = function inline(_ref2) {
	var inline = _ref2.inline
	return (
		Boolean(inline) && {
			display: 'inline-block'
		}
	)
}

var HTMLInput = styled.input(
	_templateObject2$6(),
	themeGet('font.main', "'PT Sans'"),
	function(props) {
		return props.theme.radii[1] + 'px'
	},
	function(props) {
		return props.theme.duration.fast
	},
	themeGet('colors.black', '#3a3a3a'),
	themeGet('colors.white', '#ffffff'),
	themeGet('colors.lightBlue', '#0091ea'),
	function(props) {
		return props.theme.colors.lightGrey
	},
	width,
	space,
	size$2,
	disabled$1,
	inline$1
)
var InputWrapper = styled(Relative)({
	display: 'flex',
	flexGrow: 1,
	alignItems: 'center'
})
var Adornment = styled(Absolute)({
	display: 'flex'
})
/** Получение данных от пользователя.*/

var Input =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Input, _Component)

		function Input(props) {
			var _this

			classCallCheck(this, Input)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Input).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					var newValue = event.target.value

					_this.setState({
						value: newValue
					})

					_this.props.onChange &&
						_this.props.onChange(newValue, event)
				}
			)

			defineProperty(assertThisInitialized(_this), 'saveInput', function(
				node
			) {
				_this.input = node
			})

			defineProperty(assertThisInitialized(_this), 'focus', function() {
				_this.input.focus()
			})

			defineProperty(assertThisInitialized(_this), 'blur', function() {
				_this.input.blur()
			})

			_this.state = {
				value:
					typeof props.value !== 'undefined'
						? props.defaultValue
						: props.value
			}
			return _this
		}

		createClass(
			Input,
			[
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							prefix = _this$props.prefix,
							suffix = _this$props.suffix,
							width = _this$props.width,
							wrapperStyle = _this$props.wrapperStyle
						return React__default.createElement(
							InputWrapper,
							{
								width: width,
								style: wrapperStyle
							},
							prefix &&
								React__default.createElement(
									Adornment,
									{
										left: 0,
										pl: 2
									},
									prefix
								),
							React__default.createElement(
								HTMLInput,
								_extends_1(
									{},
									omit_1(this.props, propsToOmit),
									{
										pl: prefix ? 4 : 3,
										pr: suffix ? 4 : 2,
										width: '100%',
										ref: this.saveRef,
										value: this.state.value,
										onChange: this.handleChange
									}
								)
							),
							suffix &&
								React__default.createElement(
									Adornment,
									{
										right: 0,
										pr: 2
									},
									suffix
								)
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						if ('value' in nextProps) {
							return {
								value: nextProps.value
							}
						}

						return null
					}
				}
			]
		)

		return Input
	})(Component)

Input.propTypes = {
	/** Ширина враппера для инпута.*/
	width: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Иконка в начале инпута. */
	prefix: propTypes.element,

	/** Иконка в конце инпута. */
	suffix: propTypes.element,

	/** Размер инпута: */
	size: propTypes.oneOf(['small', 'medium', 'large']),

	/** Стили враппера */
	wrapperStyle: propTypes.object
}
Input.defaultProps = {
	size: 'medium'
}
Input.displayName = 'Input'

function _templateObject2$7() {
	var data = taggedTemplateLiteral([
		'\n  font-family: ',
		';\n  font-size:  ',
		';\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-radius: ',
		';\n  transition: all ',
		';\n  :hover {\n    border-color: ',
		'\n  } \n  :focus {\n    outline: none;\n    background: ',
		';\n    border-color: ',
		';\n  }\n  background: ',
		';\n\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		'\n'
	])

	_templateObject2$7 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$g() {
	var data = taggedTemplateLiteral([
		'\n    background: ',
		';\n    cursor: not-allowed;\n  '
	])

	_templateObject$g = function _templateObject() {
		return data
	}

	return data
}

var disabled$2 = function disabled(props) {
	return (
		props.disabled &&
		css$3(_templateObject$g(), themeGet('colors.input.disabled', '#b5b5b5'))
	)
}

var HTMLTextarea = styled.textarea(
	_templateObject2$7(),
	themeGet('font.main', "'PT Sans'"),
	function(props) {
		return props.theme.fontSizes[1]
	},
	function(props) {
		return props.theme.radii[1] + 'px'
	},
	function(props) {
		return props.theme.duration.fast
	},
	themeGet('colors.black', '#3a3a3a'),
	themeGet('colors.white', '#ffffff'),
	themeGet('colors.lightBlue', '#0091ea'),
	function(props) {
		return props.theme.colors.lightGrey
	},
	fontSize,
	width,
	space,
	disabled$2
)
var InputWrapper$1 = styled(Relative)({
	display: 'flex',
	flexGrow: 1,
	alignItems: 'center'
})
/** Получение данных от пользователя.*/

var Textarea =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Textarea, _Component)

		function Textarea(props) {
			var _this

			classCallCheck(this, Textarea)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Textarea).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					var newValue = event.target.value

					_this.setState({
						value: newValue
					})

					_this.props.onChange &&
						_this.props.onChange(newValue, event)
				}
			)

			defineProperty(assertThisInitialized(_this), 'saveInput', function(
				node
			) {
				_this.input = node
			})

			defineProperty(assertThisInitialized(_this), 'focus', function() {
				_this.input.focus()
			})

			defineProperty(assertThisInitialized(_this), 'blur', function() {
				_this.input.blur()
			})

			_this.state = {
				value:
					typeof props.value !== 'undefined'
						? props.defaultValue
						: props.value
			}
			return _this
		}

		createClass(
			Textarea,
			[
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							width = _this$props.width,
							wrapperStyle = _this$props.wrapperStyle,
							children = _this$props.children,
							props = objectWithoutProperties(_this$props, [
								'width',
								'wrapperStyle',
								'children'
							])

						return React__default.createElement(
							InputWrapper$1,
							{
								width: width,
								style: wrapperStyle
							},
							React__default.createElement(
								HTMLTextarea,
								_extends_1(
									{
										width: '100%',
										ref: this.saveRef,
										value: this.state.value,
										onChange: this.handleChange
									},
									props
								)
							)
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						if ('value' in nextProps) {
							return {
								value: nextProps.value
							}
						}

						return null
					}
				}
			]
		)

		return Textarea
	})(Component)

Textarea.propTypes = {
	/** Ширина враппера для инпута.*/
	width: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Стили враппера */
	wrapperStyle: propTypes.object
}
Textarea.defaultProps = {
	py: 2,
	px: 3,
	fontSize: 1
}
Textarea.displayName = 'Textarea'

function _templateObject10$1() {
	var data = taggedTemplateLiteral([
		'\n  position: relative;\n  outline: none;\n  width: 24px;\n  height: 16px;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: ',
		';\n  ',
		'\n  ',
		'\n  ',
		'\n  :focus {\n    /* \u0412\u044B\u0433\u043B\u044F\u0434\u0438\u0442 \u043D\u0435 \u043E\u0447\u0435\u043D\u044C \u043A\u043E\u043D\u0435\u0447\u043D\u043E */\n    border-color: ',
		';\n    ',
		' {\n      border-color: ',
		';\n    }\n  }\n'
	])

	_templateObject10$1 = function _templateObject10() {
		return data
	}

	return data
}

function _templateObject9$1() {
	var data = taggedTemplateLiteral([
		'\n  width: 10px;\n  height: 10px;\n  border-width: 1px;\n  border-style: solid;\n  border-radius: 8px;\n  ',
		'\n  ',
		'\n  ',
		'\n  transition: left ',
		';\n'
	])

	_templateObject9$1 = function _templateObject9() {
		return data
	}

	return data
}

function _templateObject8$1() {
	var data = taggedTemplateLiteral(['\n    top: 2px;\n    left: 2px;\n  '])

	_templateObject8$1 = function _templateObject8() {
		return data
	}

	return data
}

function _templateObject7$1() {
	var data = taggedTemplateLiteral([
		'\n      top: 2px;\n      left: 10px;\n    '
	])

	_templateObject7$1 = function _templateObject7() {
		return data
	}

	return data
}

function _templateObject6$1() {
	var data = taggedTemplateLiteral(['\n      border-color: ', ';\n    '])

	_templateObject6$1 = function _templateObject6() {
		return data
	}

	return data
}

function _templateObject5$3() {
	var data = taggedTemplateLiteral(['\n    background: ', ';\n  '])

	_templateObject5$3 = function _templateObject5() {
		return data
	}

	return data
}

function _templateObject4$5() {
	var data = taggedTemplateLiteral(['\n      border-color: ', ';\n    '])

	_templateObject4$5 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$5() {
	var data = taggedTemplateLiteral(['\n    background: ', ';\n  '])

	_templateObject3$5 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$8() {
	var data = taggedTemplateLiteral(['\n      background: ', ';\n    '])

	_templateObject2$8 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$h() {
	var data = taggedTemplateLiteral(['\n      background: ', ';\n    '])

	_templateObject$h = function _templateObject() {
		return data
	}

	return data
}

var noop$4 = function noop() {}

var tracksBackground = function tracksBackground(props) {
	var checked = props.checked,
		disabled = props.disabled

	if (disabled) {
		return css$3(_templateObject$h(), themeGet('colors.grey', '#b5b5b5'))
	}

	if (checked) {
		return css$3(
			_templateObject2$8(),
			themeGet('colors.lightBlue', '#0091ea')
		)
	}

	return css$3(_templateObject3$5(), themeGet('colors.white', '#ffffff'))
}

var tracksBorder = function tracksBorder(_ref) {
	var checked = _ref.checked,
		disabled = _ref.disabled

	if (!checked && !disabled) {
		return css$3(_templateObject4$5(), themeGet('colors.black', '#3a3a3a'))
	}

	return 'border-color: transparent'
}

var handleBackground = function handleBackground(_ref2) {
	var disabled = _ref2.disabled
	return css$3(
		_templateObject5$3(),
		disabled
			? themeGet('colors.lightGrey', '#f5f5f5')
			: themeGet('color.white', '#ffffff')
	)
}

var handleBorder = function handleBorder(_ref3) {
	var checked = _ref3.checked,
		disabled = _ref3.disabled

	if (!checked && !disabled) {
		return css$3(_templateObject6$1(), themeGet('colors.black', '#3a3a3a'))
	}

	return 'border-color: transparent'
}

var handlePosition = function handlePosition(_ref4) {
	var checked = _ref4.checked,
		disabled = _ref4.disabled,
		rest = objectWithoutProperties(_ref4, ['checked', 'disabled'])

	if (checked) {
		return css$3(_templateObject7$1())
	}

	return css$3(_templateObject8$1())
}

var cursor = function cursor(_ref5) {
	var disabled = _ref5.disabled
	return disabled ? 'cursor: not-allowed;' : 'cursor: pointer;'
}

var ToggleHandle = styled(Absolute)(
	_templateObject9$1(),
	handleBackground,
	handlePosition,
	handleBorder,
	themeGet('durations.normal', '300ms')
)
var ToggleTrack = styled.button.attrs({
	role: 'switch'
})(
	_templateObject10$1(),
	themeGet('radii[2]', '8px'),
	tracksBackground,
	tracksBorder,
	cursor,
	themeGet('color.blue', '#1e88e5'),
	ToggleHandle,
	function(props) {
		return !props.checked && themeGet('color.blue', '#1e88e5')
	}
)
/** Используется так же, как и Checkbox, но для единственного значения. */

var Toggle =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Toggle, _Component)

		function Toggle(props) {
			var _this

			classCallCheck(this, Toggle)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Toggle).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					event.preventDefault()
					var flippedValue = !_this.state.checked

					_this.setState({
						checked: flippedValue
					})

					_this.props.onChange && _this.props.onChange(flippedValue)
				}
			)

			_this.state = {
				checked:
					typeof props.checked !== 'undefined' ? props.checked : false
			}
			return _this
		}

		createClass(
			Toggle,
			[
				{
					key: 'render',
					value: function render() {
						var checked = this.state.checked
						var disabled = this.props.disabled
						return React__default.createElement(
							ToggleTrack,
							{
								checked: checked,
								disabled: disabled,
								onClick: disabled ? noop$4 : this.handleChange
							},
							React__default.createElement(ToggleHandle, {
								checked: checked,
								disabled: disabled
							})
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						// If controlled by form
						if (nextProps[FIELD_DATA_PROP]) {
							return {
								checked: nextProps.value
							}
						}

						if ('checked' in nextProps) {
							return {
								checked: nextProps.checked
							}
						}

						return null
					}
				}
			]
		)

		return Toggle
	})(Component)

Toggle.propTypes = {
	/** Состояние тумблера. */
	checked: propTypes.bool,

	/** Возможность редактирования */
	disabled: propTypes.bool,

	/** Функция - хендлер, вызывается при клике на тумблер. */
	onChange: propTypes.func
	/** @component */
}

var RadioGroup =
	/*#__PURE__*/
	(function(_Component) {
		inherits(RadioGroup, _Component)

		function RadioGroup(_props) {
			var _this

			classCallCheck(this, RadioGroup)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(RadioGroup).call(this, _props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(newActiveValue) {
					_this.setState({
						activeValue: newActiveValue
					})

					_this.props.onChange && _this.props.onChange(newActiveValue)
				}
			)

			defineProperty(
				assertThisInitialized(_this),
				'onRadioChange',
				function(checked, value) {
					if (checked && value) {
						_this.handleChange(value)
					}
				}
			)

			defineProperty(
				assertThisInitialized(_this),
				'getChildren',
				function() {
					var children = _this.props.children
					var activeValue = _this.state.activeValue
					return children.map(function(child) {
						var value = child.props.value
						var props = {
							key: value,
							checked: activeValue === value,
							onChange: _this.onRadioChange
						}
						return React__default.cloneElement(child, props)
					})
				}
			)

			var _activeValue = _this.props.value
			var defaultValue = _this.props.defaultValue
			_this.state = {
				activeValue: _activeValue || defaultValue || ''
			}
			return _this
		}

		createClass(RadioGroup, [
			{
				key: 'render',
				value: function render() {
					return React__default.createElement(
						Box,
						null,
						this.getChildren()
					)
				}
			}
		])

		return RadioGroup
	})(Component)

function _templateObject4$6() {
	var data = taggedTemplateLiteral([
		'\n  display: inline-flex;\n  align-content: center;\n'
	])

	_templateObject4$6 = function _templateObject4() {
		return data
	}

	return data
}

function _templateObject3$6() {
	var data = taggedTemplateLiteral([
		'\n  display: inline-flex;\n  align-items: center;\n  cursor: ',
		';\n  ',
		'\n'
	])

	_templateObject3$6 = function _templateObject3() {
		return data
	}

	return data
}

function _templateObject2$9() {
	var data = taggedTemplateLiteral([
		'\n  justify-content: center;\n  align-items: center;\n  transition: all ',
		';\n  border-radius: 50%;\n  ',
		'\n  ',
		'\n  ',
		'\n'
	])

	_templateObject2$9 = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$i() {
	var data = taggedTemplateLiteral([
		'\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n'
	])

	_templateObject$i = function _templateObject() {
		return data
	}

	return data
}

var size$3 = function size(_ref) {
	var _ref$size = _ref.size,
		size = _ref$size === void 0 ? 'medium' : _ref$size
	var sizes = {
		small: {
			width: '14px',
			height: '14px'
		},
		medium: {
			width: '16px',
			height: '16px'
		},
		large: {
			width: '20px',
			height: '20px'
		}
	}
	return css$3(sizes[size])
}

var background$1 = function background(_ref2) {
	var checked = _ref2.checked,
		disabled = _ref2.disabled,
		rest = objectWithoutProperties(_ref2, ['checked', 'disabled'])

	var colors = rest.theme.colors
	var radio = colors.radio
	var bgColor = checked && disabled ? radio.disabled : colors.lightGrey
	return 'background: '.concat(bgColor)
}

var border$1 = function border(_ref3) {
	var checked = _ref3.checked,
		disabled = _ref3.disabled,
		rest = objectWithoutProperties(_ref3, ['checked', 'disabled'])

	var colors = rest.theme.colors
	var radio = colors.radio

	if (disabled) {
		return 'border: solid 3px '.concat(radio.disabled)
	} else if (checked) {
		return 'border: solid 3px '.concat(radio.checked)
	}

	return 'border: solid 1px '.concat(colors.black)
}

var RadioInput = styled.input.attrs({
	type: 'radio'
})(_templateObject$i())
var StyledRadio = styled(Flex)(
	_templateObject2$9(),
	themeGet('duration.fast', 300),
	size$3,
	background$1,
	border$1
)
var Label$2 = styled.label(
	_templateObject3$6(),
	function(props) {
		return props.disabled ? 'not-allowed' : 'pointer'
	},
	space
)
var RadioContainer = styled(Flex)(_templateObject4$6())

var Radio =
	/*#__PURE__*/
	(function(_Component) {
		inherits(Radio, _Component)

		function Radio(props) {
			var _this

			classCallCheck(this, Radio)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(Radio).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					var checked = event.target.checked

					_this.setState({
						checked: checked
					})

					console.log('Radio handleChange', {
						'this.props': _this.props
					})
					_this.props.onChange &&
						_this.props.onChange(checked, _this.props.value)
				}
			)

			_this.state = {
				checked:
					typeof props.checked !== 'undefined' ? props.checked : false
			}
			return _this
		}

		createClass(
			Radio,
			[
				{
					key: 'render',
					value: function render() {
						return React__default.createElement(
							Label$2,
							this.props,
							React__default.createElement(
								RadioContainer,
								{
									onChange: this.handleChange
								},
								React__default.createElement(
									RadioInput,
									_extends_1(
										{},
										omit_1(this.props, [
											'onChange',
											'value'
										]),
										{
											checked: this.state.checked,
											name: this.props.name,
											readOnly: true
										}
									)
								),
								React__default.createElement(
									StyledRadio,
									{
										checked: this.state.checked,
										size: this.props.size,
										disabled: this.props.disabled
									},
									React__default.createElement(Icon, {
										name: 'radio_button_unchecked',
										hidden: true
									})
								)
							),
							React__default.createElement(
								Text,
								{
									inline: true,
									regular: true,
									ml: 2
								},
								this.props.label
							)
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						// If controlled by form
						if (nextProps[FIELD_DATA_PROP]) {
							return {
								checked: nextProps.value
							}
						}

						if ('checked' in nextProps) {
							return {
								checked: nextProps.checked
							}
						}

						return null
					}
				}
			]
		)

		return Radio
	})(Component)

Radio.propTypes = {
	/** Состояние радио баттона - выбран или нет. */
	checked: propTypes.bool,

	/** Возможность редактирования */
	disabled: propTypes.bool,

	/** Текст радио баттона */
	label: propTypes.string,

	/** Размер радио баттона */
	size: propTypes.oneOf(['small', 'medium', 'large']),

	/** Функция - хендлер, вызывается при клике на радио баттон */
	onChange: propTypes.func,

	/** margin */
	m: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top*/
	mt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-right*/
	mr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-bottom*/
	mb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left*/
	ml: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-left and margin-right */
	mx: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** margin-top and margin-bottom */
	my: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding */
	p: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top*/
	pt: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-right*/
	pr: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-bottom*/
	pb: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left*/
	pl: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-left and padding-right */
	px: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** padding-top and padding-bottom */
	py: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	])
}
Radio.Group = RadioGroup

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
	if (
		(value !== undefined && !eq_1(object[key], value)) ||
		(value === undefined && !(key in object))
	) {
		_baseAssignValue(object, key, value)
	}
}

var _assignMergeValue = assignMergeValue

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
	return function(object, iteratee, keysFunc) {
		var index = -1,
			iterable = Object(object),
			props = keysFunc(object),
			length = props.length

		while (length--) {
			var key = props[fromRight ? length : ++index]
			if (iteratee(iterable[key], key, iterable) === false) {
				break
			}
		}
		return object
	}
}

var _createBaseFor = createBaseFor

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor()

var _baseFor = baseFor

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
	return isObjectLike_1(value) && isArrayLike_1(value)
}

var isArrayLikeObject_1 = isArrayLikeObject

/**
 * Gets the value at `key`, unless `key` is "__proto__".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
	if (key == '__proto__') {
		return
	}

	return object[key]
}

var _safeGet = safeGet

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
	return _copyObject(value, keysIn_1(value))
}

var toPlainObject_1 = toPlainObject

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(
	object,
	source,
	key,
	srcIndex,
	mergeFunc,
	customizer,
	stack
) {
	var objValue = _safeGet(object, key),
		srcValue = _safeGet(source, key),
		stacked = stack.get(srcValue)

	if (stacked) {
		_assignMergeValue(object, key, stacked)
		return
	}
	var newValue = customizer
		? customizer(objValue, srcValue, key + '', object, source, stack)
		: undefined

	var isCommon = newValue === undefined

	if (isCommon) {
		var isArr = isArray_1(srcValue),
			isBuff = !isArr && isBuffer_1(srcValue),
			isTyped = !isArr && !isBuff && isTypedArray_1(srcValue)

		newValue = srcValue
		if (isArr || isBuff || isTyped) {
			if (isArray_1(objValue)) {
				newValue = objValue
			} else if (isArrayLikeObject_1(objValue)) {
				newValue = _copyArray(objValue)
			} else if (isBuff) {
				isCommon = false
				newValue = _cloneBuffer(srcValue, true)
			} else if (isTyped) {
				isCommon = false
				newValue = _cloneTypedArray(srcValue, true)
			} else {
				newValue = []
			}
		} else if (isPlainObject_1(srcValue) || isArguments_1(srcValue)) {
			newValue = objValue
			if (isArguments_1(objValue)) {
				newValue = toPlainObject_1(objValue)
			} else if (!isObject_1(objValue) || isFunction_1(objValue)) {
				newValue = _initCloneObject(srcValue)
			}
		} else {
			isCommon = false
		}
	}
	if (isCommon) {
		// Recursively merge objects and arrays (susceptible to call stack limits).
		stack.set(srcValue, newValue)
		mergeFunc(newValue, srcValue, srcIndex, customizer, stack)
		stack['delete'](srcValue)
	}
	_assignMergeValue(object, key, newValue)
}

var _baseMergeDeep = baseMergeDeep

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
	if (object === source) {
		return
	}
	_baseFor(
		source,
		function(srcValue, key) {
			if (isObject_1(srcValue)) {
				stack || (stack = new _Stack())
				_baseMergeDeep(
					object,
					source,
					key,
					srcIndex,
					baseMerge,
					customizer,
					stack
				)
			} else {
				var newValue = customizer
					? customizer(
							_safeGet(object, key),
							srcValue,
							key + '',
							object,
							source,
							stack
					  )
					: undefined

				if (newValue === undefined) {
					newValue = srcValue
				}
				_assignMergeValue(object, key, newValue)
			}
		},
		keysIn_1
	)
}

var _baseMerge = baseMerge

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
	return _setToString(_overRest(func, start, identity_1), func + '')
}

var _baseRest = baseRest

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
	if (!isObject_1(object)) {
		return false
	}
	var type = typeof index
	if (
		type == 'number'
			? isArrayLike_1(object) && _isIndex(index, object.length)
			: type == 'string' && index in object
	) {
		return eq_1(object[index], value)
	}
	return false
}

var _isIterateeCall = isIterateeCall

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
	return _baseRest(function(object, sources) {
		var index = -1,
			length = sources.length,
			customizer = length > 1 ? sources[length - 1] : undefined,
			guard = length > 2 ? sources[2] : undefined

		customizer =
			assigner.length > 3 && typeof customizer == 'function'
				? (length--, customizer)
				: undefined

		if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
			customizer = length < 3 ? undefined : customizer
			length = 1
		}
		object = Object(object)
		while (++index < length) {
			var source = sources[index]
			if (source) {
				assigner(object, source, index, customizer)
			}
		}
		return object
	})
}

var _createAssigner = createAssigner

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = _createAssigner(function(object, source, srcIndex) {
	_baseMerge(object, source, srcIndex)
})

var merge_1 = merge

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
	return value === undefined
}

var isUndefined_1 = isUndefined

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED$2 = '__lodash_hash_undefined__'

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
	this.__data__.set(value, HASH_UNDEFINED$2)
	return this
}

var _setCacheAdd = setCacheAdd

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
	return this.__data__.has(value)
}

var _setCacheHas = setCacheHas

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
	var index = -1,
		length = values == null ? 0 : values.length

	this.__data__ = new _MapCache()
	while (++index < length) {
		this.add(values[index])
	}
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd
SetCache.prototype.has = _setCacheHas

var _SetCache = SetCache

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
	var index = -1,
		length = array == null ? 0 : array.length

	while (++index < length) {
		if (predicate(array[index], index, array)) {
			return true
		}
	}
	return false
}

var _arraySome = arraySome

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
	return cache.has(key)
}

var _cacheHas = cacheHas

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
	COMPARE_UNORDERED_FLAG = 2

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
		arrLength = array.length,
		othLength = other.length

	if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
		return false
	}
	// Assume cyclic values are equal.
	var stacked = stack.get(array)
	if (stacked && stack.get(other)) {
		return stacked == other
	}
	var index = -1,
		result = true,
		seen = bitmask & COMPARE_UNORDERED_FLAG ? new _SetCache() : undefined

	stack.set(array, other)
	stack.set(other, array)

	// Ignore non-index properties.
	while (++index < arrLength) {
		var arrValue = array[index],
			othValue = other[index]

		if (customizer) {
			var compared = isPartial
				? customizer(othValue, arrValue, index, other, array, stack)
				: customizer(arrValue, othValue, index, array, other, stack)
		}
		if (compared !== undefined) {
			if (compared) {
				continue
			}
			result = false
			break
		}
		// Recursively compare arrays (susceptible to call stack limits).
		if (seen) {
			if (
				!_arraySome(other, function(othValue, othIndex) {
					if (
						!_cacheHas(seen, othIndex) &&
						(arrValue === othValue ||
							equalFunc(
								arrValue,
								othValue,
								bitmask,
								customizer,
								stack
							))
					) {
						return seen.push(othIndex)
					}
				})
			) {
				result = false
				break
			}
		} else if (
			!(
				arrValue === othValue ||
				equalFunc(arrValue, othValue, bitmask, customizer, stack)
			)
		) {
			result = false
			break
		}
	}
	stack['delete'](array)
	stack['delete'](other)
	return result
}

var _equalArrays = equalArrays

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
	var index = -1,
		result = Array(map.size)

	map.forEach(function(value, key) {
		result[++index] = [key, value]
	})
	return result
}

var _mapToArray = mapToArray

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
	var index = -1,
		result = Array(set.size)

	set.forEach(function(value) {
		result[++index] = value
	})
	return result
}

var _setToArray = setToArray

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$1 = 1,
	COMPARE_UNORDERED_FLAG$1 = 2

/** `Object#toString` result references. */
var boolTag$3 = '[object Boolean]',
	dateTag$3 = '[object Date]',
	errorTag$2 = '[object Error]',
	mapTag$5 = '[object Map]',
	numberTag$3 = '[object Number]',
	regexpTag$3 = '[object RegExp]',
	setTag$5 = '[object Set]',
	stringTag$3 = '[object String]',
	symbolTag$3 = '[object Symbol]'

var arrayBufferTag$3 = '[object ArrayBuffer]',
	dataViewTag$4 = '[object DataView]'

/** Used to convert symbols to primitives and strings. */
var symbolProto$2 = _Symbol ? _Symbol.prototype : undefined,
	symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : undefined

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	switch (tag) {
		case dataViewTag$4:
			if (
				object.byteLength != other.byteLength ||
				object.byteOffset != other.byteOffset
			) {
				return false
			}
			object = object.buffer
			other = other.buffer

		case arrayBufferTag$3:
			if (
				object.byteLength != other.byteLength ||
				!equalFunc(new _Uint8Array(object), new _Uint8Array(other))
			) {
				return false
			}
			return true

		case boolTag$3:
		case dateTag$3:
		case numberTag$3:
			// Coerce booleans to `1` or `0` and dates to milliseconds.
			// Invalid dates are coerced to `NaN`.
			return eq_1(+object, +other)

		case errorTag$2:
			return object.name == other.name && object.message == other.message

		case regexpTag$3:
		case stringTag$3:
			// Coerce regexes to strings and treat strings, primitives and objects,
			// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
			// for more details.
			return object == other + ''

		case mapTag$5:
			var convert = _mapToArray

		case setTag$5:
			var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1
			convert || (convert = _setToArray)

			if (object.size != other.size && !isPartial) {
				return false
			}
			// Assume cyclic values are equal.
			var stacked = stack.get(object)
			if (stacked) {
				return stacked == other
			}
			bitmask |= COMPARE_UNORDERED_FLAG$1

			// Recursively compare objects (susceptible to call stack limits).
			stack.set(object, other)
			var result = _equalArrays(
				convert(object),
				convert(other),
				bitmask,
				customizer,
				equalFunc,
				stack
			)
			stack['delete'](object)
			return result

		case symbolTag$3:
			if (symbolValueOf$1) {
				return (
					symbolValueOf$1.call(object) == symbolValueOf$1.call(other)
				)
			}
	}
	return false
}

var _equalByTag = equalByTag

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$2 = 1

/** Used for built-in method references. */
var objectProto$f = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$e = objectProto$f.hasOwnProperty

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2,
		objProps = _getAllKeys(object),
		objLength = objProps.length,
		othProps = _getAllKeys(other),
		othLength = othProps.length

	if (objLength != othLength && !isPartial) {
		return false
	}
	var index = objLength
	while (index--) {
		var key = objProps[index]
		if (!(isPartial ? key in other : hasOwnProperty$e.call(other, key))) {
			return false
		}
	}
	// Assume cyclic values are equal.
	var stacked = stack.get(object)
	if (stacked && stack.get(other)) {
		return stacked == other
	}
	var result = true
	stack.set(object, other)
	stack.set(other, object)

	var skipCtor = isPartial
	while (++index < objLength) {
		key = objProps[index]
		var objValue = object[key],
			othValue = other[key]

		if (customizer) {
			var compared = isPartial
				? customizer(othValue, objValue, key, other, object, stack)
				: customizer(objValue, othValue, key, object, other, stack)
		}
		// Recursively compare objects (susceptible to call stack limits).
		if (
			!(compared === undefined
				? objValue === othValue ||
				  equalFunc(objValue, othValue, bitmask, customizer, stack)
				: compared)
		) {
			result = false
			break
		}
		skipCtor || (skipCtor = key == 'constructor')
	}
	if (result && !skipCtor) {
		var objCtor = object.constructor,
			othCtor = other.constructor

		// Non `Object` object instances with different constructors are not equal.
		if (
			objCtor != othCtor &&
			('constructor' in object && 'constructor' in other) &&
			!(
				typeof objCtor == 'function' &&
				objCtor instanceof objCtor &&
				typeof othCtor == 'function' &&
				othCtor instanceof othCtor
			)
		) {
			result = false
		}
	}
	stack['delete'](object)
	stack['delete'](other)
	return result
}

var _equalObjects = equalObjects

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG$3 = 1

/** `Object#toString` result references. */
var argsTag$3 = '[object Arguments]',
	arrayTag$2 = '[object Array]',
	objectTag$4 = '[object Object]'

/** Used for built-in method references. */
var objectProto$g = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$f = objectProto$g.hasOwnProperty

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	var objIsArr = isArray_1(object),
		othIsArr = isArray_1(other),
		objTag = objIsArr ? arrayTag$2 : _getTag(object),
		othTag = othIsArr ? arrayTag$2 : _getTag(other)

	objTag = objTag == argsTag$3 ? objectTag$4 : objTag
	othTag = othTag == argsTag$3 ? objectTag$4 : othTag

	var objIsObj = objTag == objectTag$4,
		othIsObj = othTag == objectTag$4,
		isSameTag = objTag == othTag

	if (isSameTag && isBuffer_1(object)) {
		if (!isBuffer_1(other)) {
			return false
		}
		objIsArr = true
		objIsObj = false
	}
	if (isSameTag && !objIsObj) {
		stack || (stack = new _Stack())
		return objIsArr || isTypedArray_1(object)
			? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
			: _equalByTag(
					object,
					other,
					objTag,
					bitmask,
					customizer,
					equalFunc,
					stack
			  )
	}
	if (!(bitmask & COMPARE_PARTIAL_FLAG$3)) {
		var objIsWrapped =
				objIsObj && hasOwnProperty$f.call(object, '__wrapped__'),
			othIsWrapped =
				othIsObj && hasOwnProperty$f.call(other, '__wrapped__')

		if (objIsWrapped || othIsWrapped) {
			var objUnwrapped = objIsWrapped ? object.value() : object,
				othUnwrapped = othIsWrapped ? other.value() : other

			stack || (stack = new _Stack())
			return equalFunc(
				objUnwrapped,
				othUnwrapped,
				bitmask,
				customizer,
				stack
			)
		}
	}
	if (!isSameTag) {
		return false
	}
	stack || (stack = new _Stack())
	return _equalObjects(object, other, bitmask, customizer, equalFunc, stack)
}

var _baseIsEqualDeep = baseIsEqualDeep

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
	if (value === other) {
		return true
	}
	if (
		value == null ||
		other == null ||
		(!isObjectLike_1(value) && !isObjectLike_1(other))
	) {
		return value !== value && other !== other
	}
	return _baseIsEqualDeep(
		value,
		other,
		bitmask,
		customizer,
		baseIsEqual,
		stack
	)
}

var _baseIsEqual = baseIsEqual

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
	return _baseIsEqual(value, other)
}

var isEqual_1 = isEqual

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
	return _root.Date.now()
}

var now_1 = now

/** Used as references for various `Number` constants. */
var NAN = 0 / 0

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
	if (typeof value == 'number') {
		return value
	}
	if (isSymbol_1(value)) {
		return NAN
	}
	if (isObject_1(value)) {
		var other = typeof value.valueOf == 'function' ? value.valueOf() : value
		value = isObject_1(other) ? other + '' : other
	}
	if (typeof value != 'string') {
		return value === 0 ? value : +value
	}
	value = value.replace(reTrim, '')
	var isBinary = reIsBinary.test(value)
	return isBinary || reIsOctal.test(value)
		? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		: reIsBadHex.test(value)
		? NAN
		: +value
}

var toNumber_1 = toNumber

/** Error message constants. */
var FUNC_ERROR_TEXT$1 = 'Expected a function'

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$1 = Math.max,
	nativeMin = Math.min

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
	var lastArgs,
		lastThis,
		maxWait,
		result,
		timerId,
		lastCallTime,
		lastInvokeTime = 0,
		leading = false,
		maxing = false,
		trailing = true

	if (typeof func != 'function') {
		throw new TypeError(FUNC_ERROR_TEXT$1)
	}
	wait = toNumber_1(wait) || 0
	if (isObject_1(options)) {
		leading = !!options.leading
		maxing = 'maxWait' in options
		maxWait = maxing
			? nativeMax$1(toNumber_1(options.maxWait) || 0, wait)
			: maxWait
		trailing = 'trailing' in options ? !!options.trailing : trailing
	}

	function invokeFunc(time) {
		var args = lastArgs,
			thisArg = lastThis

		lastArgs = lastThis = undefined
		lastInvokeTime = time
		result = func.apply(thisArg, args)
		return result
	}

	function leadingEdge(time) {
		// Reset any `maxWait` timer.
		lastInvokeTime = time
		// Start the timer for the trailing edge.
		timerId = setTimeout(timerExpired, wait)
		// Invoke the leading edge.
		return leading ? invokeFunc(time) : result
	}

	function remainingWait(time) {
		var timeSinceLastCall = time - lastCallTime,
			timeSinceLastInvoke = time - lastInvokeTime,
			timeWaiting = wait - timeSinceLastCall

		return maxing
			? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
			: timeWaiting
	}

	function shouldInvoke(time) {
		var timeSinceLastCall = time - lastCallTime,
			timeSinceLastInvoke = time - lastInvokeTime

		// Either this is the first call, activity has stopped and we're at the
		// trailing edge, the system time has gone backwards and we're treating
		// it as the trailing edge, or we've hit the `maxWait` limit.
		return (
			lastCallTime === undefined ||
			timeSinceLastCall >= wait ||
			timeSinceLastCall < 0 ||
			(maxing && timeSinceLastInvoke >= maxWait)
		)
	}

	function timerExpired() {
		var time = now_1()
		if (shouldInvoke(time)) {
			return trailingEdge(time)
		}
		// Restart the timer.
		timerId = setTimeout(timerExpired, remainingWait(time))
	}

	function trailingEdge(time) {
		timerId = undefined

		// Only invoke if we have `lastArgs` which means `func` has been
		// debounced at least once.
		if (trailing && lastArgs) {
			return invokeFunc(time)
		}
		lastArgs = lastThis = undefined
		return result
	}

	function cancel() {
		if (timerId !== undefined) {
			clearTimeout(timerId)
		}
		lastInvokeTime = 0
		lastArgs = lastCallTime = lastThis = timerId = undefined
	}

	function flush() {
		return timerId === undefined ? result : trailingEdge(now_1())
	}

	function debounced() {
		var time = now_1(),
			isInvoking = shouldInvoke(time)

		lastArgs = arguments
		lastThis = this
		lastCallTime = time

		if (isInvoking) {
			if (timerId === undefined) {
				return leadingEdge(lastCallTime)
			}
			if (maxing) {
				// Handle invocations in a tight loop.
				timerId = setTimeout(timerExpired, wait)
				return invokeFunc(lastCallTime)
			}
		}
		if (timerId === undefined) {
			timerId = setTimeout(timerExpired, wait)
		}
		return result
	}
	debounced.cancel = cancel
	debounced.flush = flush
	return debounced
}

var debounce_1 = debounce

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
	var length = array.length,
		index = fromIndex + (fromRight ? 1 : -1)

	while (fromRight ? index-- : ++index < length) {
		if (predicate(array[index], index, array)) {
			return index
		}
	}
	return -1
}

var _baseFindIndex = baseFindIndex

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
	return value !== value
}

var _baseIsNaN = baseIsNaN

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
	var index = fromIndex - 1,
		length = array.length

	while (++index < length) {
		if (array[index] === value) {
			return index
		}
	}
	return -1
}

var _strictIndexOf = strictIndexOf

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
	return value === value
		? _strictIndexOf(array, value, fromIndex)
		: _baseFindIndex(array, _baseIsNaN, fromIndex)
}

var _baseIndexOf = baseIndexOf

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
	var length = array == null ? 0 : array.length
	return !!length && _baseIndexOf(array, value, 0) > -1
}

var _arrayIncludes$1 = arrayIncludes

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
	var index = -1,
		length = array == null ? 0 : array.length

	while (++index < length) {
		if (comparator(value, array[index])) {
			return true
		}
	}
	return false
}

var _arrayIncludesWith = arrayIncludesWith

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin$1 = Math.min

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
	var includes = comparator ? _arrayIncludesWith : _arrayIncludes$1,
		length = arrays[0].length,
		othLength = arrays.length,
		othIndex = othLength,
		caches = Array(othLength),
		maxLength = Infinity,
		result = []

	while (othIndex--) {
		var array = arrays[othIndex]
		if (othIndex && iteratee) {
			array = _arrayMap(array, _baseUnary(iteratee))
		}
		maxLength = nativeMin$1(array.length, maxLength)
		caches[othIndex] =
			!comparator && (iteratee || (length >= 120 && array.length >= 120))
				? new _SetCache(othIndex && array)
				: undefined
	}
	array = arrays[0]

	var index = -1,
		seen = caches[0]

	outer: while (++index < length && result.length < maxLength) {
		var value = array[index],
			computed = iteratee ? iteratee(value) : value

		value = comparator || value !== 0 ? value : 0
		if (
			!(seen
				? _cacheHas(seen, computed)
				: includes(result, computed, comparator))
		) {
			othIndex = othLength
			while (--othIndex) {
				var cache = caches[othIndex]
				if (
					!(cache
						? _cacheHas(cache, computed)
						: includes(arrays[othIndex], computed, comparator))
				) {
					continue outer
				}
			}
			if (seen) {
				seen.push(computed)
			}
			result.push(value)
		}
	}
	return result
}

var _baseIntersection = baseIntersection

/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
	return isArrayLikeObject_1(value) ? value : []
}

var _castArrayLikeObject = castArrayLikeObject

/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = _baseRest(function(arrays) {
	var mapped = _arrayMap(arrays, _castArrayLikeObject)
	return mapped.length && mapped[0] === arrays[0]
		? _baseIntersection(mapped)
		: []
})

var intersection_1 = intersection

function resizeListener(e) {
	var win = e.target || e.srcElement
	if (win.__resizeRAF__) {
		cancelAnimationFrame(win.__resizeRAF__)
	}
	win.__resizeRAF__ = requestAnimationFrame(function() {
		var trigger = win.__resizeTrigger__
		var listeners = trigger && trigger.__resizeListeners__
		if (listeners) {
			listeners.forEach(function(fn) {
				fn.call(trigger, e)
			})
		}
	})
}

var exports = function exports(element, fn) {
	var window = this
	var document = window.document
	var isIE

	var attachEvent = document.attachEvent
	if (typeof navigator !== 'undefined') {
		isIE =
			navigator.userAgent.match(/Trident/) ||
			navigator.userAgent.match(/Edge/)
	}

	function objectLoad() {
		this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__
		this.contentDocument.defaultView.addEventListener(
			'resize',
			resizeListener
		)
	}

	if (!element.__resizeListeners__) {
		element.__resizeListeners__ = []
		if (attachEvent) {
			element.__resizeTrigger__ = element
			element.attachEvent('onresize', resizeListener)
		} else {
			if (getComputedStyle(element).position === 'static') {
				element.style.position = 'relative'
			}
			var obj = (element.__resizeTrigger__ = document.createElement(
				'object'
			))
			obj.setAttribute(
				'style',
				'position: absolute; top: 0; left: 0; height: 100%; width: 100%; pointer-events: none; z-index: -1; opacity: 0;'
			)
			obj.setAttribute('class', 'resize-sensor')

			// prevent <object> from stealing keyboard focus
			obj.setAttribute('tabindex', '-1')

			obj.__resizeElement__ = element
			obj.onload = objectLoad
			obj.type = 'text/html'
			if (isIE) {
				element.appendChild(obj)
			}
			obj.data = 'about:blank'
			if (!isIE) {
				element.appendChild(obj)
			}
		}
	}
	element.__resizeListeners__.push(fn)
}

var elementResizeEvent =
	typeof window === 'undefined' ? exports : exports.bind(window)

var unbind = function(element, fn) {
	var attachEvent = document.attachEvent
	var listeners = element.__resizeListeners__ || []
	if (fn) {
		var index = listeners.indexOf(fn)
		if (index !== -1) {
			listeners.splice(index, 1)
		}
	} else {
		listeners = element.__resizeListeners__ = []
	}
	if (!listeners.length) {
		if (attachEvent) {
			element.detachEvent('onresize', resizeListener)
		} else if (element.__resizeTrigger__) {
			var contentDocument = element.__resizeTrigger__.contentDocument
			var defaultView = contentDocument && contentDocument.defaultView
			if (defaultView) {
				defaultView.removeEventListener('resize', resizeListener)
				delete defaultView.__resizeTrigger__
			}
			element.__resizeTrigger__ = !element.removeChild(
				element.__resizeTrigger__
			)
		}
		delete element.__resizeListeners__
	}
}
elementResizeEvent.unbind = unbind

var hasClass = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(target, className) {
		if (target.classList) {
			return !!className && target.classList.contains(className)
		}

		return (
			' '
				.concat(target.className, ' ')
				.indexOf(' '.concat(className, ' ')) !== -1
		)
	}

	exports.default = _default
})

unwrapExports(hasClass)

var addClass = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _hasClass = _interopRequireDefault(hasClass)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(target, className) {
		if (className) {
			if (target.classList) {
				target.classList.add(className)
			} else if (!(0, _hasClass.default)(target, className)) {
				target.className = ''
					.concat(target.className, ' ')
					.concat(className)
			}
		}

		return target
	}

	exports.default = _default
})

unwrapExports(addClass)

var removeClass = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(target, className) {
		if (className) {
			if (target.classList) {
				target.classList.remove(className)
			} else {
				target.className = target.className
					.replace(
						new RegExp(
							'(^|\\s)'.concat(className, '(?:\\s|$)'),
							'g'
						),
						'$1'
					)
					.replace(/\s+/g, ' ') // multiple spaces to one
					.replace(/^\s*|\s*$/g, '') // trim the ends
			}
		}

		return target
	}

	exports.default = _default
})

unwrapExports(removeClass)

var toggleClass = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _hasClass = _interopRequireDefault(hasClass)

	var _addClass = _interopRequireDefault(addClass)

	var _removeClass = _interopRequireDefault(removeClass)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(target, className) {
		if ((0, _hasClass.default)(target, className)) {
			return (0, _removeClass.default)(target, className)
		}

		return (0, _addClass.default)(target, className)
	}

	exports.default = _default
})

unwrapExports(toggleClass)

var classNames = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'addClass', {
		enumerable: true,
		get: function get() {
			return _addClass2.default
		}
	})
	Object.defineProperty(exports, 'hasClass', {
		enumerable: true,
		get: function get() {
			return _hasClass2.default
		}
	})
	Object.defineProperty(exports, 'removeClass', {
		enumerable: true,
		get: function get() {
			return _removeClass2.default
		}
	})
	Object.defineProperty(exports, 'toggleClass', {
		enumerable: true,
		get: function get() {
			return _toggleClass2.default
		}
	})

	var _addClass2 = _interopRequireDefault(addClass)

	var _hasClass2 = _interopRequireDefault(hasClass)

	var _removeClass2 = _interopRequireDefault(removeClass)

	var _toggleClass2 = _interopRequireDefault(toggleClass)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(classNames)

var stringFormatter = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.underscore = underscore
	exports.camelize = camelize
	exports.hyphenate = hyphenate
	exports.merge = merge

	/* eslint-disable */

	/**
	 * @example
	 * underscoreName('getList');
	 * => get_list
	 */
	function underscore(string) {
		return string.replace(/([A-Z])/g, '_$1').toLowerCase()
	}
	/**
	 * @example
	 * camelize('font-size');
	 * => fontSize
	 */

	function camelize(string) {
		return string.replace(/\-(\w)/g, function(char) {
			return char.slice(1).toUpperCase()
		})
	}
	/**
	 * @example
	 * camelize('fontSize');
	 * => font-size
	 */

	function hyphenate(string) {
		return string.replace(/([A-Z])/g, '-$1').toLowerCase()
	}
	/**
	 * @example
	 * merge('{0} - A front-end {1} ','Suite','framework');
	 * => Suite - A front-end framework
	 */

	function merge(pattern) {
		var pointer = 0,
			i

		for (i = 1; i < arguments.length; i += 1) {
			pattern = pattern.split('{'.concat(pointer, '}')).join(arguments[i])
			pointer += 1
		}

		return pattern
	}
})

unwrapExports(stringFormatter)
var stringFormatter_1 = stringFormatter.underscore
var stringFormatter_2 = stringFormatter.camelize
var stringFormatter_3 = stringFormatter.hyphenate
var stringFormatter_4 = stringFormatter.merge

var camelizeStyleName = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var msPattern = /^ms-/

	var _default = function _default(name) {
		return (0, stringFormatter.camelize)(name.replace(msPattern, 'ms-'))
	}

	exports.default = _default
})

unwrapExports(camelizeStyleName)

var getComputedStyle$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(node) {
		if (!node) {
			throw new TypeError('No Element passed to `getComputedStyle()`')
		}

		var doc = node.ownerDocument

		if ('defaultView' in doc) {
			if (doc.defaultView.opener) {
				return node.ownerDocument.defaultView.getComputedStyle(
					node,
					null
				)
			}

			return window.getComputedStyle(node, null)
		}

		return null
	}

	exports.default = _default
})

unwrapExports(getComputedStyle$1)

var hyphenateStyleName = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var msPattern = /^ms-/

	var _default = function _default(string) {
		return (0, stringFormatter.hyphenate)(string).replace(msPattern, '-ms-')
	}

	exports.default = _default
})

unwrapExports(hyphenateStyleName)

var getStyle = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _camelizeStyleName = _interopRequireDefault(camelizeStyleName)

	var _getComputedStyle = _interopRequireDefault(getComputedStyle$1)

	var _hyphenateStyleName = _interopRequireDefault(hyphenateStyleName)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node, property) {
		if (property) {
			var value = node.style[(0, _camelizeStyleName.default)(property)]

			if (value) {
				return value
			}

			var styles = (0, _getComputedStyle.default)(node)

			if (styles) {
				return styles.getPropertyValue(
					(0, _hyphenateStyleName.default)(property)
				)
			}
		}

		return node.style || (0, _getComputedStyle.default)(node)
	}

	exports.default = _default
})

unwrapExports(getStyle)

var removeStyle_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	function removeStyle(node, key) {
		if ('removeProperty' in node.style) {
			node.style.removeProperty(key)
		} else if (typeof node.style.removeAttribute === 'function') {
			node.style.removeAttribute(key)
		}
	}
	/**
	 * key(s) typeof [string , array] ?
	 */

	var _default = function _default(node, keys) {
		if (typeof keys === 'string') {
			removeStyle(node, keys)
		} else if (Object.prototype.toString.call(keys) === '[object Array]') {
			keys.forEach(function(key) {
				return removeStyle(node, key)
			})
		}
	}

	exports.default = _default
})

unwrapExports(removeStyle_1)

var addStyle = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _hyphenateStyleName = _interopRequireDefault(hyphenateStyleName)

	var _removeStyle = _interopRequireDefault(removeStyle_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	var _default = function _default(node, property, value) {
		var css = ''
		var props = property

		if (typeof property === 'string') {
			if (value === undefined) {
				throw new Error('value is undefined')
			}

			;(props = {})[property] = value
		}

		if (_typeof(props) === 'object') {
			for (var key in props) {
				if (Object.prototype.hasOwnProperty.call(props, key)) {
					if (!props[key] && props[key] !== 0) {
						;(0, _removeStyle.default)(
							node,
							(0, _hyphenateStyleName.default)(key)
						)
					} else {
						css += ''
							.concat((0, _hyphenateStyleName.default)(key), ':')
							.concat(props[key], ';')
					}
				}
			}
		}

		node.style.cssText += ';'.concat(css)
	}

	exports.default = _default
})

unwrapExports(addStyle)

var style = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'getStyle', {
		enumerable: true,
		get: function get() {
			return _getStyle2.default
		}
	})
	Object.defineProperty(exports, 'removeStyle', {
		enumerable: true,
		get: function get() {
			return _removeStyle2.default
		}
	})
	Object.defineProperty(exports, 'addStyle', {
		enumerable: true,
		get: function get() {
			return _addStyle2.default
		}
	})
	Object.defineProperty(exports, 'getComputedStyle', {
		enumerable: true,
		get: function get() {
			return _getComputedStyle2.default
		}
	})

	var _getStyle2 = _interopRequireDefault(getStyle)

	var _removeStyle2 = _interopRequireDefault(removeStyle_1)

	var _addStyle2 = _interopRequireDefault(addStyle)

	var _getComputedStyle2 = _interopRequireDefault(getComputedStyle$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(style)

var ownerDocument = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(node) {
		return (node && node.ownerDocument) || document
	}

	exports.default = _default
})

unwrapExports(ownerDocument)

var ownerWindow = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _ownerDocument = _interopRequireDefault(ownerDocument)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(componentOrElement) {
		var doc = (0, _ownerDocument.default)(componentOrElement)
		return doc.defaultView
	}

	exports.default = _default
})

unwrapExports(ownerWindow)

var getWindow = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(node) {
		if (node === node.window) {
			return node
		}

		return node.nodeType === 9
			? node.defaultView || node.parentWindow
			: null
	}

	exports.default = _default
})

unwrapExports(getWindow)

var getContainer = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(container, defaultContainer) {
		container = typeof container === 'function' ? container() : container
		return container || defaultContainer
	}

	exports.default = _default
})

unwrapExports(getContainer)

var canUseDOM_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0
	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	)
	var _default = canUseDOM
	exports.default = _default
})

unwrapExports(canUseDOM_1)

var contains_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _canUseDOM = _interopRequireDefault(canUseDOM_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	/* eslint-disable */
	var fallback = function fallback(context, node) {
		if (node) {
			do {
				if (node === context) {
					return true
				}
			} while ((node = node.parentNode))
		}

		return false
	} // HTML DOM and SVG DOM may have different support levels,
	// so we need to check on context instead of a document root element.

	var contains = function contains(context, node) {
		if (context.contains) {
			return context.contains(node)
		} else if (context.compareDocumentPosition) {
			return (
				context === node ||
				!!(context.compareDocumentPosition(node) & 16)
			)
		}

		return fallback(context, node)
	}

	var _default = (function() {
		return _canUseDOM.default ? contains : fallback
	})()

	exports.default = _default
})

unwrapExports(contains_1)

var scrollTop = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getWindow = _interopRequireDefault(getWindow)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node, val) {
		var win = (0, _getWindow.default)(node)
		var top = node.scrollTop
		var left = 0

		if (win) {
			top =
				'pageYOffset' in win
					? win.pageYOffset
					: win.document.documentElement.scrollTop
			left =
				'pageXOffset' in win
					? win.pageXOffset
					: win.document.documentElement.scrollLeft
		}

		if (val !== undefined) {
			if (win) {
				win.scrollTo(left, val)
			} else {
				node.scrollTop = val
			}
		}

		return top
	}

	exports.default = _default
})

unwrapExports(scrollTop)

var scrollLeft = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getWindow = _interopRequireDefault(getWindow)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node, val) {
		var win = (0, _getWindow.default)(node)
		var left = node.scrollLeft
		var top = 0

		if (win) {
			left =
				'pageXOffset' in win
					? win.pageXOffset
					: win.document.documentElement.scrollLeft
			top =
				'pageYOffset' in win
					? win.pageYOffset
					: win.document.documentElement.scrollTop
		}

		if (val !== undefined) {
			if (win) {
				win.scrollTo(val, top)
			} else {
				node.scrollLeft = val
			}
		}

		return left
	}

	exports.default = _default
})

unwrapExports(scrollLeft)

var getOffset$2 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _ownerDocument = _interopRequireDefault(ownerDocument)

	var _getWindow = _interopRequireDefault(getWindow)

	var _contains = _interopRequireDefault(contains_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node) {
		var doc = (0, _ownerDocument.default)(node)
		var win = (0, _getWindow.default)(doc)
		var docElem = doc && doc.documentElement
		var box = {
			top: 0,
			left: 0,
			height: 0,
			width: 0
		}

		if (!doc) {
			return null
		} // Make sure it's not a disconnected DOM node

		if (!(0, _contains.default)(docElem, node)) {
			return box
		}

		if (node.getBoundingClientRect !== undefined) {
			box = node.getBoundingClientRect()
		}

		if ((box.width || box.height) && docElem && win) {
			box = {
				top:
					box.top +
					(win.pageYOffset || docElem.scrollTop) -
					(docElem.clientTop || 0),
				left:
					box.left +
					(win.pageXOffset || docElem.scrollLeft) -
					(docElem.clientLeft || 0),
				width: (box.width === null ? node.offsetWidth : box.width) || 0,
				height:
					(box.height === null ? node.offsetHeight : box.height) || 0
			}
		}

		return box
	}

	exports.default = _default
})

unwrapExports(getOffset$2)

var nodeName = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default(node) {
		return node.nodeName && node.nodeName.toLowerCase()
	}

	exports.default = _default
})

unwrapExports(nodeName)

var getOffsetParent$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _ownerDocument = _interopRequireDefault(ownerDocument)

	var _nodeName = _interopRequireDefault(nodeName)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node) {
		var doc = (0, _ownerDocument.default)(node)
		var offsetParent = node && node.offsetParent

		while (
			offsetParent &&
			(0, _nodeName.default)(node) !== 'html' &&
			(0, style.getStyle)(offsetParent, 'position') === 'static'
		) {
			offsetParent = offsetParent.offsetParent
		}

		return offsetParent || doc.documentElement
	}

	exports.default = _default
})

unwrapExports(getOffsetParent$1)

var getPosition = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getOffsetParent = _interopRequireDefault(getOffsetParent$1)

	var _getOffset = _interopRequireDefault(getOffset$2)

	var _scrollTop = _interopRequireDefault(scrollTop)

	var _scrollLeft = _interopRequireDefault(scrollLeft)

	var _nodeName = _interopRequireDefault(nodeName)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var _default = function _default(node, offsetParent) {
		var parentOffset = {
			top: 0,
			left: 0
		}
		var offset = null // Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent

		if ((0, style.getStyle)(node, 'position') === 'fixed') {
			offset = node.getBoundingClientRect()
		} else {
			offsetParent = offsetParent || (0, _getOffsetParent.default)(node)
			offset = (0, _getOffset.default)(node)

			if ((0, _nodeName.default)(offsetParent) !== 'html') {
				var nextParentOffset = (0, _getOffset.default)(offsetParent)

				if (nextParentOffset) {
					parentOffset.top = nextParentOffset.top
					parentOffset.left = nextParentOffset.left
				}
			}

			parentOffset.top +=
				parseInt(
					(0, style.getStyle)(offsetParent, 'borderTopWidth'),
					10
				) - (0, _scrollTop.default)(offsetParent) || 0
			parentOffset.left +=
				parseInt(
					(0, style.getStyle)(offsetParent, 'borderLeftWidth'),
					10
				) - (0, _scrollLeft.default)(offsetParent) || 0
		} // Subtract parent offsets and node margins

		if (offset) {
			return _objectSpread({}, offset, {
				top:
					offset.top -
					parentOffset.top -
					(parseInt((0, style.getStyle)(node, 'marginTop'), 10) || 0),
				left:
					offset.left -
					parentOffset.left -
					(parseInt((0, style.getStyle)(node, 'marginLeft'), 10) || 0)
			})
		}

		return null
	}

	exports.default = _default
})

unwrapExports(getPosition)

var isOverflowing = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getWindow = _interopRequireDefault(getWindow)

	var _ownerDocument = _interopRequireDefault(ownerDocument)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function bodyIsOverflowing(node) {
		var doc = (0, _ownerDocument.default)(node)
		var win = (0, _getWindow.default)(doc)
		var fullWidth = win.innerWidth

		if (doc.body) {
			return doc.body.clientWidth < fullWidth
		}

		return false
	}

	var _default = function _default(container) {
		var win = (0, _getWindow.default)(container)
		var isBody = container && container.tagName.toLowerCase() === 'body'
		return win || isBody
			? bodyIsOverflowing(container)
			: container.scrollHeight > container.clientHeight
	}

	exports.default = _default
})

unwrapExports(isOverflowing)

var activeElement = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _default = function _default() {
		var doc =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: document
		return doc.activeElement
	}

	exports.default = _default
})

unwrapExports(activeElement)

var getScrollbarSize = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _canUseDOM = _interopRequireDefault(canUseDOM_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var size

	var _default = function _default(recalc) {
		if (size === undefined || recalc) {
			if (_canUseDOM.default) {
				var scrollDiv = document.createElement('div')
				var body = document.body
				scrollDiv.style.position = 'absolute'
				scrollDiv.style.top = '-9999px'
				scrollDiv.style.width = '50px'
				scrollDiv.style.height = '50px'
				scrollDiv.style.overflow = 'scroll'
				body.appendChild(scrollDiv)
				size = scrollDiv.offsetWidth - scrollDiv.clientWidth
				body.removeChild(scrollDiv)
			}
		}

		return size
	}

	exports.default = _default
})

unwrapExports(getScrollbarSize)

var getHeight = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getWindow = _interopRequireDefault(getWindow)

	var _getOffset = _interopRequireDefault(getOffset$2)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node, client) {
		var win = (0, _getWindow.default)(node)

		if (win) {
			return win.innerHeight
		}

		return client ? node.clientHeight : (0, _getOffset.default)(node).height
	}

	exports.default = _default
})

unwrapExports(getHeight)

var getWidth = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getWindow = _interopRequireDefault(getWindow)

	var _getOffset = _interopRequireDefault(getOffset$2)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = function _default(node, client) {
		var win = (0, _getWindow.default)(node)

		if (win) {
			return win.innerWidth
		}

		if (client) {
			return node.clientWidth
		}

		var offset = (0, _getOffset.default)(node)
		return offset ? offset.width : 0
	}

	exports.default = _default
})

unwrapExports(getWidth)

var query = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'ownerDocument', {
		enumerable: true,
		get: function get() {
			return _ownerDocument2.default
		}
	})
	Object.defineProperty(exports, 'ownerWindow', {
		enumerable: true,
		get: function get() {
			return _ownerWindow2.default
		}
	})
	Object.defineProperty(exports, 'getWindow', {
		enumerable: true,
		get: function get() {
			return _getWindow2.default
		}
	})
	Object.defineProperty(exports, 'getContainer', {
		enumerable: true,
		get: function get() {
			return _getContainer2.default
		}
	})
	Object.defineProperty(exports, 'canUseDOM', {
		enumerable: true,
		get: function get() {
			return _canUseDOM2.default
		}
	})
	Object.defineProperty(exports, 'contains', {
		enumerable: true,
		get: function get() {
			return _contains2.default
		}
	})
	Object.defineProperty(exports, 'scrollTop', {
		enumerable: true,
		get: function get() {
			return _scrollTop2.default
		}
	})
	Object.defineProperty(exports, 'scrollLeft', {
		enumerable: true,
		get: function get() {
			return _scrollLeft2.default
		}
	})
	Object.defineProperty(exports, 'getOffset', {
		enumerable: true,
		get: function get() {
			return _getOffset2.default
		}
	})
	Object.defineProperty(exports, 'nodeName', {
		enumerable: true,
		get: function get() {
			return _nodeName2.default
		}
	})
	Object.defineProperty(exports, 'getOffsetParent', {
		enumerable: true,
		get: function get() {
			return _getOffsetParent2.default
		}
	})
	Object.defineProperty(exports, 'getPosition', {
		enumerable: true,
		get: function get() {
			return _getPosition2.default
		}
	})
	Object.defineProperty(exports, 'isOverflowing', {
		enumerable: true,
		get: function get() {
			return _isOverflowing2.default
		}
	})
	Object.defineProperty(exports, 'activeElement', {
		enumerable: true,
		get: function get() {
			return _activeElement2.default
		}
	})
	Object.defineProperty(exports, 'getScrollbarSize', {
		enumerable: true,
		get: function get() {
			return _getScrollbarSize2.default
		}
	})
	Object.defineProperty(exports, 'getHeight', {
		enumerable: true,
		get: function get() {
			return _getHeight2.default
		}
	})
	Object.defineProperty(exports, 'getWidth', {
		enumerable: true,
		get: function get() {
			return _getWidth2.default
		}
	})

	var _ownerDocument2 = _interopRequireDefault(ownerDocument)

	var _ownerWindow2 = _interopRequireDefault(ownerWindow)

	var _getWindow2 = _interopRequireDefault(getWindow)

	var _getContainer2 = _interopRequireDefault(getContainer)

	var _canUseDOM2 = _interopRequireDefault(canUseDOM_1)

	var _contains2 = _interopRequireDefault(contains_1)

	var _scrollTop2 = _interopRequireDefault(scrollTop)

	var _scrollLeft2 = _interopRequireDefault(scrollLeft)

	var _getOffset2 = _interopRequireDefault(getOffset$2)

	var _nodeName2 = _interopRequireDefault(nodeName)

	var _getOffsetParent2 = _interopRequireDefault(getOffsetParent$1)

	var _getPosition2 = _interopRequireDefault(getPosition)

	var _isOverflowing2 = _interopRequireDefault(isOverflowing)

	var _activeElement2 = _interopRequireDefault(activeElement)

	var _getScrollbarSize2 = _interopRequireDefault(getScrollbarSize)

	var _getHeight2 = _interopRequireDefault(getHeight)

	var _getWidth2 = _interopRequireDefault(getWidth)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(query)

var on = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	/**
	 * Bind `target` event `eventName`'s callback `listener`.
	 * @param  {Element} target
	 * @param  {String} eventName
	 * @param  {Function} listener
	 * @param  {Boolean} capture
	 * @return {Object}
	 */
	var _default = function _default(target, eventName, listener) {
		var capture =
			arguments.length > 3 && arguments[3] !== undefined
				? arguments[3]
				: false
		target.addEventListener(eventName, listener, capture)
		return {
			off: function off() {
				target.removeEventListener(eventName, listener, capture)
			}
		}
	}

	exports.default = _default
})

unwrapExports(on)

var off = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	/**
	 * Unbind `target` event `eventName`'s callback `listener`.
	 *
	 * @param {Element} target
	 * @param {String} eventName
	 * @param {Function} listener
	 * @param {Boolean} capture
	 * @api public
	 */
	var _default = function _default(target, eventName, listener) {
		var capture =
			arguments.length > 3 && arguments[3] !== undefined
				? arguments[3]
				: false
		target.removeEventListener(eventName, listener, capture)
	}

	exports.default = _default
})

unwrapExports(off)

var events = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'on', {
		enumerable: true,
		get: function get() {
			return _on2.default
		}
	})
	Object.defineProperty(exports, 'off', {
		enumerable: true,
		get: function get() {
			return _off2.default
		}
	})

	var _on2 = _interopRequireDefault(on)

	var _off2 = _interopRequireDefault(off)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(events)

var getGlobal_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	// the only reliable means to get the global object is
	// `Function('return this')()`
	// However, this causes CSP violations in Chrome apps.
	// https://github.com/tc39/proposal-global
	function getGlobal() {
		if (typeof globalThis !== 'undefined') {
			return globalThis
		}

		if (typeof self !== 'undefined') {
			return self
		}

		if (typeof window !== 'undefined') {
			return window
		}

		if (typeof commonjsGlobal !== 'undefined') {
			return commonjsGlobal
		}

		throw new Error('unable to locate global object')
	}

	var _default = getGlobal
	exports.default = _default
})

unwrapExports(getGlobal_1)

var cancelAnimationFramePolyfill = createCommonjsModule(function(
	module,
	exports
) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getGlobal = _interopRequireDefault(getGlobal_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var g = (0, _getGlobal.default)()

	var _default =
		g.cancelAnimationFrame ||
		g.webkitCancelAnimationFrame ||
		g.mozCancelAnimationFrame ||
		g.oCancelAnimationFrame ||
		g.msCancelAnimationFrame ||
		g.clearTimeout

	exports.default = _default
})

unwrapExports(cancelAnimationFramePolyfill)

var nativeRequestAnimationFrame = createCommonjsModule(function(
	module,
	exports
) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getGlobal = _interopRequireDefault(getGlobal_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var g = (0, _getGlobal.default)()

	var _default =
		g.requestAnimationFrame ||
		g.webkitRequestAnimationFrame ||
		g.mozRequestAnimationFrame ||
		g.oRequestAnimationFrame ||
		g.msRequestAnimationFrame

	exports.default = _default
})

unwrapExports(nativeRequestAnimationFrame)

var emptyFunction_1$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _this = void 0

	function makeEmptyFunction(arg) {
		return function() {
			return arg
		}
	}

	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false)
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true)
	emptyFunction.thatReturnsNull = makeEmptyFunction(null)

	emptyFunction.thatReturnsThis = function() {
		return _this
	}

	emptyFunction.thatReturnsArgument = function(arg) {
		return arg
	}

	var _default = emptyFunction
	exports.default = _default
})

unwrapExports(emptyFunction_1$1)

var requestAnimationFramePolyfill = createCommonjsModule(function(
	module,
	exports
) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _nativeRequestAnimationFrame = _interopRequireDefault(
		nativeRequestAnimationFrame
	)

	var _emptyFunction = _interopRequireDefault(emptyFunction_1$1)

	var _getGlobal = _interopRequireDefault(getGlobal_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var g = (0, _getGlobal.default)()
	var lastTime = 0

	function _setTimeout(callback) {
		var currTime = Date.now()
		var timeDelay = Math.max(0, 16 - (currTime - lastTime))
		lastTime = currTime + timeDelay
		return g.setTimeout(function() {
			callback(Date.now())
		}, timeDelay)
	}
	/**
	 * Here is the native and polyfill version of requestAnimationFrame.
	 * Please don't use it directly and use requestAnimationFrame module instead.
	 */

	var requestAnimationFrame =
		(_nativeRequestAnimationFrame.default &&
			_nativeRequestAnimationFrame.default.bind(g)) ||
		_setTimeout // Works around a rare bug in Safari 6 where the first request is never invoked.

	requestAnimationFrame(_emptyFunction.default)
	var _default = requestAnimationFrame
	exports.default = _default
})

unwrapExports(requestAnimationFramePolyfill)

var animation = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'cancelAnimationFramePolyfill', {
		enumerable: true,
		get: function get() {
			return _cancelAnimationFramePolyfill2.default
		}
	})
	Object.defineProperty(exports, 'nativeRequestAnimationFrame', {
		enumerable: true,
		get: function get() {
			return _nativeRequestAnimationFrame2.default
		}
	})
	Object.defineProperty(exports, 'requestAnimationFramePolyfill', {
		enumerable: true,
		get: function get() {
			return _requestAnimationFramePolyfill2.default
		}
	})

	var _cancelAnimationFramePolyfill2 = _interopRequireDefault(
		cancelAnimationFramePolyfill
	)

	var _nativeRequestAnimationFrame2 = _interopRequireDefault(
		nativeRequestAnimationFrame
	)

	var _requestAnimationFramePolyfill2 = _interopRequireDefault(
		requestAnimationFramePolyfill
	)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(animation)

var transition = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	function getTransitionProperties() {
		if (!query.canUseDOM) {
			return {}
		}

		var vendorMap = {
			O: function O(e) {
				return 'o'.concat(e.toLowerCase())
			},
			Moz: function Moz(e) {
				return e.toLowerCase()
			},
			Webkit: function Webkit(e) {
				return 'webkit'.concat(e)
			},
			ms: function ms(e) {
				return 'MS'.concat(e)
			}
		}
		var vendors = Object.keys(vendorMap)
		var style = document.createElement('div').style
		var tempTransitionEnd
		var tempPrefix = ''

		for (var i = 0; i < vendors.length; i += 1) {
			var vendor = vendors[i]

			if (''.concat(vendor, 'TransitionProperty') in style) {
				tempPrefix = '-'.concat(vendor.toLowerCase())
				tempTransitionEnd = vendorMap[vendor]('TransitionEnd')
				break
			}
		}

		if (!tempTransitionEnd && 'transitionProperty' in style) {
			tempTransitionEnd = 'transitionend'
		}

		style = null
		return {
			transitionEnd: tempTransitionEnd,
			prefix: tempPrefix
		}
	}

	var _default = function _default() {
		var _getTransitionPropert = getTransitionProperties(),
			prefix = _getTransitionPropert.prefix,
			transitionEnd = _getTransitionPropert.transitionEnd

		var addPrefix = function addPrefix(name) {
			return ''.concat(prefix, '-').concat(name)
		}

		return {
			end: transitionEnd,
			backfaceVisibility: addPrefix('backface-visibility'),
			transform: addPrefix('transform'),
			property: addPrefix('transition-property'),
			timing: addPrefix('transition-timing-function'),
			delay: addPrefix('transition-delay'),
			duration: addPrefix('transition-duration')
		}
	}

	exports.default = _default
})

unwrapExports(transition)

var getVendorPrefixedName_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _canUseDOM = _interopRequireDefault(canUseDOM_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var memoized = {}
	var prefixes = ['Webkit', 'ms', 'Moz', 'O']
	var prefixRegex = new RegExp('^('.concat(prefixes.join('|'), ')'))
	var testStyle = _canUseDOM.default
		? document.createElement('div').style
		: {}

	function getWithPrefix(name) {
		for (var i = 0; i < prefixes.length; i += 1) {
			var prefixedName = prefixes[i] + name

			if (prefixedName in testStyle) {
				return prefixedName
			}
		}

		return null
	}
	/**
	 * @param {string} property Name of a css property to check for.
	 * @return {?string} property name supported in the browser, or null if not
	 * supported.
	 */

	function getVendorPrefixedName(property) {
		var name = (0, stringFormatter.camelize)(property)

		if (memoized[name] === undefined) {
			var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1)

			if (prefixRegex.test(capitalizedName)) {
				throw new Error(
					'getVendorPrefixedName must only be called with unprefixed\n          CSS property names. It was called with '.concat(
						property
					)
				)
			}

			memoized[name] =
				name in testStyle ? name : getWithPrefix(capitalizedName)
		}

		return memoized[name]
	}

	var _default = getVendorPrefixedName
	exports.default = _default
})

unwrapExports(getVendorPrefixedName_1)

var BrowserSupportCore = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _getVendorPrefixedName = _interopRequireDefault(getVendorPrefixedName_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var _default = {
		/**
		 * @return {bool} True if browser supports css animations.
		 */
		hasCSSAnimations: function hasCSSAnimations() {
			return !!(0, _getVendorPrefixedName.default)('animationName')
		},

		/**
		 * @return {bool} True if browser supports css transforms.
		 */
		hasCSSTransforms: function hasCSSTransforms() {
			return !!(0, _getVendorPrefixedName.default)('transform')
		},

		/**
		 * @return {bool} True if browser supports css 3d transforms.
		 */
		hasCSS3DTransforms: function hasCSS3DTransforms() {
			return !!(0, _getVendorPrefixedName.default)('perspective')
		},

		/**
		 * @return {bool} True if browser supports css transitions.
		 */
		hasCSSTransitions: function hasCSSTransitions() {
			return !!(0, _getVendorPrefixedName.default)('transition')
		}
	}
	exports.default = _default
})

unwrapExports(BrowserSupportCore)

var translateDOMPositionXY_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _BrowserSupportCore = _interopRequireDefault(BrowserSupportCore)

	var _getVendorPrefixedName = _interopRequireDefault(getVendorPrefixedName_1)

	var _getGlobal = _interopRequireDefault(getGlobal_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var g = (0, _getGlobal.default)()
	var TRANSFORM = (0, _getVendorPrefixedName.default)('transform')
	var BACKFACE_VISIBILITY = (0, _getVendorPrefixedName.default)(
		'backfaceVisibility'
	)

	var translateDOMPositionXY = (function() {
		if (_BrowserSupportCore.default.hasCSSTransforms()) {
			var ua = g.window ? g.window.navigator.userAgent : 'UNKNOWN'
			var isSafari = /Safari\//.test(ua) && !/Chrome\//.test(ua) // It appears that Safari messes up the composition order
			// of GPU-accelerated layers
			// (see bug https://bugs.webkit.org/show_bug.cgi?id=61824).
			// Use 2D translation instead.

			if (!isSafari && _BrowserSupportCore.default.hasCSS3DTransforms()) {
				return function(style) {
					var x =
						arguments.length > 1 && arguments[1] !== undefined
							? arguments[1]
							: 0
					var y =
						arguments.length > 2 && arguments[2] !== undefined
							? arguments[2]
							: 0
					style[TRANSFORM] = 'translate3d('
						.concat(x, 'px,')
						.concat(y, 'px,0)')
					style[BACKFACE_VISIBILITY] = 'hidden'
					return style
				}
			}

			return function(style) {
				var x =
					arguments.length > 1 && arguments[1] !== undefined
						? arguments[1]
						: 0
				var y =
					arguments.length > 2 && arguments[2] !== undefined
						? arguments[2]
						: 0
				style[TRANSFORM] = 'translate('
					.concat(x, 'px,')
					.concat(y, 'px)')
				return style
			}
		}

		return function(style) {
			var x =
				arguments.length > 1 && arguments[1] !== undefined
					? arguments[1]
					: 0
			var y =
				arguments.length > 2 && arguments[2] !== undefined
					? arguments[2]
					: 0
			style.left = ''.concat(x, 'px')
			style.top = ''.concat(y, 'px')
			return style
		}
	})()

	var _default = translateDOMPositionXY
	exports.default = _default
})

unwrapExports(translateDOMPositionXY_1)

var DOMMouseMoveTracker_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _on = _interopRequireDefault(on)

	var _cancelAnimationFramePolyfill = _interopRequireDefault(
		cancelAnimationFramePolyfill
	)

	var _requestAnimationFramePolyfill = _interopRequireDefault(
		requestAnimationFramePolyfill
	)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var DOMMouseMoveTracker =
		/*#__PURE__*/
		(function() {
			/**
			 * onMove is the callback that will be called on every mouse move.
			 * onMoveEnd is called on mouse up when movement has ended.
			 */
			function DOMMouseMoveTracker(onMove, onMoveEnd, domNode) {
				var _this = this

				_classCallCheck(this, DOMMouseMoveTracker)

				_defineProperty(this, 'isDraggingStatus', false)

				_defineProperty(this, 'animationFrameID', null)

				_defineProperty(this, 'domNode', void 0)

				_defineProperty(this, 'onMove', void 0)

				_defineProperty(this, 'onMoveEnd', void 0)

				_defineProperty(this, 'eventMoveToken', null)

				_defineProperty(this, 'eventUpToken', null)

				_defineProperty(this, 'moveEvent', null)

				_defineProperty(this, 'deltaX', 0)

				_defineProperty(this, 'deltaY', 0)

				_defineProperty(this, 'x', 0)

				_defineProperty(this, 'y', 0)

				_defineProperty(this, 'isDragging', function() {
					return _this.isDraggingStatus
				})

				_defineProperty(this, 'onMouseMove', function(event) {
					var x = event.clientX
					var y = event.clientY
					_this.deltaX += x - _this.x
					_this.deltaY += y - _this.y

					if (_this.animationFrameID === null) {
						// The mouse may move faster then the animation frame does.
						// Use `requestAnimationFramePolyfill` to avoid over-updating.
						_this.animationFrameID = (0,
						_requestAnimationFramePolyfill.default)(
							_this.didMouseMove
						)
					}

					_this.x = x
					_this.y = y
					_this.moveEvent = event
					event.preventDefault()
				})

				_defineProperty(this, 'didMouseMove', function() {
					_this.animationFrameID = null

					_this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent)

					_this.deltaX = 0
					_this.deltaY = 0
				})

				_defineProperty(this, 'onMouseUp', function() {
					if (_this.animationFrameID) {
						_this.didMouseMove()
					}

					_this.onMoveEnd && _this.onMoveEnd()
				})

				this.domNode = domNode
				this.onMove = onMove
				this.onMoveEnd = onMoveEnd
			}
			/**
			 * This is to set up the listeners for listening to mouse move
			 * and mouse up signaling the movement has ended. Please note that these
			 * listeners are added at the document.body level. It takes in an event
			 * in order to grab inital state.
			 */

			_createClass(DOMMouseMoveTracker, [
				{
					key: 'captureMouseMoves',
					value: function captureMouseMoves(event) {
						if (!this.eventMoveToken && !this.eventUpToken) {
							this.eventMoveToken = (0, _on.default)(
								this.domNode,
								'mousemove',
								this.onMouseMove
							)
							this.eventUpToken = (0, _on.default)(
								this.domNode,
								'mouseup',
								this.onMouseUp
							)
						}

						if (!this.isDraggingStatus) {
							this.deltaX = 0
							this.deltaY = 0
							this.isDraggingStatus = true
							this.x = event.clientX
							this.y = event.clientY
						}

						event.preventDefault()
					}
					/**
					 * These releases all of the listeners on document.body.
					 */
				},
				{
					key: 'releaseMouseMoves',
					value: function releaseMouseMoves() {
						if (this.eventMoveToken) {
							this.eventMoveToken.off()
							this.eventMoveToken = null
						}

						if (this.eventUpToken) {
							this.eventUpToken.off()
							this.eventUpToken = null
						}

						if (this.animationFrameID !== null) {
							;(0, _cancelAnimationFramePolyfill.default)(
								this.animationFrameID
							)
							this.animationFrameID = null
						}

						if (this.isDraggingStatus) {
							this.isDraggingStatus = false
							this.x = 0
							this.y = 0
						}
					}
					/**
					 * Returns whether or not if the mouse movement is being tracked.
					 */
				}
			])

			return DOMMouseMoveTracker
		})()

	var _default = DOMMouseMoveTracker
	exports.default = _default
})

unwrapExports(DOMMouseMoveTracker_1)

var UserAgent_DEPRECATED = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0
	var populated = false // Browsers

	var _ie

	var _firefox

	var _opera

	var _webkit

	var _chrome // Actual IE browser for compatibility mode

	var ieRealVersion // Platforms

	var _osx

	var _windows

	var _linux

	var _android // Architectures

	var win64 // Devices

	var _iphone

	var _ipad

	var native

	var _mobile

	function populate() {
		if (populated) {
			return
		}

		populated = true // To work around buggy JS libraries that can't handle multi-digit
		// version numbers, Opera 10's user agent string claims it's Opera
		// 9, then later includes a Version/X.Y field:
		//
		// Opera/9.80 (foo) Presto/2.2.15 Version/10.10

		var uas = navigator.userAgent
		var agent = /(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(
			uas
		)
		var os = /(Mac OS X)|(Windows)|(Linux)/.exec(uas)
		_iphone = /\b(iPhone|iP[ao]d)/.exec(uas)
		_ipad = /\b(iP[ao]d)/.exec(uas)
		_android = /Android/i.exec(uas)
		native = /FBAN\/\w+;/i.exec(uas)
		_mobile = /Mobile/i.exec(uas) // Note that the IE team blog would have you believe you should be checking
		// for 'Win64; x64'.  But MSDN then reveals that you can actually be coming
		// from either x64 or ia64;  so ultimately, you should just check for Win64
		// as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit
		// Windows will send 'WOW64' instead.

		win64 = !!/Win64/.exec(uas)

		if (agent) {
			if (agent[1]) {
				_ie = parseFloat(agent[1])
			} else {
				_ie = agent[5] ? parseFloat(agent[5]) : NaN
			} // IE compatibility mode

			if (_ie && document && document.documentMode) {
				_ie = document.documentMode
			} // grab the "true" ie version from the trident token if available

			var trident = /(?:Trident\/(\d+.\d+))/.exec(uas)
			ieRealVersion = trident ? parseFloat(trident[1]) + 4 : _ie
			_firefox = agent[2] ? parseFloat(agent[2]) : NaN
			_opera = agent[3] ? parseFloat(agent[3]) : NaN
			_webkit = agent[4] ? parseFloat(agent[4]) : NaN

			if (_webkit) {
				// We do not add the regexp to the above test, because it will always
				// match 'safari' only since 'AppleWebKit' appears before 'Chrome' in
				// the userAgent string.
				agent = /(?:Chrome\/(\d+\.\d+))/.exec(uas)
				_chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN
			} else {
				_chrome = NaN
			}
		} else {
			_ie = NaN
			_firefox = NaN
			_opera = NaN
			_chrome = NaN
			_webkit = NaN
		}

		if (os) {
			if (os[1]) {
				// Detect OS X version.  If no version number matches, set osx to true.
				// Version examples:  10, 10_6_1, 10.7
				// Parses version number as a float, taking only first two sets of
				// digits.  If only one set of digits is found, returns just the major
				// version number.
				var ver = /(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(uas)
				_osx = ver ? parseFloat(ver[1].replace('_', '.')) : true
			} else {
				_osx = false
			}

			_windows = !!os[2]
			_linux = !!os[3]
		} else {
			_osx = false
			_windows = false
			_linux = false
		}
	}

	var UserAgent = {
		/**
		 *  Check if the UA is Internet Explorer.
		 *
		 *
		 *  @return float|NaN Version number (if match) or NaN.
		 */
		ie: function ie() {
			return populate() || _ie
		},

		/**
		 * Check if we're in Internet Explorer compatibility mode.
		 *
		 * @return bool true if in compatibility mode, false if
		 * not compatibility mode or not ie
		 */
		ieCompatibilityMode: function ieCompatibilityMode() {
			return populate() || ieRealVersion > _ie
		},

		/**
		 * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we
		 * only need this because Skype can't handle 64-bit IE yet.  We need to remove
		 * this when we don't need it -- tracked by #601957.
		 */
		ie64: function ie64() {
			return UserAgent.ie() && win64
		},

		/**
		 *  Check if the UA is Firefox.
		 *
		 *
		 *  @return float|NaN Version number (if match) or NaN.
		 */
		firefox: function firefox() {
			return populate() || _firefox
		},

		/**
		 *  Check if the UA is Opera.
		 *
		 *
		 *  @return float|NaN Version number (if match) or NaN.
		 */
		opera: function opera() {
			return populate() || _opera
		},

		/**
		 *  Check if the UA is WebKit.
		 *
		 *
		 *  @return float|NaN Version number (if match) or NaN.
		 */
		webkit: function webkit() {
			return populate() || _webkit
		},

		/**
		 *  For Push
		 *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit
		 */
		safari: function safari() {
			return UserAgent.webkit()
		},

		/**
		 *  Check if the UA is a Chrome browser.
		 *
		 *
		 *  @return float|NaN Version number (if match) or NaN.
		 */
		chrome: function chrome() {
			return populate() || _chrome
		},

		/**
		 *  Check if the user is running Windows.
		 *
		 *  @return bool `true' if the user's OS is Windows.
		 */
		windows: function windows() {
			return populate() || _windows
		},

		/**
		 *  Check if the user is running Mac OS X.
		 *
		 *  @return float|bool   Returns a float if a version number is detected,
		 *                       otherwise true/false.
		 */
		osx: function osx() {
			return populate() || _osx
		},

		/**
		 * Check if the user is running Linux.
		 *
		 * @return bool `true' if the user's OS is some flavor of Linux.
		 */
		linux: function linux() {
			return populate() || _linux
		},

		/**
		 * Check if the user is running on an iPhone or iPod platform.
		 *
		 * @return bool `true' if the user is running some flavor of the
		 *    iPhone OS.
		 */
		iphone: function iphone() {
			return populate() || _iphone
		},
		mobile: function mobile() {
			return populate() || _iphone || _ipad || _android || _mobile
		},
		// webviews inside of the native apps
		nativeApp: function nativeApp() {
			return populate() || native
		},
		android: function android() {
			return populate() || _android
		},
		ipad: function ipad() {
			return populate() || _ipad
		}
	}
	var _default = UserAgent
	exports.default = _default
})

unwrapExports(UserAgent_DEPRECATED)

var isEventSupported_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _canUseDOM = _interopRequireDefault(canUseDOM_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var useHasFeature

	if (_canUseDOM.default) {
		useHasFeature =
			document.implementation &&
			document.implementation.hasFeature && // always returns true in newer browsers as per the standard.
			// @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
			document.implementation.hasFeature('', '') !== true
	}

	function isEventSupported(eventNameSuffix, capture) {
		if (
			!_canUseDOM.default ||
			(capture && !('addEventListener' in document))
		) {
			return false
		}

		var eventName = 'on'.concat(eventNameSuffix)
		var isSupported = eventName in document

		if (!isSupported) {
			var element = document.createElement('div')
			element.setAttribute(eventName, 'return;')
			isSupported = typeof element[eventName] === 'function'
		}

		if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
			// This is the only way to test support for the `wheel` event in IE9+.
			isSupported = document.implementation.hasFeature(
				'Events.wheel',
				'3.0'
			)
		}

		return isSupported
	}

	var _default = isEventSupported
	exports.default = _default
})

unwrapExports(isEventSupported_1)

var normalizeWheel_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _UserAgent_DEPRECATED = _interopRequireDefault(UserAgent_DEPRECATED)

	var _isEventSupported = _interopRequireDefault(isEventSupported_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	// Reasonable defaults
	var PIXEL_STEP = 10
	var LINE_HEIGHT = 40
	var PAGE_HEIGHT = 800

	function normalizeWheel(event) {
		var sX = 0,
			sY = 0,
			// spinX, spinY
			pX = 0,
			pY = 0 // pixelX, pixelY
		// Legacy

		if ('detail' in event) {
			sY = event.detail
		}

		if ('wheelDelta' in event) {
			sY = -event.wheelDelta / 120
		}

		if ('wheelDeltaY' in event) {
			sY = -event.wheelDeltaY / 120
		}

		if ('wheelDeltaX' in event) {
			sX = -event.wheelDeltaX / 120
		} // side scrolling on FF with DOMMouseScroll

		if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {
			sX = sY
			sY = 0
		}

		pX = sX * PIXEL_STEP
		pY = sY * PIXEL_STEP

		if ('deltaY' in event) {
			pY = event.deltaY
		}

		if ('deltaX' in event) {
			pX = event.deltaX
		}

		if ((pX || pY) && event.deltaMode) {
			if (event.deltaMode === 1) {
				// delta in LINE units
				pX *= LINE_HEIGHT
				pY *= LINE_HEIGHT
			} else {
				// delta in PAGE units
				pX *= PAGE_HEIGHT
				pY *= PAGE_HEIGHT
			}
		} // Fall-back if spin cannot be determined

		if (pX && !sX) {
			sX = pX < 1 ? -1 : 1
		}

		if (pY && !sY) {
			sY = pY < 1 ? -1 : 1
		}

		return {
			spinX: sX,
			spinY: sY,
			pixelX: pX,
			pixelY: pY
		}
	}
	/**
	 * The best combination if you prefer spinX + spinY normalization.  It favors
	 * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with
	 * 'wheel' event, making spin speed determination impossible.
	 */

	normalizeWheel.getEventType = function() {
		if (_UserAgent_DEPRECATED.default.firefox()) {
			return 'DOMMouseScroll'
		}

		return (0, _isEventSupported.default)('wheel') ? 'wheel' : 'mousewheel'
	}

	var _default = normalizeWheel
	exports.default = _default
})

unwrapExports(normalizeWheel_1)

var WheelHandler_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _emptyFunction = _interopRequireDefault(emptyFunction_1$1)

	var _normalizeWheel = _interopRequireDefault(normalizeWheel_1)

	var _requestAnimationFramePolyfill = _interopRequireDefault(
		requestAnimationFramePolyfill
	)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	var WheelHandler =
		/*#__PURE__*/
		(function() {
			function WheelHandler(
				onWheel,
				handleScrollX,
				handleScrollY,
				stopPropagation
			) {
				_classCallCheck(this, WheelHandler)

				this.animationFrameID = null
				this.deltaX = 0
				this.deltaY = 0
				this.didWheel = this.didWheel.bind(this)
				this._rootRef = null

				if (typeof handleScrollX !== 'function') {
					handleScrollX = handleScrollX
						? _emptyFunction.default.thatReturnsTrue
						: _emptyFunction.default.thatReturnsFalse
				}

				if (typeof handleScrollY !== 'function') {
					handleScrollY = handleScrollY
						? _emptyFunction.default.thatReturnsTrue
						: _emptyFunction.default.thatReturnsFalse
				}

				if (typeof stopPropagation !== 'function') {
					stopPropagation = stopPropagation
						? _emptyFunction.default.thatReturnsTrue
						: _emptyFunction.default.thatReturnsFalse
				}

				this.handleScrollX = handleScrollX
				this.handleScrollY = handleScrollY
				this.stopPropagation = stopPropagation
				this.onWheelCallback = onWheel
				this.onWheel = this.onWheel.bind(this)
			}

			_createClass(WheelHandler, [
				{
					key: 'contains',
					value: function contains(target) {
						var parent = target

						while (parent !== document.body) {
							if (parent === this._rootRef) {
								return true
							}

							parent = parent.parentNode
						}

						return false
					}
				},
				{
					key: 'onWheel',
					value: function onWheel(event) {
						var normalizedEvent = (0, _normalizeWheel.default)(
							event
						)
						var deltaX = this.deltaX + normalizedEvent.pixelX
						var deltaY = this.deltaY + normalizedEvent.pixelY
						var handleScrollX = this.handleScrollX(deltaX, deltaY)
						var handleScrollY = this.handleScrollY(deltaY, deltaX)

						if (!handleScrollX && !handleScrollY) {
							return
						}

						if (this._rootRef && !this.contains(event.target)) {
							return
						}

						this.deltaX += handleScrollX
							? normalizedEvent.pixelX
							: 0
						this.deltaY += handleScrollY
							? normalizedEvent.pixelY
							: 0
						event.preventDefault()
						var changed

						if (this.deltaX !== 0 || this.deltaY !== 0) {
							if (this.stopPropagation()) {
								event.stopPropagation()
							}

							changed = true
						}

						if (
							changed === true &&
							this.animationFrameID === null
						) {
							this.animationFrameID = (0,
							_requestAnimationFramePolyfill.default)(
								this.didWheel
							)
						}
					}
				},
				{
					key: 'setRoot',
					value: function setRoot(rootRef) {
						this._rootRef = rootRef
					}
				},
				{
					key: 'didWheel',
					value: function didWheel() {
						this.animationFrameID = null
						this.onWheelCallback(this.deltaX, this.deltaY)
						this.deltaX = 0
						this.deltaY = 0
					}
				}
			])

			return WheelHandler
		})()

	var _default = WheelHandler
	exports.default = _default
})

unwrapExports(WheelHandler_1)

var lib$2 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	var _exportNames = {
		animation: true,
		transition: true,
		translateDOMPositionXY: true,
		getVendorPrefixedName: true,
		BrowserSupportCore: true,
		DOMMouseMoveTracker: true,
		WheelHandler: true
	}
	Object.defineProperty(exports, 'transition', {
		enumerable: true,
		get: function get() {
			return _transition2.default
		}
	})
	Object.defineProperty(exports, 'translateDOMPositionXY', {
		enumerable: true,
		get: function get() {
			return _translateDOMPositionXY2.default
		}
	})
	Object.defineProperty(exports, 'getVendorPrefixedName', {
		enumerable: true,
		get: function get() {
			return _getVendorPrefixedName2.default
		}
	})
	Object.defineProperty(exports, 'BrowserSupportCore', {
		enumerable: true,
		get: function get() {
			return _BrowserSupportCore2.default
		}
	})
	Object.defineProperty(exports, 'DOMMouseMoveTracker', {
		enumerable: true,
		get: function get() {
			return _DOMMouseMoveTracker2.default
		}
	})
	Object.defineProperty(exports, 'WheelHandler', {
		enumerable: true,
		get: function get() {
			return _WheelHandler2.default
		}
	})
	exports.animation = void 0

	Object.keys(classNames).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return classNames[key]
			}
		})
	})

	Object.keys(style).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return style[key]
			}
		})
	})

	Object.keys(query).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return query[key]
			}
		})
	})

	Object.keys(events).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return events[key]
			}
		})
	})

	var _animation = _interopRequireWildcard(animation)

	exports.animation = _animation

	var _transition2 = _interopRequireDefault(transition)

	var _translateDOMPositionXY2 = _interopRequireDefault(
		translateDOMPositionXY_1
	)

	var _getVendorPrefixedName2 = _interopRequireDefault(
		getVendorPrefixedName_1
	)

	var _BrowserSupportCore2 = _interopRequireDefault(BrowserSupportCore)

	var _DOMMouseMoveTracker2 = _interopRequireDefault(DOMMouseMoveTracker_1)

	var _WheelHandler2 = _interopRequireDefault(WheelHandler_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}
})

unwrapExports(lib$2)
var lib_1 = lib$2.animation

/** Used to store function metadata. */
var metaMap = _WeakMap && new _WeakMap()

var _metaMap = metaMap

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !_metaMap
	? identity_1
	: function(func, data) {
			_metaMap.set(func, data)
			return func
	  }

var _baseSetData = baseSetData

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
	return function() {
		// Use a `switch` statement to work with class constructors. See
		// http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		// for more details.
		var args = arguments
		switch (args.length) {
			case 0:
				return new Ctor()
			case 1:
				return new Ctor(args[0])
			case 2:
				return new Ctor(args[0], args[1])
			case 3:
				return new Ctor(args[0], args[1], args[2])
			case 4:
				return new Ctor(args[0], args[1], args[2], args[3])
			case 5:
				return new Ctor(args[0], args[1], args[2], args[3], args[4])
			case 6:
				return new Ctor(
					args[0],
					args[1],
					args[2],
					args[3],
					args[4],
					args[5]
				)
			case 7:
				return new Ctor(
					args[0],
					args[1],
					args[2],
					args[3],
					args[4],
					args[5],
					args[6]
				)
		}
		var thisBinding = _baseCreate(Ctor.prototype),
			result = Ctor.apply(thisBinding, args)

		// Mimic the constructor's `return` behavior.
		// See https://es5.github.io/#x13.2.2 for more details.
		return isObject_1(result) ? result : thisBinding
	}
}

var _createCtor = createCtor

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
	var isBind = bitmask & WRAP_BIND_FLAG,
		Ctor = _createCtor(func)

	function wrapper() {
		var fn = this && this !== _root && this instanceof wrapper ? Ctor : func
		return fn.apply(isBind ? thisArg : this, arguments)
	}
	return wrapper
}

var _createBind = createBind

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$2 = Math.max

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
	var argsIndex = -1,
		argsLength = args.length,
		holdersLength = holders.length,
		leftIndex = -1,
		leftLength = partials.length,
		rangeLength = nativeMax$2(argsLength - holdersLength, 0),
		result = Array(leftLength + rangeLength),
		isUncurried = !isCurried

	while (++leftIndex < leftLength) {
		result[leftIndex] = partials[leftIndex]
	}
	while (++argsIndex < holdersLength) {
		if (isUncurried || argsIndex < argsLength) {
			result[holders[argsIndex]] = args[argsIndex]
		}
	}
	while (rangeLength--) {
		result[leftIndex++] = args[argsIndex++]
	}
	return result
}

var _composeArgs = composeArgs

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$3 = Math.max

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
	var argsIndex = -1,
		argsLength = args.length,
		holdersIndex = -1,
		holdersLength = holders.length,
		rightIndex = -1,
		rightLength = partials.length,
		rangeLength = nativeMax$3(argsLength - holdersLength, 0),
		result = Array(rangeLength + rightLength),
		isUncurried = !isCurried

	while (++argsIndex < rangeLength) {
		result[argsIndex] = args[argsIndex]
	}
	var offset = argsIndex
	while (++rightIndex < rightLength) {
		result[offset + rightIndex] = partials[rightIndex]
	}
	while (++holdersIndex < holdersLength) {
		if (isUncurried || argsIndex < argsLength) {
			result[offset + holders[holdersIndex]] = args[argsIndex++]
		}
	}
	return result
}

var _composeArgsRight = composeArgsRight

/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
	var length = array.length,
		result = 0

	while (length--) {
		if (array[length] === placeholder) {
			++result
		}
	}
	return result
}

var _countHolders = countHolders

/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
	// No operation performed.
}

var _baseLodash = baseLodash

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
	this.__wrapped__ = value
	this.__actions__ = []
	this.__dir__ = 1
	this.__filtered__ = false
	this.__iteratees__ = []
	this.__takeCount__ = MAX_ARRAY_LENGTH
	this.__views__ = []
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = _baseCreate(_baseLodash.prototype)
LazyWrapper.prototype.constructor = LazyWrapper

var _LazyWrapper = LazyWrapper

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop$5() {
	// No operation performed.
}

var noop_1 = noop$5

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !_metaMap
	? noop_1
	: function(func) {
			return _metaMap.get(func)
	  }

var _getData = getData

/** Used to lookup unminified function names. */
var realNames = {}

var _realNames = realNames

/** Used for built-in method references. */
var objectProto$h = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$g = objectProto$h.hasOwnProperty

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
	var result = func.name + '',
		array = _realNames[result],
		length = hasOwnProperty$g.call(_realNames, result) ? array.length : 0

	while (length--) {
		var data = array[length],
			otherFunc = data.func
		if (otherFunc == null || otherFunc == func) {
			return data.name
		}
	}
	return result
}

var _getFuncName = getFuncName

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
	this.__wrapped__ = value
	this.__actions__ = []
	this.__chain__ = !!chainAll
	this.__index__ = 0
	this.__values__ = undefined
}

LodashWrapper.prototype = _baseCreate(_baseLodash.prototype)
LodashWrapper.prototype.constructor = LodashWrapper

var _LodashWrapper = LodashWrapper

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
	if (wrapper instanceof _LazyWrapper) {
		return wrapper.clone()
	}
	var result = new _LodashWrapper(wrapper.__wrapped__, wrapper.__chain__)
	result.__actions__ = _copyArray(wrapper.__actions__)
	result.__index__ = wrapper.__index__
	result.__values__ = wrapper.__values__
	return result
}

var _wrapperClone = wrapperClone

/** Used for built-in method references. */
var objectProto$i = Object.prototype

/** Used to check objects for own properties. */
var hasOwnProperty$h = objectProto$i.hasOwnProperty

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
	if (
		isObjectLike_1(value) &&
		!isArray_1(value) &&
		!(value instanceof _LazyWrapper)
	) {
		if (value instanceof _LodashWrapper) {
			return value
		}
		if (hasOwnProperty$h.call(value, '__wrapped__')) {
			return _wrapperClone(value)
		}
	}
	return new _LodashWrapper(value)
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = _baseLodash.prototype
lodash.prototype.constructor = lodash

var wrapperLodash = lodash

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
	var funcName = _getFuncName(func),
		other = wrapperLodash[funcName]

	if (typeof other != 'function' || !(funcName in _LazyWrapper.prototype)) {
		return false
	}
	if (func === other) {
		return true
	}
	var data = _getData(other)
	return !!data && func === data[0]
}

var _isLaziable = isLaziable

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = _shortOut(_baseSetData)

var _setData = setData

/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	reSplitDetails = /,? & /

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
	var match = source.match(reWrapDetails)
	return match ? match[1].split(reSplitDetails) : []
}

var _getWrapDetails = getWrapDetails

/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
	var length = details.length
	if (!length) {
		return source
	}
	var lastIndex = length - 1
	details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex]
	details = details.join(length > 2 ? ', ' : ' ')
	return source.replace(
		reWrapComment,
		'{\n/* [wrapped with ' + details + '] */\n'
	)
}

var _insertWrapDetails = insertWrapDetails

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$1 = 1,
	WRAP_BIND_KEY_FLAG = 2,
	WRAP_CURRY_FLAG = 8,
	WRAP_CURRY_RIGHT_FLAG = 16,
	WRAP_PARTIAL_FLAG = 32,
	WRAP_PARTIAL_RIGHT_FLAG = 64,
	WRAP_ARY_FLAG = 128,
	WRAP_REARG_FLAG = 256,
	WRAP_FLIP_FLAG = 512

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
	['ary', WRAP_ARY_FLAG],
	['bind', WRAP_BIND_FLAG$1],
	['bindKey', WRAP_BIND_KEY_FLAG],
	['curry', WRAP_CURRY_FLAG],
	['curryRight', WRAP_CURRY_RIGHT_FLAG],
	['flip', WRAP_FLIP_FLAG],
	['partial', WRAP_PARTIAL_FLAG],
	['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	['rearg', WRAP_REARG_FLAG]
]

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
	_arrayEach(wrapFlags, function(pair) {
		var value = '_.' + pair[0]
		if (bitmask & pair[1] && !_arrayIncludes$1(details, value)) {
			details.push(value)
		}
	})
	return details.sort()
}

var _updateWrapDetails = updateWrapDetails

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
	var source = reference + ''
	return _setToString(
		wrapper,
		_insertWrapDetails(
			source,
			_updateWrapDetails(_getWrapDetails(source), bitmask)
		)
	)
}

var _setWrapToString = setWrapToString

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$2 = 1,
	WRAP_BIND_KEY_FLAG$1 = 2,
	WRAP_CURRY_BOUND_FLAG = 4,
	WRAP_CURRY_FLAG$1 = 8,
	WRAP_PARTIAL_FLAG$1 = 32,
	WRAP_PARTIAL_RIGHT_FLAG$1 = 64

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(
	func,
	bitmask,
	wrapFunc,
	placeholder,
	thisArg,
	partials,
	holders,
	argPos,
	ary,
	arity
) {
	var isCurry = bitmask & WRAP_CURRY_FLAG$1,
		newHolders = isCurry ? holders : undefined,
		newHoldersRight = isCurry ? undefined : holders,
		newPartials = isCurry ? partials : undefined,
		newPartialsRight = isCurry ? undefined : partials

	bitmask |= isCurry ? WRAP_PARTIAL_FLAG$1 : WRAP_PARTIAL_RIGHT_FLAG$1
	bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG$1 : WRAP_PARTIAL_FLAG$1)

	if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
		bitmask &= ~(WRAP_BIND_FLAG$2 | WRAP_BIND_KEY_FLAG$1)
	}
	var newData = [
		func,
		bitmask,
		thisArg,
		newPartials,
		newHolders,
		newPartialsRight,
		newHoldersRight,
		argPos,
		ary,
		arity
	]

	var result = wrapFunc.apply(undefined, newData)
	if (_isLaziable(func)) {
		_setData(result, newData)
	}
	result.placeholder = placeholder
	return _setWrapToString(result, func, bitmask)
}

var _createRecurry = createRecurry

/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
	var object = func
	return object.placeholder
}

var _getHolder = getHolder

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin$2 = Math.min

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
	var arrLength = array.length,
		length = nativeMin$2(indexes.length, arrLength),
		oldArray = _copyArray(array)

	while (length--) {
		var index = indexes[length]
		array[length] = _isIndex(index, arrLength) ? oldArray[index] : undefined
	}
	return array
}

var _reorder = reorder

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__'

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
	var index = -1,
		length = array.length,
		resIndex = 0,
		result = []

	while (++index < length) {
		var value = array[index]
		if (value === placeholder || value === PLACEHOLDER) {
			array[index] = PLACEHOLDER
			result[resIndex++] = index
		}
	}
	return result
}

var _replaceHolders = replaceHolders

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$3 = 1,
	WRAP_BIND_KEY_FLAG$2 = 2,
	WRAP_CURRY_FLAG$2 = 8,
	WRAP_CURRY_RIGHT_FLAG$1 = 16,
	WRAP_ARY_FLAG$1 = 128,
	WRAP_FLIP_FLAG$1 = 512

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(
	func,
	bitmask,
	thisArg,
	partials,
	holders,
	partialsRight,
	holdersRight,
	argPos,
	ary,
	arity
) {
	var isAry = bitmask & WRAP_ARY_FLAG$1,
		isBind = bitmask & WRAP_BIND_FLAG$3,
		isBindKey = bitmask & WRAP_BIND_KEY_FLAG$2,
		isCurried = bitmask & (WRAP_CURRY_FLAG$2 | WRAP_CURRY_RIGHT_FLAG$1),
		isFlip = bitmask & WRAP_FLIP_FLAG$1,
		Ctor = isBindKey ? undefined : _createCtor(func)

	function wrapper() {
		var length = arguments.length,
			args = Array(length),
			index = length

		while (index--) {
			args[index] = arguments[index]
		}
		if (isCurried) {
			var placeholder = _getHolder(wrapper),
				holdersCount = _countHolders(args, placeholder)
		}
		if (partials) {
			args = _composeArgs(args, partials, holders, isCurried)
		}
		if (partialsRight) {
			args = _composeArgsRight(
				args,
				partialsRight,
				holdersRight,
				isCurried
			)
		}
		length -= holdersCount
		if (isCurried && length < arity) {
			var newHolders = _replaceHolders(args, placeholder)
			return _createRecurry(
				func,
				bitmask,
				createHybrid,
				wrapper.placeholder,
				thisArg,
				args,
				newHolders,
				argPos,
				ary,
				arity - length
			)
		}
		var thisBinding = isBind ? thisArg : this,
			fn = isBindKey ? thisBinding[func] : func

		length = args.length
		if (argPos) {
			args = _reorder(args, argPos)
		} else if (isFlip && length > 1) {
			args.reverse()
		}
		if (isAry && ary < length) {
			args.length = ary
		}
		if (this && this !== _root && this instanceof wrapper) {
			fn = Ctor || _createCtor(fn)
		}
		return fn.apply(thisBinding, args)
	}
	return wrapper
}

var _createHybrid = createHybrid

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
	var Ctor = _createCtor(func)

	function wrapper() {
		var length = arguments.length,
			args = Array(length),
			index = length,
			placeholder = _getHolder(wrapper)

		while (index--) {
			args[index] = arguments[index]
		}
		var holders =
			length < 3 &&
			args[0] !== placeholder &&
			args[length - 1] !== placeholder
				? []
				: _replaceHolders(args, placeholder)

		length -= holders.length
		if (length < arity) {
			return _createRecurry(
				func,
				bitmask,
				_createHybrid,
				wrapper.placeholder,
				undefined,
				args,
				holders,
				undefined,
				undefined,
				arity - length
			)
		}
		var fn = this && this !== _root && this instanceof wrapper ? Ctor : func
		return _apply(fn, this, args)
	}
	return wrapper
}

var _createCurry = createCurry

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$4 = 1

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
	var isBind = bitmask & WRAP_BIND_FLAG$4,
		Ctor = _createCtor(func)

	function wrapper() {
		var argsIndex = -1,
			argsLength = arguments.length,
			leftIndex = -1,
			leftLength = partials.length,
			args = Array(leftLength + argsLength),
			fn = this && this !== _root && this instanceof wrapper ? Ctor : func

		while (++leftIndex < leftLength) {
			args[leftIndex] = partials[leftIndex]
		}
		while (argsLength--) {
			args[leftIndex++] = arguments[++argsIndex]
		}
		return _apply(fn, isBind ? thisArg : this, args)
	}
	return wrapper
}

var _createPartial = createPartial

/** Used as the internal argument placeholder. */
var PLACEHOLDER$1 = '__lodash_placeholder__'

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$5 = 1,
	WRAP_BIND_KEY_FLAG$3 = 2,
	WRAP_CURRY_BOUND_FLAG$1 = 4,
	WRAP_CURRY_FLAG$3 = 8,
	WRAP_ARY_FLAG$2 = 128,
	WRAP_REARG_FLAG$1 = 256

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin$3 = Math.min

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
	var bitmask = data[1],
		srcBitmask = source[1],
		newBitmask = bitmask | srcBitmask,
		isCommon =
			newBitmask <
			(WRAP_BIND_FLAG$5 | WRAP_BIND_KEY_FLAG$3 | WRAP_ARY_FLAG$2)

	var isCombo =
		(srcBitmask == WRAP_ARY_FLAG$2 && bitmask == WRAP_CURRY_FLAG$3) ||
		(srcBitmask == WRAP_ARY_FLAG$2 &&
			bitmask == WRAP_REARG_FLAG$1 &&
			data[7].length <= source[8]) ||
		(srcBitmask == (WRAP_ARY_FLAG$2 | WRAP_REARG_FLAG$1) &&
			source[7].length <= source[8] &&
			bitmask == WRAP_CURRY_FLAG$3)

	// Exit early if metadata can't be merged.
	if (!(isCommon || isCombo)) {
		return data
	}
	// Use source `thisArg` if available.
	if (srcBitmask & WRAP_BIND_FLAG$5) {
		data[2] = source[2]
		// Set when currying a bound function.
		newBitmask |= bitmask & WRAP_BIND_FLAG$5 ? 0 : WRAP_CURRY_BOUND_FLAG$1
	}
	// Compose partial arguments.
	var value = source[3]
	if (value) {
		var partials = data[3]
		data[3] = partials ? _composeArgs(partials, value, source[4]) : value
		data[4] = partials ? _replaceHolders(data[3], PLACEHOLDER$1) : source[4]
	}
	// Compose partial right arguments.
	value = source[5]
	if (value) {
		partials = data[5]
		data[5] = partials
			? _composeArgsRight(partials, value, source[6])
			: value
		data[6] = partials ? _replaceHolders(data[5], PLACEHOLDER$1) : source[6]
	}
	// Use source `argPos` if available.
	value = source[7]
	if (value) {
		data[7] = value
	}
	// Use source `ary` if it's smaller.
	if (srcBitmask & WRAP_ARY_FLAG$2) {
		data[8] = data[8] == null ? source[8] : nativeMin$3(data[8], source[8])
	}
	// Use source `arity` if one is not provided.
	if (data[9] == null) {
		data[9] = source[9]
	}
	// Use source `func` and merge bitmasks.
	data[0] = source[0]
	data[1] = newBitmask

	return data
}

var _mergeData = mergeData

/** Used as references for various `Number` constants. */
var INFINITY$2 = 1 / 0,
	MAX_INTEGER = 1.7976931348623157e308

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
	if (!value) {
		return value === 0 ? value : 0
	}
	value = toNumber_1(value)
	if (value === INFINITY$2 || value === -INFINITY$2) {
		var sign = value < 0 ? -1 : 1
		return sign * MAX_INTEGER
	}
	return value === value ? value : 0
}

var toFinite_1 = toFinite

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
	var result = toFinite_1(value),
		remainder = result % 1

	return result === result ? (remainder ? result - remainder : result) : 0
}

var toInteger_1 = toInteger

/** Error message constants. */
var FUNC_ERROR_TEXT$2 = 'Expected a function'

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG$6 = 1,
	WRAP_BIND_KEY_FLAG$4 = 2,
	WRAP_CURRY_FLAG$4 = 8,
	WRAP_CURRY_RIGHT_FLAG$2 = 16,
	WRAP_PARTIAL_FLAG$2 = 32,
	WRAP_PARTIAL_RIGHT_FLAG$2 = 64

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax$4 = Math.max

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(
	func,
	bitmask,
	thisArg,
	partials,
	holders,
	argPos,
	ary,
	arity
) {
	var isBindKey = bitmask & WRAP_BIND_KEY_FLAG$4
	if (!isBindKey && typeof func != 'function') {
		throw new TypeError(FUNC_ERROR_TEXT$2)
	}
	var length = partials ? partials.length : 0
	if (!length) {
		bitmask &= ~(WRAP_PARTIAL_FLAG$2 | WRAP_PARTIAL_RIGHT_FLAG$2)
		partials = holders = undefined
	}
	ary = ary === undefined ? ary : nativeMax$4(toInteger_1(ary), 0)
	arity = arity === undefined ? arity : toInteger_1(arity)
	length -= holders ? holders.length : 0

	if (bitmask & WRAP_PARTIAL_RIGHT_FLAG$2) {
		var partialsRight = partials,
			holdersRight = holders

		partials = holders = undefined
	}
	var data = isBindKey ? undefined : _getData(func)

	var newData = [
		func,
		bitmask,
		thisArg,
		partials,
		holders,
		partialsRight,
		holdersRight,
		argPos,
		ary,
		arity
	]

	if (data) {
		_mergeData(newData, data)
	}
	func = newData[0]
	bitmask = newData[1]
	thisArg = newData[2]
	partials = newData[3]
	holders = newData[4]
	arity = newData[9] =
		newData[9] === undefined
			? isBindKey
				? 0
				: func.length
			: nativeMax$4(newData[9] - length, 0)

	if (!arity && bitmask & (WRAP_CURRY_FLAG$4 | WRAP_CURRY_RIGHT_FLAG$2)) {
		bitmask &= ~(WRAP_CURRY_FLAG$4 | WRAP_CURRY_RIGHT_FLAG$2)
	}
	if (!bitmask || bitmask == WRAP_BIND_FLAG$6) {
		var result = _createBind(func, bitmask, thisArg)
	} else if (
		bitmask == WRAP_CURRY_FLAG$4 ||
		bitmask == WRAP_CURRY_RIGHT_FLAG$2
	) {
		result = _createCurry(func, bitmask, arity)
	} else if (
		(bitmask == WRAP_PARTIAL_FLAG$2 ||
			bitmask == (WRAP_BIND_FLAG$6 | WRAP_PARTIAL_FLAG$2)) &&
		!holders.length
	) {
		result = _createPartial(func, bitmask, thisArg, partials)
	} else {
		result = _createHybrid.apply(undefined, newData)
	}
	var setter = data ? _baseSetData : _setData
	return _setWrapToString(setter(result, newData), func, bitmask)
}

var _createWrap = createWrap

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG$5 = 8

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
	arity = guard ? undefined : arity
	var result = _createWrap(
		func,
		WRAP_CURRY_FLAG$5,
		undefined,
		undefined,
		undefined,
		undefined,
		undefined,
		arity
	)
	result.placeholder = curry.placeholder
	return result
}

// Assign default placeholders.
curry.placeholder = {}

var curry_1 = curry

var prefix_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.prefix = exports.defaultClassPrefix = exports.getClassNamePrefix = exports.globalKey = undefined

	var _isArray3 = _interopRequireDefault(isArray_1)

	var _curry3 = _interopRequireDefault(curry_1)

	var _classnames2 = _interopRequireDefault(classnames)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var globalKey = (exports.globalKey = 'rs-')
	var getClassNamePrefix = (exports.getClassNamePrefix = function getClassNamePrefix() {
		if (typeof __RSUITE_CLASSNAME_PREFIX__ !== 'undefined') {
			return __RSUITE_CLASSNAME_PREFIX__
		}
		return globalKey
	})
	var defaultClassPrefix = (exports.defaultClassPrefix = function defaultClassPrefix(
		name
	) {
		return '' + getClassNamePrefix() + name
	})
	var prefix = (exports.prefix = (0, _curry3.default)(function(
		pre,
		className
	) {
		if (!pre || !className) {
			return ''
		}

		if ((0, _isArray3.default)(className)) {
			return (0, _classnames2.default)(
				className
					.filter(function(name) {
						return !!name
					})
					.map(function(name) {
						return pre + '-' + name
					})
			)
		}

		return pre + '-' + className
	}))
})

unwrapExports(prefix_1)
var prefix_2 = prefix_1.prefix
var prefix_3 = prefix_1.defaultClassPrefix
var prefix_4 = prefix_1.getClassNamePrefix
var prefix_5 = prefix_1.globalKey

var requestAnimationTimeout_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.requestAnimationTimeout = exports.cancelAnimationTimeout = undefined

	var _requestAnimationFramePolyfill2 = _interopRequireDefault(
		requestAnimationFramePolyfill
	)

	var _cancelAnimationFramePolyfill2 = _interopRequireDefault(
		cancelAnimationFramePolyfill
	)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var cancelAnimationTimeout = (exports.cancelAnimationTimeout = function cancelAnimationTimeout(
		frame
	) {
		return (0, _cancelAnimationFramePolyfill2.default)(frame.id)
	})

	/**
	 * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.
	 * When the delay time has been reached the function you're timing out will be called.
	 *
	 * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)
	 */
	var requestAnimationTimeout = (exports.requestAnimationTimeout = function requestAnimationTimeout(
		callback,
		delay
	) {
		var start = void 0
		// wait for end of processing current event handler, because event handler may be long
		Promise.resolve().then(function() {
			start = Date.now()
		})

		var timeout = function timeout() {
			if (Date.now() - start >= delay) {
				callback.call()
			} else {
				frame.id = (0, _requestAnimationFramePolyfill2.default)(timeout)
			}
		}

		var frame = {
			id: (0, _requestAnimationFramePolyfill2.default)(timeout)
		}

		return frame
	})
})

unwrapExports(requestAnimationTimeout_1)
var requestAnimationTimeout_2 =
	requestAnimationTimeout_1.requestAnimationTimeout
var requestAnimationTimeout_3 = requestAnimationTimeout_1.cancelAnimationTimeout

/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
	return value === null
}

var isNull_1 = isNull

var isNullOrUndefined_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = isNullOrUndefined

	var _isNull2 = _interopRequireDefault(isNull_1)

	var _isUndefined2 = _interopRequireDefault(isUndefined_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function isNullOrUndefined(value) {
		return (0, _isNull2.default)(value) || (0, _isUndefined2.default)(value)
	}
})

unwrapExports(isNullOrUndefined_1)

var getUnhandledProps_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _omit3 = _interopRequireDefault(omit_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _toConsumableArray(arr) {
		if (Array.isArray(arr)) {
			for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
				arr2[i] = arr[i]
			}
			return arr2
		} else {
			return Array.from(arr)
		}
	}

	/**
	 * Returns an object consisting of props beyond the scope of the Component.
	 * Useful for getting and spreading unknown props from the user.
	 * @param {function} Component A function or ReactClass.
	 * @param {object} props A ReactElement props object
	 * @returns {{}} A shallow copy of the prop object
	 */
	var getUnhandledProps = function getUnhandledProps(Component, props) {
		var omitProps =
			arguments.length > 2 && arguments[2] !== undefined
				? arguments[2]
				: []

		/**
		 * Note that `handledProps` are generated automatically during
		 * build with `babel-plugin-transform-react-flow-handled-props`
		 */
		var _Component$handledPro = Component.handledProps,
			handledProps =
				_Component$handledPro === undefined ? [] : _Component$handledPro

		return (0, _omit3.default)(
			props,
			[].concat(
				_toConsumableArray(handledProps),
				_toConsumableArray(omitProps)
			)
		)
	}

	exports.default = getUnhandledProps
})

unwrapExports(getUnhandledProps_1)

var getTotalByColumns_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _isPlainObject3 = _interopRequireDefault(isPlainObject_1)

	var _isArray3 = _interopRequireDefault(isArray_1)

	var _react2 = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function getTotalByColumns(columns) {
		var totalFlexGrow = 0
		var totalWidth = 0

		var count = function count(items) {
			Array.from(items).forEach(function(column) {
				if (_react2.default.isValidElement(column)) {
					var _column$props = column.props,
						flexGrow = _column$props.flexGrow,
						_column$props$width = _column$props.width,
						width =
							_column$props$width === undefined
								? 0
								: _column$props$width

					totalFlexGrow += flexGrow || 0
					totalWidth += flexGrow ? 0 : width
				} else if ((0, _isArray3.default)(column)) {
					count(column)
				}
			})
		}

		if ((0, _isArray3.default)(columns)) {
			count(columns)
		} else if ((0, _isPlainObject3.default)(columns)) {
			var _columns$props = columns.props,
				flexGrow = _columns$props.flexGrow,
				_columns$props$width = _columns$props.width,
				width =
					_columns$props$width === undefined
						? 0
						: _columns$props$width

			totalFlexGrow = flexGrow || 0
			totalWidth = flexGrow ? 0 : width
		}

		return {
			totalFlexGrow: totalFlexGrow,
			totalWidth: totalWidth
		}
	}

	exports.default = getTotalByColumns
})

unwrapExports(getTotalByColumns_1)

var colSpanCells_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _get3 = _interopRequireDefault(get_1)

	var _react2 = _interopRequireDefault(React__default)

	var _isNullOrUndefined2 = _interopRequireDefault(isNullOrUndefined_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function cloneCell(Cell, props) {
		return _react2.default.cloneElement(Cell, props)
	}

	function colSpanCells(cells) {
		var nextCells = []
		for (var i = 0; i < cells.length; i += 1) {
			var _cells$i$props = cells[i].props,
				width = _cells$i$props.width,
				colSpan = _cells$i$props.colSpan
			/**
			 * 如果存在 colSpan 属性，就去找它的下一个 Cell,
			 * 看看值是否是 isNullOrUndefined，，如果为空这可以合并这个单元格
			 */

			if (colSpan) {
				var nextWidth = width
				for (var j = 0; j < colSpan; j += 1) {
					var nextCell = cells[i + j]
					if (nextCell) {
						var _nextCell$props = nextCell.props,
							rowData = _nextCell$props.rowData,
							dataKey = _nextCell$props.dataKey,
							children = _nextCell$props.children,
							colSpanWidth = _nextCell$props.width,
							isHeaderCell = _nextCell$props.isHeaderCell

						if (
							(rowData &&
								(0, _isNullOrUndefined2.default)(
									(0, _get3.default)(rowData, dataKey)
								)) ||
							(isHeaderCell &&
								(0, _isNullOrUndefined2.default)(children))
						) {
							nextWidth += colSpanWidth
							cells[i + j] = cloneCell(nextCell, {
								removed: true
							})
						}
					}
				}

				nextCells.push(
					cloneCell(cells[i], {
						width: nextWidth
					})
				)
				/* eslint-disable */
				continue
			}
			nextCells.push(cells[i])
		}
		return nextCells
	}

	exports.default = colSpanCells
})

unwrapExports(colSpanCells_1)

var toggleClass_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var toggleClass = function toggleClass(node, className, condition) {
		if (condition) {
			;(0, lib$2.addClass)(node, className)
		} else {
			;(0, lib$2.removeClass)(node, className)
		}
	}

	exports.default = function(node, className, condition) {
		if (!node) {
			return
		}

		if (Object.getPrototypeOf(node).hasOwnProperty('length')) {
			Array.from(node).forEach(function(item) {
				toggleClass(item, className, condition)
			})
			return
		}
		toggleClass(node, className, condition)
	}
})

unwrapExports(toggleClass_1)

var flattenData_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _isArray3 = _interopRequireDefault(isArray_1)

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function flattenData(data) {
		var flattenItems = []

		function loop(data, _parent) {
			if (!(0, _isArray3.default)(data)) {
				return
			}

			data.forEach(function(item) {
				item._parent = _parent
				flattenItems.push(_extends({}, item))
				if (item.children) {
					loop(item.children, item)
				}
			})
		}

		loop(data, null)
		return flattenItems
	}

	exports.default = flattenData
})

unwrapExports(flattenData_1)

var utils$2 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.flattenData = exports.toggleClass = exports.colSpanCells = exports.getTotalByColumns = exports.getUnhandledProps = exports.isNullOrUndefined = undefined

	Object.keys(prefix_1).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return prefix_1[key]
			}
		})
	})

	Object.keys(requestAnimationTimeout_1).forEach(function(key) {
		if (key === 'default' || key === '__esModule') return
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return requestAnimationTimeout_1[key]
			}
		})
	})

	var _isNullOrUndefined3 = _interopRequireDefault(isNullOrUndefined_1)

	var _getUnhandledProps3 = _interopRequireDefault(getUnhandledProps_1)

	var _getTotalByColumns3 = _interopRequireDefault(getTotalByColumns_1)

	var _colSpanCells3 = _interopRequireDefault(colSpanCells_1)

	var _toggleClass3 = _interopRequireDefault(toggleClass_1)

	var _flattenData3 = _interopRequireDefault(flattenData_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.isNullOrUndefined = _isNullOrUndefined3.default
	exports.getUnhandledProps = _getUnhandledProps3.default
	exports.getTotalByColumns = _getTotalByColumns3.default
	exports.colSpanCells = _colSpanCells3.default
	exports.toggleClass = _toggleClass3.default
	exports.flattenData = _flattenData3.default
})

unwrapExports(utils$2)
var utils_1$1 = utils$2.flattenData
var utils_2$1 = utils$2.toggleClass
var utils_3$1 = utils$2.colSpanCells
var utils_4$1 = utils$2.getTotalByColumns
var utils_5$1 = utils$2.getUnhandledProps
var utils_6$1 = utils$2.isNullOrUndefined

var Row_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var Row = (function(_React$PureComponent) {
		_inherits(Row, _React$PureComponent)

		function Row() {
			_classCallCheck(this, Row)

			return _possibleConstructorReturn(
				this,
				(Row.__proto__ || Object.getPrototypeOf(Row)).apply(
					this,
					arguments
				)
			)
		}

		_createClass(Row, [
			{
				key: 'render',
				value: function render() {
					var _props = this.props,
						className = _props.className,
						width = _props.width,
						height = _props.height,
						top = _props.top,
						style = _props.style,
						isHeaderRow = _props.isHeaderRow,
						headerHeight = _props.headerHeight,
						rowRef = _props.rowRef,
						classPrefix = _props.classPrefix,
						rest = _objectWithoutProperties(_props, [
							'className',
							'width',
							'height',
							'top',
							'style',
							'isHeaderRow',
							'headerHeight',
							'rowRef',
							'classPrefix'
						])

					var addPrefix = (0, utils$2.prefix)(classPrefix)
					var classes = (0, _classnames2.default)(
						classPrefix,
						className,
						_defineProperty({}, addPrefix('header'), isHeaderRow)
					)

					var styles = _extends(
						{
							minWidth: width,
							height: isHeaderRow ? headerHeight : height
						},
						style
					)
					;(0, lib$2.translateDOMPositionXY)(styles, 0, top)

					var unhandled = (0, utils$2.getUnhandledProps)(Row, rest)

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							ref: rowRef,
							className: classes,
							style: styles
						})
					)
				}
			}
		])

		return Row
	})(React.PureComponent)

	Row.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table-row'),
		height: 46,
		headerHeight: 40,
		isHeaderRow: false
	}
	Row.handledProps = [
		'className',
		'classPrefix',
		'headerHeight',
		'height',
		'isHeaderRow',
		'rowRef',
		'style',
		'top',
		'width'
	]
	Row.propTypes = {
		width: _propTypes2.default.number,
		height: _propTypes2.default.number,
		headerHeight: _propTypes2.default.number,
		top: _propTypes2.default.number,
		isHeaderRow: _propTypes2.default.bool,
		rowRef: function rowRef() {
			return (typeof (React.ElementRef == null
				? {}
				: React.ElementRef) === 'function'
				? _propTypes2.default.instanceOf(
						React.ElementRef == null ? {} : React.ElementRef
				  )
				: _propTypes2.default.any
			).apply(this, arguments)
		},
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		style: _propTypes2.default.object
	}
	exports.default = Row
})

unwrapExports(Row_1)

var CellGroup_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var CellGroup = (function(_React$PureComponent) {
		_inherits(CellGroup, _React$PureComponent)

		function CellGroup() {
			var _ref

			var _temp, _this, _ret

			_classCallCheck(this, CellGroup)

			for (
				var _len = arguments.length, args = Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			return (
				(_ret =
					((_temp =
						((_this = _possibleConstructorReturn(
							this,
							(_ref =
								CellGroup.__proto__ ||
								Object.getPrototypeOf(CellGroup)).call.apply(
								_ref,
								[this].concat(args)
							)
						)),
						_this)),
					(_this.addPrefix = function(name) {
						return (0, utils$2.prefix)(_this.props.classPrefix)(
							name
						)
					}),
					_temp)),
				_possibleConstructorReturn(_this, _ret)
			)
		}

		_createClass(CellGroup, [
			{
				key: 'render',
				value: function render() {
					var _classNames

					var _props = this.props,
						fixed = _props.fixed,
						width = _props.width,
						left = _props.left,
						height = _props.height,
						style = _props.style,
						classPrefix = _props.classPrefix,
						className = _props.className,
						rest = _objectWithoutProperties(_props, [
							'fixed',
							'width',
							'left',
							'height',
							'style',
							'classPrefix',
							'className'
						])

					var classes = (0, _classnames2.default)(
						classPrefix,
						className,
						((_classNames = {}),
						_defineProperty(
							_classNames,
							this.addPrefix('fixed-' + (fixed || '')),
							fixed
						),
						_defineProperty(
							_classNames,
							this.addPrefix('scroll'),
							!fixed
						),
						_classNames)
					)
					var styles = _extends(
						{
							width: width,
							height: height
						},
						style
					)
					var unhandled = (0, utils$2.getUnhandledProps)(
						CellGroup,
						rest
					)

					;(0, lib$2.translateDOMPositionXY)(styles, left, 0)

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							className: classes,
							style: styles
						})
					)
				}
			}
		])

		return CellGroup
	})(React.PureComponent)

	CellGroup.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table-cell-group')
	}
	CellGroup.handledProps = [
		'className',
		'classPrefix',
		'fixed',
		'height',
		'left',
		'style',
		'width'
	]
	CellGroup.propTypes = {
		fixed: _propTypes2.default.oneOf(['left', 'right']),
		width: _propTypes2.default.number,
		height: _propTypes2.default.number,
		left: _propTypes2.default.number,
		style: _propTypes2.default.object,
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string
	}
	exports.default = CellGroup
})

unwrapExports(CellGroup_1)

var constants = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	var LAYER_WIDTH = (exports.LAYER_WIDTH = 30)
	var SCROLLBAR_MIN_WIDTH = (exports.SCROLLBAR_MIN_WIDTH = 20)
})

unwrapExports(constants)
var constants_1 = constants.LAYER_WIDTH
var constants_2 = constants.SCROLLBAR_MIN_WIDTH

var Scrollbar_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _isUndefined3 = _interopRequireDefault(isUndefined_1)

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var Scrollbar = (function(_React$PureComponent) {
		_inherits(Scrollbar, _React$PureComponent)

		function Scrollbar(props) {
			_classCallCheck(this, Scrollbar)

			var _this = _possibleConstructorReturn(
				this,
				(Scrollbar.__proto__ || Object.getPrototypeOf(Scrollbar)).call(
					this,
					props
				)
			)

			_this.hanldeMouseDown = function(event) {
				var onMouseDown = _this.props.onMouseDown

				_this.mouseMoveTracker = _this.getMouseMoveTracker()
				_this.mouseMoveTracker.captureMouseMoves(event)
				_this.setState({
					handlePressed: true
				})
				onMouseDown && onMouseDown(event)
			}

			_this.hanldeDragEnd = function() {
				_this.releaseMouseMoves()
				_this.setState({
					handlePressed: false
				})
			}

			_this.hanldeDragMove = function(deltaX, deltaY, event) {
				var vertical = _this.props.vertical

				if (
					!_this.mouseMoveTracker ||
					!_this.mouseMoveTracker.isDragging()
				) {
					return
				}
				_this.handleScroll(vertical ? deltaY : deltaX, event)
			}

			_this.hanldeClick = function(event) {
				if (_this.handle && _this.handle.contains(event.target)) {
					return
				}

				var _this$props = _this.props,
					vertical = _this$props.vertical,
					length = _this$props.length,
					scrollLength = _this$props.scrollLength
				var barOffset = _this.state.barOffset

				var offset = vertical
					? event.pageY - barOffset.top
					: event.pageX - barOffset.left

				var handleWidth = (length / scrollLength) * length
				var delta = offset - handleWidth

				var nextDelta =
					offset > _this.scrollOffset
						? delta - _this.scrollOffset
						: offset - _this.scrollOffset
				_this.handleScroll(nextDelta, event)
			}

			_this.scrollOffset = 0

			_this.bindBarRef = function(ref) {
				_this.bar = ref
			}

			_this.bindHandleRef = function(ref) {
				_this.handle = ref
			}

			_this.state = {
				barOffset: {
					top: 0,
					left: 0
				},
				handlePressed: false
			}
			return _this
		}

		_createClass(Scrollbar, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.initBarOffset()
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.releaseMouseMoves()
				}
			},
			{
				key: 'onWheelScroll',
				value: function onWheelScroll(delta) {
					var _props = this.props,
						length = _props.length,
						scrollLength = _props.scrollLength

					var nextDelta = delta / (scrollLength / length)

					this.updateScrollBarPosition(nextDelta)
				}
			},
			{
				key: 'getMouseMoveTracker',
				value: function getMouseMoveTracker() {
					return (
						this.mouseMoveTracker ||
						new lib$2.DOMMouseMoveTracker(
							this.hanldeDragMove,
							this.hanldeDragEnd,
							document.body
						)
					)
				}
			},
			{
				key: 'initBarOffset',
				value: function initBarOffset() {
					var _this2 = this

					setTimeout(function() {
						_this2.bar &&
							_this2.setState({
								barOffset: (0, lib$2.getOffset)(_this2.bar)
							})
					}, 1)
				}
			},
			{
				key: 'handleScroll',
				value: function handleScroll(delta, event) {
					var _props2 = this.props,
						length = _props2.length,
						scrollLength = _props2.scrollLength,
						onScroll = _props2.onScroll

					var scrollDelta = delta * (scrollLength / length)

					this.updateScrollBarPosition(delta)
					onScroll && onScroll(scrollDelta, event)
				}
			},
			{
				key: 'resetScrollBarPosition',
				value: function resetScrollBarPosition() {
					var forceDelta =
						arguments.length > 0 && arguments[0] !== undefined
							? arguments[0]
							: 0

					this.scrollOffset = 0
					this.updateScrollBarPosition(0, forceDelta)
				}
			},
			{
				key: 'updateScrollBarPosition',
				value: function updateScrollBarPosition(delta, forceDelta) {
					var _props3 = this.props,
						vertical = _props3.vertical,
						length = _props3.length,
						scrollLength = _props3.scrollLength

					var max =
						scrollLength && length
							? length -
							  Math.max(
									(length / scrollLength) * length,
									constants.SCROLLBAR_MIN_WIDTH + 2
							  )
							: 0
					var styles = {}

					if ((0, _isUndefined3.default)(forceDelta)) {
						this.scrollOffset += delta
						this.scrollOffset = Math.max(this.scrollOffset, 0)
						this.scrollOffset = Math.min(this.scrollOffset, max)
					} else {
						this.scrollOffset = forceDelta || 0
					}

					if (vertical) {
						;(0, lib$2.translateDOMPositionXY)(
							styles,
							0,
							this.scrollOffset
						)
					} else {
						;(0, lib$2.translateDOMPositionXY)(
							styles,
							this.scrollOffset,
							0
						)
					}

					;(0, lib$2.addStyle)(this.handle, styles)
				}
			},
			{
				key: 'releaseMouseMoves',
				value: function releaseMouseMoves() {
					if (this.mouseMoveTracker) {
						this.mouseMoveTracker.releaseMouseMoves()
						this.mouseMoveTracker = null
					}
				}

				/**
				 * 点击滚动条，然后滚动到指定位置
				 */
			},
			{
				key: 'render',
				value: function render() {
					var _classNames, _styles

					var _props4 = this.props,
						vertical = _props4.vertical,
						length = _props4.length,
						scrollLength = _props4.scrollLength,
						classPrefix = _props4.classPrefix,
						className = _props4.className,
						rest = _objectWithoutProperties(_props4, [
							'vertical',
							'length',
							'scrollLength',
							'classPrefix',
							'className'
						])

					var handlePressed = this.state.handlePressed

					var addPrefix = (0, utils$2.prefix)(classPrefix)
					var classes = (0, _classnames2.default)(
						classPrefix,
						className,
						((_classNames = {}),
						_defineProperty(
							_classNames,
							addPrefix('vertical'),
							vertical
						),
						_defineProperty(
							_classNames,
							addPrefix('horizontal'),
							!vertical
						),
						_defineProperty(
							_classNames,
							addPrefix('hide'),
							scrollLength <= length
						),
						_defineProperty(
							_classNames,
							addPrefix('pressed'),
							handlePressed
						),
						_classNames)
					)

					var styles =
						((_styles = {}),
						_defineProperty(
							_styles,
							vertical ? 'height' : 'width',
							(length / scrollLength) * 100 + '%'
						),
						_defineProperty(
							_styles,
							vertical ? 'minHeight' : 'minWidth',
							constants.SCROLLBAR_MIN_WIDTH
						),
						_styles)
					var unhandled = (0, utils$2.getUnhandledProps)(
						Scrollbar,
						rest
					)

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							ref: this.bindBarRef,
							className: classes,
							onClick: this.hanldeClick,
							role: 'toolbar'
						}),
						React.createElement('div', {
							ref: this.bindHandleRef,
							className: addPrefix('handle'),
							style: styles,
							onMouseDown: this.hanldeMouseDown,
							role: 'button',
							tabIndex: -1
						})
					)
				}
			}
		])

		return Scrollbar
	})(React.PureComponent)

	Scrollbar.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table-scrollbar'),
		scrollLength: 1,
		length: 1
	}
	Scrollbar.handledProps = [
		'className',
		'classPrefix',
		'length',
		'onMouseDown',
		'onScroll',
		'scrollLength',
		'vertical'
	]
	Scrollbar.propTypes = {
		vertical: _propTypes2.default.bool,
		length: _propTypes2.default.number.isRequired,
		scrollLength: _propTypes2.default.number.isRequired,
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		onScroll: _propTypes2.default.func,
		onMouseDown: _propTypes2.default.func
	}
	exports.default = Scrollbar
})

unwrapExports(Scrollbar_1)

var Table_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _merge3 = _interopRequireDefault(merge_1)

	var _pick3 = _interopRequireDefault(pick_1)

	var _isUndefined3 = _interopRequireDefault(isUndefined_1)

	var _isEqual3 = _interopRequireDefault(isEqual_1)

	var _eq3 = _interopRequireDefault(eq_1)

	var _debounce3 = _interopRequireDefault(debounce_1)

	var _flatten3 = _interopRequireDefault(flatten_1)

	var _isFunction3 = _interopRequireDefault(isFunction_1)

	var _intersection3 = _interopRequireDefault(intersection_1)

	var _slicedToArray = (function() {
		function sliceIterator(arr, i) {
			var _arr = []
			var _n = true
			var _d = false
			var _e = undefined
			try {
				for (
					var _i = arr[Symbol.iterator](), _s;
					!(_n = (_s = _i.next()).done);
					_n = true
				) {
					_arr.push(_s.value)
					if (i && _arr.length === i) break
				}
			} catch (err) {
				_d = true
				_e = err
			} finally {
				try {
					if (!_n && _i['return']) _i['return']()
				} finally {
					if (_d) throw _e
				}
			}
			return _arr
		}
		return function(arr, i) {
			if (Array.isArray(arr)) {
				return arr
			} else if (Symbol.iterator in Object(arr)) {
				return sliceIterator(arr, i)
			} else {
				throw new TypeError(
					'Invalid attempt to destructure non-iterable instance'
				)
			}
		}
	})()

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _elementResizeEvent2 = _interopRequireDefault(elementResizeEvent)

	var _Row2 = _interopRequireDefault(Row_1)

	var _CellGroup2 = _interopRequireDefault(CellGroup_1)

	var _Scrollbar2 = _interopRequireDefault(Scrollbar_1)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	function _toConsumableArray(arr) {
		if (Array.isArray(arr)) {
			for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
				arr2[i] = arr[i]
			}
			return arr2
		} else {
			return Array.from(arr)
		}
	}

	var ReactChildren = React.Children
	var CELL_PADDING_HEIGHT = 26
	var columnHandledProps = [
		'align',
		'verticalAlign',
		'width',
		'fixed',
		'resizable',
		'flexGrow',
		'minWidth',
		'colSpan'
	]

	var SORT_TYPE = {
		DESC: 'desc',
		ASC: 'asc'
	}

	var SCROLLBAR_WIDHT = 10

	function findRowKeys(rows, rowKey, expanded) {
		var keys = []
		for (var i = 0; i < rows.length; i++) {
			var item = rows[i]
			if (item.children) {
				keys.push(item[rowKey])
				keys = [].concat(
					_toConsumableArray(keys),
					_toConsumableArray(findRowKeys(item.children, rowKey))
				)
			} else if (expanded) {
				keys.push(item[rowKey])
			}
		}
		return keys
	}

	function findAllParents(rowData, rowKey) {
		var parents = []

		if (!rowData) {
			return parents
		}

		function findParent(data) {
			if (data) {
				parents.push(data[rowKey])
				if (data._parent) {
					findParent(data._parent)
				}
			}
		}
		findParent(rowData._parent)
		return parents
	}

	function shouldShowRowByExpanded() {
		var expandedRowKeys =
			arguments.length > 0 && arguments[0] !== undefined
				? arguments[0]
				: []
		var parentKeys =
			arguments.length > 1 && arguments[1] !== undefined
				? arguments[1]
				: []

		var intersectionKeys = (0, _intersection3.default)(
			expandedRowKeys,
			parentKeys
		)
		if (intersectionKeys.length === parentKeys.length) {
			return true
		}
		return false
	}

	function resetLeftForCells(cells) {
		var left = 0
		var nextCells = []

		for (var i = 0; i < cells.length; i++) {
			var cell = cells[i]
			var nextCell = React.cloneElement(cell, {left: left})
			left += cell.props.width
			nextCells.push(nextCell)
		}

		return nextCells
	}

	function getRandomKey(index) {
		return (
			'_' +
			(Math.random() * 1e18)
				.toString(36)
				.slice(0, 5)
				.toUpperCase() +
			'_' +
			index
		)
	}

	var Table = (function(_React$Component) {
		_inherits(Table, _React$Component)

		_createClass(Table, null, [
			{
				key: 'getDerivedStateFromProps',
				value: function getDerivedStateFromProps(props, state) {
					if (props.data !== state.cacheData) {
						return {
							cacheData: props.data,
							data: props.isTree
								? (0, utils$2.flattenData)(props.data)
								: props.data
						}
					}
					return null
				}
			}
		])

		function Table(props) {
			_classCallCheck(this, Table)

			var _this = _possibleConstructorReturn(
				this,
				(Table.__proto__ || Object.getPrototypeOf(Table)).call(
					this,
					props
				)
			)

			_initialiseProps.call(_this)

			var width = props.width,
				data = props.data,
				rowKey = props.rowKey,
				defaultExpandAllRows = props.defaultExpandAllRows,
				renderRowExpanded = props.renderRowExpanded,
				defaultExpandedRowKeys = props.defaultExpandedRowKeys,
				_props$children = props.children,
				children = _props$children === undefined ? [] : _props$children,
				isTree = props.isTree,
				defaultSortType = props.defaultSortType

			var expandedRowKeys = defaultExpandAllRows
				? findRowKeys(
						data,
						rowKey,
						(0, _isFunction3.default)(renderRowExpanded)
				  )
				: defaultExpandedRowKeys || []

			var shouldFixedColumn = Array.from(children).some(function(child) {
				return child && child.props && child.props.fixed
			})

			if (isTree && !rowKey) {
				throw new Error('The `rowKey` is required when set isTree')
			}
			_this.state = {
				expandedRowKeys: expandedRowKeys,
				shouldFixedColumn: shouldFixedColumn,
				cacheData: data,
				data: isTree ? (0, utils$2.flattenData)(data) : data,
				width: width || 0,
				columnWidth: 0,
				dataKey: 0,
				contentHeight: 0,
				contentWidth: 0,
				tableRowsMaxHeight: [],
				sortType: defaultSortType,
				scrollY: 0,
				isScrolling: false
			}

			_this.scrollY = 0
			_this.scrollX = 0
			_this.wheelHandler = new lib$2.WheelHandler(
				_this._listenWheel,
				_this.shouldHandleWheelX,
				_this.shouldHandleWheelY,
				false
			)

			_this._cacheChildrenSize = (0, _flatten3.default)(children).length
			return _this
		}

		_createClass(Table, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.calculateTableWidth()
					this.calculateTableContextHeight()
					this.calculateRowMaxHeight()
					;(0, _elementResizeEvent2.default)(
						this.table,
						(0, _debounce3.default)(this.calculateTableWidth, 400)
					)

					var options = {passive: false}

					this.wheelListener = (0, lib$2.on)(
						this.tableBody,
						'wheel',
						this.wheelHandler.onWheel,
						options
					)
					this.touchStartListener = (0, lib$2.on)(
						this.tableBody,
						'touchstart',
						this.handleTouchStart,
						options
					)
					this.touchMoveListener = (0, lib$2.on)(
						this.tableBody,
						'touchmove',
						this.handleTouchMove,
						options
					)
				}
			},
			{
				key: 'shouldComponentUpdate',
				value: function shouldComponentUpdate(nextProps, nextState) {
					var _cacheChildrenSize = (0, _flatten3.default)(
						nextProps.children || []
					).length
					if (_cacheChildrenSize !== this._cacheChildrenSize) {
						this._cacheChildrenSize = _cacheChildrenSize
						this._cacheCells = null
					}

					if (this.props.children !== nextProps.children) {
						this._cacheCells = null
					}

					return (
						!(0, _eq3.default)(this.props, nextProps) ||
						!(0, _isEqual3.default)(this.state, nextState)
					)
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps) {
					this.calculateTableContextHeight()
					this.calculateTableContentWidth(prevProps)
					this.calculateRowMaxHeight()
					this.updatePosition()
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.wheelHandler = null
					if (this.table) {
						;(0, elementResizeEvent.unbind)(this.table)
					}
					if (this.wheelListener) {
						this.wheelListener.off()
					}

					if (this.touchStartListener) {
						this.touchStartListener.off()
					}

					if (this.touchMoveListener) {
						this.touchMoveListener.off()
					}
				}
			},
			{
				key: 'getExpandedRowKeys',
				value: function getExpandedRowKeys() {
					var expandedRowKeys = this.props.expandedRowKeys

					return (0, _isUndefined3.default)(expandedRowKeys)
						? this.state.expandedRowKeys
						: expandedRowKeys
				}
			},
			{
				key: 'getSortType',
				value: function getSortType() {
					var sortType = this.props.sortType

					return (0, _isUndefined3.default)(sortType)
						? this.state.sortType
						: sortType
				}
			},
			{
				key: 'getScrollCellGroups',
				value: function getScrollCellGroups() {
					return this.table.querySelectorAll(
						'.' + this.addPrefix('cell-group-scroll')
					)
				}
			},
			{
				key: 'getFixedLeftCellGroups',
				value: function getFixedLeftCellGroups() {
					return this.table.querySelectorAll(
						'.' + this.addPrefix('cell-group-fixed-left')
					)
				}
			},
			{
				key: 'getFixedRightCellGroups',
				value: function getFixedRightCellGroups() {
					return this.table.querySelectorAll(
						'.' + this.addPrefix('cell-group-fixed-right')
					)
				}

				/**
				 * 获取表头高度
				 */
			},
			{
				key: 'getTableHeaderHeight',
				value: function getTableHeaderHeight() {
					var _props = this.props,
						headerHeight = _props.headerHeight,
						showHeader = _props.showHeader

					return showHeader ? headerHeight : 0
				}

				/**
				 * 获取 Table 需要渲染的高度
				 */
			},
			{
				key: 'getTableHeight',
				value: function getTableHeight() {
					var contentHeight = this.state.contentHeight
					var _props2 = this.props,
						minHeight = _props2.minHeight,
						height = _props2.height,
						autoHeight = _props2.autoHeight,
						data = _props2.data

					var headerHeight = this.getTableHeaderHeight()

					if (data.length === 0 && autoHeight) {
						return height
					}

					return autoHeight
						? Math.max(headerHeight + contentHeight, minHeight)
						: height
				}
			},
			{
				key: 'getCells',
				value: function getCells() {
					var _this2 = this

					if (this._cacheCells) {
						return this._cacheCells
					}
					var left = 0 // Cell left margin
					var headerCells = [] // Table header cell
					var bodyCells = [] // Table body cell
					var columns = this.props.children

					if (!columns) {
						this._cacheCells = {
							headerCells: headerCells,
							bodyCells: bodyCells,
							allColumnsWidth: left
						}
						return this._cacheCells
					}

					var tableWidth = this.state.width
					var _props3 = this.props,
						sortColumn = _props3.sortColumn,
						rowHeight = _props3.rowHeight,
						showHeader = _props3.showHeader

					var headerHeight = this.getTableHeaderHeight()

					var _getTotalByColumns = (0, utils$2.getTotalByColumns)(
							columns
						),
						totalFlexGrow = _getTotalByColumns.totalFlexGrow,
						totalWidth = _getTotalByColumns.totalWidth

					ReactChildren.forEach(columns, function(column, index) {
						if (React.isValidElement(column)) {
							var columnChildren = column.props.children
							var _column$props = column.props,
								_width = _column$props.width,
								resizable = _column$props.resizable,
								flexGrow = _column$props.flexGrow,
								minWidth = _column$props.minWidth,
								onResize = _column$props.onResize

							if (resizable && flexGrow) {
								console.warn(
									"Cannot set 'resizable' and 'flexGrow' together in <Column>, column index: " +
										index
								)
							}

							if (columnChildren.length !== 2) {
								throw new Error(
									'Component <HeaderCell> and <Cell> is required, column index: ' +
										index +
										' '
								)
							}

							var nextWidth =
								_this2.state[
									columnChildren[1].props.dataKey +
										'_' +
										index +
										'_width'
								] ||
								_width ||
								0

							if (tableWidth && flexGrow && totalFlexGrow) {
								nextWidth = Math.max(
									((tableWidth - totalWidth) /
										totalFlexGrow) *
										flexGrow,
									minWidth || 60
								)
							}

							var cellProps = _extends(
								{},
								(0, _pick3.default)(
									column.props,
									columnHandledProps
								),
								{
									left: left,
									index: index,
									headerHeight: headerHeight,
									key: index,
									width: nextWidth,
									height: rowHeight,
									firstColumn: index === 0,
									lastColumn: index === columns.length - 1
								}
							)

							if (showHeader && headerHeight) {
								var headerCellProps = {
									dataKey: columnChildren[1].props.dataKey,
									isHeaderCell: true,
									sortable: column.props.sortable,
									onSortColumn: _this2.handleSortColumn,
									sortType: _this2.getSortType(),
									sortColumn: sortColumn,
									flexGrow: flexGrow
								}

								if (resizable) {
									;(0, _merge3.default)(headerCellProps, {
										onResize: onResize,
										onColumnResizeEnd:
											_this2.handleColumnResizeEnd,
										onColumnResizeStart:
											_this2.handleColumnResizeStart,
										onColumnResizeMove:
											_this2.handleColumnResizeMove
									})
								}

								headerCells.push(
									React.cloneElement(
										columnChildren[0],
										_extends({}, cellProps, headerCellProps)
									)
								)
							}

							bodyCells.push(
								React.cloneElement(columnChildren[1], cellProps)
							)

							left += nextWidth
						}
					})

					this._cacheCells = {
						headerCells: headerCells,
						bodyCells: bodyCells,
						allColumnsWidth: left
					}

					return this._cacheCells
				}

				// 处理移动端 Touch 事件,  Start 的时候初始化 x,y

				// 处理移动端 Touch 事件, Move 的时候初始化，更新 scroll

				/**
				 * 当用户在 Table 内使用 tab 键，触发了 onScroll 事件，这个时候应该更新滚动条位置
				 * Fix: https://github.com/rsuite/rsuite/issues/234
				 */
			},
			{
				key: 'updatePosition',
				value: function updatePosition() {
					/**
					 * 当存在锁定列情况处理
					 */
					if (this.state.shouldFixedColumn) {
						this.updatePositionByFixedCell()
					} else {
						var wheelStyle = {}
						var headerStyle = {}
						;(0, lib$2.translateDOMPositionXY)(
							wheelStyle,
							this.scrollX,
							this.scrollY
						)
						;(0, lib$2.translateDOMPositionXY)(
							headerStyle,
							this.scrollX,
							0
						)

						this.wheelWrapper &&
							(0, lib$2.addStyle)(this.wheelWrapper, wheelStyle)
						this.headerWrapper &&
							(0, lib$2.addStyle)(this.headerWrapper, headerStyle)
					}
					if (this.tableHeader) {
						;(0, utils$2.toggleClass)(
							this.tableHeader,
							this.addPrefix('cell-group-shadow'),
							this.scrollY < 0
						)
					}
				}
			},
			{
				key: 'updatePositionByFixedCell',
				value: function updatePositionByFixedCell() {
					var wheelGroupStyle = {}
					var wheelStyle = {}
					var scrollGroups = this.getScrollCellGroups()
					var fixedLeftGroups = this.getFixedLeftCellGroups()
					var fixedRightGroups = this.getFixedRightCellGroups()

					var _state = this.state,
						contentWidth = _state.contentWidth,
						width = _state.width

					;(0, lib$2.translateDOMPositionXY)(
						wheelGroupStyle,
						this.scrollX,
						0
					)
					;(0, lib$2.translateDOMPositionXY)(
						wheelStyle,
						0,
						this.scrollY
					)

					var scrollArrayGroups = Array.from(scrollGroups)

					for (var i = 0; i < scrollArrayGroups.length; i++) {
						var group = scrollArrayGroups[i]
						;(0, lib$2.addStyle)(group, wheelGroupStyle)
					}

					if (this.wheelWrapper) {
						;(0, lib$2.addStyle)(this.wheelWrapper, wheelStyle)
					}

					var leftShadowClassName = this.addPrefix(
						'cell-group-left-shadow'
					)
					var rightShadowClassName = this.addPrefix(
						'cell-group-right-shadow'
					)
					var showLeftShadow = this.scrollX < 0
					var showRightShadow =
						width - contentWidth - SCROLLBAR_WIDHT !== this.scrollX

					;(0, utils$2.toggleClass)(
						fixedLeftGroups,
						leftShadowClassName,
						showLeftShadow
					)
					;(0, utils$2.toggleClass)(
						fixedRightGroups,
						rightShadowClassName,
						showRightShadow
					)
				}
			},
			{
				key: 'shouldRenderExpandedRow',
				value: function shouldRenderExpandedRow(rowData) {
					var _props4 = this.props,
						rowKey = _props4.rowKey,
						renderRowExpanded = _props4.renderRowExpanded,
						isTree = _props4.isTree

					var expandedRowKeys = this.getExpandedRowKeys() || []

					return (
						(0, _isFunction3.default)(renderRowExpanded) &&
						!isTree &&
						expandedRowKeys.some(function(key) {
							return key === rowData[rowKey]
						})
					)
				}
			},
			{
				key: 'calculateRowMaxHeight',
				value: function calculateRowMaxHeight() {
					var wordWrap = this.props.wordWrap

					if (wordWrap) {
						var _tableRowsMaxHeight = []
						var tableRows = Object.entries(this.tableRows)

						for (var i = 0; i < tableRows.length; i++) {
							var _tableRows$i = _slicedToArray(tableRows[i], 2),
								row = _tableRows$i[1]

							if (row) {
								var cells =
									row.querySelectorAll(
										'.' + this.addPrefix('cell-wrap')
									) || []
								var maxHeight = 0
								var cellArray = Array.from(cells)
								for (var j = 0; j < cellArray.length; j++) {
									var cell = cellArray[j]
									var h = (0, lib$2.getHeight)(cell)
									maxHeight = Math.max(maxHeight, h)
								}
								_tableRowsMaxHeight.push(maxHeight)
							}
						}

						this.setState({tableRowsMaxHeight: _tableRowsMaxHeight})
					}
				}
			},
			{
				key: 'calculateTableContentWidth',
				value: function calculateTableContentWidth(prevProps) {
					var table = this.table
					var row = table.querySelector(
						'.' + this.addPrefix('row') + ':not(.virtualized)'
					)
					var contentWidth = row ? (0, lib$2.getWidth)(row) : 0

					this.setState({contentWidth: contentWidth})
					// 这里 -10 是为了让滚动条不挡住内容部分
					this.minScrollX =
						-(contentWidth - this.state.width) - SCROLLBAR_WIDHT

					/**
					 * 1.判断 Table 列数是否发生变化
					 * 2.判断 Table 内容区域是否宽度有变化
					 *
					 *
					 * 满足 1 和 2 则更新横向滚动条位置
					 */

					if (
						(0, _flatten3.default)(this.props.children).length !==
							(0, _flatten3.default)(prevProps.children).length &&
						this.state.contentWidth !== contentWidth
					) {
						this.scrollLeft(0)
					}
				}
			},
			{
				key: 'calculateTableContextHeight',
				value: function calculateTableContextHeight() {
					var table = this.table
					var rows =
						table.querySelectorAll('.' + this.addPrefix('row')) ||
						[]
					var _props5 = this.props,
						height = _props5.height,
						autoHeight = _props5.autoHeight,
						rowHeight = _props5.rowHeight

					var headerHeight = this.getTableHeaderHeight()
					var contentHeight = rows.length
						? Array.from(rows)
								.map(function(row) {
									return (
										(0, lib$2.getHeight)(row) || rowHeight
									)
								})
								.reduce(function(x, y) {
									return x + y
								})
						: 0

					var nextContentHeight = contentHeight - headerHeight
					this.setState({
						contentHeight: nextContentHeight
					})

					if (!autoHeight) {
						// 这里 -10 是为了让滚动条不挡住内容部分
						this.minScrollY = -(contentHeight - height) - 10
					}

					// 如果内容区域的高度小于表格的高度，则重置 Y 坐标滚动条
					if (contentHeight < height) {
						this.scrollTop(0)
					}

					// 如果 scrollTop 的值大于可以滚动的范围 ，则重置 Y 坐标滚动条
					// 当 Table 为 virtualized 时， wheel 事件触发每次都会进入该逻辑， 避免在滚动到底部后滚动条重置, +10
					if (Math.abs(this.scrollY) > contentHeight - height + 10) {
						this.scrollTop(0)
					}
				}

				// public method

				// public method
			},
			{
				key: 'renderRowData',
				value: function renderRowData(
					bodyCells,
					rowData,
					props,
					shouldRenderExpandedRow
				) {
					var _props6 = this.props,
						renderTreeToggle = _props6.renderTreeToggle,
						rowKey = _props6.rowKey,
						wordWrap = _props6.wordWrap,
						isTree = _props6.isTree

					var hasChildren =
						isTree &&
						rowData.children &&
						Array.isArray(rowData.children)
					var nextRowKey =
						typeof rowData[rowKey] !== 'undefined'
							? rowData[rowKey]
							: getRandomKey(props.index)

					var rowProps = {
						rowRef: this.bindTableRowsRef(props.index),
						onClick: this.bindRowClick(rowData),
						key: props.index,
						width: props.rowWidth,
						height: props.rowHeight,
						top: props.top
					}

					var expandedRowKeys = this.getExpandedRowKeys() || []
					var expanded = expandedRowKeys.some(function(key) {
						return key === rowData[rowKey]
					})
					var cells = []

					for (var i = 0; i < bodyCells.length; i++) {
						var cell = bodyCells[i]
						cells.push(
							React.cloneElement(cell, {
								hasChildren: hasChildren,
								rowData: rowData,
								wordWrap: wordWrap,
								renderTreeToggle: renderTreeToggle,
								height: props.rowHeight,
								rowIndex: props.index,
								depth: props.depth,
								onTreeToggle: this.handleTreeToggle,
								rowKey: nextRowKey,
								className: (0, _classnames2.default)(
									_defineProperty(
										{},
										this.addPrefix('cell-expanded'),
										expanded
									)
								)
							})
						)
					}

					return this.renderRow(
						rowProps,
						cells,
						shouldRenderExpandedRow,
						rowData
					)
				}
			},
			{
				key: 'renderRow',
				value: function renderRow(
					props,
					cells,
					shouldRenderExpandedRow,
					rowData
				) {
					var rowClassName = this.props.rowClassName
					var _state2 = this.state,
						shouldFixedColumn = _state2.shouldFixedColumn,
						width = _state2.width,
						contentWidth = _state2.contentWidth

					if (typeof rowClassName === 'function') {
						props.className = rowClassName(rowData)
					} else {
						props.className = rowClassName
					}

					// IF there are fixed columns, add a fixed group
					if (shouldFixedColumn && contentWidth > width) {
						var fixedLeftCells = []
						var fixedRightCells = []
						var scrollCells = []
						var fixedLeftCellGroupWidth = 0
						var fixedRightCellGroupWidth = 0

						for (var i = 0; i < cells.length; i++) {
							var cell = cells[i]
							var _cell$props = cell.props,
								fixed = _cell$props.fixed,
								_width2 = _cell$props.width

							if (fixed === true || fixed === 'left') {
								fixedLeftCells.push(cell)
								fixedLeftCellGroupWidth += _width2
							} else if (fixed === 'right') {
								fixedRightCells.push(cell)
								fixedRightCellGroupWidth += _width2
							} else {
								scrollCells.push(cell)
							}
						}

						return React.createElement(
							_Row2.default,
							props,
							fixedLeftCellGroupWidth
								? React.createElement(
										_CellGroup2.default,
										{
											fixed: 'left',
											height: props.isHeaderRow
												? props.headerHeight
												: props.height,
											width: fixedLeftCellGroupWidth
										},
										(0, utils$2.colSpanCells)(
											fixedLeftCells
										)
								  )
								: null,
							React.createElement(
								_CellGroup2.default,
								null,
								(0, utils$2.colSpanCells)(scrollCells)
							),
							fixedRightCellGroupWidth
								? React.createElement(
										_CellGroup2.default,
										{
											fixed: 'right',
											style: {
												left:
													width -
													fixedRightCellGroupWidth -
													SCROLLBAR_WIDHT
											},
											height: props.isHeaderRow
												? props.headerHeight
												: props.height,
											width: fixedRightCellGroupWidth
										},
										(0, utils$2.colSpanCells)(
											resetLeftForCells(fixedRightCells)
										)
								  )
								: null,
							shouldRenderExpandedRow &&
								this.renderRowExpanded(rowData)
						)
					}

					return React.createElement(
						_Row2.default,
						props,
						React.createElement(
							_CellGroup2.default,
							null,
							(0, utils$2.colSpanCells)(cells)
						),
						shouldRenderExpandedRow &&
							this.renderRowExpanded(rowData)
					)
				}
			},
			{
				key: 'renderRowExpanded',
				value: function renderRowExpanded(rowData) {
					var _props7 = this.props,
						renderRowExpanded = _props7.renderRowExpanded,
						rowExpandedHeight = _props7.rowExpandedHeight

					var styles = {
						height: rowExpandedHeight
					}

					if (typeof renderRowExpanded === 'function') {
						return React.createElement(
							'div',
							{
								className: this.addPrefix('row-expanded'),
								style: styles
							},
							renderRowExpanded(rowData)
						)
					}
					return null
				}
			},
			{
				key: 'renderMouseArea',
				value: function renderMouseArea() {
					var headerHeight = this.getTableHeaderHeight()
					var styles = {height: this.getTableHeight()}
					var spanStyles = {height: headerHeight - 1}

					return React.createElement(
						'div',
						{
							ref: this.bindMouseAreaRef,
							className: this.addPrefix('mouse-area'),
							style: styles
						},
						React.createElement('span', {style: spanStyles})
					)
				}
			},
			{
				key: 'renderTableHeader',
				value: function renderTableHeader(headerCells, rowWidth) {
					var rowHeight = this.props.rowHeight

					var headerHeight = this.getTableHeaderHeight()
					var rowProps = {
						rowRef: this.bindTableHeaderRef,
						width: rowWidth,
						height: rowHeight,
						headerHeight: headerHeight,
						isHeaderRow: true,
						top: 0
					}

					return React.createElement(
						'div',
						{
							className: this.addPrefix('header-row-wrapper'),
							ref: this.bindHeaderWrapperRef
						},
						this.renderRow(rowProps, headerCells)
					)
				}
			},
			{
				key: 'renderTableBody',
				value: function renderTableBody(bodyCells, rowWidth) {
					var _props8 = this.props,
						rowHeight = _props8.rowHeight,
						rowExpandedHeight = _props8.rowExpandedHeight,
						isTree = _props8.isTree,
						setRowHeight = _props8.setRowHeight,
						rowKey = _props8.rowKey,
						wordWrap = _props8.wordWrap,
						virtualized = _props8.virtualized

					var headerHeight = this.getTableHeaderHeight()
					var _state3 = this.state,
						tableRowsMaxHeight = _state3.tableRowsMaxHeight,
						isScrolling = _state3.isScrolling,
						data = _state3.data

					var height = this.getTableHeight()
					var bodyStyles = {
						top: headerHeight,
						height: height - headerHeight
					}

					var top = 0 // Row position
					var bodyHeight = 0
					var topHideHeight = 0
					var bottomHideHeight = 0

					this._rows = []

					if (data) {
						var minTop = Math.abs(this.state.scrollY)
						var maxTop = minTop + height + rowExpandedHeight

						for (var index = 0; index < data.length; index++) {
							var _rowData = data[index]
							var maxHeight = tableRowsMaxHeight[index]
							var nextRowHeight = maxHeight
								? maxHeight + CELL_PADDING_HEIGHT
								: rowHeight
							var shouldRenderExpandedRow = this.shouldRenderExpandedRow(
								_rowData
							)
							var depth = 0

							if (shouldRenderExpandedRow) {
								nextRowHeight += rowExpandedHeight
							}

							if (isTree) {
								var parents = findAllParents(_rowData, rowKey)
								var _expandedRowKeys = this.getExpandedRowKeys()
								depth = parents.length

								// 树节点如果被关闭，则不渲染
								if (
									!shouldShowRowByExpanded(
										_expandedRowKeys,
										parents
									)
								) {
									continue
								}
							}

							/**
							 * 自定义行高
							 */
							if (setRowHeight) {
								nextRowHeight =
									setRowHeight(_rowData) || rowHeight
							}

							bodyHeight += nextRowHeight

							var rowProps = {
								index: index,
								top: top,
								rowWidth: rowWidth,
								depth: depth,
								rowHeight: nextRowHeight
							}

							top += nextRowHeight

							if (virtualized && !wordWrap) {
								if (top + nextRowHeight < minTop) {
									topHideHeight += nextRowHeight
									continue
								} else if (top > maxTop) {
									bottomHideHeight += nextRowHeight
									continue
								}
							}

							this._rows.push(
								this.renderRowData(
									bodyCells,
									_rowData,
									rowProps,
									shouldRenderExpandedRow
								)
							)
						}
					}

					var wheelStyles = {
						position: 'absolute',
						height: bodyHeight,
						minHeight: height,
						pointerEvents: isScrolling ? 'none' : ''
					}
					var topRowStyles = {height: topHideHeight}
					var bottomRowStyles = {height: bottomHideHeight}

					return React.createElement(
						'div',
						{
							ref: this.bindBodyRef,
							className: this.addPrefix('body-row-wrapper'),
							style: bodyStyles,
							onScroll: this.handleBodyScroll
						},
						React.createElement(
							'div',
							{
								style: wheelStyles,
								className: this.addPrefix('body-wheel-area'),
								ref: this.bindWheelWrapperRef
							},
							topHideHeight
								? React.createElement(_Row2.default, {
										style: topRowStyles,
										className: 'virtualized'
								  })
								: null,
							this._rows,
							bottomHideHeight
								? React.createElement(_Row2.default, {
										style: bottomRowStyles,
										className: 'virtualized'
								  })
								: null
						),
						this.renderInfo(),
						this.renderScrollbar(),
						this.renderLoading()
					)
				}
			},
			{
				key: 'renderInfo',
				value: function renderInfo() {
					if (this._rows.length) {
						return null
					}
					var _props9 = this.props,
						locale = _props9.locale,
						renderEmpty = _props9.renderEmpty

					var emptyMessage = React.createElement(
						'div',
						{className: this.addPrefix('body-info')},
						locale.emptyMessage
					)

					return renderEmpty
						? renderEmpty(emptyMessage)
						: emptyMessage
				}
			},
			{
				key: 'renderScrollbar',
				value: function renderScrollbar() {
					var disabledScroll = this.props.disabledScroll
					var _state4 = this.state,
						contentWidth = _state4.contentWidth,
						contentHeight = _state4.contentHeight

					var headerHeight = this.getTableHeaderHeight()
					var height = this.getTableHeight()

					if (disabledScroll) {
						return null
					}

					return React.createElement(
						'div',
						null,
						React.createElement(_Scrollbar2.default, {
							length: this.state.width,
							onScroll: this.handleScrollX,
							scrollLength: contentWidth,
							ref: this.bindScrollbarXRef
						}),
						React.createElement(_Scrollbar2.default, {
							vertical: true,
							length: height - headerHeight,
							scrollLength: contentHeight,
							onScroll: this.handleScrollY,
							ref: this.bindScrollbarYRef
						})
					)
				}

				/**
				 *  show loading
				 */
			},
			{
				key: 'renderLoading',
				value: function renderLoading() {
					var _props10 = this.props,
						locale = _props10.locale,
						loading = _props10.loading,
						loadAnimation = _props10.loadAnimation,
						renderLoading = _props10.renderLoading

					if (!loadAnimation && !loading) {
						return null
					}

					var loadingElement = React.createElement(
						'div',
						{className: this.addPrefix('loader-wrapper')},
						React.createElement(
							'div',
							{className: this.addPrefix('loader')},
							React.createElement('i', {
								className: this.addPrefix('loader-icon')
							}),
							React.createElement(
								'span',
								{className: this.addPrefix('loader-text')},
								locale.loading
							)
						)
					)

					return renderLoading
						? renderLoading(loadingElement)
						: loadingElement
				}
			},
			{
				key: 'render',
				value: function render() {
					var _classNames2

					var _props11 = this.props,
						children = _props11.children,
						className = _props11.className,
						_props11$width = _props11.width,
						width =
							_props11$width === undefined ? 0 : _props11$width,
						style = _props11.style,
						isTree = _props11.isTree,
						hover = _props11.hover,
						bordered = _props11.bordered,
						cellBordered = _props11.cellBordered,
						wordWrap = _props11.wordWrap,
						classPrefix = _props11.classPrefix,
						loading = _props11.loading,
						showHeader = _props11.showHeader,
						rest = _objectWithoutProperties(_props11, [
							'children',
							'className',
							'width',
							'style',
							'isTree',
							'hover',
							'bordered',
							'cellBordered',
							'wordWrap',
							'classPrefix',
							'loading',
							'showHeader'
						])

					var isColumnResizing = this.state.isColumnResizing

					var _getCells = this.getCells(),
						headerCells = _getCells.headerCells,
						bodyCells = _getCells.bodyCells,
						allColumnsWidth = _getCells.allColumnsWidth

					var rowWidth =
						allColumnsWidth > width ? allColumnsWidth : width
					var clesses = (0, _classnames2.default)(
						classPrefix,
						className,
						((_classNames2 = {}),
						_defineProperty(
							_classNames2,
							this.addPrefix('word-wrap'),
							wordWrap
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('treetable'),
							isTree
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('bordered'),
							bordered
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('cell-bordered'),
							cellBordered
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('column-resizing'),
							isColumnResizing
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('hover'),
							hover
						),
						_defineProperty(
							_classNames2,
							this.addPrefix('loading'),
							loading
						),
						_classNames2)
					)

					var styles = _extends(
						{
							width: width || 'auto',
							height: this.getTableHeight()
						},
						style
					)

					var unhandled = (0, utils$2.getUnhandledProps)(Table, rest)

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							className: clesses,
							style: styles,
							ref: this.bindTableRef
						}),
						showHeader &&
							this.renderTableHeader(headerCells, rowWidth),
						children && this.renderTableBody(bodyCells, rowWidth),
						showHeader && this.renderMouseArea()
					)
				}
			}
		])

		return Table
	})(React.Component)

	Table.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table'),
		data: [],
		defaultSortType: SORT_TYPE.DESC,
		height: 200,
		rowHeight: 46,
		headerHeight: 40,
		minHeight: 0,
		rowExpandedHeight: 100,
		hover: true,
		showHeader: true,
		virtualized: false,
		rowKey: 'key',
		locale: {
			emptyMessage: 'No data found',
			loading: 'Loading...'
		}
	}
	Table.handledProps = [
		'autoHeight',
		'bodyRef',
		'bordered',
		'cellBordered',
		'children',
		'className',
		'classPrefix',
		'data',
		'defaultExpandAllRows',
		'defaultExpandedRowKeys',
		'defaultSortType',
		'disabledScroll',
		'expandedRowKeys',
		'headerHeight',
		'height',
		'hover',
		'isTree',
		'loadAnimation',
		'loading',
		'locale',
		'minHeight',
		'onExpandChange',
		'onRowClick',
		'onScroll',
		'onSortColumn',
		'onTouchMove',
		'onTouchStart',
		'renderEmpty',
		'renderLoading',
		'renderRowExpanded',
		'renderTreeToggle',
		'rowClassName',
		'rowExpandedHeight',
		'rowHeight',
		'rowKey',
		'setRowHeight',
		'showHeader',
		'sortColumn',
		'sortType',
		'style',
		'virtualized',
		'width',
		'wordWrap'
	]
	Table.propTypes = {
		width: _propTypes2.default.number,
		data: _propTypes2.default.arrayOf(_propTypes2.default.object)
			.isRequired,
		height: _propTypes2.default.number.isRequired,
		autoHeight: _propTypes2.default.bool,
		minHeight: _propTypes2.default.number.isRequired,
		rowHeight: _propTypes2.default.number.isRequired,
		headerHeight: _propTypes2.default.number.isRequired,
		setRowHeight: _propTypes2.default.func,
		rowKey: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.number
		]).isRequired,
		isTree: _propTypes2.default.bool,
		defaultExpandAllRows: _propTypes2.default.bool,
		defaultExpandedRowKeys: _propTypes2.default.arrayOf(
			_propTypes2.default.oneOfType([
				_propTypes2.default.string,
				_propTypes2.default.number
			])
		),
		expandedRowKeys: _propTypes2.default.arrayOf(
			_propTypes2.default.oneOfType([
				_propTypes2.default.string,
				_propTypes2.default.number
			])
		),
		renderTreeToggle: _propTypes2.default.func,
		renderRowExpanded: _propTypes2.default.func,
		rowExpandedHeight: _propTypes2.default.number,
		locale: _propTypes2.default.object.isRequired,
		style: _propTypes2.default.object,
		sortColumn: _propTypes2.default.string,
		sortType: _propTypes2.default.oneOf(['desc', 'asc']),
		defaultSortType: _propTypes2.default.oneOf(['desc', 'asc']),
		disabledScroll: _propTypes2.default.bool,
		hover: _propTypes2.default.bool.isRequired,
		loading: _propTypes2.default.bool,
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		children: function children() {
			return (typeof (React.ChildrenArray == null
				? {}
				: React.ChildrenArray) === 'function'
				? _propTypes2.default.instanceOf(
						React.ChildrenArray == null ? {} : React.ChildrenArray
				  ).isRequired
				: _propTypes2.default.any.isRequired
			).apply(this, arguments)
		},
		bordered: _propTypes2.default.bool,
		cellBordered: _propTypes2.default.bool,
		wordWrap: _propTypes2.default.bool,
		onRowClick: _propTypes2.default.func,
		onScroll: _propTypes2.default.func,
		onSortColumn: _propTypes2.default.func,
		onExpandChange: _propTypes2.default.func,
		onTouchStart: _propTypes2.default.func,
		// for tests
		onTouchMove: _propTypes2.default.func,
		// for tests
		bodyRef: function bodyRef() {
			return (typeof (React.ElementRef == null
				? {}
				: React.ElementRef) === 'function'
				? _propTypes2.default.instanceOf(
						React.ElementRef == null ? {} : React.ElementRef
				  )
				: _propTypes2.default.any
			).apply(this, arguments)
		},
		loadAnimation: _propTypes2.default.bool,
		showHeader: _propTypes2.default.bool,
		rowClassName: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.func
		]),
		virtualized: _propTypes2.default.bool,
		renderEmpty: _propTypes2.default.func,
		renderLoading: _propTypes2.default.func
	}

	var _initialiseProps = function _initialiseProps() {
		var _this3 = this

		this._listenWheel = function(deltaX, deltaY) {
			_this3.handleWheel(deltaX, deltaY)
			if (_this3.scrollbarX) {
				_this3.scrollbarX.onWheelScroll(deltaX)
			}

			if (_this3.scrollbarY) {
				_this3.scrollbarY.onWheelScroll(deltaY)
			}
		}

		this.handleSortColumn = function(dataKey) {
			var _props12 = _this3.props,
				onSortColumn = _props12.onSortColumn,
				sortColumn = _props12.sortColumn

			var sortType = _this3.getSortType()

			if (sortColumn === dataKey) {
				sortType =
					sortType === SORT_TYPE.ASC ? SORT_TYPE.DESC : SORT_TYPE.ASC
				_this3.setState({
					sortType: sortType
				})
			}
			onSortColumn && onSortColumn(dataKey, sortType)
		}

		this._cacheCells = null
		this._cacheChildrenSize = 0

		this.handleColumnResizeEnd = function(
			columnWidth,
			cursorDelta,
			dataKey,
			index
		) {
			_this3._cacheCells = null
			_this3.setState(
				_defineProperty(
					{
						isColumnResizing: false
					},
					dataKey + '_' + index + '_width',
					columnWidth
				)
			)
			;(0, lib$2.addStyle)(_this3.mouseArea, {
				display: 'none'
			})
		}

		this.handleColumnResizeStart = function(width, left, fixed) {
			_this3.setState({
				isColumnResizing: true
			})
			var mouseAreaLeft = width + left
			var x = fixed
				? mouseAreaLeft
				: mouseAreaLeft + (_this3.scrollX || 0)
			var styles = {display: 'block'}
			;(0, lib$2.translateDOMPositionXY)(styles, x, 0)
			;(0, lib$2.addStyle)(_this3.mouseArea, styles)
		}

		this.handleColumnResizeMove = function(width, left, fixed) {
			var mouseAreaLeft = width + left
			var x = fixed
				? mouseAreaLeft
				: mouseAreaLeft + (_this3.scrollX || 0)
			var styles = {}
			;(0, lib$2.translateDOMPositionXY)(styles, x, 0)
			;(0, lib$2.addStyle)(_this3.mouseArea, styles)
		}

		this.handleTreeToggle = function(rowKey, rowIndex, rowData) {
			var onExpandChange = _this3.props.onExpandChange
			var expandedRowKeys = _this3.state.expandedRowKeys

			var open = false
			var nextExpandedRowKeys = []

			for (var i = 0; i < expandedRowKeys.length; i++) {
				var key = expandedRowKeys[i]
				if (key === rowKey) {
					open = true
				} else {
					nextExpandedRowKeys.push(key)
				}
			}

			if (!open) {
				nextExpandedRowKeys.push(rowKey)
			}
			_this3.setState({
				expandedRowKeys: nextExpandedRowKeys
			})
			onExpandChange && onExpandChange(!open, rowData)
		}

		this.handleScrollX = function(delta) {
			_this3.handleWheel(delta, 0)
		}

		this.handleScrollY = function(delta) {
			_this3.handleWheel(0, delta)
		}

		this.disableEventsTimeoutId = null

		this.handleWheel = function(deltaX, deltaY) {
			var _props13 = _this3.props,
				onScroll = _props13.onScroll,
				virtualized = _props13.virtualized

			if (!_this3.table) {
				return
			}

			var nextScrollX = _this3.scrollX - deltaX
			var nextScrollY = _this3.scrollY - deltaY

			_this3.scrollY = Math.min(
				0,
				nextScrollY < _this3.minScrollY
					? _this3.minScrollY
					: nextScrollY
			)
			_this3.scrollX = Math.min(
				0,
				nextScrollX < _this3.minScrollX
					? _this3.minScrollX
					: nextScrollX
			)
			_this3.updatePosition()

			onScroll && onScroll(_this3.scrollX, _this3.scrollY)

			if (virtualized) {
				_this3.setState({
					isScrolling: true,
					scrollY: _this3.scrollY
				})

				if (_this3.disableEventsTimeoutId) {
					;(0, utils$2.cancelAnimationTimeout)(
						_this3.disableEventsTimeoutId
					)
				}

				_this3.disableEventsTimeoutId = (0,
				utils$2.requestAnimationTimeout)(
					_this3.debounceScrollEndedCallback,
					150
				)
			}
		}

		this.debounceScrollEndedCallback = function() {
			_this3.disableEventsTimeoutId = null
			_this3.setState({
				isScrolling: false
			})
		}

		this.handleTouchStart = function(event) {
			var onTouchStart = _this3.props.onTouchStart

			var _ref = event.touches ? event.touches[0] : {},
				pageX = _ref.pageX,
				pageY = _ref.pageY

			_this3.touchX = pageX
			_this3.touchY = pageY
			onTouchStart && onTouchStart(event)
		}

		this.handleTouchMove = function(event) {
			event.stopPropagation()
			event.preventDefault()

			var onTouchMove = _this3.props.onTouchMove

			var _ref2 = event.touches ? event.touches[0] : {},
				nextPageX = _ref2.pageX,
				nextPageY = _ref2.pageY

			var deltaX = _this3.touchX - nextPageX
			var deltaY = _this3.touchY - nextPageY
			_this3.handleWheel(deltaX, deltaY)
			_this3.scrollbarX.onWheelScroll(deltaX)
			_this3.scrollbarY.onWheelScroll(deltaY)
			_this3.touchX = nextPageX
			_this3.touchY = nextPageY

			onTouchMove && onTouchMove(event)
		}

		this.handleBodyScroll = function(event) {
			if (event.target !== _this3.tableBody) {
				return
			}

			var left = (0, lib$2.scrollLeft)(event.target)
			var top = (0, lib$2.scrollTop)(event.target)

			if (top === 0 && left === 0) {
				return
			}

			_this3._listenWheel(left, top)
			;(0, lib$2.scrollLeft)(event.target, 0)
			;(0, lib$2.scrollTop)(event.target, 0)
		}

		this.shouldHandleWheelX = function(delta) {
			var _props14 = _this3.props,
				disabledScroll = _props14.disabledScroll,
				loading = _props14.loading
			var _state5 = _this3.state,
				contentWidth = _state5.contentWidth,
				width = _state5.width

			if (delta === 0 || disabledScroll || loading) {
				return false
			}

			if (width && contentWidth <= width) {
				return false
			}

			return (
				(delta >= 0 && _this3.scrollX > _this3.minScrollX) ||
				(delta < 0 && _this3.scrollX < 0)
			)
		}

		this.shouldHandleWheelY = function(delta) {
			var _props15 = _this3.props,
				disabledScroll = _props15.disabledScroll,
				loading = _props15.loading

			if (delta === 0 || disabledScroll || loading) {
				return false
			}
			return (
				(delta >= 0 && _this3.scrollY > _this3.minScrollY) ||
				(delta < 0 && _this3.scrollY < 0)
			)
		}

		this.tableRows = {}
		this.mounted = false
		this.scrollY = 0
		this.scrollX = 0

		this.addPrefix = function(name) {
			return (0, utils$2.prefix)(_this3.props.classPrefix)(name)
		}

		this.calculateTableWidth = function() {
			var table = _this3.table
			if (table) {
				_this3.scrollX = 0
				_this3.scrollbarX && _this3.scrollbarX.resetScrollBarPosition()
				_this3._cacheCells = null
				_this3.setState({
					width: (0, lib$2.getWidth)(table)
				})
			}
		}

		this.scrollTop = function() {
			var top =
				arguments.length > 0 && arguments[0] !== undefined
					? arguments[0]
					: 0

			_this3.scrollY = -top
			_this3.scrollbarY && _this3.scrollbarY.resetScrollBarPosition(top)

			_this3.setState({
				scrollY: -top
			})
		}

		this.scrollLeft = function() {
			var left =
				arguments.length > 0 && arguments[0] !== undefined
					? arguments[0]
					: 0

			_this3.scrollX = -left
			_this3.scrollbarX && _this3.scrollbarX.resetScrollBarPosition(left)
			_this3.updatePosition()
		}

		this.bindTableRowsRef = function(index) {
			return function(ref) {
				if (ref) {
					_this3.tableRows[index] = ref
				}
			}
		}

		this.bindMouseAreaRef = function(ref) {
			_this3.mouseArea = ref
		}

		this.bindTableHeaderRef = function(ref) {
			_this3.tableHeader = ref
		}

		this.bindHeaderWrapperRef = function(ref) {
			_this3.headerWrapper = ref
		}

		this.bindTableRef = function(ref) {
			_this3.table = ref
		}

		this.bindWheelWrapperRef = function(ref) {
			var bodyRef = _this3.props.bodyRef

			_this3.wheelWrapper = ref
			bodyRef && bodyRef(ref)
		}

		this.bindBodyRef = function(ref) {
			_this3.tableBody = ref
		}

		this.bindScrollbarXRef = function(ref) {
			_this3.scrollbarX = ref
		}

		this.bindScrollbarYRef = function(ref) {
			_this3.scrollbarY = ref
		}

		this.bindRowClick = function(rowData) {
			var onRowClick = _this3.props.onRowClick

			return function() {
				onRowClick && onRowClick(rowData)
			}
		}

		this._rows = []
	}

	exports.default = Table
})

unwrapExports(Table_1)

var Column_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	/* eslint-disable */
	function Column(props) {
		return null
	}

	Column.defaultProps = {
		width: 100
	}

	exports.default = Column
})

unwrapExports(Column_1)

var Cell_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _get3 = _interopRequireDefault(get_1)

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var Cell = (function(_React$PureComponent) {
		_inherits(Cell, _React$PureComponent)

		function Cell() {
			var _ref

			var _temp, _this, _ret

			_classCallCheck(this, Cell)

			for (
				var _len = arguments.length, args = Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			return (
				(_ret =
					((_temp =
						((_this = _possibleConstructorReturn(
							this,
							(_ref =
								Cell.__proto__ ||
								Object.getPrototypeOf(Cell)).call.apply(
								_ref,
								[this].concat(args)
							)
						)),
						_this)),
					(_this.addPrefix = function(name) {
						return (0, utils$2.prefix)(_this.props.classPrefix)(
							name
						)
					}),
					(_this.handleExpandClick = function(event) {
						var _this$props = _this.props,
							onTreeToggle = _this$props.onTreeToggle,
							rowKey = _this$props.rowKey,
							rowIndex = _this$props.rowIndex,
							rowData = _this$props.rowData

						onTreeToggle &&
							onTreeToggle(rowKey, rowIndex, rowData, event)
					}),
					_temp)),
				_possibleConstructorReturn(_this, _ret)
			)
		}

		_createClass(Cell, [
			{
				key: 'renderExpandIcon',
				value: function renderExpandIcon() {
					var _props = this.props,
						hasChildren = _props.hasChildren,
						firstColumn = _props.firstColumn,
						rowData = _props.rowData,
						renderTreeToggle = _props.renderTreeToggle

					var expandButton = React.createElement('i', {
						className: this.addPrefix('expand-icon')
					})

					/**
					 * 如果用子节点，同时是第一列,则创建一个 icon 用于展开节点
					 */
					if (hasChildren && firstColumn) {
						return React.createElement(
							'span',
							{
								role: 'button',
								tabIndex: -1,
								className: this.addPrefix('expand-wrapper'),
								onClick: this.handleExpandClick
							},
							renderTreeToggle
								? renderTreeToggle(expandButton, rowData)
								: expandButton
						)
					}

					return null
				}
			},
			{
				key: 'render',
				value: function render() {
					var _classNames

					var _props2 = this.props,
						width = _props2.width,
						left = _props2.left,
						height = _props2.height,
						style = _props2.style,
						className = _props2.className,
						firstColumn = _props2.firstColumn,
						lastColumn = _props2.lastColumn,
						isHeaderCell = _props2.isHeaderCell,
						headerHeight = _props2.headerHeight,
						align = _props2.align,
						children = _props2.children,
						rowData = _props2.rowData,
						dataKey = _props2.dataKey,
						renderCell = _props2.renderCell,
						removed = _props2.removed,
						wordWrap = _props2.wordWrap,
						classPrefix = _props2.classPrefix,
						depth = _props2.depth,
						verticalAlign = _props2.verticalAlign,
						rest = _objectWithoutProperties(_props2, [
							'width',
							'left',
							'height',
							'style',
							'className',
							'firstColumn',
							'lastColumn',
							'isHeaderCell',
							'headerHeight',
							'align',
							'children',
							'rowData',
							'dataKey',
							'renderCell',
							'removed',
							'wordWrap',
							'classPrefix',
							'depth',
							'verticalAlign'
						])

					if (removed) {
						return null
					}

					var classes = (0, _classnames2.default)(
						classPrefix,
						className,
						((_classNames = {}),
						_defineProperty(
							_classNames,
							this.addPrefix('first'),
							firstColumn
						),
						_defineProperty(
							_classNames,
							this.addPrefix('last'),
							lastColumn
						),
						_classNames)
					)

					var nextHeight = isHeaderCell ? headerHeight : height
					var styles = {
						width: width,
						height: nextHeight,
						zIndex: depth,
						left: left
					}

					var contentStyles = _extends(
						{
							width: width,
							height: nextHeight,
							textAlign: align,
							paddingLeft: firstColumn
								? depth * constants.LAYER_WIDTH + 10
								: null
						},
						style
					)

					if (verticalAlign) {
						contentStyles.display = 'table-cell'
						contentStyles.verticalAlign = verticalAlign
					}

					var contentChildren =
						(0, utils$2.isNullOrUndefined)(children) && rowData
							? (0, _get3.default)(rowData, dataKey)
							: children

					if (typeof children === 'function') {
						contentChildren = children(rowData)
					}

					var unhandled = (0, utils$2.getUnhandledProps)(Cell, rest, [
						'index',
						'fixed',
						'resizable',
						'flexGrow',
						'minWidth',
						'sortColumn',
						'sortType',
						'onSortColumn',
						'onColumnResizeEnd',
						'onColumnResizeStart',
						'onColumnResizeMove',
						'colSpan'
					])

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							className: classes,
							style: styles
						}),
						wordWrap
							? React.createElement(
									'div',
									{
										className: this.addPrefix('content'),
										style: contentStyles
									},
									React.createElement(
										'div',
										{className: this.addPrefix('wrap')},
										this.renderExpandIcon(),
										renderCell
											? renderCell(contentChildren)
											: contentChildren
									)
							  )
							: React.createElement(
									'div',
									{
										className: this.addPrefix('content'),
										style: contentStyles
									},
									this.renderExpandIcon(),
									renderCell
										? renderCell(contentChildren)
										: contentChildren
							  )
					)
				}
			}
		])

		return Cell
	})(React.PureComponent)

	Cell.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table-cell'),
		align: 'left',
		headerHeight: 36,
		depth: 0,
		height: 36,
		width: 0,
		left: 0
	}
	Cell.handledProps = [
		'align',
		'children',
		'className',
		'classPrefix',
		'dataKey',
		'depth',
		'firstColumn',
		'hasChildren',
		'headerHeight',
		'height',
		'isHeaderCell',
		'lastColumn',
		'left',
		'onTreeToggle',
		'removed',
		'renderCell',
		'renderTreeToggle',
		'rowData',
		'rowIndex',
		'rowKey',
		'style',
		'verticalAlign',
		'width',
		'wordWrap'
	]
	Cell.propTypes = {
		align: _propTypes2.default.oneOf(['left', 'center', 'right']),
		verticalAlign: _propTypes2.default.oneOf(['top', 'middle', 'bottom']),
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		dataKey: _propTypes2.default.string,
		isHeaderCell: _propTypes2.default.bool,
		width: _propTypes2.default.number.isRequired,
		height: _propTypes2.default.number,
		left: _propTypes2.default.number,
		headerHeight: _propTypes2.default.number,
		style: _propTypes2.default.object,
		firstColumn: _propTypes2.default.bool,
		lastColumn: _propTypes2.default.bool,
		hasChildren: _propTypes2.default.bool,
		children: _propTypes2.default.oneOfType([
			_propTypes2.default.node,
			_propTypes2.default.func
		]),
		rowKey: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.number
		]),
		rowIndex: _propTypes2.default.number,
		rowData: _propTypes2.default.object,
		depth: _propTypes2.default.number.isRequired,
		onTreeToggle: _propTypes2.default.func,
		renderTreeToggle: _propTypes2.default.func,
		renderCell: _propTypes2.default.func,
		wordWrap: _propTypes2.default.bool,
		removed: _propTypes2.default.bool
	}
	exports.default = Cell
})

unwrapExports(Cell_1)

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function componentWillMount() {
	// Call this.constructor.gDSFP to support sub-classes.
	var state = this.constructor.getDerivedStateFromProps(
		this.props,
		this.state
	)
	if (state !== null && state !== undefined) {
		this.setState(state)
	}
}

function componentWillReceiveProps(nextProps) {
	// Call this.constructor.gDSFP to support sub-classes.
	// Use the setState() updater to ensure state isn't stale in certain edge cases.
	function updater(prevState) {
		var state = this.constructor.getDerivedStateFromProps(
			nextProps,
			prevState
		)
		return state !== null && state !== undefined ? state : null
	}
	// Binding "this" is important for shallow renderer support.
	this.setState(updater.bind(this))
}

function componentWillUpdate(nextProps, nextState) {
	try {
		var prevProps = this.props
		var prevState = this.state
		this.props = nextProps
		this.state = nextState
		this.__reactInternalSnapshotFlag = true
		this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
			prevProps,
			prevState
		)
	} finally {
		this.props = prevProps
		this.state = prevState
	}
}

// React may warn about cWM/cWRP/cWU methods being deprecated.
// Add a flag to suppress these warnings for this special case.
componentWillMount.__suppressDeprecationWarning = true
componentWillReceiveProps.__suppressDeprecationWarning = true
componentWillUpdate.__suppressDeprecationWarning = true

function polyfill(Component) {
	var prototype = Component.prototype

	if (!prototype || !prototype.isReactComponent) {
		throw new Error('Can only polyfill class components')
	}

	if (
		typeof Component.getDerivedStateFromProps !== 'function' &&
		typeof prototype.getSnapshotBeforeUpdate !== 'function'
	) {
		return Component
	}

	// If new component APIs are defined, "unsafe" lifecycles won't be called.
	// Error if any of these lifecycles are present,
	// Because they would work differently between older and newer (16.3+) versions of React.
	var foundWillMountName = null
	var foundWillReceivePropsName = null
	var foundWillUpdateName = null
	if (typeof prototype.componentWillMount === 'function') {
		foundWillMountName = 'componentWillMount'
	} else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
		foundWillMountName = 'UNSAFE_componentWillMount'
	}
	if (typeof prototype.componentWillReceiveProps === 'function') {
		foundWillReceivePropsName = 'componentWillReceiveProps'
	} else if (
		typeof prototype.UNSAFE_componentWillReceiveProps === 'function'
	) {
		foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps'
	}
	if (typeof prototype.componentWillUpdate === 'function') {
		foundWillUpdateName = 'componentWillUpdate'
	} else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
		foundWillUpdateName = 'UNSAFE_componentWillUpdate'
	}
	if (
		foundWillMountName !== null ||
		foundWillReceivePropsName !== null ||
		foundWillUpdateName !== null
	) {
		var componentName = Component.displayName || Component.name
		var newApiName =
			typeof Component.getDerivedStateFromProps === 'function'
				? 'getDerivedStateFromProps()'
				: 'getSnapshotBeforeUpdate()'

		throw Error(
			'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
				componentName +
				' uses ' +
				newApiName +
				' but also contains the following legacy lifecycles:' +
				(foundWillMountName !== null
					? '\n  ' + foundWillMountName
					: '') +
				(foundWillReceivePropsName !== null
					? '\n  ' + foundWillReceivePropsName
					: '') +
				(foundWillUpdateName !== null
					? '\n  ' + foundWillUpdateName
					: '') +
				'\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
				'https://fb.me/react-async-component-lifecycle-hooks'
		)
	}

	// React <= 16.2 does not support static getDerivedStateFromProps.
	// As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	// Newer versions of React will ignore these lifecycles if gDSFP exists.
	if (typeof Component.getDerivedStateFromProps === 'function') {
		prototype.componentWillMount = componentWillMount
		prototype.componentWillReceiveProps = componentWillReceiveProps
	}

	// React <= 16.2 does not support getSnapshotBeforeUpdate.
	// As a workaround, use cWU to invoke the new lifecycle.
	// Newer versions of React will ignore that lifecycle if gSBU exists.
	if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
		if (typeof prototype.componentDidUpdate !== 'function') {
			throw new Error(
				'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
			)
		}

		prototype.componentWillUpdate = componentWillUpdate

		var componentDidUpdate = prototype.componentDidUpdate

		prototype.componentDidUpdate = function componentDidUpdatePolyfill(
			prevProps,
			prevState,
			maybeSnapshot
		) {
			// 16.3+ will not execute our will-update method;
			// It will pass a snapshot value to did-update though.
			// Older versions will require our polyfilled will-update value.
			// We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
			// Because for <= 15.x versions this might be a "prevContext" object.
			// We also can't just check "__reactInternalSnapshot",
			// Because get-snapshot might return a falsy value.
			// So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
			var snapshot = this.__reactInternalSnapshotFlag
				? this.__reactInternalSnapshot
				: maybeSnapshot

			componentDidUpdate.call(this, prevProps, prevState, snapshot)
		}
	}

	return Component
}

var reactLifecyclesCompat_es = /*#__PURE__*/ Object.freeze({
	polyfill: polyfill
})

/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
	if (number === number) {
		if (upper !== undefined) {
			number = number <= upper ? number : upper
		}
		if (lower !== undefined) {
			number = number >= lower ? number : lower
		}
	}
	return number
}

var _baseClamp = baseClamp

/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
	if (upper === undefined) {
		upper = lower
		lower = undefined
	}
	if (upper !== undefined) {
		upper = toNumber_1(upper)
		upper = upper === upper ? upper : 0
	}
	if (lower !== undefined) {
		lower = toNumber_1(lower)
		lower = lower === lower ? lower : 0
	}
	return _baseClamp(toNumber_1(number), lower, upper)
}

var clamp_1 = clamp

var ColumnResizeHandler_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _clamp3 = _interopRequireDefault(clamp_1)

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var ColumnResizeHandler = (function(_React$Component) {
		_inherits(ColumnResizeHandler, _React$Component)

		function ColumnResizeHandler(props) {
			_classCallCheck(this, ColumnResizeHandler)

			var _this = _possibleConstructorReturn(
				this,
				(
					ColumnResizeHandler.__proto__ ||
					Object.getPrototypeOf(ColumnResizeHandler)
				).call(this, props)
			)

			_this.onMove = function(deltaX) {
				if (!_this.isKeyDown) {
					return
				}

				var _this$props = _this.props,
					onColumnResizeMove = _this$props.onColumnResizeMove,
					columnWidth = _this$props.columnWidth,
					columnLeft = _this$props.columnLeft,
					columnFixed = _this$props.columnFixed

				_this.cursorDelta += deltaX
				_this.columnWidth = (0, _clamp3.default)(
					columnWidth + _this.cursorDelta,
					20,
					20000
				)
				onColumnResizeMove &&
					onColumnResizeMove(
						_this.columnWidth,
						columnLeft,
						columnFixed
					)
			}

			_this.onColumnResizeEnd = function() {
				var onColumnResizeEnd = _this.props.onColumnResizeEnd

				_this.isKeyDown = false

				onColumnResizeEnd &&
					onColumnResizeEnd(_this.columnWidth, _this.cursorDelta)

				if (_this.mouseMoveTracker) {
					_this.mouseMoveTracker.releaseMouseMoves()
					_this.mouseMoveTracker = null
				}
			}

			_this.onColumnResizeMouseDown = function(event) {
				var onColumnResizeStart = _this.props.onColumnResizeStart

				_this.mouseMoveTracker = _this.getMouseMoveTracker()
				_this.isKeyDown = true
				_this.cursorDelta = 0

				var client = {
					clientX: event.clientX,
					clientY: event.clientY,
					preventDefault: function preventDefault() {}
				}

				onColumnResizeStart && onColumnResizeStart(client)
			}

			_this.columnWidth = 0
			_this.cursorDelta = 0

			_this.columnWidth = props.columnWidth || 0
			return _this
		}

		_createClass(ColumnResizeHandler, [
			{
				key: 'shouldComponentUpdate',
				value: function shouldComponentUpdate(nextProps) {
					if (
						nextProps.initialEvent &&
						this.isKeyDown &&
						this.mouseMoveTracker &&
						!this.mouseMoveTracker.isDragging()
					) {
						this.mouseMoveTracker.captureMouseMoves(
							nextProps.initialEvent
						)
					}

					if (nextProps.columnWidth !== this.props.columnWidth) {
						this.columnWidth = nextProps.columnWidth
					}
					return true
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this.mouseMoveTracker) {
						this.mouseMoveTracker.releaseMouseMoves()
						this.mouseMoveTracker = null
					}
				}
			},
			{
				key: 'getMouseMoveTracker',
				value: function getMouseMoveTracker() {
					return (
						this.mouseMoveTracker ||
						new lib$2.DOMMouseMoveTracker(
							this.onMove,
							this.onColumnResizeEnd,
							document.body
						)
					)
				}
			},
			{
				key: 'render',
				value: function render() {
					var _props = this.props,
						_props$columnLeft = _props.columnLeft,
						columnLeft =
							_props$columnLeft === undefined
								? 0
								: _props$columnLeft,
						classPrefix = _props.classPrefix,
						height = _props.height,
						className = _props.className,
						style = _props.style,
						rest = _objectWithoutProperties(_props, [
							'columnLeft',
							'classPrefix',
							'height',
							'className',
							'style'
						])

					var styles = _extends(
						{
							left: this.columnWidth + columnLeft - 2,
							height: height
						},
						style
					)

					var classes = (0, _classnames2.default)(
						classPrefix,
						className
					)
					var unhandled = (0, utils$2.getUnhandledProps)(
						ColumnResizeHandler,
						rest
					)

					return React.createElement(
						'div',
						_extends({}, unhandled, {
							className: classes,
							style: styles,
							onMouseDown: this.onColumnResizeMouseDown,
							role: 'button',
							tabIndex: -1
						})
					)
				}
			}
		])

		return ColumnResizeHandler
	})(React.Component)

	ColumnResizeHandler.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)(
			'table-column-resize-spanner'
		)
	}
	ColumnResizeHandler.handledProps = [
		'className',
		'classPrefix',
		'columnFixed',
		'columnLeft',
		'columnWidth',
		'height',
		'initialEvent',
		'onColumnResizeEnd',
		'onColumnResizeMove',
		'onColumnResizeStart',
		'style'
	]
	ColumnResizeHandler.propTypes = {
		height: _propTypes2.default.number,
		initialEvent: _propTypes2.default.object,
		columnWidth: _propTypes2.default.number,
		columnLeft: _propTypes2.default.number,
		columnFixed: _propTypes2.default.bool,
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		style: _propTypes2.default.object,
		onColumnResizeStart: _propTypes2.default.func,
		onColumnResizeEnd: _propTypes2.default.func,
		onColumnResizeMove: _propTypes2.default.func
	}
	exports.default = ColumnResizeHandler
})

unwrapExports(ColumnResizeHandler_1)

var HeaderCell_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var React = _interopRequireWildcard(React__default)

	var _classnames2 = _interopRequireDefault(classnames)

	var _Cell2 = _interopRequireDefault(Cell_1)

	var _ColumnResizeHandler2 = _interopRequireDefault(ColumnResizeHandler_1)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var HeaderCell = (function(_React$PureComponent) {
		_inherits(HeaderCell, _React$PureComponent)

		_createClass(HeaderCell, null, [
			{
				key: 'getDerivedStateFromProps',
				value: function getDerivedStateFromProps(nextProps, prevState) {
					if (
						nextProps.width !== prevState.width ||
						nextProps.flexGrow !== prevState.flexGrow
					) {
						return {
							width: nextProps.width,
							flexGrow: nextProps.flexGrow,
							columnWidth: (0, utils$2.isNullOrUndefined)(
								nextProps.flexGrow
							)
								? nextProps.width
								: 0
						}
					}

					return null
				}
			}
		])

		function HeaderCell(props) {
			_classCallCheck(this, HeaderCell)

			var _this = _possibleConstructorReturn(
				this,
				(
					HeaderCell.__proto__ || Object.getPrototypeOf(HeaderCell)
				).call(this, props)
			)

			_this.handleColumnResizeStart = function(event) {
				var _this$props = _this.props,
					left = _this$props.left,
					fixed = _this$props.fixed,
					onColumnResizeStart = _this$props.onColumnResizeStart

				_this.setState({initialEvent: event})
				onColumnResizeStart &&
					onColumnResizeStart(_this.state.columnWidth, left, !!fixed)
			}

			_this.handleColumnResizeEnd = function(columnWidth, cursorDelta) {
				var _this$props2 = _this.props,
					dataKey = _this$props2.dataKey,
					index = _this$props2.index,
					onColumnResizeEnd = _this$props2.onColumnResizeEnd,
					onResize = _this$props2.onResize

				_this.setState({columnWidth: columnWidth})
				onColumnResizeEnd &&
					onColumnResizeEnd(columnWidth, cursorDelta, dataKey, index)
				onResize && onResize(columnWidth, dataKey)
			}

			_this.handleClick = function() {
				var _this$props3 = _this.props,
					sortable = _this$props3.sortable,
					dataKey = _this$props3.dataKey,
					onSortColumn = _this$props3.onSortColumn

				if (sortable && onSortColumn) {
					onSortColumn(dataKey)
				}
			}

			_this.addPrefix = function(name) {
				return (0, utils$2.prefix)(_this.props.classPrefix)(name)
			}

			_this.state = {
				width: props.width,
				flexGrow: props.flexGrow,
				columnWidth: (0, utils$2.isNullOrUndefined)(props.flexGrow)
					? props.width
					: 0
			}
			return _this
		}

		_createClass(HeaderCell, [
			{
				key: 'renderResizeSpanner',
				value: function renderResizeSpanner() {
					var _props = this.props,
						resizable = _props.resizable,
						left = _props.left,
						onColumnResizeMove = _props.onColumnResizeMove,
						fixed = _props.fixed,
						headerHeight = _props.headerHeight
					var _state = this.state,
						columnWidth = _state.columnWidth,
						initialEvent = _state.initialEvent

					if (!resizable) {
						return null
					}

					return React.createElement(_ColumnResizeHandler2.default, {
						columnWidth: columnWidth,
						columnLeft: left,
						columnFixed: !!fixed,
						height: headerHeight ? headerHeight - 1 : undefined,
						initialEvent: initialEvent,
						onColumnResizeMove: onColumnResizeMove,
						onColumnResizeStart: this.handleColumnResizeStart,
						onColumnResizeEnd: this.handleColumnResizeEnd
					})
				}
			},
			{
				key: 'renderSortColumn',
				value: function renderSortColumn() {
					var _props2 = this.props,
						sortable = _props2.sortable,
						sortColumn = _props2.sortColumn,
						_props2$sortType = _props2.sortType,
						sortType =
							_props2$sortType === undefined
								? ''
								: _props2$sortType,
						dataKey = _props2.dataKey

					if (sortable) {
						var iconClasses = (0, _classnames2.default)(
							this.addPrefix('icon-sort'),
							_defineProperty(
								{},
								this.addPrefix('icon-sort-' + sortType),
								sortColumn === dataKey
							)
						)
						return React.createElement(
							'span',
							{className: this.addPrefix('sort-wrapper')},
							React.createElement('i', {className: iconClasses})
						)
					}
					return null
				}
			},
			{
				key: 'render',
				value: function render() {
					var _props3 = this.props,
						className = _props3.className,
						width = _props3.width,
						dataKey = _props3.dataKey,
						headerHeight = _props3.headerHeight,
						children = _props3.children,
						left = _props3.left,
						sortable = _props3.sortable,
						classPrefix = _props3.classPrefix,
						rest = _objectWithoutProperties(_props3, [
							'className',
							'width',
							'dataKey',
							'headerHeight',
							'children',
							'left',
							'sortable',
							'classPrefix'
						])

					var classes = (0, _classnames2.default)(
						classPrefix,
						className,
						_defineProperty(
							{},
							this.addPrefix('sortable'),
							sortable
						)
					)
					var unhandled = (0, utils$2.getUnhandledProps)(
						HeaderCell,
						rest
					)

					return React.createElement(
						'div',
						{className: classes},
						React.createElement(
							_Cell2.default,
							_extends({}, unhandled, {
								width: width,
								dataKey: dataKey,
								left: left,
								headerHeight: headerHeight,
								isHeaderCell: true,
								onClick: this.handleClick
							}),
							children,
							this.renderSortColumn()
						),
						this.renderResizeSpanner()
					)
				}
			}
		])

		return HeaderCell
	})(React.PureComponent)

	HeaderCell.defaultProps = {
		classPrefix: (0, utils$2.defaultClassPrefix)('table-cell-header')
	}
	HeaderCell.handledProps = [
		'children',
		'className',
		'classPrefix',
		'dataKey',
		'fixed',
		'flexGrow',
		'headerHeight',
		'index',
		'left',
		'onColumnResizeEnd',
		'onColumnResizeMove',
		'onColumnResizeStart',
		'onResize',
		'onSortColumn',
		'resizable',
		'sortColumn',
		'sortType',
		'sortable',
		'width'
	]
	HeaderCell.propTypes = {
		width: _propTypes2.default.number,
		dataKey: _propTypes2.default.string,
		left: _propTypes2.default.number,
		className: _propTypes2.default.string,
		classPrefix: _propTypes2.default.string,
		headerHeight: _propTypes2.default.number,
		children: _propTypes2.default.node,

		// self props
		index: _propTypes2.default.number,
		sortColumn: _propTypes2.default.string,
		sortType: _propTypes2.default.oneOf(['desc', 'asc']),
		sortable: _propTypes2.default.bool,
		resizable: _propTypes2.default.bool,
		onColumnResizeStart: _propTypes2.default.func,
		onColumnResizeEnd: _propTypes2.default.func,
		onResize: _propTypes2.default.func,
		onColumnResizeMove: _propTypes2.default.func,
		onSortColumn: _propTypes2.default.func,
		flexGrow: _propTypes2.default.number,
		fixed: _propTypes2.default.oneOfType([
			_propTypes2.default.bool,
			_propTypes2.default.oneOf(['left']),
			_propTypes2.default.oneOf(['right'])
		])
	}
	;(0, reactLifecyclesCompat_es.polyfill)(HeaderCell)

	exports.default = HeaderCell
})

unwrapExports(HeaderCell_1)

var lib$3 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.HeaderCell = exports.Cell = exports.Column = exports.Table = undefined

	var _Table2 = _interopRequireDefault(Table_1)

	var _Column2 = _interopRequireDefault(Column_1)

	var _Cell2 = _interopRequireDefault(Cell_1)

	var _HeaderCell2 = _interopRequireDefault(HeaderCell_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.Table = _Table2.default
	exports.Column = _Column2.default
	exports.Cell = _Cell2.default
	exports.HeaderCell = _HeaderCell2.default
})

unwrapExports(lib$3)
var lib_1$1 = lib$3.HeaderCell
var lib_2 = lib$3.Cell
var lib_3 = lib$3.Column
var lib_4 = lib$3.Table

function _templateObject2$a() {
	var data = taggedTemplateLiteral([
		'\n  background: ',
		';\n  /* font-size: ',
		'; */\n'
	])

	_templateObject2$a = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$j() {
	var data = taggedTemplateLiteral([
		'\n  & .rs-table-cell-content {\n    display: flex;\n    align-items: center;\n    font-size: ',
		';\n    padding-left: ',
		';\n    /* Expand-collapse icon */\n    & > span {\n      padding: 0 4px;\n    }\n  }\n  &.rs-table {\n    border: none;\n  }\n  & .rs-table-cell-wrap {\n    flex: 1;\n  }\n  &.rs-table-hover .rs-table-body-row-wrapper {\n    .rs-table-row:hover {\n      background: ',
		';\n    }\n\n    .rs-table-row:hover .rs-table-cell-group {\n      background: ',
		';\n    }\n\n    .rs-table-row:hover .rs-table-cell {\n      background: ',
		';\n    }\n  }\n'
	])

	_templateObject$j = function _templateObject() {
		return data
	}

	return data
}
var StyledTable = styled(lib_4)(
	_templateObject$j(),
	function(props) {
		return props.theme.fontSizes[1] + 'px'
	},
	function(props) {
		return props.theme.space[3] + 'px'
	},
	themeGet('colors.highlightss', '#fbfbfb'),
	themeGet('colors.highlightss', '#fbfbfb'),
	themeGet('colors.highlightss', '#fbfbfb')
)
var StyledHeader = styled(lib_1$1)(
	_templateObject2$a(),
	themeGet('colors.lightGrey', '#f5f5f5'),
	function(props) {
		return props.theme.fontSizes[1]
	}
)

var CustomHeaderCell = function CustomHeaderCell(props) {
	return React__default.createElement(StyledHeader, props)
}
/** Используется для отображения структурированной информации. */

var Table = function Table(props) {
	return React__default.createElement(StyledTable, props)
}

Table.Column = lib_3
Table.HeaderCell = CustomHeaderCell
Table.Cell = lib_2
Table.propTypes = {
	/** Данные для отображения в таблице. */
	data: propTypes.array.isRequired,

	/** Высота хедера таблицы */
	headerHeight: propTypes.number,

	/** Высота ряда */
	rowHeight: propTypes.number,

	/** Режим "дерева" - таблица с вложенными данными */
	isTree: propTypes.bool,

	/** В режиме дерева, функция-рендерер иконки "раскрыть-закрыть" ряд. Сигнатура: (icon: node, rowData: Object) => React.node */
	renderTreeToggle: propTypes.func,

	/** Указатель на поле ключ. Должно быть уникальным. */
	rowKey: propTypes.string,

	/** Виртуализация */
	virtualized: propTypes.bool,

	/** Ширина таблицы */
	width: propTypes.number,

	/** Высота таблицы */
	height: propTypes.number,

	/** Минимальная высота таблицы */
	minHeight: propTypes.number
}
Table.defaultProps = {
	headerHeight: 48,
	rowHeight: 48,
	rowKey: 'key',
	locale: {
		emptyMessage: 'Нет данных',
		loading: 'Загрузка...'
	}
}

var dist = createCommonjsModule(function(module, exports) {
	;(function webpackUniversalModuleDefinition(root, factory) {
		module.exports = factory()
	})(typeof self !== 'undefined' ? self : commonjsGlobal, function() {
		return /******/ (function(modules) {
			// webpackBootstrap
			/******/ // The module cache
			/******/ var installedModules = {} // The require function
			/******/
			/******/ /******/ function __webpack_require__(moduleId) {
				/******/
				/******/ // Check if module is in cache
				/******/ if (installedModules[moduleId]) {
					/******/ return installedModules[moduleId].exports
					/******/
				} // Create a new module (and put it into the cache)
				/******/ /******/ var module = (installedModules[moduleId] = {
					/******/ i: moduleId,
					/******/ l: false,
					/******/ exports: {}
					/******/
				}) // Execute the module function
				/******/
				/******/ /******/ modules[moduleId].call(
					module.exports,
					module,
					module.exports,
					__webpack_require__
				) // Flag the module as loaded
				/******/
				/******/ /******/ module.l = true // Return the exports of the module
				/******/
				/******/ /******/ return module.exports
				/******/
			} // expose the modules object (__webpack_modules__)
			/******/
			/******/
			/******/ /******/ __webpack_require__.m = modules // expose the module cache
			/******/
			/******/ /******/ __webpack_require__.c = installedModules // define getter function for harmony exports
			/******/
			/******/ /******/ __webpack_require__.d = function(
				exports,
				name,
				getter
			) {
				/******/ if (!__webpack_require__.o(exports, name)) {
					/******/ Object.defineProperty(exports, name, {
						/******/ configurable: false,
						/******/ enumerable: true,
						/******/ get: getter
						/******/
					})
					/******/
				}
				/******/
			} // getDefaultExport function for compatibility with non-harmony modules
			/******/
			/******/ /******/ __webpack_require__.n = function(module) {
				/******/ var getter =
					module && module.__esModule
						? /******/ function getDefault() {
								return module['default']
						  }
						: /******/ function getModuleExports() {
								return module
						  }
				/******/ __webpack_require__.d(getter, 'a', getter)
				/******/ return getter
				/******/
			} // Object.prototype.hasOwnProperty.call
			/******/
			/******/ /******/ __webpack_require__.o = function(
				object,
				property
			) {
				return Object.prototype.hasOwnProperty.call(object, property)
			} // __webpack_public_path__
			/******/
			/******/ /******/ __webpack_require__.p = '' // Load entry module and return exports
			/******/
			/******/ /******/ return __webpack_require__(
				(__webpack_require__.s = 2)
			)
			/******/
		})(
			/************************************************************************/
			/******/ [
				/* 0 */
				/***/ function(module, exports) {
					module.exports = React__default

					/***/
				},
				/* 1 */
				/***/ function(module, exports, __webpack_require__) {
					Object.defineProperty(exports, '__esModule', {value: true})
					exports.Constants = {
						POPOVER_CONTAINER_CLASS_NAME:
							'react-tiny-popover-container',
						DEFAULT_PADDING: 6,
						DEFAULT_WINDOW_PADDING: 6,
						FADE_TRANSITION: 0.35,
						DEFAULT_ARROW_COLOR: 'black',
						DEFAULT_POSITIONS: ['top', 'left', 'right', 'bottom'],
						EMPTY_CLIENT_RECT: {
							top: 0,
							left: 0,
							bottom: 0,
							height: 0,
							right: 0,
							width: 0
						}
					}
					exports.arrayUnique = function(array) {
						return array.filter(function(value, index, self) {
							return self.indexOf(value) === index
						})
					}

					/***/
				},
				/* 2 */
				/***/ function(module, exports, __webpack_require__) {
					module.exports = __webpack_require__(3)

					/***/
				},
				/* 3 */
				/***/ function(module, exports, __webpack_require__) {
					var __extends =
						(this && this.__extends) ||
						(function() {
							var extendStatics =
								Object.setPrototypeOf ||
								({__proto__: []} instanceof Array &&
									function(d, b) {
										d.__proto__ = b
									}) ||
								function(d, b) {
									for (var p in b)
										if (b.hasOwnProperty(p)) d[p] = b[p]
								}
							return function(d, b) {
								extendStatics(d, b)
								function __() {
									this.constructor = d
								}
								d.prototype =
									b === null
										? Object.create(b)
										: ((__.prototype = b.prototype),
										  new __())
							}
						})()
					Object.defineProperty(exports, '__esModule', {value: true})
					var React = __webpack_require__(0)
					var react_dom_1 = __webpack_require__(4)
					var util_1 = __webpack_require__(1)
					var ArrowContainer_1 = __webpack_require__(5)
					exports.ArrowContainer = ArrowContainer_1.ArrowContainer
					var Popover = /** @class */ (function(_super) {
						__extends(Popover, _super)
						function Popover() {
							var _this =
								(_super !== null &&
									_super.apply(this, arguments)) ||
								this
							_this.target = null
							_this.targetRect = null
							_this.targetPositionIntervalHandler = null
							_this.popoverDiv = null
							_this.positionOrder = null
							_this.willUnmount = false
							_this.willMount = false
							_this.onResize = function(e) {
								_this.renderPopover()
							}
							_this.onClick = function(e) {
								var _a = _this.props,
									onClickOutside = _a.onClickOutside,
									isOpen = _a.isOpen
								if (
									!_this.willUnmount &&
									!_this.willMount &&
									!_this.popoverDiv.contains(e.target) &&
									!_this.target.contains(e.target) &&
									onClickOutside &&
									isOpen
								) {
									onClickOutside(e)
								}
							}
							return _this
						}
						Popover.prototype.componentDidMount = function() {
							var _this = this
							window.setTimeout(function() {
								return (_this.willMount = false)
							})
							var _a = this.props,
								position = _a.position,
								isOpen = _a.isOpen
							this.target = react_dom_1.findDOMNode(this)
							this.positionOrder = this.getPositionPriorityOrder(
								position
							)
							this.updatePopover(isOpen)
						}
						Popover.prototype.componentDidUpdate = function(
							prevProps
						) {
							var prevIsOpen = prevProps.isOpen,
								prevPosition = prevProps.position,
								prevBody = prevProps.content
							var _a = this.props,
								isOpen = _a.isOpen,
								content = _a.content,
								position = _a.position
							this.positionOrder = this.getPositionPriorityOrder(
								this.props.position
							)
							if (
								prevIsOpen !== isOpen ||
								prevBody !== content ||
								prevPosition !== position
							) {
								this.updatePopover(isOpen)
							}
						}
						Popover.prototype.componentWillMount = function() {
							this.willUnmount = false
							this.willMount = true
						}
						Popover.prototype.componentWillUnmount = function() {
							this.willUnmount = true
							this.removePopover()
						}
						Popover.prototype.render = function() {
							return this.props.children
						}
						Popover.prototype.updatePopover = function(isOpen) {
							if (isOpen) {
								if (
									!this.popoverDiv ||
									!this.popoverDiv.parentNode
								) {
									var transitionDuration = this.props
										.transitionDuration
									this.popoverDiv = this.createContainer()
									this.popoverDiv.style.opacity = '0'
									this.popoverDiv.style.transition =
										'opacity ' +
										(transitionDuration ||
											util_1.Constants.FADE_TRANSITION) +
										's'
									window.document.body.appendChild(
										this.popoverDiv
									)
									window.addEventListener(
										'resize',
										this.onResize
									)
									window.addEventListener(
										'click',
										this.onClick
									)
								}
								this.renderPopover()
							} else if (
								this.popoverDiv &&
								this.popoverDiv.parentNode
							) {
								this.removePopover()
							}
						}
						Popover.prototype.renderPopover = function(
							positionIndex
						) {
							var _this = this
							if (positionIndex === void 0) {
								positionIndex = 0
							}
							if (positionIndex >= this.positionOrder.length) {
								this.removePopover()
								return
							}
							this.renderWithPosition(
								{
									position: this.positionOrder[positionIndex],
									targetRect: this.target.getBoundingClientRect()
								},
								function(violation, rect) {
									var _a = _this.props,
										disableReposition =
											_a.disableReposition,
										contentLocation = _a.contentLocation
									if (
										violation &&
										!disableReposition &&
										!(typeof contentLocation === 'object')
									) {
										_this.renderPopover(positionIndex + 1)
									} else {
										var _b = _this.props,
											contentLocation_1 =
												_b.contentLocation,
											align = _b.align
										var _c = _this.getNudgedPopoverPosition(
												rect
											),
											nudgedTop = _c.top,
											nudgedLeft = _c.left
										var rectTop = rect.top,
											rectLeft = rect.left
										var position =
											_this.positionOrder[positionIndex]
										var _d = disableReposition
												? {top: rectTop, left: rectLeft}
												: {
														top: nudgedTop,
														left: nudgedLeft
												  },
											top_1 = _d.top,
											left = _d.left
										if (contentLocation_1) {
											var targetRect = _this.target.getBoundingClientRect()
											var popoverRect = _this.popoverDiv.firstChild.getBoundingClientRect()
											;(_e =
												typeof contentLocation_1 ===
												'function'
													? contentLocation_1({
															targetRect: targetRect,
															popoverRect: popoverRect,
															position: position,
															align: align,
															nudgedLeft: nudgedLeft,
															nudgedTop: nudgedTop
													  })
													: contentLocation_1),
												(top_1 = _e.top),
												(left = _e.left)
											_this.popoverDiv.style.left =
												left.toFixed() + 'px'
											_this.popoverDiv.style.top =
												top_1.toFixed() + 'px'
										} else {
											var _f = [
													top_1 + window.pageYOffset,
													left + window.pageXOffset
												],
												absoluteTop = _f[0],
												absoluteLeft = _f[1]
											_this.popoverDiv.style.left =
												absoluteLeft.toFixed() + 'px'
											_this.popoverDiv.style.top =
												absoluteTop.toFixed() + 'px'
										}
										_this.popoverDiv.style.width = null
										_this.popoverDiv.style.height = null
										_this.renderWithPosition(
											{
												position: position,
												nudgedTop: nudgedTop - rect.top,
												nudgedLeft:
													nudgedLeft - rect.left,
												targetRect: _this.target.getBoundingClientRect(),
												popoverRect: _this.popoverDiv.firstChild.getBoundingClientRect()
											},
											function() {
												_this.startTargetPositionListener(
													10
												)
												if (
													_this.popoverDiv.style
														.opacity !== '1'
												) {
													_this.popoverDiv.style.opacity =
														'1'
												}
											}
										)
									}
									var _e
								}
							)
						}
						Popover.prototype.startTargetPositionListener = function(
							checkInterval
						) {
							var _this = this
							if (this.targetPositionIntervalHandler === null) {
								this.targetPositionIntervalHandler = window.setInterval(
									function() {
										var newTargetRect = _this.target.getBoundingClientRect()
										if (
											_this.targetPositionHasChanged(
												_this.targetRect,
												newTargetRect
											)
										) {
											_this.renderPopover()
										}
										_this.targetRect = newTargetRect
									},
									checkInterval
								)
							}
						}
						Popover.prototype.renderWithPosition = function(
							_a,
							callback
						) {
							var _this = this
							var position = _a.position,
								_b = _a.nudgedLeft,
								nudgedLeft = _b === void 0 ? 0 : _b,
								_c = _a.nudgedTop,
								nudgedTop = _c === void 0 ? 0 : _c,
								_d = _a.targetRect,
								targetRect =
									_d === void 0
										? util_1.Constants.EMPTY_CLIENT_RECT
										: _d,
								_e = _a.popoverRect,
								popoverRect =
									_e === void 0
										? util_1.Constants.EMPTY_CLIENT_RECT
										: _e
							var _f = this.props,
								padding = _f.windowBorderPadding,
								content = _f.content,
								align = _f.align
							var getContent = function(args) {
								return typeof content === 'function'
									? content(args)
									: content
							}
							react_dom_1.unstable_renderSubtreeIntoContainer(
								this,
								getContent({
									position: position,
									nudgedLeft: nudgedLeft,
									nudgedTop: nudgedTop,
									targetRect: targetRect,
									popoverRect: popoverRect,
									align: align
								}),
								this.popoverDiv,
								function() {
									var targetRect = _this.target.getBoundingClientRect()
									var popoverRect = _this.popoverDiv.firstChild.getBoundingClientRect()
									var _a = _this.getLocationForPosition(
											position,
											targetRect,
											popoverRect
										),
										top = _a.top,
										left = _a.left
									callback(
										(position === 'top' && top < padding) ||
											(position === 'left' &&
												left < padding) ||
											(position === 'right' &&
												left + popoverRect.width >
													window.innerWidth -
														padding) ||
											(position === 'bottom' &&
												top + popoverRect.height >
													window.innerHeight -
														padding),
										{
											width: popoverRect.width,
											height: popoverRect.height,
											top: top,
											left: left
										}
									)
								}
							)
						}
						Popover.prototype.getNudgedPopoverPosition = function(
							_a
						) {
							var top = _a.top,
								left = _a.left,
								width = _a.width,
								height = _a.height
							var padding = this.props.windowBorderPadding
							top = top < padding ? padding : top
							top =
								top + height > window.innerHeight - padding
									? window.innerHeight - padding - height
									: top
							left = left < padding ? padding : left
							left =
								left + width > window.innerWidth - padding
									? window.innerWidth - padding - width
									: left
							return {top: top, left: left}
						}
						Popover.prototype.removePopover = function() {
							var _this = this
							if (this.popoverDiv) {
								var transitionDuration = this.props
									.transitionDuration
								this.popoverDiv.style.opacity = '0'
								var remove = function() {
									if (
										_this.willUnmount ||
										!_this.props.isOpen ||
										!_this.popoverDiv.parentNode
									) {
										window.clearInterval(
											_this.targetPositionIntervalHandler
										)
										window.removeEventListener(
											'resize',
											_this.onResize
										)
										window.removeEventListener(
											'click',
											_this.onClick
										)
										_this.targetPositionIntervalHandler = null
										if (_this.popoverDiv.parentNode) {
											_this.popoverDiv.parentNode.removeChild(
												_this.popoverDiv
											)
										}
									}
								}
								if (!this.willUnmount) {
									window.setTimeout(
										remove,
										(transitionDuration ||
											util_1.Constants.FADE_TRANSITION) *
											1000
									)
								} else {
									remove()
								}
							}
						}
						Popover.prototype.getPositionPriorityOrder = function(
							position
						) {
							if (position && typeof position !== 'string') {
								if (
									util_1.Constants.DEFAULT_POSITIONS.every(
										function(defaultPosition) {
											return (
												position.find(function(p) {
													return p === defaultPosition
												}) !== undefined
											)
										}
									)
								) {
									return util_1.arrayUnique(position)
								} else {
									var remainingPositions = util_1.Constants.DEFAULT_POSITIONS.filter(
										function(defaultPosition) {
											return (
												position.find(function(p) {
													return p === defaultPosition
												}) === undefined
											)
										}
									)
									return util_1.arrayUnique(
										position.concat(remainingPositions)
									)
								}
							} else if (
								position &&
								typeof position === 'string'
							) {
								var remainingPositions = util_1.Constants.DEFAULT_POSITIONS.filter(
									function(defaultPosition) {
										return defaultPosition !== position
									}
								)
								return util_1.arrayUnique(
									[position].concat(remainingPositions)
								)
							}
						}
						Popover.prototype.createContainer = function() {
							var _a = this.props,
								containerStyle = _a.containerStyle,
								containerClassName = _a.containerClassName
							var container = window.document.createElement('div')
							container.style.overflow = 'hidden'
							if (containerStyle) {
								Object.keys(containerStyle).forEach(function(
									key
								) {
									return (container.style[key] =
										containerStyle[key])
								})
							}
							container.className = containerClassName
							container.style.position = 'absolute'
							container.style.top = '0'
							container.style.left = '0'
							return container
						}
						Popover.prototype.getLocationForPosition = function(
							position,
							newTargetRect,
							popoverRect
						) {
							var _a = this.props,
								padding = _a.padding,
								align = _a.align
							var targetMidX =
								newTargetRect.left + newTargetRect.width / 2
							var targetMidY =
								newTargetRect.top + newTargetRect.height / 2
							var top
							var left
							switch (position) {
								case 'top':
									top =
										newTargetRect.top -
										popoverRect.height -
										padding
									left = targetMidX - popoverRect.width / 2
									if (align === 'start') {
										left = newTargetRect.left
									}
									if (align === 'end') {
										left =
											newTargetRect.right -
											popoverRect.width
									}
									break
								case 'left':
									top = targetMidY - popoverRect.height / 2
									left =
										newTargetRect.left -
										padding -
										popoverRect.width
									if (align === 'start') {
										top = newTargetRect.top
									}
									if (align === 'end') {
										top =
											newTargetRect.bottom -
											popoverRect.height
									}
									break
								case 'bottom':
									top = newTargetRect.bottom + padding
									left = targetMidX - popoverRect.width / 2
									if (align === 'start') {
										left = newTargetRect.left
									}
									if (align === 'end') {
										left =
											newTargetRect.right -
											popoverRect.width
									}
									break
								case 'right':
									top = targetMidY - popoverRect.height / 2
									left = newTargetRect.right + padding
									if (align === 'start') {
										top = newTargetRect.top
									}
									if (align === 'end') {
										top =
											newTargetRect.bottom -
											popoverRect.height
									}
									break
							}
							return {top: top, left: left}
						}
						Popover.prototype.targetPositionHasChanged = function(
							oldTargetRect,
							newTargetRect
						) {
							return (
								oldTargetRect === null ||
								oldTargetRect.left !== newTargetRect.left ||
								oldTargetRect.top !== newTargetRect.top ||
								oldTargetRect.width !== newTargetRect.width ||
								oldTargetRect.height !== newTargetRect.height
							)
						}
						Popover.defaultProps = {
							padding: util_1.Constants.DEFAULT_PADDING,
							windowBorderPadding:
								util_1.Constants.DEFAULT_WINDOW_PADDING,
							position: ['top', 'right', 'left', 'bottom'],
							align: 'center',
							containerClassName:
								util_1.Constants.POPOVER_CONTAINER_CLASS_NAME
						}
						return Popover
					})(React.Component)
					exports.default = Popover

					/***/
				},
				/* 4 */
				/***/ function(module, exports) {
					module.exports = ReactDOM

					/***/
				},
				/* 5 */
				/***/ function(module, exports, __webpack_require__) {
					var __assign =
						(this && this.__assign) ||
						Object.assign ||
						function(t) {
							for (
								var s, i = 1, n = arguments.length;
								i < n;
								i++
							) {
								s = arguments[i]
								for (var p in s)
									if (
										Object.prototype.hasOwnProperty.call(
											s,
											p
										)
									)
										t[p] = s[p]
							}
							return t
						}
					Object.defineProperty(exports, '__esModule', {value: true})
					var React = __webpack_require__(0)
					var util_1 = __webpack_require__(1)
					var ArrowContainer = function(_a) {
						var position = _a.position,
							children = _a.children,
							style = _a.style,
							_b = _a.arrowColor,
							arrowColor =
								_b === void 0
									? util_1.Constants.DEFAULT_ARROW_COLOR
									: _b,
							_c = _a.arrowSize,
							arrowSize = _c === void 0 ? 10 : _c,
							arrowStyle = _a.arrowStyle,
							popoverRect = _a.popoverRect,
							targetRect = _a.targetRect
						return React.createElement(
							'div',
							{
								style: __assign(
									{
										paddingLeft:
											position === 'right'
												? arrowSize
												: 0,
										paddingTop:
											position === 'bottom'
												? arrowSize
												: 0,
										paddingBottom:
											position === 'top' ? arrowSize : 0,
										paddingRight:
											position === 'left' ? arrowSize : 0
									},
									style
								)
							},
							React.createElement('div', {
								style: __assign(
									{position: 'absolute'},
									(function() {
										var arrowWidth = arrowSize * 2
										var top =
											targetRect.top -
											popoverRect.top +
											targetRect.height / 2 -
											arrowWidth / 2
										var left =
											targetRect.left -
											popoverRect.left +
											targetRect.width / 2 -
											arrowWidth / 2
										left = left < 0 ? 0 : left
										left =
											left + arrowWidth >
											popoverRect.width
												? popoverRect.width - arrowWidth
												: left
										top = top < 0 ? 0 : top
										top =
											top + arrowWidth >
											popoverRect.height
												? popoverRect.height -
												  arrowWidth
												: top
										switch (position) {
											case 'right':
												return {
													borderTop:
														arrowSize +
														'px solid transparent',
													borderBottom:
														arrowSize +
														'px solid transparent',
													borderRight:
														arrowSize +
														'px solid ' +
														arrowColor,
													left: 0,
													top: top
												}
											case 'left':
												return {
													borderTop:
														arrowSize +
														'px solid transparent',
													borderBottom:
														arrowSize +
														'px solid transparent',
													borderLeft:
														arrowSize +
														'px solid ' +
														arrowColor,
													right: 0,
													top: top
												}
											case 'bottom':
												return {
													borderLeft:
														arrowSize +
														'px solid transparent',
													borderRight:
														arrowSize +
														'px solid transparent',
													borderBottom:
														arrowSize +
														'px solid ' +
														arrowColor,
													top: 0,
													left: left
												}
											case 'top':
											default:
												return {
													borderLeft:
														arrowSize +
														'px solid transparent',
													borderRight:
														arrowSize +
														'px solid transparent',
													borderTop:
														arrowSize +
														'px solid ' +
														arrowColor,
													bottom: 0,
													left: left
												}
										}
									})(),
									arrowStyle
								)
							}),
							children
						)
					}
					exports.ArrowContainer = ArrowContainer

					/***/
				}
				/******/
			]
		)
	})
	//# sourceMappingURL=index.js.map
})

var ReactTinyPopover = unwrapExports(dist)

/**
 * Всплывающий блок с контентом возле элемента.
 * Используется для всплывающих подсказок, выпадающих меню и т.д.
 */

function Popover(props) {
	return React__default.createElement(ReactTinyPopover, props)
}

Popover.propTypes = {}
Popover.defaultProps = {
	disableReposition: true
}
Popover.displayName = 'Popover'
Popover.ArrowContainer = ReactTinyPopover.ArrowContainer

function _arrayWithHoles(arr) {
	if (Array.isArray(arr)) return arr
}

var arrayWithHoles = _arrayWithHoles

function _iterableToArrayLimit(arr, i) {
	var _arr = []
	var _n = true
	var _d = false
	var _e = undefined

	try {
		for (
			var _i = arr[Symbol.iterator](), _s;
			!(_n = (_s = _i.next()).done);
			_n = true
		) {
			_arr.push(_s.value)

			if (i && _arr.length === i) break
		}
	} catch (err) {
		_d = true
		_e = err
	} finally {
		try {
			if (!_n && _i['return'] != null) _i['return']()
		} finally {
			if (_d) throw _e
		}
	}

	return _arr
}

var iterableToArrayLimit = _iterableToArrayLimit

function _nonIterableRest() {
	throw new TypeError('Invalid attempt to destructure non-iterable instance')
}

var nonIterableRest = _nonIterableRest

function _slicedToArray(arr, i) {
	return (
		arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest()
	)
}

var slicedToArray = _slicedToArray

function areInputsEqual(newInputs, lastInputs) {
	if (newInputs.length !== lastInputs.length) {
		return false
	}

	for (var i = 0; i < newInputs.length; i++) {
		if (newInputs[i] !== lastInputs[i]) {
			return false
		}
	}

	return true
}

function index$1(resultFn, isEqual) {
	if (isEqual === void 0) {
		isEqual = areInputsEqual
	}

	var lastThis
	var lastArgs = []
	var lastResult
	var calledOnce = false

	var result = function result() {
		for (
			var _len = arguments.length, newArgs = new Array(_len), _key = 0;
			_key < _len;
			_key++
		) {
			newArgs[_key] = arguments[_key]
		}

		if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
			return lastResult
		}

		lastResult = resultFn.apply(this, newArgs)
		calledOnce = true
		lastThis = this
		lastArgs = newArgs
		return lastResult
	}

	return result
}

function memoize$1(fn) {
	var cache = {}
	return function(arg) {
		if (cache[arg] === undefined) cache[arg] = fn(arg)
		return cache[arg]
	}
}

var unitlessKeys = {
	animationIterationCount: 1,
	borderImageOutset: 1,
	borderImageSlice: 1,
	borderImageWidth: 1,
	boxFlex: 1,
	boxFlexGroup: 1,
	boxOrdinalGroup: 1,
	columnCount: 1,
	columns: 1,
	flex: 1,
	flexGrow: 1,
	flexPositive: 1,
	flexShrink: 1,
	flexNegative: 1,
	flexOrder: 1,
	gridRow: 1,
	gridRowEnd: 1,
	gridRowSpan: 1,
	gridRowStart: 1,
	gridColumn: 1,
	gridColumnEnd: 1,
	gridColumnSpan: 1,
	gridColumnStart: 1,
	fontWeight: 1,
	lineHeight: 1,
	opacity: 1,
	order: 1,
	orphans: 1,
	tabSize: 1,
	widows: 1,
	zIndex: 1,
	zoom: 1,
	WebkitLineClamp: 1,
	// SVG-related properties
	fillOpacity: 1,
	floodOpacity: 1,
	stopOpacity: 1,
	strokeDasharray: 1,
	strokeDashoffset: 1,
	strokeMiterlimit: 1,
	strokeOpacity: 1,
	strokeWidth: 1
}

/* eslint-disable */
// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
function murmurhash2_32_gc(str) {
	var l = str.length,
		h = l ^ l,
		i = 0,
		k

	while (l >= 4) {
		k =
			(str.charCodeAt(i) & 0xff) |
			((str.charCodeAt(++i) & 0xff) << 8) |
			((str.charCodeAt(++i) & 0xff) << 16) |
			((str.charCodeAt(++i) & 0xff) << 24)
		k =
			(k & 0xffff) * 0x5bd1e995 +
			((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16)
		k ^= k >>> 24
		k =
			(k & 0xffff) * 0x5bd1e995 +
			((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16)
		h =
			((h & 0xffff) * 0x5bd1e995 +
				((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^
			k
		l -= 4
		++i
	}

	switch (l) {
		case 3:
			h ^= (str.charCodeAt(i + 2) & 0xff) << 16

		case 2:
			h ^= (str.charCodeAt(i + 1) & 0xff) << 8

		case 1:
			h ^= str.charCodeAt(i) & 0xff
			h =
				(h & 0xffff) * 0x5bd1e995 +
				((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)
	}

	h ^= h >>> 13
	h = (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)
	h ^= h >>> 15
	return (h >>> 0).toString(36)
}

function stylis_min(W) {
	function M(d, c, e, h, a) {
		for (
			var m = 0,
				b = 0,
				v = 0,
				n = 0,
				q,
				g,
				x = 0,
				K = 0,
				k,
				u = (k = q = 0),
				l = 0,
				r = 0,
				I = 0,
				t = 0,
				B = e.length,
				J = B - 1,
				y,
				f = '',
				p = '',
				F = '',
				G = '',
				C;
			l < B;

		) {
			g = e.charCodeAt(l)
			l === J &&
				0 !== b + n + v + m &&
				(0 !== b && (g = 47 === b ? 10 : 47), (n = v = m = 0), B++, J++)

			if (0 === b + n + v + m) {
				if (
					l === J &&
					(0 < r && (f = f.replace(N, '')), 0 < f.trim().length)
				) {
					switch (g) {
						case 32:
						case 9:
						case 59:
						case 13:
						case 10:
							break

						default:
							f += e.charAt(l)
					}

					g = 59
				}

				switch (g) {
					case 123:
						f = f.trim()
						q = f.charCodeAt(0)
						k = 1

						for (t = ++l; l < B; ) {
							switch ((g = e.charCodeAt(l))) {
								case 123:
									k++
									break

								case 125:
									k--
									break

								case 47:
									switch ((g = e.charCodeAt(l + 1))) {
										case 42:
										case 47:
											a: {
												for (u = l + 1; u < J; ++u) {
													switch (e.charCodeAt(u)) {
														case 47:
															if (
																42 === g &&
																42 ===
																	e.charCodeAt(
																		u - 1
																	) &&
																l + 2 !== u
															) {
																l = u + 1
																break a
															}

															break

														case 10:
															if (47 === g) {
																l = u + 1
																break a
															}
													}
												}

												l = u
											}
									}

									break

								case 91:
									g++

								case 40:
									g++

								case 34:
								case 39:
									for (
										;
										l++ < J && e.charCodeAt(l) !== g;

									) {}
							}

							if (0 === k) break
							l++
						}

						k = e.substring(t, l)
						0 === q &&
							(q = (f = f.replace(ca, '').trim()).charCodeAt(0))

						switch (q) {
							case 64:
								0 < r && (f = f.replace(N, ''))
								g = f.charCodeAt(1)

								switch (g) {
									case 100:
									case 109:
									case 115:
									case 45:
										r = c
										break

									default:
										r = O
								}

								k = M(c, r, k, g, a + 1)
								t = k.length
								0 < A &&
									((r = X(O, f, I)),
									(C = H(3, k, r, c, D, z, t, g, a, h)),
									(f = r.join('')),
									void 0 !== C &&
										0 === (t = (k = C.trim()).length) &&
										((g = 0), (k = '')))
								if (0 < t)
									switch (g) {
										case 115:
											f = f.replace(da, ea)

										case 100:
										case 109:
										case 45:
											k = f + '{' + k + '}'
											break

										case 107:
											f = f.replace(fa, '$1 $2')
											k = f + '{' + k + '}'
											k =
												1 === w ||
												(2 === w && L('@' + k, 3))
													? '@-webkit-' + k + '@' + k
													: '@' + k
											break

										default:
											;(k = f + k),
												112 === h &&
													(k = ((p += k), ''))
									}
								else k = ''
								break

							default:
								k = M(c, X(c, f, I), k, h, a + 1)
						}

						F += k
						k = I = r = u = q = 0
						f = ''
						g = e.charCodeAt(++l)
						break

					case 125:
					case 59:
						f = (0 < r ? f.replace(N, '') : f).trim()
						if (1 < (t = f.length))
							switch (
								(0 === u &&
									((q = f.charCodeAt(0)),
									45 === q || (96 < q && 123 > q)) &&
									(t = (f = f.replace(' ', ':')).length),
								0 < A &&
									void 0 !==
										(C = H(
											1,
											f,
											c,
											d,
											D,
											z,
											p.length,
											h,
											a,
											h
										)) &&
									0 === (t = (f = C.trim()).length) &&
									(f = '\x00\x00'),
								(q = f.charCodeAt(0)),
								(g = f.charCodeAt(1)),
								q)
							) {
								case 0:
									break

								case 64:
									if (105 === g || 99 === g) {
										G += f + e.charAt(l)
										break
									}

								default:
									58 !== f.charCodeAt(t - 1) &&
										(p += P(f, q, g, f.charCodeAt(2)))
							}
						I = r = u = q = 0
						f = ''
						g = e.charCodeAt(++l)
				}
			}

			switch (g) {
				case 13:
				case 10:
					47 === b
						? (b = 0)
						: 0 === 1 + q &&
						  107 !== h &&
						  0 < f.length &&
						  ((r = 1), (f += '\x00'))
					0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h)
					z = 1
					D++
					break

				case 59:
				case 125:
					if (0 === b + n + v + m) {
						z++
						break
					}

				default:
					z++
					y = e.charAt(l)

					switch (g) {
						case 9:
						case 32:
							if (0 === n + m + b)
								switch (x) {
									case 44:
									case 58:
									case 9:
									case 32:
										y = ''
										break

									default:
										32 !== g && (y = ' ')
								}
							break

						case 0:
							y = '\\0'
							break

						case 12:
							y = '\\f'
							break

						case 11:
							y = '\\v'
							break

						case 38:
							0 === n + b + m && ((r = I = 1), (y = '\f' + y))
							break

						case 108:
							if (0 === n + b + m + E && 0 < u)
								switch (l - u) {
									case 2:
										112 === x &&
											58 === e.charCodeAt(l - 3) &&
											(E = x)

									case 8:
										111 === K && (E = K)
								}
							break

						case 58:
							0 === n + b + m && (u = l)
							break

						case 44:
							0 === b + v + n + m && ((r = 1), (y += '\r'))
							break

						case 34:
						case 39:
							0 === b && (n = n === g ? 0 : 0 === n ? g : n)
							break

						case 91:
							0 === n + b + v && m++
							break

						case 93:
							0 === n + b + v && m--
							break

						case 41:
							0 === n + b + m && v--
							break

						case 40:
							if (0 === n + b + m) {
								if (0 === q)
									switch (2 * x + 3 * K) {
										case 533:
											break

										default:
											q = 1
									}
								v++
							}

							break

						case 64:
							0 === b + v + n + m + u + k && (k = 1)
							break

						case 42:
						case 47:
							if (!(0 < n + m + v))
								switch (b) {
									case 0:
										switch (
											2 * g + 3 * e.charCodeAt(l + 1)
										) {
											case 235:
												b = 47
												break

											case 220:
												;(t = l), (b = 42)
										}

										break

									case 42:
										47 === g &&
											42 === x &&
											t + 2 !== l &&
											(33 === e.charCodeAt(t + 2) &&
												(p += e.substring(t, l + 1)),
											(y = ''),
											(b = 0))
								}
					}

					0 === b && (f += y)
			}

			K = x
			x = g
			l++
		}

		t = p.length

		if (0 < t) {
			r = c
			if (
				0 < A &&
				((C = H(2, p, r, d, D, z, t, h, a, h)),
				void 0 !== C && 0 === (p = C).length)
			)
				return G + p + F
			p = r.join(',') + '{' + p + '}'

			if (0 !== w * E) {
				2 !== w || L(p, 2) || (E = 0)

				switch (E) {
					case 111:
						p = p.replace(ha, ':-moz-$1') + p
						break

					case 112:
						p =
							p.replace(Q, '::-webkit-input-$1') +
							p.replace(Q, '::-moz-$1') +
							p.replace(Q, ':-ms-input-$1') +
							p
				}

				E = 0
			}
		}

		return G + p + F
	}

	function X(d, c, e) {
		var h = c.trim().split(ia)
		c = h
		var a = h.length,
			m = d.length

		switch (m) {
			case 0:
			case 1:
				var b = 0

				for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
					c[b] = Z(d, c[b], e).trim()
				}

				break

			default:
				var v = (b = 0)

				for (c = []; b < a; ++b) {
					for (var n = 0; n < m; ++n) {
						c[v++] = Z(d[n] + ' ', h[b], e).trim()
					}
				}
		}

		return c
	}

	function Z(d, c, e) {
		var h = c.charCodeAt(0)
		33 > h && (h = (c = c.trim()).charCodeAt(0))

		switch (h) {
			case 38:
				return c.replace(F, '$1' + d.trim())

			case 58:
				return d.trim() + c.replace(F, '$1' + d.trim())

			default:
				if (0 < 1 * e && 0 < c.indexOf('\f'))
					return c.replace(
						F,
						(58 === d.charCodeAt(0) ? '' : '$1') + d.trim()
					)
		}

		return d + c
	}

	function P(d, c, e, h) {
		var a = d + ';',
			m = 2 * c + 3 * e + 4 * h

		if (944 === m) {
			d = a.indexOf(':', 9) + 1
			var b = a.substring(d, a.length - 1).trim()
			b = a.substring(0, d).trim() + b + ';'
			return 1 === w || (2 === w && L(b, 1)) ? '-webkit-' + b + b : b
		}

		if (0 === w || (2 === w && !L(a, 1))) return a

		switch (m) {
			case 1015:
				return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a

			case 951:
				return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a

			case 963:
				return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a

			case 1009:
				if (100 !== a.charCodeAt(4)) break

			case 969:
			case 942:
				return '-webkit-' + a + a

			case 978:
				return '-webkit-' + a + '-moz-' + a + a

			case 1019:
			case 983:
				return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a

			case 883:
				if (45 === a.charCodeAt(8)) return '-webkit-' + a + a
				if (0 < a.indexOf('image-set(', 11))
					return a.replace(ja, '$1-webkit-$2') + a
				break

			case 932:
				if (45 === a.charCodeAt(4))
					switch (a.charCodeAt(5)) {
						case 103:
							return (
								'-webkit-box-' +
								a.replace('-grow', '') +
								'-webkit-' +
								a +
								'-ms-' +
								a.replace('grow', 'positive') +
								a
							)

						case 115:
							return (
								'-webkit-' +
								a +
								'-ms-' +
								a.replace('shrink', 'negative') +
								a
							)

						case 98:
							return (
								'-webkit-' +
								a +
								'-ms-' +
								a.replace('basis', 'preferred-size') +
								a
							)
					}
				return '-webkit-' + a + '-ms-' + a + a

			case 964:
				return '-webkit-' + a + '-ms-flex-' + a + a

			case 1023:
				if (99 !== a.charCodeAt(8)) break
				b = a
					.substring(a.indexOf(':', 15))
					.replace('flex-', '')
					.replace('space-between', 'justify')
				return (
					'-webkit-box-pack' +
					b +
					'-webkit-' +
					a +
					'-ms-flex-pack' +
					b +
					a
				)

			case 1005:
				return ka.test(a)
					? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a
					: a

			case 1e3:
				b = a.substring(13).trim()
				c = b.indexOf('-') + 1

				switch (b.charCodeAt(0) + b.charCodeAt(c)) {
					case 226:
						b = a.replace(G, 'tb')
						break

					case 232:
						b = a.replace(G, 'tb-rl')
						break

					case 220:
						b = a.replace(G, 'lr')
						break

					default:
						return a
				}

				return '-webkit-' + a + '-ms-' + b + a

			case 1017:
				if (-1 === a.indexOf('sticky', 9)) break

			case 975:
				c = (a = d).length - 10
				b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a)
					.substring(d.indexOf(':', 7) + 1)
					.trim()

				switch ((m = b.charCodeAt(0) + (b.charCodeAt(7) | 0))) {
					case 203:
						if (111 > b.charCodeAt(8)) break

					case 115:
						a = a.replace(b, '-webkit-' + b) + ';' + a
						break

					case 207:
					case 102:
						a =
							a.replace(
								b,
								'-webkit-' + (102 < m ? 'inline-' : '') + 'box'
							) +
							';' +
							a.replace(b, '-webkit-' + b) +
							';' +
							a.replace(b, '-ms-' + b + 'box') +
							';' +
							a
				}

				return a + ';'

			case 938:
				if (45 === a.charCodeAt(5))
					switch (a.charCodeAt(6)) {
						case 105:
							return (
								(b = a.replace('-items', '')),
								'-webkit-' +
									a +
									'-webkit-box-' +
									b +
									'-ms-flex-' +
									b +
									a
							)

						case 115:
							return (
								'-webkit-' +
								a +
								'-ms-flex-item-' +
								a.replace(ba, '') +
								a
							)

						default:
							return (
								'-webkit-' +
								a +
								'-ms-flex-line-pack' +
								a.replace('align-content', '').replace(ba, '') +
								a
							)
					}
				break

			case 973:
			case 989:
				if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break

			case 931:
			case 953:
				if (!0 === la.test(d))
					return 115 ===
						(b = d.substring(d.indexOf(':') + 1)).charCodeAt(0)
						? P(
								d.replace('stretch', 'fill-available'),
								c,
								e,
								h
						  ).replace(':fill-available', ':stretch')
						: a.replace(b, '-webkit-' + b) +
								a.replace(b, '-moz-' + b.replace('fill-', '')) +
								a
				break

			case 962:
				if (
					((a =
						'-webkit-' +
						a +
						(102 === a.charCodeAt(5) ? '-ms-' + a : '') +
						a),
					211 === e + h &&
						105 === a.charCodeAt(13) &&
						0 < a.indexOf('transform', 10))
				)
					return (
						a
							.substring(0, a.indexOf(';', 27) + 1)
							.replace(ma, '$1-webkit-$2') + a
					)
		}

		return a
	}

	function L(d, c) {
		var e = d.indexOf(1 === c ? ':' : '{'),
			h = d.substring(0, 3 !== c ? e : 10)
		e = d.substring(e + 1, d.length - 1)
		return R(2 !== c ? h : h.replace(na, '$1'), e, c)
	}

	function ea(d, c) {
		var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2))
		return e !== c + ';'
			? e.replace(oa, ' or ($1)').substring(4)
			: '(' + c + ')'
	}

	function H(d, c, e, h, a, m, b, v, n, q) {
		for (var g = 0, x = c, w; g < A; ++g) {
			switch ((w = S[g].call(B, d, x, e, h, a, m, b, v, n, q))) {
				case void 0:
				case !1:
				case !0:
				case null:
					break

				default:
					x = w
			}
		}

		if (x !== c) return x
	}

	function T(d) {
		switch (d) {
			case void 0:
			case null:
				A = S.length = 0
				break

			default:
				switch (d.constructor) {
					case Array:
						for (var c = 0, e = d.length; c < e; ++c) {
							T(d[c])
						}

						break

					case Function:
						S[A++] = d
						break

					case Boolean:
						Y = !!d | 0
				}
		}

		return T
	}

	function U(d) {
		d = d.prefix
		void 0 !== d &&
			((R = null),
			d
				? 'function' !== typeof d
					? (w = 1)
					: ((w = 2), (R = d))
				: (w = 0))
		return U
	}

	function B(d, c) {
		var e = d
		33 > e.charCodeAt(0) && (e = e.trim())
		V = e
		e = [V]

		if (0 < A) {
			var h = H(-1, c, e, e, D, z, 0, 0, 0, 0)
			void 0 !== h && 'string' === typeof h && (c = h)
		}

		var a = M(O, e, c, 0, 0)
		0 < A &&
			((h = H(-2, a, e, e, D, z, a.length, 0, 0, 0)),
			void 0 !== h && (a = h))
		V = ''
		E = 0
		z = D = 1
		return a
	}

	var ca = /^\0+/g,
		N = /[\0\r\f]/g,
		aa = /: */g,
		ka = /zoo|gra/,
		ma = /([,: ])(transform)/g,
		ia = /,\r+?/g,
		F = /([\t\r\n ])*\f?&/g,
		fa = /@(k\w+)\s*(\S*)\s*/,
		Q = /::(place)/g,
		ha = /:(read-only)/g,
		G = /[svh]\w+-[tblr]{2}/,
		da = /\(\s*(.*)\s*\)/g,
		oa = /([\s\S]*?);/g,
		ba = /-self|flex-/g,
		na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
		la = /stretch|:\s*\w+\-(?:conte|avail)/,
		ja = /([^-])(image-set\()/,
		z = 1,
		D = 1,
		E = 0,
		w = 1,
		O = [],
		S = [],
		A = 0,
		R = null,
		Y = 0,
		V = ''
	B.use = T
	B.set = U
	void 0 !== W && U(W)
	return B
}

var stylisRuleSheet = createCommonjsModule(function(module, exports) {
	;(function(factory) {
		module['exports'] = factory()
	})(function() {
		return function(insertRule) {
			var delimiter = '/*|*/'
			var needle = delimiter + '}'

			function toSheet(block) {
				if (block)
					try {
						insertRule(block + '}')
					} catch (e) {}
			}

			return function ruleSheet(
				context,
				content,
				selectors,
				parents,
				line,
				column,
				length,
				ns,
				depth,
				at
			) {
				switch (context) {
					// property
					case 1:
						// @import
						if (depth === 0 && content.charCodeAt(0) === 64)
							return insertRule(content + ';'), ''
						break
					// selector
					case 2:
						if (ns === 0) return content + delimiter
						break
					// at-rule
					case 3:
						switch (ns) {
							// @font-face, @page
							case 102:
							case 112:
								return insertRule(selectors[0] + content), ''
							default:
								return content + (at === 0 ? delimiter : '')
						}
					case -2:
						content.split(needle).forEach(toSheet)
				}
			}
		}
	})
})

var hyphenateRegex = /[A-Z]|^ms/g
var processStyleName = memoize$1(function(styleName) {
	return styleName.replace(hyphenateRegex, '-$&').toLowerCase()
})
var processStyleValue = function processStyleValue(key, value) {
	if (value == null || typeof value === 'boolean') {
		return ''
	}

	if (
		unitlessKeys[key] !== 1 &&
		key.charCodeAt(1) !== 45 && // custom properties
		!isNaN(value) &&
		value !== 0
	) {
		return value + 'px'
	}

	return value
}

if (process.env.NODE_ENV !== 'production') {
	var contentValuePattern = /(attr|calc|counters?|url)\(/
	var contentValues = [
		'normal',
		'none',
		'counter',
		'open-quote',
		'close-quote',
		'no-open-quote',
		'no-close-quote',
		'initial',
		'inherit',
		'unset'
	]
	var oldProcessStyleValue = processStyleValue

	processStyleValue = function processStyleValue(key, value) {
		if (key === 'content') {
			if (
				typeof value !== 'string' ||
				(contentValues.indexOf(value) === -1 &&
					!contentValuePattern.test(value) &&
					(value.charAt(0) !== value.charAt(value.length - 1) ||
						(value.charAt(0) !== '"' && value.charAt(0) !== "'")))
			) {
				console.error(
					"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" +
						value +
						'"\'`'
				)
			}
		}

		return oldProcessStyleValue(key, value)
	}
}

var classnames$1 = function classnames(args) {
	var len = args.length
	var i = 0
	var cls = ''

	for (; i < len; i++) {
		var arg = args[i]
		if (arg == null) continue
		var toAdd = void 0

		switch (typeof arg) {
			case 'boolean':
				break

			case 'function':
				if (process.env.NODE_ENV !== 'production') {
					console.error(
						'Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\n' +
							'Please call the function before passing it to cx.'
					)
				}

				toAdd = classnames([arg()])
				break

			case 'object': {
				if (Array.isArray(arg)) {
					toAdd = classnames(arg)
				} else {
					toAdd = ''

					for (var k in arg) {
						if (arg[k] && k) {
							toAdd && (toAdd += ' ')
							toAdd += k
						}
					}
				}

				break
			}

			default: {
				toAdd = arg
			}
		}

		if (toAdd) {
			cls && (cls += ' ')
			cls += toAdd
		}
	}

	return cls
}
var isBrowser = typeof document !== 'undefined'

/*

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance
- 'polyfills' on server side

// usage

import StyleSheet from 'glamor/lib/sheet'
let styleSheet = new StyleSheet()

styleSheet.inject()
- 'injects' the stylesheet into the page (or into memory if on server)

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
	if (tag.sheet) {
		// $FlowFixMe
		return tag.sheet
	} // this weirdness brought to you by firefox

	for (var i = 0; i < document.styleSheets.length; i++) {
		if (document.styleSheets[i].ownerNode === tag) {
			// $FlowFixMe
			return document.styleSheets[i]
		}
	}
}

function makeStyleTag(opts) {
	var tag = document.createElement('style')
	tag.setAttribute('data-emotion', opts.key || '')

	if (opts.nonce !== undefined) {
		tag.setAttribute('nonce', opts.nonce)
	}

	tag.appendChild(document.createTextNode('')) // $FlowFixMe
	;(opts.container !== undefined
		? opts.container
		: document.head
	).appendChild(tag)
	return tag
}

var StyleSheet =
	/*#__PURE__*/
	(function() {
		function StyleSheet(options) {
			this.isSpeedy = process.env.NODE_ENV === 'production' // the big drawback here is that the css won't be editable in devtools

			this.tags = []
			this.ctr = 0
			this.opts = options
		}

		var _proto = StyleSheet.prototype

		_proto.inject = function inject() {
			if (this.injected) {
				throw new Error('already injected!')
			}

			this.tags[0] = makeStyleTag(this.opts)
			this.injected = true
		}

		_proto.speedy = function speedy(bool) {
			if (this.ctr !== 0) {
				// cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})
				throw new Error('cannot change speedy now')
			}

			this.isSpeedy = !!bool
		}

		_proto.insert = function insert(rule, sourceMap) {
			// this is the ultrafast version, works across browsers
			if (this.isSpeedy) {
				var tag = this.tags[this.tags.length - 1]
				var sheet = sheetForTag(tag)

				try {
					sheet.insertRule(rule, sheet.cssRules.length)
				} catch (e) {
					if (process.env.NODE_ENV !== 'production') {
						console.warn('illegal rule', rule) // eslint-disable-line no-console
					}
				}
			} else {
				var _tag = makeStyleTag(this.opts)

				this.tags.push(_tag)

				_tag.appendChild(
					document.createTextNode(rule + (sourceMap || ''))
				)
			}

			this.ctr++

			if (this.ctr % 65000 === 0) {
				this.tags.push(makeStyleTag(this.opts))
			}
		}

		_proto.flush = function flush() {
			// $FlowFixMe
			this.tags.forEach(function(tag) {
				return tag.parentNode.removeChild(tag)
			})
			this.tags = []
			this.ctr = 0 // todo - look for remnants in document.styleSheets

			this.injected = false
		}

		return StyleSheet
	})()

function createEmotion(context, options) {
	if (context.__SECRET_EMOTION__ !== undefined) {
		return context.__SECRET_EMOTION__
	}

	if (options === undefined) options = {}
	var key = options.key || 'css'

	if (process.env.NODE_ENV !== 'production') {
		if (/[^a-z-]/.test(key)) {
			throw new Error(
				'Emotion key must only contain lower case alphabetical characters and - but "' +
					key +
					'" was passed'
			)
		}
	}

	var current

	function insertRule(rule) {
		current += rule

		if (isBrowser) {
			sheet.insert(rule, currentSourceMap)
		}
	}

	var insertionPlugin = stylisRuleSheet(insertRule)
	var stylisOptions

	if (options.prefix !== undefined) {
		stylisOptions = {
			prefix: options.prefix
		}
	}

	var caches = {
		registered: {},
		inserted: {},
		nonce: options.nonce,
		key: key
	}
	var sheet = new StyleSheet(options)

	if (isBrowser) {
		// 🚀
		sheet.inject()
	}

	var stylis = new stylis_min(stylisOptions)
	stylis.use(options.stylisPlugins)(insertionPlugin)
	var currentSourceMap = ''

	function handleInterpolation(interpolation, couldBeSelectorInterpolation) {
		if (interpolation == null) {
			return ''
		}

		switch (typeof interpolation) {
			case 'boolean':
				return ''

			case 'function':
				if (interpolation.__emotion_styles !== undefined) {
					var selector = interpolation.toString()

					if (
						selector === 'NO_COMPONENT_SELECTOR' &&
						process.env.NODE_ENV !== 'production'
					) {
						throw new Error(
							'Component selectors can only be used in conjunction with babel-plugin-emotion.'
						)
					}

					return selector
				}

				if (
					this === undefined &&
					process.env.NODE_ENV !== 'production'
				) {
					console.error(
						'Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\n' +
							'If you want to have a css call based on props, create a function that returns a css call like this\n' +
							'let dynamicStyle = (props) => css`color: ${props.color}`\n' +
							'It can be called directly with props or interpolated in a styled call like this\n' +
							"let SomeComponent = styled('div')`${dynamicStyle}`"
					)
				}

				return handleInterpolation.call(
					this,
					this === undefined
						? interpolation() // $FlowFixMe
						: interpolation(this.mergedProps, this.context),
					couldBeSelectorInterpolation
				)

			case 'object':
				return createStringFromObject.call(this, interpolation)

			default:
				var cached = caches.registered[interpolation]
				return couldBeSelectorInterpolation === false &&
					cached !== undefined
					? cached
					: interpolation
		}
	}

	var objectToStringCache = new WeakMap()

	function createStringFromObject(obj) {
		if (objectToStringCache.has(obj)) {
			// $FlowFixMe
			return objectToStringCache.get(obj)
		}

		var string = ''

		if (Array.isArray(obj)) {
			obj.forEach(function(interpolation) {
				string += handleInterpolation.call(this, interpolation, false)
			}, this)
		} else {
			Object.keys(obj).forEach(function(key) {
				if (typeof obj[key] !== 'object') {
					if (caches.registered[obj[key]] !== undefined) {
						string += key + '{' + caches.registered[obj[key]] + '}'
					} else {
						string +=
							processStyleName(key) +
							':' +
							processStyleValue(key, obj[key]) +
							';'
					}
				} else {
					if (
						key === 'NO_COMPONENT_SELECTOR' &&
						process.env.NODE_ENV !== 'production'
					) {
						throw new Error(
							'Component selectors can only be used in conjunction with babel-plugin-emotion.'
						)
					}

					if (
						Array.isArray(obj[key]) &&
						typeof obj[key][0] === 'string' &&
						caches.registered[obj[key][0]] === undefined
					) {
						obj[key].forEach(function(value) {
							string +=
								processStyleName(key) +
								':' +
								processStyleValue(key, value) +
								';'
						})
					} else {
						string +=
							key +
							'{' +
							handleInterpolation.call(this, obj[key], false) +
							'}'
					}
				}
			}, this)
		}

		objectToStringCache.set(obj, string)
		return string
	}

	var name
	var stylesWithLabel
	var labelPattern = /label:\s*([^\s;\n{]+)\s*;/g

	var createClassName = function createClassName(styles, identifierName) {
		return murmurhash2_32_gc(styles + identifierName) + identifierName
	}

	if (process.env.NODE_ENV !== 'production') {
		var oldCreateClassName = createClassName
		var sourceMappingUrlPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//g

		createClassName = function createClassName(styles, identifierName) {
			return oldCreateClassName(
				styles.replace(sourceMappingUrlPattern, function(sourceMap) {
					currentSourceMap = sourceMap
					return ''
				}),
				identifierName
			)
		}
	}

	var createStyles = function createStyles(strings) {
		var stringMode = true
		var styles = ''
		var identifierName = ''

		if (strings == null || strings.raw === undefined) {
			stringMode = false
			styles += handleInterpolation.call(this, strings, false)
		} else {
			styles += strings[0]
		}

		for (
			var _len = arguments.length,
				interpolations = new Array(_len > 1 ? _len - 1 : 0),
				_key = 1;
			_key < _len;
			_key++
		) {
			interpolations[_key - 1] = arguments[_key]
		}

		interpolations.forEach(function(interpolation, i) {
			styles += handleInterpolation.call(
				this,
				interpolation,
				styles.charCodeAt(styles.length - 1) === 46 // .
			)

			if (stringMode === true && strings[i + 1] !== undefined) {
				styles += strings[i + 1]
			}
		}, this)
		stylesWithLabel = styles
		styles = styles.replace(labelPattern, function(match, p1) {
			identifierName += '-' + p1
			return ''
		})
		name = createClassName(styles, identifierName)
		return styles
	}

	if (process.env.NODE_ENV !== 'production') {
		var oldStylis = stylis

		stylis = function stylis(selector, styles) {
			oldStylis(selector, styles)
			currentSourceMap = ''
		}
	}

	function insert(scope, styles) {
		if (caches.inserted[name] === undefined) {
			current = ''
			stylis(scope, styles)
			caches.inserted[name] = current
		}
	}

	var css = function css() {
		var styles = createStyles.apply(this, arguments)
		var selector = key + '-' + name

		if (caches.registered[selector] === undefined) {
			caches.registered[selector] = stylesWithLabel
		}

		insert('.' + selector, styles)
		return selector
	}

	var keyframes = function keyframes() {
		var styles = createStyles.apply(this, arguments)
		var animation = 'animation-' + name
		insert('', '@keyframes ' + animation + '{' + styles + '}')
		return animation
	}

	var injectGlobal = function injectGlobal() {
		var styles = createStyles.apply(this, arguments)
		insert('', styles)
	}

	function getRegisteredStyles(registeredStyles, classNames) {
		var rawClassName = ''
		classNames.split(' ').forEach(function(className) {
			if (caches.registered[className] !== undefined) {
				registeredStyles.push(className)
			} else {
				rawClassName += className + ' '
			}
		})
		return rawClassName
	}

	function merge(className, sourceMap) {
		var registeredStyles = []
		var rawClassName = getRegisteredStyles(registeredStyles, className)

		if (registeredStyles.length < 2) {
			return className
		}

		return rawClassName + css(registeredStyles, sourceMap)
	}

	function cx() {
		for (
			var _len2 = arguments.length,
				classNames = new Array(_len2),
				_key2 = 0;
			_key2 < _len2;
			_key2++
		) {
			classNames[_key2] = arguments[_key2]
		}

		return merge(classnames$1(classNames))
	}

	function hydrateSingleId(id) {
		caches.inserted[id] = true
	}

	function hydrate(ids) {
		ids.forEach(hydrateSingleId)
	}

	function flush() {
		if (isBrowser) {
			sheet.flush()
			sheet.inject()
		}

		caches.inserted = {}
		caches.registered = {}
	}

	if (isBrowser) {
		var chunks = document.querySelectorAll('[data-emotion-' + key + ']')
		Array.prototype.forEach.call(chunks, function(node) {
			// $FlowFixMe
			sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0]) // $FlowFixMe

			node.getAttribute('data-emotion-' + key)
				.split(' ')
				.forEach(hydrateSingleId)
		})
	}

	var emotion = {
		flush: flush,
		hydrate: hydrate,
		cx: cx,
		merge: merge,
		getRegisteredStyles: getRegisteredStyles,
		injectGlobal: injectGlobal,
		keyframes: keyframes,
		css: css,
		sheet: sheet,
		caches: caches
	}
	context.__SECRET_EMOTION__ = emotion
	return emotion
}

var context = typeof global !== 'undefined' ? global : {}

var _createEmotion = createEmotion(context),
	flush = _createEmotion.flush,
	hydrate = _createEmotion.hydrate,
	cx = _createEmotion.cx,
	merge$1 = _createEmotion.merge,
	getRegisteredStyles = _createEmotion.getRegisteredStyles,
	injectGlobal = _createEmotion.injectGlobal,
	keyframes = _createEmotion.keyframes,
	css$2 = _createEmotion.css,
	sheet = _createEmotion.sheet,
	caches = _createEmotion.caches

var index_esm = /*#__PURE__*/ Object.freeze({
	flush: flush,
	hydrate: hydrate,
	cx: cx,
	merge: merge$1,
	getRegisteredStyles: getRegisteredStyles,
	injectGlobal: injectGlobal,
	keyframes: keyframes,
	css: css$2,
	sheet: sheet,
	caches: caches
})

var performanceNow = createCommonjsModule(function(module) {
	// Generated by CoffeeScript 1.12.2
	;(function() {
		var getNanoSeconds,
			hrtime,
			loadTime,
			moduleLoadTime,
			nodeLoadTime,
			upTime

		if (
			typeof performance !== 'undefined' &&
			performance !== null &&
			performance.now
		) {
			module.exports = function() {
				return performance.now()
			}
		} else if (
			typeof process !== 'undefined' &&
			process !== null &&
			process.hrtime
		) {
			module.exports = function() {
				return (getNanoSeconds() - nodeLoadTime) / 1e6
			}
			hrtime = process.hrtime
			getNanoSeconds = function() {
				var hr
				hr = hrtime()
				return hr[0] * 1e9 + hr[1]
			}
			moduleLoadTime = getNanoSeconds()
			upTime = process.uptime() * 1e9
			nodeLoadTime = moduleLoadTime - upTime
		} else if (Date.now) {
			module.exports = function() {
				return Date.now() - loadTime
			}
			loadTime = Date.now()
		} else {
			module.exports = function() {
				return new Date().getTime() - loadTime
			}
			loadTime = new Date().getTime()
		}
	}.call(commonjsGlobal))

	//# sourceMappingURL=performance-now.js.map
})

var root$1 = typeof window === 'undefined' ? commonjsGlobal : window,
	vendors = ['moz', 'webkit'],
	suffix = 'AnimationFrame',
	raf = root$1['request' + suffix],
	caf = root$1['cancel' + suffix] || root$1['cancelRequest' + suffix]

for (var i$1 = 0; !raf && i$1 < vendors.length; i$1++) {
	raf = root$1[vendors[i$1] + 'Request' + suffix]
	caf =
		root$1[vendors[i$1] + 'Cancel' + suffix] ||
		root$1[vendors[i$1] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if (!raf || !caf) {
	var last$1 = 0,
		id$1 = 0,
		queue$1 = [],
		frameDuration = 1000 / 60

	raf = function(callback) {
		if (queue$1.length === 0) {
			var _now = performanceNow(),
				next = Math.max(0, frameDuration - (_now - last$1))
			last$1 = next + _now
			setTimeout(function() {
				var cp = queue$1.slice(0)
				// Clear queue here to prevent
				// callbacks from appending listeners
				// to the current frame's queue
				queue$1.length = 0
				for (var i = 0; i < cp.length; i++) {
					if (!cp[i].cancelled) {
						try {
							cp[i].callback(last$1)
						} catch (e) {
							setTimeout(function() {
								throw e
							}, 0)
						}
					}
				}
			}, Math.round(next))
		}
		queue$1.push({
			handle: ++id$1,
			callback: callback,
			cancelled: false
		})
		return id$1
	}

	caf = function(handle) {
		for (var i = 0; i < queue$1.length; i++) {
			if (queue$1[i].handle === handle) {
				queue$1[i].cancelled = true
			}
		}
	}
}

var raf_1 = function(fn) {
	// Wrap in a new function to prevent
	// `cancel` potentially being assigned
	// to the native rAF function
	return raf.call(root$1, fn)
}
var cancel = function() {
	caf.apply(root$1, arguments)
}
var polyfill$1 = function(object) {
	if (!object) {
		object = root$1
	}
	object.requestAnimationFrame = raf
	object.cancelAnimationFrame = caf
}
raf_1.cancel = cancel
raf_1.polyfill = polyfill$1

var AutosizeInput_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var _react2 = _interopRequireDefault(React__default)

	var _propTypes2 = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var sizerStyle = {
		position: 'absolute',
		top: 0,
		left: 0,
		visibility: 'hidden',
		height: 0,
		overflow: 'scroll',
		whiteSpace: 'pre'
	}

	var INPUT_PROPS_BLACKLIST = [
		'extraWidth',
		'injectStyles',
		'inputClassName',
		'inputRef',
		'inputStyle',
		'minWidth',
		'onAutosize',
		'placeholderIsMinWidth'
	]

	var cleanInputProps = function cleanInputProps(inputProps) {
		INPUT_PROPS_BLACKLIST.forEach(function(field) {
			return delete inputProps[field]
		})
		return inputProps
	}

	var copyStyles = function copyStyles(styles, node) {
		node.style.fontSize = styles.fontSize
		node.style.fontFamily = styles.fontFamily
		node.style.fontWeight = styles.fontWeight
		node.style.fontStyle = styles.fontStyle
		node.style.letterSpacing = styles.letterSpacing
		node.style.textTransform = styles.textTransform
	}

	var isIE =
		typeof window !== 'undefined' && window.navigator
			? /MSIE |Trident\/|Edge\//.test(window.navigator.userAgent)
			: false

	var generateId = function generateId() {
		// we only need an auto-generated ID for stylesheet injection, which is only
		// used for IE. so if the browser is not IE, this should return undefined.
		return isIE
			? '_' +
					Math.random()
						.toString(36)
						.substr(2, 12)
			: undefined
	}

	var AutosizeInput = (function(_Component) {
		_inherits(AutosizeInput, _Component)

		function AutosizeInput(props) {
			_classCallCheck(this, AutosizeInput)

			var _this = _possibleConstructorReturn(
				this,
				(
					AutosizeInput.__proto__ ||
					Object.getPrototypeOf(AutosizeInput)
				).call(this, props)
			)

			_this.inputRef = function(el) {
				_this.input = el
				if (typeof _this.props.inputRef === 'function') {
					_this.props.inputRef(el)
				}
			}

			_this.placeHolderSizerRef = function(el) {
				_this.placeHolderSizer = el
			}

			_this.sizerRef = function(el) {
				_this.sizer = el
			}

			_this.state = {
				inputWidth: props.minWidth,
				inputId: props.id || generateId()
			}
			return _this
		}

		_createClass(AutosizeInput, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.mounted = true
					this.copyInputStyles()
					this.updateInputWidth()
				}
			},
			{
				key: 'componentWillReceiveProps',
				value: function componentWillReceiveProps(nextProps) {
					var id = nextProps.id

					if (id !== this.props.id) {
						this.setState({inputId: id || generateId()})
					}
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevState) {
					if (prevState.inputWidth !== this.state.inputWidth) {
						if (typeof this.props.onAutosize === 'function') {
							this.props.onAutosize(this.state.inputWidth)
						}
					}
					this.updateInputWidth()
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.mounted = false
				}
			},
			{
				key: 'copyInputStyles',
				value: function copyInputStyles() {
					if (!this.mounted || !window.getComputedStyle) {
						return
					}
					var inputStyles =
						this.input && window.getComputedStyle(this.input)
					if (!inputStyles) {
						return
					}
					copyStyles(inputStyles, this.sizer)
					if (this.placeHolderSizer) {
						copyStyles(inputStyles, this.placeHolderSizer)
					}
				}
			},
			{
				key: 'updateInputWidth',
				value: function updateInputWidth() {
					if (
						!this.mounted ||
						!this.sizer ||
						typeof this.sizer.scrollWidth === 'undefined'
					) {
						return
					}
					var newInputWidth = void 0
					if (
						this.props.placeholder &&
						(!this.props.value ||
							(this.props.value &&
								this.props.placeholderIsMinWidth))
					) {
						newInputWidth =
							Math.max(
								this.sizer.scrollWidth,
								this.placeHolderSizer.scrollWidth
							) + 2
					} else {
						newInputWidth = this.sizer.scrollWidth + 2
					}
					// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI
					var extraWidth =
						this.props.type === 'number' &&
						this.props.extraWidth === undefined
							? 16
							: parseInt(this.props.extraWidth) || 0
					newInputWidth += extraWidth
					if (newInputWidth < this.props.minWidth) {
						newInputWidth = this.props.minWidth
					}
					if (newInputWidth !== this.state.inputWidth) {
						this.setState({
							inputWidth: newInputWidth
						})
					}
				}
			},
			{
				key: 'getInput',
				value: function getInput() {
					return this.input
				}
			},
			{
				key: 'focus',
				value: function focus() {
					this.input.focus()
				}
			},
			{
				key: 'blur',
				value: function blur() {
					this.input.blur()
				}
			},
			{
				key: 'select',
				value: function select() {
					this.input.select()
				}
			},
			{
				key: 'renderStyles',
				value: function renderStyles() {
					// this method injects styles to hide IE's clear indicator, which messes
					// with input size detection. the stylesheet is only injected when the
					// browser is IE, and can also be disabled by the `injectStyles` prop.
					var injectStyles = this.props.injectStyles

					return isIE && injectStyles
						? _react2.default.createElement('style', {
								dangerouslySetInnerHTML: {
									__html:
										'input#' +
										this.state.inputId +
										'::-ms-clear {display: none;}'
								}
						  })
						: null
				}
			},
			{
				key: 'render',
				value: function render() {
					var sizerValue = [
						this.props.defaultValue,
						this.props.value,
						''
					].reduce(function(previousValue, currentValue) {
						if (
							previousValue !== null &&
							previousValue !== undefined
						) {
							return previousValue
						}
						return currentValue
					})

					var wrapperStyle = _extends({}, this.props.style)
					if (!wrapperStyle.display)
						wrapperStyle.display = 'inline-block'

					var inputStyle = _extends(
						{
							boxSizing: 'content-box',
							width: this.state.inputWidth + 'px'
						},
						this.props.inputStyle
					)

					var inputProps = _objectWithoutProperties(this.props, [])

					cleanInputProps(inputProps)
					inputProps.className = this.props.inputClassName
					inputProps.id = this.state.inputId
					inputProps.style = inputStyle

					return _react2.default.createElement(
						'div',
						{className: this.props.className, style: wrapperStyle},
						this.renderStyles(),
						_react2.default.createElement(
							'input',
							_extends({}, inputProps, {ref: this.inputRef})
						),
						_react2.default.createElement(
							'div',
							{ref: this.sizerRef, style: sizerStyle},
							sizerValue
						),
						this.props.placeholder
							? _react2.default.createElement(
									'div',
									{
										ref: this.placeHolderSizerRef,
										style: sizerStyle
									},
									this.props.placeholder
							  )
							: null
					)
				}
			}
		])

		return AutosizeInput
	})(React__default.Component)

	AutosizeInput.propTypes = {
		className: _propTypes2.default.string, // className for the outer element
		defaultValue: _propTypes2.default.any, // default field value
		extraWidth: _propTypes2.default.oneOfType([
			// additional width for input element
			_propTypes2.default.number,
			_propTypes2.default.string
		]),
		id: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots
		injectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true
		inputClassName: _propTypes2.default.string, // className for the input element
		inputRef: _propTypes2.default.func, // ref callback for the input element
		inputStyle: _propTypes2.default.object, // css styles for the input element
		minWidth: _propTypes2.default.oneOfType([
			// minimum width for input element
			_propTypes2.default.number,
			_propTypes2.default.string
		]),
		onAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}
		onChange: _propTypes2.default.func, // onChange handler: function(event) {}
		placeholder: _propTypes2.default.string, // placeholder text
		placeholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder
		style: _propTypes2.default.object, // css styles for the outer element
		value: _propTypes2.default.any // field value
	}
	AutosizeInput.defaultProps = {
		minWidth: 1,
		injectStyles: true
	}

	exports.default = AutosizeInput
})

var AutosizeInput = unwrapExports(AutosizeInput_1)

var interopRequireDefault = createCommonjsModule(function(module) {
	function _interopRequireDefault(obj) {
		return obj && obj.__esModule
			? obj
			: {
					default: obj
			  }
	}

	module.exports = _interopRequireDefault
})

unwrapExports(interopRequireDefault)

var hasClass_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = hasClass

	function hasClass(element, className) {
		if (element.classList)
			return !!className && element.classList.contains(className)
		else
			return (
				(
					' ' +
					(element.className.baseVal || element.className) +
					' '
				).indexOf(' ' + className + ' ') !== -1
			)
	}

	module.exports = exports['default']
})

unwrapExports(hasClass_1)

var addClass_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = addClass

	var _hasClass = interopRequireDefault(hasClass_1)

	function addClass(element, className) {
		if (element.classList) element.classList.add(className)
		else if (!(0, _hasClass.default)(element, className))
			if (typeof element.className === 'string')
				element.className = element.className + ' ' + className
			else
				element.setAttribute(
					'class',
					((element.className && element.className.baseVal) || '') +
						' ' +
						className
				)
	}

	module.exports = exports['default']
})

unwrapExports(addClass_1)

function replaceClassName(origClass, classToRemove) {
	return origClass
		.replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1')
		.replace(/\s+/g, ' ')
		.replace(/^\s*|\s*$/g, '')
}

var removeClass$1 = function removeClass(element, className) {
	if (element.classList) element.classList.remove(className)
	else if (typeof element.className === 'string')
		element.className = replaceClassName(element.className, className)
	else
		element.setAttribute(
			'class',
			replaceClassName(
				(element.className && element.className.baseVal) || '',
				className
			)
		)
}

var PropTypes = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.classNamesShape = exports.timeoutsShape = void 0

	var _propTypes = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var timeoutsShape =
		process.env.NODE_ENV !== 'production'
			? _propTypes.default.oneOfType([
					_propTypes.default.number,
					_propTypes.default.shape({
						enter: _propTypes.default.number,
						exit: _propTypes.default.number,
						appear: _propTypes.default.number
					}).isRequired
			  ])
			: null
	exports.timeoutsShape = timeoutsShape
	var classNamesShape =
		process.env.NODE_ENV !== 'production'
			? _propTypes.default.oneOfType([
					_propTypes.default.string,
					_propTypes.default.shape({
						enter: _propTypes.default.string,
						exit: _propTypes.default.string,
						active: _propTypes.default.string
					}),
					_propTypes.default.shape({
						enter: _propTypes.default.string,
						enterDone: _propTypes.default.string,
						enterActive: _propTypes.default.string,
						exit: _propTypes.default.string,
						exitDone: _propTypes.default.string,
						exitActive: _propTypes.default.string
					})
			  ])
			: null
	exports.classNamesShape = classNamesShape
})

unwrapExports(PropTypes)
var PropTypes_1 = PropTypes.classNamesShape
var PropTypes_2 = PropTypes.timeoutsShape

var Transition_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0

	var PropTypes$1 = _interopRequireWildcard(propTypes)

	var _react = _interopRequireDefault(React__default)

	var _reactDom = _interopRequireDefault(ReactDOM)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _inheritsLoose(subClass, superClass) {
		subClass.prototype = Object.create(superClass.prototype)
		subClass.prototype.constructor = subClass
		subClass.__proto__ = superClass
	}

	var UNMOUNTED = 'unmounted'
	exports.UNMOUNTED = UNMOUNTED
	var EXITED = 'exited'
	exports.EXITED = EXITED
	var ENTERING = 'entering'
	exports.ENTERING = ENTERING
	var ENTERED = 'entered'
	exports.ENTERED = ENTERED
	var EXITING = 'exiting'
	/**
	 * The Transition component lets you describe a transition from one component
	 * state to another _over time_ with a simple declarative API. Most commonly
	 * it's used to animate the mounting and unmounting of a component, but can also
	 * be used to describe in-place transition states as well.
	 *
	 * ---
	 *
	 * **Note**: `Transition` is a platform-agnostic base component. If you're using
	 * transitions in CSS, you'll probably want to use
	 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
	 * instead. It inherits all the features of `Transition`, but contains
	 * additional features necessary to play nice with CSS transitions (hence the
	 * name of the component).
	 *
	 * ---
	 *
	 * By default the `Transition` component does not alter the behavior of the
	 * component it renders, it only tracks "enter" and "exit" states for the
	 * components. It's up to you to give meaning and effect to those states. For
	 * example we can add styles to a component when it enters or exits:
	 *
	 * ```jsx
	 * import { Transition } from 'react-transition-group';
	 *
	 * const duration = 300;
	 *
	 * const defaultStyle = {
	 *   transition: `opacity ${duration}ms ease-in-out`,
	 *   opacity: 0,
	 * }
	 *
	 * const transitionStyles = {
	 *   entering: { opacity: 0 },
	 *   entered:  { opacity: 1 },
	 * };
	 *
	 * const Fade = ({ in: inProp }) => (
	 *   <Transition in={inProp} timeout={duration}>
	 *     {state => (
	 *       <div style={{
	 *         ...defaultStyle,
	 *         ...transitionStyles[state]
	 *       }}>
	 *         I'm a fade Transition!
	 *       </div>
	 *     )}
	 *   </Transition>
	 * );
	 * ```
	 *
	 * There are 4 main states a Transition can be in:
	 *  - `'entering'`
	 *  - `'entered'`
	 *  - `'exiting'`
	 *  - `'exited'`
	 *
	 * Transition state is toggled via the `in` prop. When `true` the component
	 * begins the "Enter" stage. During this stage, the component will shift from
	 * its current transition state, to `'entering'` for the duration of the
	 * transition and then to the `'entered'` stage once it's complete. Let's take
	 * the following example (we'll use the
	 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
	 *
	 * ```jsx
	 * function App() {
	 *   const [inProp, setInProp] = useState(false);
	 *   return (
	 *     <div>
	 *       <Transition in={inProp} timeout={500}>
	 *         {state => (
	 *           // ...
	 *         )}
	 *       </Transition>
	 *       <button onClick={() => setInProp(true)}>
	 *         Click to Enter
	 *       </button>
	 *     </div>
	 *   );
	 * }
	 * ```
	 *
	 * When the button is clicked the component will shift to the `'entering'` state
	 * and stay there for 500ms (the value of `timeout`) before it finally switches
	 * to `'entered'`.
	 *
	 * When `in` is `false` the same thing happens except the state moves from
	 * `'exiting'` to `'exited'`.
	 */

	exports.EXITING = EXITING

	var Transition =
		/*#__PURE__*/
		(function(_React$Component) {
			_inheritsLoose(Transition, _React$Component)

			function Transition(props, context) {
				var _this

				_this = _React$Component.call(this, props, context) || this
				var parentGroup = context.transitionGroup // In the context of a TransitionGroup all enters are really appears

				var appear =
					parentGroup && !parentGroup.isMounting
						? props.enter
						: props.appear
				var initialStatus
				_this.appearStatus = null

				if (props.in) {
					if (appear) {
						initialStatus = EXITED
						_this.appearStatus = ENTERING
					} else {
						initialStatus = ENTERED
					}
				} else {
					if (props.unmountOnExit || props.mountOnEnter) {
						initialStatus = UNMOUNTED
					} else {
						initialStatus = EXITED
					}
				}

				_this.state = {
					status: initialStatus
				}
				_this.nextCallback = null
				return _this
			}

			var _proto = Transition.prototype

			_proto.getChildContext = function getChildContext() {
				return {
					transitionGroup: null // allows for nested Transitions
				}
			}

			Transition.getDerivedStateFromProps = function getDerivedStateFromProps(
				_ref,
				prevState
			) {
				var nextIn = _ref.in

				if (nextIn && prevState.status === UNMOUNTED) {
					return {
						status: EXITED
					}
				}

				return null
			} // getSnapshotBeforeUpdate(prevProps) {
			//   let nextStatus = null
			//   if (prevProps !== this.props) {
			//     const { status } = this.state
			//     if (this.props.in) {
			//       if (status !== ENTERING && status !== ENTERED) {
			//         nextStatus = ENTERING
			//       }
			//     } else {
			//       if (status === ENTERING || status === ENTERED) {
			//         nextStatus = EXITING
			//       }
			//     }
			//   }
			//   return { nextStatus }
			// }

			_proto.componentDidMount = function componentDidMount() {
				this.updateStatus(true, this.appearStatus)
			}

			_proto.componentDidUpdate = function componentDidUpdate(prevProps) {
				var nextStatus = null

				if (prevProps !== this.props) {
					var status = this.state.status

					if (this.props.in) {
						if (status !== ENTERING && status !== ENTERED) {
							nextStatus = ENTERING
						}
					} else {
						if (status === ENTERING || status === ENTERED) {
							nextStatus = EXITING
						}
					}
				}

				this.updateStatus(false, nextStatus)
			}

			_proto.componentWillUnmount = function componentWillUnmount() {
				this.cancelNextCallback()
			}

			_proto.getTimeouts = function getTimeouts() {
				var timeout = this.props.timeout
				var exit, enter, appear
				exit = enter = appear = timeout

				if (timeout != null && typeof timeout !== 'number') {
					exit = timeout.exit
					enter = timeout.enter // TODO: remove fallback for next major

					appear =
						timeout.appear !== undefined ? timeout.appear : enter
				}

				return {
					exit: exit,
					enter: enter,
					appear: appear
				}
			}

			_proto.updateStatus = function updateStatus(mounting, nextStatus) {
				if (mounting === void 0) {
					mounting = false
				}

				if (nextStatus !== null) {
					// nextStatus will always be ENTERING or EXITING.
					this.cancelNextCallback()

					var node = _reactDom.default.findDOMNode(this)

					if (nextStatus === ENTERING) {
						this.performEnter(node, mounting)
					} else {
						this.performExit(node)
					}
				} else if (
					this.props.unmountOnExit &&
					this.state.status === EXITED
				) {
					this.setState({
						status: UNMOUNTED
					})
				}
			}

			_proto.performEnter = function performEnter(node, mounting) {
				var _this2 = this

				var enter = this.props.enter
				var appearing = this.context.transitionGroup
					? this.context.transitionGroup.isMounting
					: mounting
				var timeouts = this.getTimeouts()
				var enterTimeout = appearing ? timeouts.appear : timeouts.enter // no enter animation skip right to ENTERED
				// if we are mounting and running this it means appear _must_ be set

				if (!mounting && !enter) {
					this.safeSetState(
						{
							status: ENTERED
						},
						function() {
							_this2.props.onEntered(node)
						}
					)
					return
				}

				this.props.onEnter(node, appearing)
				this.safeSetState(
					{
						status: ENTERING
					},
					function() {
						_this2.props.onEntering(node, appearing)

						_this2.onTransitionEnd(node, enterTimeout, function() {
							_this2.safeSetState(
								{
									status: ENTERED
								},
								function() {
									_this2.props.onEntered(node, appearing)
								}
							)
						})
					}
				)
			}

			_proto.performExit = function performExit(node) {
				var _this3 = this

				var exit = this.props.exit
				var timeouts = this.getTimeouts() // no exit animation skip right to EXITED

				if (!exit) {
					this.safeSetState(
						{
							status: EXITED
						},
						function() {
							_this3.props.onExited(node)
						}
					)
					return
				}

				this.props.onExit(node)
				this.safeSetState(
					{
						status: EXITING
					},
					function() {
						_this3.props.onExiting(node)

						_this3.onTransitionEnd(node, timeouts.exit, function() {
							_this3.safeSetState(
								{
									status: EXITED
								},
								function() {
									_this3.props.onExited(node)
								}
							)
						})
					}
				)
			}

			_proto.cancelNextCallback = function cancelNextCallback() {
				if (this.nextCallback !== null) {
					this.nextCallback.cancel()
					this.nextCallback = null
				}
			}

			_proto.safeSetState = function safeSetState(nextState, callback) {
				// This shouldn't be necessary, but there are weird race conditions with
				// setState callbacks and unmounting in testing, so always make sure that
				// we can cancel any pending setState callbacks after we unmount.
				callback = this.setNextCallback(callback)
				this.setState(nextState, callback)
			}

			_proto.setNextCallback = function setNextCallback(callback) {
				var _this4 = this

				var active = true

				this.nextCallback = function(event) {
					if (active) {
						active = false
						_this4.nextCallback = null
						callback(event)
					}
				}

				this.nextCallback.cancel = function() {
					active = false
				}

				return this.nextCallback
			}

			_proto.onTransitionEnd = function onTransitionEnd(
				node,
				timeout,
				handler
			) {
				this.setNextCallback(handler)
				var doesNotHaveTimeoutOrListener =
					timeout == null && !this.props.addEndListener

				if (!node || doesNotHaveTimeoutOrListener) {
					setTimeout(this.nextCallback, 0)
					return
				}

				if (this.props.addEndListener) {
					this.props.addEndListener(node, this.nextCallback)
				}

				if (timeout != null) {
					setTimeout(this.nextCallback, timeout)
				}
			}

			_proto.render = function render() {
				var status = this.state.status

				if (status === UNMOUNTED) {
					return null
				}

				var _this$props = this.props,
					children = _this$props.children,
					childProps = _objectWithoutPropertiesLoose(_this$props, [
						'children'
					]) // filter props for Transtition

				delete childProps.in
				delete childProps.mountOnEnter
				delete childProps.unmountOnExit
				delete childProps.appear
				delete childProps.enter
				delete childProps.exit
				delete childProps.timeout
				delete childProps.addEndListener
				delete childProps.onEnter
				delete childProps.onEntering
				delete childProps.onEntered
				delete childProps.onExit
				delete childProps.onExiting
				delete childProps.onExited

				if (typeof children === 'function') {
					return children(status, childProps)
				}

				var child = _react.default.Children.only(children)

				return _react.default.cloneElement(child, childProps)
			}

			return Transition
		})(_react.default.Component)

	Transition.contextTypes = {
		transitionGroup: PropTypes$1.object
	}
	Transition.childContextTypes = {
		transitionGroup: function transitionGroup() {}
	}
	Transition.propTypes =
		process.env.NODE_ENV !== 'production'
			? {
					/**
					 * A `function` child can be used instead of a React element. This function is
					 * called with the current transition status (`'entering'`, `'entered'`,
					 * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
					 * specific props to a component.
					 *
					 * ```jsx
					 * <Transition in={this.state.in} timeout={150}>
					 *   {state => (
					 *     <MyComponent className={`fade fade-${state}`} />
					 *   )}
					 * </Transition>
					 * ```
					 */
					children: PropTypes$1.oneOfType([
						PropTypes$1.func.isRequired,
						PropTypes$1.element.isRequired
					]).isRequired,

					/**
					 * Show the component; triggers the enter or exit states
					 */
					in: PropTypes$1.bool,

					/**
					 * By default the child component is mounted immediately along with
					 * the parent `Transition` component. If you want to "lazy mount" the component on the
					 * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
					 * mounted, even on "exited", unless you also specify `unmountOnExit`.
					 */
					mountOnEnter: PropTypes$1.bool,

					/**
					 * By default the child component stays mounted after it reaches the `'exited'` state.
					 * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
					 */
					unmountOnExit: PropTypes$1.bool,

					/**
					 * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
					 * If you want to transition on the first mount set `appear` to `true`, and the
					 * component will transition in as soon as the `<Transition>` mounts.
					 *
					 * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
					 */
					appear: PropTypes$1.bool,

					/**
					 * Enable or disable enter transitions.
					 */
					enter: PropTypes$1.bool,

					/**
					 * Enable or disable exit transitions.
					 */
					exit: PropTypes$1.bool,

					/**
					 * The duration of the transition, in milliseconds.
					 * Required unless `addEndListener` is provided.
					 *
					 * You may specify a single timeout for all transitions:
					 *
					 * ```jsx
					 * timeout={500}
					 * ```
					 *
					 * or individually:
					 *
					 * ```jsx
					 * timeout={{
					 *  appear: 500,
					 *  enter: 300,
					 *  exit: 500,
					 * }}
					 * ```
					 *
					 * - `appear` defaults to the value of `enter`
					 * - `enter` defaults to `0`
					 * - `exit` defaults to `0`
					 *
					 * @type {number | { enter?: number, exit?: number, appear?: number }}
					 */
					timeout: function timeout(props) {
						var pt = PropTypes.timeoutsShape
						if (!props.addEndListener) pt = pt.isRequired

						for (
							var _len = arguments.length,
								args = new Array(_len > 1 ? _len - 1 : 0),
								_key = 1;
							_key < _len;
							_key++
						) {
							args[_key - 1] = arguments[_key]
						}

						return pt.apply(void 0, [props].concat(args))
					},

					/**
					 * Add a custom transition end trigger. Called with the transitioning
					 * DOM node and a `done` callback. Allows for more fine grained transition end
					 * logic. **Note:** Timeouts are still used as a fallback if provided.
					 *
					 * ```jsx
					 * addEndListener={(node, done) => {
					 *   // use the css transitionend event to mark the finish of a transition
					 *   node.addEventListener('transitionend', done, false);
					 * }}
					 * ```
					 */
					addEndListener: PropTypes$1.func,

					/**
					 * Callback fired before the "entering" status is applied. An extra parameter
					 * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool) -> void
					 */
					onEnter: PropTypes$1.func,

					/**
					 * Callback fired after the "entering" status is applied. An extra parameter
					 * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool)
					 */
					onEntering: PropTypes$1.func,

					/**
					 * Callback fired after the "entered" status is applied. An extra parameter
					 * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool) -> void
					 */
					onEntered: PropTypes$1.func,

					/**
					 * Callback fired before the "exiting" status is applied.
					 *
					 * @type Function(node: HtmlElement) -> void
					 */
					onExit: PropTypes$1.func,

					/**
					 * Callback fired after the "exiting" status is applied.
					 *
					 * @type Function(node: HtmlElement) -> void
					 */
					onExiting: PropTypes$1.func,

					/**
					 * Callback fired after the "exited" status is applied.
					 *
					 * @type Function(node: HtmlElement) -> void
					 */
					onExited: PropTypes$1.func // Name the function so it is clearer in the documentation
			  }
			: {}

	function noop() {}

	Transition.defaultProps = {
		in: false,
		mountOnEnter: false,
		unmountOnExit: false,
		appear: false,
		enter: true,
		exit: true,
		onEnter: noop,
		onEntering: noop,
		onEntered: noop,
		onExit: noop,
		onExiting: noop,
		onExited: noop
	}
	Transition.UNMOUNTED = 0
	Transition.EXITED = 1
	Transition.ENTERING = 2
	Transition.ENTERED = 3
	Transition.EXITING = 4

	var _default = (0, reactLifecyclesCompat_es.polyfill)(Transition)

	exports.default = _default
})

unwrapExports(Transition_1)
var Transition_2 = Transition_1.EXITING
var Transition_3 = Transition_1.ENTERED
var Transition_4 = Transition_1.ENTERING
var Transition_5 = Transition_1.EXITED
var Transition_6 = Transition_1.UNMOUNTED

var CSSTransition_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = void 0

	var PropTypes$1 = _interopRequireWildcard(propTypes)

	var _addClass = _interopRequireDefault(addClass_1)

	var _removeClass = _interopRequireDefault(removeClass$1)

	var _react = _interopRequireDefault(React__default)

	var _Transition = _interopRequireDefault(Transition_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _inheritsLoose(subClass, superClass) {
		subClass.prototype = Object.create(superClass.prototype)
		subClass.prototype.constructor = subClass
		subClass.__proto__ = superClass
	}

	var addClass = function addClass(node, classes) {
		return (
			node &&
			classes &&
			classes.split(' ').forEach(function(c) {
				return (0, _addClass.default)(node, c)
			})
		)
	}

	var removeClass = function removeClass(node, classes) {
		return (
			node &&
			classes &&
			classes.split(' ').forEach(function(c) {
				return (0, _removeClass.default)(node, c)
			})
		)
	}
	/**
	 * A transition component inspired by the excellent
	 * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
	 * using CSS transitions or animations. It's built upon the
	 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
	 * component, so it inherits all of its props.
	 *
	 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
	 * and `exit` states of the transition. The first class is applied and then a
	 * second `*-active` class in order to activate the CSSS transition. After the
	 * transition, matching `*-done` class names are applied to persist the
	 * transition state.
	 *
	 * ```jsx
	 * function App() {
	 *   const [inProp, setInProp] = useState(false);
	 *   return (
	 *     <div>
	 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
	 *         <div>
	 *           {"I'll receive my-node-* classes"}
	 *         </div>
	 *       </CSSTransition>
	 *       <button type="button" onClick={() => setInProp(true)}>
	 *         Click to Enter
	 *       </button>
	 *     </div>
	 *   );
	 * }
	 * ```
	 *
	 * When the `in` prop is set to `true`, the child component will first receive
	 * the class `example-enter`, then the `example-enter-active` will be added in
	 * the next tick. `CSSTransition` [forces a
	 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
	 * between before adding the `example-enter-active`. This is an important trick
	 * because it allows us to transition between `example-enter` and
	 * `example-enter-active` even though they were added immediately one after
	 * another. Most notably, this is what makes it possible for us to animate
	 * _appearance_.
	 *
	 * ```css
	 * .my-node-enter {
	 *   opacity: 0;
	 * }
	 * .my-node-enter-active {
	 *   opacity: 1;
	 *   transition: opacity 200ms;
	 * }
	 * .my-node-exit {
	 *   opacity: 1;
	 * }
	 * .my-node-exit-active {
	 *   opacity: 0;
	 *   transition: opacity: 200ms;
	 * }
	 * ```
	 *
	 * `*-active` classes represent which styles you want to animate **to**.
	 */

	var CSSTransition =
		/*#__PURE__*/
		(function(_React$Component) {
			_inheritsLoose(CSSTransition, _React$Component)

			function CSSTransition() {
				var _this

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key]
				}

				_this =
					_React$Component.call.apply(
						_React$Component,
						[this].concat(args)
					) || this

				_this.onEnter = function(node, appearing) {
					var _this$getClassNames = _this.getClassNames(
							appearing ? 'appear' : 'enter'
						),
						className = _this$getClassNames.className

					_this.removeClasses(node, 'exit')

					addClass(node, className)

					if (_this.props.onEnter) {
						_this.props.onEnter(node, appearing)
					}
				}

				_this.onEntering = function(node, appearing) {
					var _this$getClassNames2 = _this.getClassNames(
							appearing ? 'appear' : 'enter'
						),
						activeClassName = _this$getClassNames2.activeClassName

					_this.reflowAndAddClass(node, activeClassName)

					if (_this.props.onEntering) {
						_this.props.onEntering(node, appearing)
					}
				}

				_this.onEntered = function(node, appearing) {
					var appearClassName = _this.getClassNames('appear')
						.doneClassName

					var enterClassName = _this.getClassNames('enter')
						.doneClassName

					var doneClassName = appearing
						? appearClassName + ' ' + enterClassName
						: enterClassName

					_this.removeClasses(node, appearing ? 'appear' : 'enter')

					addClass(node, doneClassName)

					if (_this.props.onEntered) {
						_this.props.onEntered(node, appearing)
					}
				}

				_this.onExit = function(node) {
					var _this$getClassNames3 = _this.getClassNames('exit'),
						className = _this$getClassNames3.className

					_this.removeClasses(node, 'appear')

					_this.removeClasses(node, 'enter')

					addClass(node, className)

					if (_this.props.onExit) {
						_this.props.onExit(node)
					}
				}

				_this.onExiting = function(node) {
					var _this$getClassNames4 = _this.getClassNames('exit'),
						activeClassName = _this$getClassNames4.activeClassName

					_this.reflowAndAddClass(node, activeClassName)

					if (_this.props.onExiting) {
						_this.props.onExiting(node)
					}
				}

				_this.onExited = function(node) {
					var _this$getClassNames5 = _this.getClassNames('exit'),
						doneClassName = _this$getClassNames5.doneClassName

					_this.removeClasses(node, 'exit')

					addClass(node, doneClassName)

					if (_this.props.onExited) {
						_this.props.onExited(node)
					}
				}

				_this.getClassNames = function(type) {
					var classNames = _this.props.classNames
					var isStringClassNames = typeof classNames === 'string'
					var prefix =
						isStringClassNames && classNames ? classNames + '-' : ''
					var className = isStringClassNames
						? prefix + type
						: classNames[type]
					var activeClassName = isStringClassNames
						? className + '-active'
						: classNames[type + 'Active']
					var doneClassName = isStringClassNames
						? className + '-done'
						: classNames[type + 'Done']
					return {
						className: className,
						activeClassName: activeClassName,
						doneClassName: doneClassName
					}
				}

				return _this
			}

			var _proto = CSSTransition.prototype

			_proto.removeClasses = function removeClasses(node, type) {
				var _this$getClassNames6 = this.getClassNames(type),
					className = _this$getClassNames6.className,
					activeClassName = _this$getClassNames6.activeClassName,
					doneClassName = _this$getClassNames6.doneClassName

				className && removeClass(node, className)
				activeClassName && removeClass(node, activeClassName)
				doneClassName && removeClass(node, doneClassName)
			}

			_proto.reflowAndAddClass = function reflowAndAddClass(
				node,
				className
			) {
				// This is for to force a repaint,
				// which is necessary in order to transition styles when adding a class name.
				if (className) {
					/* eslint-disable no-unused-expressions */
					node && node.scrollTop
					/* eslint-enable no-unused-expressions */

					addClass(node, className)
				}
			}

			_proto.render = function render() {
				var props = _extends({}, this.props)

				delete props.classNames
				return _react.default.createElement(
					_Transition.default,
					_extends({}, props, {
						onEnter: this.onEnter,
						onEntered: this.onEntered,
						onEntering: this.onEntering,
						onExit: this.onExit,
						onExiting: this.onExiting,
						onExited: this.onExited
					})
				)
			}

			return CSSTransition
		})(_react.default.Component)

	CSSTransition.defaultProps = {
		classNames: ''
	}
	CSSTransition.propTypes =
		process.env.NODE_ENV !== 'production'
			? _extends({}, _Transition.default.propTypes, {
					/**
					 * The animation classNames applied to the component as it enters, exits or
					 * has finished the transition. A single name can be provided and it will be
					 * suffixed for each stage: e.g.
					 *
					 * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
					 * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
					 * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
					 *
					 * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
					 * This allows you to define different behavior for when appearing is done and
					 * when regular entering is done, using selectors like
					 * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
					 * epic entrance animation when element first appears in the DOM using
					 * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
					 * simply use `fade-enter-done` for defining both cases.
					 *
					 * Each individual classNames can also be specified independently like:
					 *
					 * ```js
					 * classNames={{
					 *  appear: 'my-appear',
					 *  appearActive: 'my-active-appear',
					 *  appearDone: 'my-done-appear',
					 *  enter: 'my-enter',
					 *  enterActive: 'my-active-enter',
					 *  enterDone: 'my-done-enter',
					 *  exit: 'my-exit',
					 *  exitActive: 'my-active-exit',
					 *  exitDone: 'my-done-exit',
					 * }}
					 * ```
					 *
					 * If you want to set these classes using CSS Modules:
					 *
					 * ```js
					 * import styles from './styles.css';
					 * ```
					 *
					 * you might want to use camelCase in your CSS file, that way could simply
					 * spread them instead of listing them one by one:
					 *
					 * ```js
					 * classNames={{ ...styles }}
					 * ```
					 *
					 * @type {string | {
					 *  appear?: string,
					 *  appearActive?: string,
					 *  appearDone?: string,
					 *  enter?: string,
					 *  enterActive?: string,
					 *  enterDone?: string,
					 *  exit?: string,
					 *  exitActive?: string,
					 *  exitDone?: string,
					 * }}
					 */
					classNames: PropTypes.classNamesShape,

					/**
					 * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
					 * applied.
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool)
					 */
					onEnter: PropTypes$1.func,

					/**
					 * A `<Transition>` callback fired immediately after the 'enter-active' or
					 * 'appear-active' class is applied.
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool)
					 */
					onEntering: PropTypes$1.func,

					/**
					 * A `<Transition>` callback fired immediately after the 'enter' or
					 * 'appear' classes are **removed** and the `done` class is added to the DOM node.
					 *
					 * @type Function(node: HtmlElement, isAppearing: bool)
					 */
					onEntered: PropTypes$1.func,

					/**
					 * A `<Transition>` callback fired immediately after the 'exit' class is
					 * applied.
					 *
					 * @type Function(node: HtmlElement)
					 */
					onExit: PropTypes$1.func,

					/**
					 * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
					 *
					 * @type Function(node: HtmlElement)
					 */
					onExiting: PropTypes$1.func,

					/**
					 * A `<Transition>` callback fired immediately after the 'exit' classes
					 * are **removed** and the `exit-done` class is added to the DOM node.
					 *
					 * @type Function(node: HtmlElement)
					 */
					onExited: PropTypes$1.func
			  })
			: {}
	var _default = CSSTransition
	exports.default = _default
	module.exports = exports['default']
})

unwrapExports(CSSTransition_1)

var ChildMapping = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.getChildMapping = getChildMapping
	exports.mergeChildMappings = mergeChildMappings
	exports.getInitialChildMapping = getInitialChildMapping
	exports.getNextChildMapping = getNextChildMapping

	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children, mapFn) {
		var mapper = function mapper(child) {
			return mapFn && (0, React__default.isValidElement)(child)
				? mapFn(child)
				: child
		}

		var result = Object.create(null)
		if (children)
			React__default.Children.map(children, function(c) {
				return c
			}).forEach(function(child) {
				// run the map function here instead so that the key is the computed one
				result[child.key] = mapper(child)
			})
		return result
	}
	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */

	function mergeChildMappings(prev, next) {
		prev = prev || {}
		next = next || {}

		function getValueForKey(key) {
			return key in next ? next[key] : prev[key]
		} // For each key of `next`, the list of keys to insert before that key in
		// the combined list

		var nextKeysPending = Object.create(null)
		var pendingKeys = []

		for (var prevKey in prev) {
			if (prevKey in next) {
				if (pendingKeys.length) {
					nextKeysPending[prevKey] = pendingKeys
					pendingKeys = []
				}
			} else {
				pendingKeys.push(prevKey)
			}
		}

		var i
		var childMapping = {}

		for (var nextKey in next) {
			if (nextKeysPending[nextKey]) {
				for (i = 0; i < nextKeysPending[nextKey].length; i++) {
					var pendingNextKey = nextKeysPending[nextKey][i]
					childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
						pendingNextKey
					)
				}
			}

			childMapping[nextKey] = getValueForKey(nextKey)
		} // Finally, add the keys which didn't appear before any key in `next`

		for (i = 0; i < pendingKeys.length; i++) {
			childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i])
		}

		return childMapping
	}

	function getProp(child, prop, props) {
		return props[prop] != null ? props[prop] : child.props[prop]
	}

	function getInitialChildMapping(props, onExited) {
		return getChildMapping(props.children, function(child) {
			return (0, React__default.cloneElement)(child, {
				onExited: onExited.bind(null, child),
				in: true,
				appear: getProp(child, 'appear', props),
				enter: getProp(child, 'enter', props),
				exit: getProp(child, 'exit', props)
			})
		})
	}

	function getNextChildMapping(nextProps, prevChildMapping, onExited) {
		var nextChildMapping = getChildMapping(nextProps.children)
		var children = mergeChildMappings(prevChildMapping, nextChildMapping)
		Object.keys(children).forEach(function(key) {
			var child = children[key]
			if (!(0, React__default.isValidElement)(child)) return
			var hasPrev = key in prevChildMapping
			var hasNext = key in nextChildMapping
			var prevChild = prevChildMapping[key]
			var isLeaving =
				(0, React__default.isValidElement)(prevChild) &&
				!prevChild.props.in // item is new (entering)

			if (hasNext && (!hasPrev || isLeaving)) {
				// console.log('entering', key)
				children[key] = (0, React__default.cloneElement)(child, {
					onExited: onExited.bind(null, child),
					in: true,
					exit: getProp(child, 'exit', nextProps),
					enter: getProp(child, 'enter', nextProps)
				})
			} else if (!hasNext && hasPrev && !isLeaving) {
				// item is old (exiting)
				// console.log('leaving', key)
				children[key] = (0, React__default.cloneElement)(child, {
					in: false
				})
			} else if (
				hasNext &&
				hasPrev &&
				(0, React__default.isValidElement)(prevChild)
			) {
				// item hasn't changed transition states
				// copy over the last transition props;
				// console.log('unchanged', key)
				children[key] = (0, React__default.cloneElement)(child, {
					onExited: onExited.bind(null, child),
					in: prevChild.props.in,
					exit: getProp(child, 'exit', nextProps),
					enter: getProp(child, 'enter', nextProps)
				})
			}
		})
		return children
	}
})

unwrapExports(ChildMapping)
var ChildMapping_1 = ChildMapping.getChildMapping
var ChildMapping_2 = ChildMapping.mergeChildMappings
var ChildMapping_3 = ChildMapping.getInitialChildMapping
var ChildMapping_4 = ChildMapping.getNextChildMapping

var TransitionGroup_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = void 0

	var _propTypes = _interopRequireDefault(propTypes)

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _inheritsLoose(subClass, superClass) {
		subClass.prototype = Object.create(superClass.prototype)
		subClass.prototype.constructor = subClass
		subClass.__proto__ = superClass
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	var values =
		Object.values ||
		function(obj) {
			return Object.keys(obj).map(function(k) {
				return obj[k]
			})
		}

	var defaultProps = {
		component: 'div',
		childFactory: function childFactory(child) {
			return child
		}
		/**
		 * The `<TransitionGroup>` component manages a set of transition components
		 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
		 * components, `<TransitionGroup>` is a state machine for managing the mounting
		 * and unmounting of components over time.
		 *
		 * Consider the example below. As items are removed or added to the TodoList the
		 * `in` prop is toggled automatically by the `<TransitionGroup>`.
		 *
		 * Note that `<TransitionGroup>`  does not define any animation behavior!
		 * Exactly _how_ a list item animates is up to the individual transition
		 * component. This means you can mix and match animations across different list
		 * items.
		 */
	}

	var TransitionGroup =
		/*#__PURE__*/
		(function(_React$Component) {
			_inheritsLoose(TransitionGroup, _React$Component)

			function TransitionGroup(props, context) {
				var _this

				_this = _React$Component.call(this, props, context) || this

				var handleExited = _this.handleExited.bind(
					_assertThisInitialized(_assertThisInitialized(_this))
				) // Initial children should all be entering, dependent on appear

				_this.state = {
					handleExited: handleExited,
					firstRender: true
				}
				return _this
			}

			var _proto = TransitionGroup.prototype

			_proto.getChildContext = function getChildContext() {
				return {
					transitionGroup: {
						isMounting: !this.appeared
					}
				}
			}

			_proto.componentDidMount = function componentDidMount() {
				this.appeared = true
				this.mounted = true
			}

			_proto.componentWillUnmount = function componentWillUnmount() {
				this.mounted = false
			}

			TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(
				nextProps,
				_ref
			) {
				var prevChildMapping = _ref.children,
					handleExited = _ref.handleExited,
					firstRender = _ref.firstRender
				return {
					children: firstRender
						? (0, ChildMapping.getInitialChildMapping)(
								nextProps,
								handleExited
						  )
						: (0, ChildMapping.getNextChildMapping)(
								nextProps,
								prevChildMapping,
								handleExited
						  ),
					firstRender: false
				}
			}

			_proto.handleExited = function handleExited(child, node) {
				var currentChildMapping = (0, ChildMapping.getChildMapping)(
					this.props.children
				)
				if (child.key in currentChildMapping) return

				if (child.props.onExited) {
					child.props.onExited(node)
				}

				if (this.mounted) {
					this.setState(function(state) {
						var children = _extends({}, state.children)

						delete children[child.key]
						return {
							children: children
						}
					})
				}
			}

			_proto.render = function render() {
				var _this$props = this.props,
					Component = _this$props.component,
					childFactory = _this$props.childFactory,
					props = _objectWithoutPropertiesLoose(_this$props, [
						'component',
						'childFactory'
					])

				var children = values(this.state.children).map(childFactory)
				delete props.appear
				delete props.enter
				delete props.exit

				if (Component === null) {
					return children
				}

				return _react.default.createElement(Component, props, children)
			}

			return TransitionGroup
		})(_react.default.Component)

	TransitionGroup.childContextTypes = {
		transitionGroup: _propTypes.default.object.isRequired
	}
	TransitionGroup.propTypes =
		process.env.NODE_ENV !== 'production'
			? {
					/**
					 * `<TransitionGroup>` renders a `<div>` by default. You can change this
					 * behavior by providing a `component` prop.
					 * If you use React v16+ and would like to avoid a wrapping `<div>` element
					 * you can pass in `component={null}`. This is useful if the wrapping div
					 * borks your css styles.
					 */
					component: _propTypes.default.any,

					/**
					 * A set of `<Transition>` components, that are toggled `in` and out as they
					 * leave. the `<TransitionGroup>` will inject specific transition props, so
					 * remember to spread them through if you are wrapping the `<Transition>` as
					 * with our `<Fade>` example.
					 *
					 * While this component is meant for multiple `Transition` or `CSSTransition`
					 * children, sometimes you may want to have a single transition child with
					 * content that you want to be transitioned out and in when you change it
					 * (e.g. routes, images etc.) In that case you can change the `key` prop of
					 * the transition child as you change its content, this will cause
					 * `TransitionGroup` to transition the child out and back in.
					 */
					children: _propTypes.default.node,

					/**
					 * A convenience prop that enables or disables appear animations
					 * for all children. Note that specifying this will override any defaults set
					 * on individual children Transitions.
					 */
					appear: _propTypes.default.bool,

					/**
					 * A convenience prop that enables or disables enter animations
					 * for all children. Note that specifying this will override any defaults set
					 * on individual children Transitions.
					 */
					enter: _propTypes.default.bool,

					/**
					 * A convenience prop that enables or disables exit animations
					 * for all children. Note that specifying this will override any defaults set
					 * on individual children Transitions.
					 */
					exit: _propTypes.default.bool,

					/**
					 * You may need to apply reactive updates to a child as it is exiting.
					 * This is generally done by using `cloneElement` however in the case of an exiting
					 * child the element has already been removed and not accessible to the consumer.
					 *
					 * If you do need to update a child as it leaves you can provide a `childFactory`
					 * to wrap every child, even the ones that are leaving.
					 *
					 * @type Function(child: ReactElement) -> ReactElement
					 */
					childFactory: _propTypes.default.func
			  }
			: {}
	TransitionGroup.defaultProps = defaultProps

	var _default = (0, reactLifecyclesCompat_es.polyfill)(TransitionGroup)

	exports.default = _default
	module.exports = exports['default']
})

unwrapExports(TransitionGroup_1)

var ReplaceTransition_1 = createCommonjsModule(function(module, exports) {
	exports.__esModule = true
	exports.default = void 0

	var _propTypes = _interopRequireDefault(propTypes)

	var _react = _interopRequireDefault(React__default)

	var _TransitionGroup = _interopRequireDefault(TransitionGroup_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _inheritsLoose(subClass, superClass) {
		subClass.prototype = Object.create(superClass.prototype)
		subClass.prototype.constructor = subClass
		subClass.__proto__ = superClass
	}

	/**
	 * The `<ReplaceTransition>` component is a specialized `Transition` component
	 * that animates between two children.
	 *
	 * ```jsx
	 * <ReplaceTransition in>
	 *   <Fade><div>I appear first</div></Fade>
	 *   <Fade><div>I replace the above</div></Fade>
	 * </ReplaceTransition>
	 * ```
	 */
	var ReplaceTransition =
		/*#__PURE__*/
		(function(_React$Component) {
			_inheritsLoose(ReplaceTransition, _React$Component)

			function ReplaceTransition() {
				var _this

				for (
					var _len = arguments.length,
						_args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					_args[_key] = arguments[_key]
				}

				_this =
					_React$Component.call.apply(
						_React$Component,
						[this].concat(_args)
					) || this

				_this.handleEnter = function() {
					for (
						var _len2 = arguments.length,
							args = new Array(_len2),
							_key2 = 0;
						_key2 < _len2;
						_key2++
					) {
						args[_key2] = arguments[_key2]
					}

					return _this.handleLifecycle('onEnter', 0, args)
				}

				_this.handleEntering = function() {
					for (
						var _len3 = arguments.length,
							args = new Array(_len3),
							_key3 = 0;
						_key3 < _len3;
						_key3++
					) {
						args[_key3] = arguments[_key3]
					}

					return _this.handleLifecycle('onEntering', 0, args)
				}

				_this.handleEntered = function() {
					for (
						var _len4 = arguments.length,
							args = new Array(_len4),
							_key4 = 0;
						_key4 < _len4;
						_key4++
					) {
						args[_key4] = arguments[_key4]
					}

					return _this.handleLifecycle('onEntered', 0, args)
				}

				_this.handleExit = function() {
					for (
						var _len5 = arguments.length,
							args = new Array(_len5),
							_key5 = 0;
						_key5 < _len5;
						_key5++
					) {
						args[_key5] = arguments[_key5]
					}

					return _this.handleLifecycle('onExit', 1, args)
				}

				_this.handleExiting = function() {
					for (
						var _len6 = arguments.length,
							args = new Array(_len6),
							_key6 = 0;
						_key6 < _len6;
						_key6++
					) {
						args[_key6] = arguments[_key6]
					}

					return _this.handleLifecycle('onExiting', 1, args)
				}

				_this.handleExited = function() {
					for (
						var _len7 = arguments.length,
							args = new Array(_len7),
							_key7 = 0;
						_key7 < _len7;
						_key7++
					) {
						args[_key7] = arguments[_key7]
					}

					return _this.handleLifecycle('onExited', 1, args)
				}

				return _this
			}

			var _proto = ReplaceTransition.prototype

			_proto.handleLifecycle = function handleLifecycle(
				handler,
				idx,
				originalArgs
			) {
				var _child$props

				var children = this.props.children

				var child = _react.default.Children.toArray(children)[idx]

				if (child.props[handler])
					(_child$props = child.props)[handler].apply(
						_child$props,
						originalArgs
					)
				if (this.props[handler])
					this.props[handler]((0, ReactDOM.findDOMNode)(this))
			}

			_proto.render = function render() {
				var _this$props = this.props,
					children = _this$props.children,
					inProp = _this$props.in,
					props = _objectWithoutPropertiesLoose(_this$props, [
						'children',
						'in'
					])

				var _React$Children$toArr = _react.default.Children.toArray(
						children
					),
					first = _React$Children$toArr[0],
					second = _React$Children$toArr[1]

				delete props.onEnter
				delete props.onEntering
				delete props.onEntered
				delete props.onExit
				delete props.onExiting
				delete props.onExited
				return _react.default.createElement(
					_TransitionGroup.default,
					props,
					inProp
						? _react.default.cloneElement(first, {
								key: 'first',
								onEnter: this.handleEnter,
								onEntering: this.handleEntering,
								onEntered: this.handleEntered
						  })
						: _react.default.cloneElement(second, {
								key: 'second',
								onEnter: this.handleExit,
								onEntering: this.handleExiting,
								onEntered: this.handleExited
						  })
				)
			}

			return ReplaceTransition
		})(_react.default.Component)

	ReplaceTransition.propTypes =
		process.env.NODE_ENV !== 'production'
			? {
					in: _propTypes.default.bool.isRequired,
					children: function children(props, propName) {
						if (
							_react.default.Children.count(props[propName]) !== 2
						)
							return new Error(
								'"' +
									propName +
									'" must be exactly two transition components.'
							)
						return null
					}
			  }
			: {}
	var _default = ReplaceTransition
	exports.default = _default
	module.exports = exports['default']
})

unwrapExports(ReplaceTransition_1)

var reactTransitionGroup = createCommonjsModule(function(module) {
	var _CSSTransition = _interopRequireDefault(CSSTransition_1)

	var _ReplaceTransition = _interopRequireDefault(ReplaceTransition_1)

	var _TransitionGroup = _interopRequireDefault(TransitionGroup_1)

	var _Transition = _interopRequireDefault(Transition_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	module.exports = {
		Transition: _Transition.default,
		TransitionGroup: _TransitionGroup.default,
		ReplaceTransition: _ReplaceTransition.default,
		CSSTransition: _CSSTransition.default
	}
})

unwrapExports(reactTransitionGroup)
var reactTransitionGroup_1 = reactTransitionGroup.Transition
var reactTransitionGroup_2 = reactTransitionGroup.TransitionGroup
var reactTransitionGroup_3 = reactTransitionGroup.ReplaceTransition
var reactTransitionGroup_4 = reactTransitionGroup.CSSTransition

function _typeof$3(obj) {
	if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
		_typeof$3 = function(obj) {
			return typeof obj
		}
	} else {
		_typeof$3 = function(obj) {
			return obj &&
				typeof Symbol === 'function' &&
				obj.constructor === Symbol &&
				obj !== Symbol.prototype
				? 'symbol'
				: typeof obj
		}
	}

	return _typeof$3(obj)
}

function _classCallCheck$2(instance, Constructor) {
	if (!(instance instanceof Constructor)) {
		throw new TypeError('Cannot call a class as a function')
	}
}

function _defineProperties$1(target, props) {
	for (var i = 0; i < props.length; i++) {
		var descriptor = props[i]
		descriptor.enumerable = descriptor.enumerable || false
		descriptor.configurable = true
		if ('value' in descriptor) descriptor.writable = true
		Object.defineProperty(target, descriptor.key, descriptor)
	}
}

function _createClass$2(Constructor, protoProps, staticProps) {
	if (protoProps) _defineProperties$1(Constructor.prototype, protoProps)
	if (staticProps) _defineProperties$1(Constructor, staticProps)
	return Constructor
}

function _defineProperty$3(obj, key, value) {
	if (key in obj) {
		Object.defineProperty(obj, key, {
			value: value,
			enumerable: true,
			configurable: true,
			writable: true
		})
	} else {
		obj[key] = value
	}

	return obj
}

function _extends$4() {
	_extends$4 =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]

				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}

			return target
		}

	return _extends$4.apply(this, arguments)
}

function _objectSpread$1(target) {
	for (var i = 1; i < arguments.length; i++) {
		var source = arguments[i] != null ? arguments[i] : {}
		var ownKeys = Object.keys(source)

		if (typeof Object.getOwnPropertySymbols === 'function') {
			ownKeys = ownKeys.concat(
				Object.getOwnPropertySymbols(source).filter(function(sym) {
					return Object.getOwnPropertyDescriptor(
						source,
						sym
					).enumerable
				})
			)
		}

		ownKeys.forEach(function(key) {
			_defineProperty$3(target, key, source[key])
		})
	}

	return target
}

function _inherits$2(subClass, superClass) {
	if (typeof superClass !== 'function' && superClass !== null) {
		throw new TypeError(
			'Super expression must either be null or a function'
		)
	}

	subClass.prototype = Object.create(superClass && superClass.prototype, {
		constructor: {
			value: subClass,
			writable: true,
			configurable: true
		}
	})
	if (superClass) _setPrototypeOf(subClass, superClass)
}

function _getPrototypeOf(o) {
	_getPrototypeOf = Object.setPrototypeOf
		? Object.getPrototypeOf
		: function _getPrototypeOf(o) {
				return o.__proto__ || Object.getPrototypeOf(o)
		  }
	return _getPrototypeOf(o)
}

function _setPrototypeOf(o, p) {
	_setPrototypeOf =
		Object.setPrototypeOf ||
		function _setPrototypeOf(o, p) {
			o.__proto__ = p
			return o
		}

	return _setPrototypeOf(o, p)
}

function _objectWithoutPropertiesLoose$1(source, excluded) {
	if (source == null) return {}
	var target = {}
	var sourceKeys = Object.keys(source)
	var key, i

	for (i = 0; i < sourceKeys.length; i++) {
		key = sourceKeys[i]
		if (excluded.indexOf(key) >= 0) continue
		target[key] = source[key]
	}

	return target
}

function _objectWithoutProperties$2(source, excluded) {
	if (source == null) return {}

	var target = _objectWithoutPropertiesLoose$1(source, excluded)

	var key, i

	if (Object.getOwnPropertySymbols) {
		var sourceSymbolKeys = Object.getOwnPropertySymbols(source)

		for (i = 0; i < sourceSymbolKeys.length; i++) {
			key = sourceSymbolKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			if (!Object.prototype.propertyIsEnumerable.call(source, key))
				continue
			target[key] = source[key]
		}
	}

	return target
}

function _assertThisInitialized$1(self) {
	if (self === void 0) {
		throw new ReferenceError(
			"this hasn't been initialised - super() hasn't been called"
		)
	}

	return self
}

function _possibleConstructorReturn$2(self, call) {
	if (call && (typeof call === 'object' || typeof call === 'function')) {
		return call
	}

	return _assertThisInitialized$1(self)
}

function _toConsumableArray$1(arr) {
	return (
		_arrayWithoutHoles$1(arr) ||
		_iterableToArray$1(arr) ||
		_nonIterableSpread$1()
	)
}

function _arrayWithoutHoles$1(arr) {
	if (Array.isArray(arr)) {
		for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++)
			arr2[i] = arr[i]

		return arr2
	}
}

function _iterableToArray$1(iter) {
	if (
		Symbol.iterator in Object(iter) ||
		Object.prototype.toString.call(iter) === '[object Arguments]'
	)
		return Array.from(iter)
}

function _nonIterableSpread$1() {
	throw new TypeError('Invalid attempt to spread non-iterable instance')
}

// ==============================
// NO OP
// ==============================
var noop$6 = function noop() {}
// Class Name Prefixer
// ==============================

/**
 String representation of component state for styling with class names.

 Expects an array of strings OR a string/object pair:
 - className(['comp', 'comp-arg', 'comp-arg-2'])
   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'
 - className('comp', { some: true, state: false })
   @returns 'react-select__comp react-select__comp--some'
*/

function applyPrefixToName(prefix, name) {
	if (!name) {
		return prefix
	} else if (name[0] === '-') {
		return prefix + name
	} else {
		return prefix + '__' + name
	}
}

function classNames$1(prefix, cssKey, state, className) {
	var arr = [cssKey, className]

	if (state && prefix) {
		for (var key in state) {
			if (state.hasOwnProperty(key) && state[key]) {
				arr.push(''.concat(applyPrefixToName(prefix, key)))
			}
		}
	}

	return arr
		.filter(function(i) {
			return i
		})
		.map(function(i) {
			return String(i).trim()
		})
		.join(' ')
} // ==============================
// Clean Value
// ==============================

var cleanValue = function cleanValue(value) {
	if (Array.isArray(value)) return value.filter(Boolean)
	if (_typeof$3(value) === 'object' && value !== null) return [value]
	return []
} // ==============================
// Handle Input Change
// ==============================

function handleInputChange(inputValue, actionMeta, onInputChange) {
	if (onInputChange) {
		var newValue = onInputChange(inputValue, actionMeta)
		if (typeof newValue === 'string') return newValue
	}

	return inputValue
} // ==============================
// Scroll Helpers
// ==============================

function isDocumentElement(el) {
	return [document.documentElement, document.body, window].indexOf(el) > -1
} // Normalized Scroll Top
// ------------------------------

function getScrollTop$2(el) {
	if (isDocumentElement(el)) {
		return window.pageYOffset
	}

	return el.scrollTop
}
function scrollTo(el, top) {
	// with a scroll distance, we perform scroll on the element
	if (isDocumentElement(el)) {
		window.scrollTo(0, top)
		return
	}

	el.scrollTop = top
} // Get Scroll Parent
// ------------------------------

function getScrollParent(element) {
	var style = getComputedStyle(element)
	var excludeStaticParent = style.position === 'absolute'
	var overflowRx = /(auto|scroll)/
	var docEl = document.documentElement // suck it, flow...

	if (style.position === 'fixed') return docEl

	for (var parent = element; (parent = parent.parentElement); ) {
		style = getComputedStyle(parent)

		if (excludeStaticParent && style.position === 'static') {
			continue
		}

		if (
			overflowRx.test(style.overflow + style.overflowY + style.overflowX)
		) {
			return parent
		}
	}

	return docEl
} // Animated Scroll To
// ------------------------------

/**
  @param t: time (elapsed)
  @param b: initial value
  @param c: amount of change
  @param d: duration
*/

function easeOutCubic(t, b, c, d) {
	return c * ((t = t / d - 1) * t * t + 1) + b
}

function animatedScrollTo(element, to) {
	var duration =
		arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200
	var callback =
		arguments.length > 3 && arguments[3] !== undefined
			? arguments[3]
			: noop$6
	var start = getScrollTop$2(element)
	var change = to - start
	var increment = 10
	var currentTime = 0

	function animateScroll() {
		currentTime += increment
		var val = easeOutCubic(currentTime, start, change, duration)
		scrollTo(element, val)

		if (currentTime < duration) {
			raf_1(animateScroll)
		} else {
			callback(element)
		}
	}

	animateScroll()
} // Scroll Into View
// ------------------------------

function scrollIntoView$1(menuEl, focusedEl) {
	var menuRect = menuEl.getBoundingClientRect()
	var focusedRect = focusedEl.getBoundingClientRect()
	var overScroll = focusedEl.offsetHeight / 3

	if (focusedRect.bottom + overScroll > menuRect.bottom) {
		scrollTo(
			menuEl,
			Math.min(
				focusedEl.offsetTop +
					focusedEl.clientHeight -
					menuEl.offsetHeight +
					overScroll,
				menuEl.scrollHeight
			)
		)
	} else if (focusedRect.top - overScroll < menuRect.top) {
		scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0))
	}
} // ==============================
// Get bounding client object
// ==============================
// cannot get keys using array notation with DOMRect

function getBoundingClientObj(element) {
	var rect = element.getBoundingClientRect()
	return {
		bottom: rect.bottom,
		height: rect.height,
		left: rect.left,
		right: rect.right,
		top: rect.top,
		width: rect.width
	}
}
// Touch Capability Detector
// ==============================

function isTouchCapable() {
	try {
		document.createEvent('TouchEvent')
		return true
	} catch (e) {
		return false
	}
} // ==============================
// Mobile Device Detector
// ==============================

function isMobileDevice() {
	try {
		return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
			navigator.userAgent
		)
	} catch (e) {
		return false
	}
}

function getMenuPlacement(_ref) {
	var maxHeight = _ref.maxHeight,
		menuEl = _ref.menuEl,
		minHeight = _ref.minHeight,
		placement = _ref.placement,
		shouldScroll = _ref.shouldScroll,
		isFixedPosition = _ref.isFixedPosition,
		theme = _ref.theme
	var spacing = theme.spacing
	var scrollParent = getScrollParent(menuEl)
	var defaultState = {
		placement: 'bottom',
		maxHeight: maxHeight
	} // something went wrong, return default state

	if (!menuEl || !menuEl.offsetParent) return defaultState // we can't trust `scrollParent.scrollHeight` --> it may increase when
	// the menu is rendered

	var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),
		scrollHeight = _scrollParent$getBoun.height

	var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),
		menuBottom = _menuEl$getBoundingCl.bottom,
		menuHeight = _menuEl$getBoundingCl.height,
		menuTop = _menuEl$getBoundingCl.top

	var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),
		containerTop = _menuEl$offsetParent$.top

	var viewHeight = window.innerHeight
	var scrollTop = getScrollTop$2(scrollParent)
	var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10)
	var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10)
	var viewSpaceAbove = containerTop - marginTop
	var viewSpaceBelow = viewHeight - menuTop
	var scrollSpaceAbove = viewSpaceAbove + scrollTop
	var scrollSpaceBelow = scrollHeight - scrollTop - menuTop
	var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom
	var scrollUp = scrollTop + menuTop - marginTop
	var scrollDuration = 160

	switch (placement) {
		case 'auto':
		case 'bottom':
			// 1: the menu will fit, do nothing
			if (viewSpaceBelow >= menuHeight) {
				return {
					placement: 'bottom',
					maxHeight: maxHeight
				}
			} // 2: the menu will fit, if scrolled

			if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollDown, scrollDuration)
				}

				return {
					placement: 'bottom',
					maxHeight: maxHeight
				}
			} // 3: the menu will fit, if constrained

			if (
				(!isFixedPosition && scrollSpaceBelow >= minHeight) ||
				(isFixedPosition && viewSpaceBelow >= minHeight)
			) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollDown, scrollDuration)
				} // we want to provide as much of the menu as possible to the user,
				// so give them whatever is available below rather than the minHeight.

				var constrainedHeight = isFixedPosition
					? viewSpaceBelow - marginBottom
					: scrollSpaceBelow - marginBottom
				return {
					placement: 'bottom',
					maxHeight: constrainedHeight
				}
			} // 4. Forked beviour when there isn't enough space below
			// AUTO: flip the menu, render above

			if (placement === 'auto' || isFixedPosition) {
				// may need to be constrained after flipping
				var _constrainedHeight = maxHeight
				var spaceAbove = isFixedPosition
					? viewSpaceAbove
					: scrollSpaceAbove

				if (spaceAbove >= minHeight) {
					_constrainedHeight = Math.min(
						spaceAbove - marginBottom - spacing.controlHeight,
						maxHeight
					)
				}

				return {
					placement: 'top',
					maxHeight: _constrainedHeight
				}
			} // BOTTOM: allow browser to increase scrollable area and immediately set scroll

			if (placement === 'bottom') {
				scrollTo(scrollParent, scrollDown)
				return {
					placement: 'bottom',
					maxHeight: maxHeight
				}
			}

			break

		case 'top':
			// 1: the menu will fit, do nothing
			if (viewSpaceAbove >= menuHeight) {
				return {
					placement: 'top',
					maxHeight: maxHeight
				}
			} // 2: the menu will fit, if scrolled

			if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollUp, scrollDuration)
				}

				return {
					placement: 'top',
					maxHeight: maxHeight
				}
			} // 3: the menu will fit, if constrained

			if (
				(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
				(isFixedPosition && viewSpaceAbove >= minHeight)
			) {
				var _constrainedHeight2 = maxHeight // we want to provide as much of the menu as possible to the user,
				// so give them whatever is available below rather than the minHeight.

				if (
					(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
					(isFixedPosition && viewSpaceAbove >= minHeight)
				) {
					_constrainedHeight2 = isFixedPosition
						? viewSpaceAbove - marginTop
						: scrollSpaceAbove - marginTop
				}

				if (shouldScroll) {
					animatedScrollTo(scrollParent, scrollUp, scrollDuration)
				}

				return {
					placement: 'top',
					maxHeight: _constrainedHeight2
				}
			} // 4. not enough space, the browser WILL NOT increase scrollable area when
			// absolutely positioned element rendered above the viewport (only below).
			// Flip the menu, render below

			return {
				placement: 'bottom',
				maxHeight: maxHeight
			}

		default:
			throw new Error(
				'Invalid placement provided "'.concat(placement, '".')
			)
	} // fulfil contract with flow: implicit return value of undefined

	return defaultState
} // Menu Component
// ------------------------------

function alignToControl(placement) {
	var placementToCSSProp = {
		bottom: 'top',
		top: 'bottom'
	}
	return placement ? placementToCSSProp[placement] : 'bottom'
}

var coercePlacement = function coercePlacement(p) {
	return p === 'auto' ? 'bottom' : p
}

var menuCSS = function menuCSS(_ref2) {
	var _ref3

	var placement = _ref2.placement,
		_ref2$theme = _ref2.theme,
		borderRadius = _ref2$theme.borderRadius,
		spacing = _ref2$theme.spacing,
		colors = _ref2$theme.colors
	return (
		(_ref3 = {
			label: 'menu'
		}),
		_defineProperty$3(_ref3, alignToControl(placement), '100%'),
		_defineProperty$3(_ref3, 'backgroundColor', colors.neutral0),
		_defineProperty$3(_ref3, 'borderRadius', borderRadius),
		_defineProperty$3(
			_ref3,
			'boxShadow',
			'0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)'
		),
		_defineProperty$3(_ref3, 'marginBottom', spacing.menuGutter),
		_defineProperty$3(_ref3, 'marginTop', spacing.menuGutter),
		_defineProperty$3(_ref3, 'position', 'absolute'),
		_defineProperty$3(_ref3, 'width', '100%'),
		_defineProperty$3(_ref3, 'zIndex', 1),
		_ref3
	)
} // NOTE: internal only

var MenuPlacer =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(MenuPlacer, _Component)

		function MenuPlacer() {
			var _getPrototypeOf2

			var _this

			_classCallCheck$2(this, MenuPlacer)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf2 = _getPrototypeOf(MenuPlacer)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'state',
				{
					maxHeight: _this.props.maxMenuHeight,
					placement: null
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getPlacement',
				function(ref) {
					var _this$props = _this.props,
						minMenuHeight = _this$props.minMenuHeight,
						maxMenuHeight = _this$props.maxMenuHeight,
						menuPlacement = _this$props.menuPlacement,
						menuPosition = _this$props.menuPosition,
						menuShouldScrollIntoView =
							_this$props.menuShouldScrollIntoView,
						theme = _this$props.theme
					var getPortalPlacement = _this.context.getPortalPlacement
					if (!ref) return // DO NOT scroll if position is fixed

					var isFixedPosition = menuPosition === 'fixed'
					var shouldScroll =
						menuShouldScrollIntoView && !isFixedPosition
					var state = getMenuPlacement({
						maxHeight: maxMenuHeight,
						menuEl: ref,
						minHeight: minMenuHeight,
						placement: menuPlacement,
						shouldScroll: shouldScroll,
						isFixedPosition: isFixedPosition,
						theme: theme
					})
					if (getPortalPlacement) getPortalPlacement(state)

					_this.setState(state)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getUpdatedProps',
				function() {
					var menuPlacement = _this.props.menuPlacement
					var placement =
						_this.state.placement || coercePlacement(menuPlacement)
					return _objectSpread$1({}, _this.props, {
						placement: placement,
						maxHeight: _this.state.maxHeight
					})
				}
			)

			return _this
		}

		_createClass$2(MenuPlacer, [
			{
				key: 'render',
				value: function render() {
					var children = this.props.children
					return children({
						ref: this.getPlacement,
						placerProps: this.getUpdatedProps()
					})
				}
			}
		])

		return MenuPlacer
	})(Component)

_defineProperty$3(MenuPlacer, 'contextTypes', {
	getPortalPlacement: propTypes.func
})

var Menu = function Menu(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerRef = props.innerRef,
		innerProps = props.innerProps
	var cn = cx(
		/*#__PURE__*/
		css$2(getStyles('menu', props)),
		{
			menu: true
		},
		className
	)
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cn
			},
			innerProps,
			{
				ref: innerRef
			}
		),
		children
	)
}
// Menu List
// ==============================

var menuListCSS = function menuListCSS(_ref4) {
	var maxHeight = _ref4.maxHeight,
		baseUnit = _ref4.theme.spacing.baseUnit
	return {
		maxHeight: maxHeight,
		overflowY: 'auto',
		paddingBottom: baseUnit,
		paddingTop: baseUnit,
		position: 'relative',
		// required for offset[Height, Top] > keyboard scroll
		WebkitOverflowScrolling: 'touch'
	}
}
var MenuList = function MenuList(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		isMulti = props.isMulti,
		innerRef = props.innerRef
	return React__default.createElement(
		'div',
		{
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('menuList', props)),
				{
					'menu-list': true,
					'menu-list--is-multi': isMulti
				},
				className
			),
			ref: innerRef
		},
		children
	)
} // ==============================
// Menu Notices
// ==============================

var noticeCSS = function noticeCSS(_ref5) {
	var _ref5$theme = _ref5.theme,
		baseUnit = _ref5$theme.spacing.baseUnit,
		colors = _ref5$theme.colors
	return {
		color: colors.neutral40,
		padding: ''.concat(baseUnit * 2, 'px ').concat(baseUnit * 3, 'px'),
		textAlign: 'center'
	}
}

var noOptionsMessageCSS = noticeCSS
var loadingMessageCSS = noticeCSS
var NoOptionsMessage = function NoOptionsMessage(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('noOptionsMessage', props)),
					{
						'menu-notice': true,
						'menu-notice--no-options': true
					},
					className
				)
			},
			innerProps
		),
		children
	)
}
NoOptionsMessage.defaultProps = {
	children: 'No options'
}
var LoadingMessage = function LoadingMessage(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('loadingMessage', props)),
					{
						'menu-notice': true,
						'menu-notice--loading': true
					},
					className
				)
			},
			innerProps
		),
		children
	)
}
LoadingMessage.defaultProps = {
	children: 'Loading...'
} // ==============================
// Menu Portal
// ==============================

var menuPortalCSS = function menuPortalCSS(_ref6) {
	var rect = _ref6.rect,
		offset = _ref6.offset,
		position = _ref6.position
	return {
		left: rect.left,
		position: position,
		top: offset,
		width: rect.width,
		zIndex: 1
	}
}
var MenuPortal =
	/*#__PURE__*/
	(function(_Component2) {
		_inherits$2(MenuPortal, _Component2)

		function MenuPortal() {
			var _getPrototypeOf3

			var _this2

			_classCallCheck$2(this, MenuPortal)

			for (
				var _len2 = arguments.length,
					args = new Array(_len2),
					_key2 = 0;
				_key2 < _len2;
				_key2++
			) {
				args[_key2] = arguments[_key2]
			}

			_this2 = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf3 = _getPrototypeOf(MenuPortal)).call.apply(
					_getPrototypeOf3,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this2)),
				'state',
				{
					placement: null
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this2)),
				'getPortalPlacement',
				function(_ref7) {
					var placement = _ref7.placement
					var initialPlacement = coercePlacement(
						_this2.props.menuPlacement
					) // avoid re-renders if the placement has not changed

					if (placement !== initialPlacement) {
						_this2.setState({
							placement: placement
						})
					}
				}
			)

			return _this2
		}

		_createClass$2(MenuPortal, [
			{
				key: 'getChildContext',
				value: function getChildContext() {
					return {
						getPortalPlacement: this.getPortalPlacement
					}
				} // callback for occassions where the menu must "flip"
			},
			{
				key: 'render',
				value: function render() {
					var _this$props2 = this.props,
						appendTo = _this$props2.appendTo,
						children = _this$props2.children,
						controlElement = _this$props2.controlElement,
						menuPlacement = _this$props2.menuPlacement,
						position = _this$props2.menuPosition,
						getStyles = _this$props2.getStyles
					var isFixed = position === 'fixed' // bail early if required elements aren't present

					if ((!appendTo && !isFixed) || !controlElement) {
						return null
					}

					var placement =
						this.state.placement || coercePlacement(menuPlacement)
					var rect = getBoundingClientObj(controlElement)
					var scrollDistance = isFixed ? 0 : window.pageYOffset
					var offset = rect[placement] + scrollDistance
					var state = {
						offset: offset,
						position: position,
						rect: rect
					} // same wrapper element whether fixed or portalled

					var menuWrapper = React__default.createElement(
						'div',
						{
							className:
								/*#__PURE__*/

								/*#__PURE__*/
								css$2(getStyles('menuPortal', state))
						},
						children
					)
					return appendTo
						? createPortal(menuWrapper, appendTo)
						: menuWrapper
				}
			}
		])

		return MenuPortal
	})(Component)

_defineProperty$3(MenuPortal, 'childContextTypes', {
	getPortalPlacement: propTypes.func
})

var isArray$1 = Array.isArray
var keyList = Object.keys
var hasProp = Object.prototype.hasOwnProperty

function equal(a, b) {
	// fast-deep-equal index.js 2.0.1
	if (a === b) return true

	if (a && b && _typeof$3(a) == 'object' && _typeof$3(b) == 'object') {
		var arrA = isArray$1(a),
			arrB = isArray$1(b),
			i,
			length,
			key

		if (arrA && arrB) {
			length = a.length
			if (length != b.length) return false

			for (i = length; i-- !== 0; ) {
				if (!equal(a[i], b[i])) return false
			}

			return true
		}

		if (arrA != arrB) return false
		var dateA = a instanceof Date,
			dateB = b instanceof Date
		if (dateA != dateB) return false
		if (dateA && dateB) return a.getTime() == b.getTime()
		var regexpA = a instanceof RegExp,
			regexpB = b instanceof RegExp
		if (regexpA != regexpB) return false
		if (regexpA && regexpB) return a.toString() == b.toString()
		var keys = keyList(a)
		length = keys.length

		if (length !== keyList(b).length) {
			return false
		}

		for (i = length; i-- !== 0; ) {
			if (!hasProp.call(b, keys[i])) return false
		} // end fast-deep-equal
		// Custom handling for React

		for (i = length; i-- !== 0; ) {
			key = keys[i]

			if (key === '_owner' && a.$$typeof) {
				// React-specific: avoid traversing React elements' _owner.
				//  _owner contains circular references
				// and is not needed when comparing the actual elements (and not their owners)
				// .$$typeof and ._store on just reasonable markers of a react element
				continue
			} else {
				// all other properties should be traversed as usual
				if (!equal(a[key], b[key])) return false
			}
		} // fast-deep-equal index.js 2.0.1

		return true
	}

	return a !== a && b !== b
} // end fast-deep-equal

function exportedEqual(a, b) {
	try {
		return equal(a, b)
	} catch (error) {
		if (error.message && error.message.match(/stack|recursion/i)) {
			// warn on circular references, don't crash
			// browsers give this different errors name and messages:
			// chrome/safari: "RangeError", "Maximum call stack size exceeded"
			// firefox: "InternalError", too much recursion"
			// edge: "Error", "Out of stack space"
			console.warn(
				'Warning: react-fast-compare does not handle circular references.',
				error.name,
				error.message
			)
			return false
		} // some other error. we should definitely know about these

		throw error
	}
}

var diacritics = [
	{
		base: 'A',
		letters: /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g
	},
	{
		base: 'AA',
		letters: /[\uA732]/g
	},
	{
		base: 'AE',
		letters: /[\u00C6\u01FC\u01E2]/g
	},
	{
		base: 'AO',
		letters: /[\uA734]/g
	},
	{
		base: 'AU',
		letters: /[\uA736]/g
	},
	{
		base: 'AV',
		letters: /[\uA738\uA73A]/g
	},
	{
		base: 'AY',
		letters: /[\uA73C]/g
	},
	{
		base: 'B',
		letters: /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g
	},
	{
		base: 'C',
		letters: /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g
	},
	{
		base: 'D',
		letters: /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g
	},
	{
		base: 'DZ',
		letters: /[\u01F1\u01C4]/g
	},
	{
		base: 'Dz',
		letters: /[\u01F2\u01C5]/g
	},
	{
		base: 'E',
		letters: /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g
	},
	{
		base: 'F',
		letters: /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g
	},
	{
		base: 'G',
		letters: /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g
	},
	{
		base: 'H',
		letters: /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g
	},
	{
		base: 'I',
		letters: /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g
	},
	{
		base: 'J',
		letters: /[\u004A\u24BF\uFF2A\u0134\u0248]/g
	},
	{
		base: 'K',
		letters: /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g
	},
	{
		base: 'L',
		letters: /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g
	},
	{
		base: 'LJ',
		letters: /[\u01C7]/g
	},
	{
		base: 'Lj',
		letters: /[\u01C8]/g
	},
	{
		base: 'M',
		letters: /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g
	},
	{
		base: 'N',
		letters: /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g
	},
	{
		base: 'NJ',
		letters: /[\u01CA]/g
	},
	{
		base: 'Nj',
		letters: /[\u01CB]/g
	},
	{
		base: 'O',
		letters: /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g
	},
	{
		base: 'OI',
		letters: /[\u01A2]/g
	},
	{
		base: 'OO',
		letters: /[\uA74E]/g
	},
	{
		base: 'OU',
		letters: /[\u0222]/g
	},
	{
		base: 'P',
		letters: /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g
	},
	{
		base: 'Q',
		letters: /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g
	},
	{
		base: 'R',
		letters: /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g
	},
	{
		base: 'S',
		letters: /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g
	},
	{
		base: 'T',
		letters: /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g
	},
	{
		base: 'TZ',
		letters: /[\uA728]/g
	},
	{
		base: 'U',
		letters: /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g
	},
	{
		base: 'V',
		letters: /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g
	},
	{
		base: 'VY',
		letters: /[\uA760]/g
	},
	{
		base: 'W',
		letters: /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g
	},
	{
		base: 'X',
		letters: /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g
	},
	{
		base: 'Y',
		letters: /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g
	},
	{
		base: 'Z',
		letters: /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g
	},
	{
		base: 'a',
		letters: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g
	},
	{
		base: 'aa',
		letters: /[\uA733]/g
	},
	{
		base: 'ae',
		letters: /[\u00E6\u01FD\u01E3]/g
	},
	{
		base: 'ao',
		letters: /[\uA735]/g
	},
	{
		base: 'au',
		letters: /[\uA737]/g
	},
	{
		base: 'av',
		letters: /[\uA739\uA73B]/g
	},
	{
		base: 'ay',
		letters: /[\uA73D]/g
	},
	{
		base: 'b',
		letters: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g
	},
	{
		base: 'c',
		letters: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g
	},
	{
		base: 'd',
		letters: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g
	},
	{
		base: 'dz',
		letters: /[\u01F3\u01C6]/g
	},
	{
		base: 'e',
		letters: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g
	},
	{
		base: 'f',
		letters: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g
	},
	{
		base: 'g',
		letters: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g
	},
	{
		base: 'h',
		letters: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g
	},
	{
		base: 'hv',
		letters: /[\u0195]/g
	},
	{
		base: 'i',
		letters: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g
	},
	{
		base: 'j',
		letters: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g
	},
	{
		base: 'k',
		letters: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g
	},
	{
		base: 'l',
		letters: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g
	},
	{
		base: 'lj',
		letters: /[\u01C9]/g
	},
	{
		base: 'm',
		letters: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g
	},
	{
		base: 'n',
		letters: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g
	},
	{
		base: 'nj',
		letters: /[\u01CC]/g
	},
	{
		base: 'o',
		letters: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g
	},
	{
		base: 'oi',
		letters: /[\u01A3]/g
	},
	{
		base: 'ou',
		letters: /[\u0223]/g
	},
	{
		base: 'oo',
		letters: /[\uA74F]/g
	},
	{
		base: 'p',
		letters: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g
	},
	{
		base: 'q',
		letters: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g
	},
	{
		base: 'r',
		letters: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g
	},
	{
		base: 's',
		letters: /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g
	},
	{
		base: 't',
		letters: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g
	},
	{
		base: 'tz',
		letters: /[\uA729]/g
	},
	{
		base: 'u',
		letters: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g
	},
	{
		base: 'v',
		letters: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g
	},
	{
		base: 'vy',
		letters: /[\uA761]/g
	},
	{
		base: 'w',
		letters: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g
	},
	{
		base: 'x',
		letters: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g
	},
	{
		base: 'y',
		letters: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g
	},
	{
		base: 'z',
		letters: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g
	}
]
var stripDiacritics = function stripDiacritics(str) {
	for (var i = 0; i < diacritics.length; i++) {
		str = str.replace(diacritics[i].letters, diacritics[i].base)
	}

	return str
}

var trimString = function trimString(str) {
	return str.replace(/^\s+|\s+$/g, '')
}

var defaultStringify = function defaultStringify(option) {
	return ''.concat(option.label, ' ').concat(option.value)
}

var createFilter = function createFilter(config) {
	return function(option, rawInput) {
		var _ignoreCase$ignoreAcc = _objectSpread$1(
				{
					ignoreCase: true,
					ignoreAccents: true,
					stringify: defaultStringify,
					trim: true,
					matchFrom: 'any'
				},
				config
			),
			ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,
			ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,
			stringify = _ignoreCase$ignoreAcc.stringify,
			trim = _ignoreCase$ignoreAcc.trim,
			matchFrom = _ignoreCase$ignoreAcc.matchFrom

		var input = trim ? trimString(rawInput) : rawInput
		var candidate = trim ? trimString(stringify(option)) : stringify(option)

		if (ignoreCase) {
			input = input.toLowerCase()
			candidate = candidate.toLowerCase()
		}

		if (ignoreAccents) {
			input = stripDiacritics(input)
			candidate = stripDiacritics(candidate)
		}

		return matchFrom === 'start'
			? candidate.substr(0, input.length) === input
			: candidate.indexOf(input) > -1
	}
}

var A11yText = function A11yText(props) {
	return React__default.createElement(
		'span',
		_extends$4(
			{
				className:
					/*#__PURE__*/

					/*#__PURE__*/
					css$2({
						label: 'a11yText',
						zIndex: 9999,
						border: 0,
						clip: 'rect(1px, 1px, 1px, 1px)',
						height: 1,
						width: 1,
						position: 'absolute',
						overflow: 'hidden',
						padding: 0,
						whiteSpace: 'nowrap',
						backgroundColor: 'red',
						color: 'blue'
					})
			},
			props
		)
	)
}

var DummyInput =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(DummyInput, _Component)

		function DummyInput() {
			_classCallCheck$2(this, DummyInput)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(DummyInput).apply(this, arguments)
			)
		}

		_createClass$2(DummyInput, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						inProp = _this$props.in,
						out = _this$props.out,
						onExited = _this$props.onExited,
						appear = _this$props.appear,
						enter = _this$props.enter,
						exit = _this$props.exit,
						innerRef = _this$props.innerRef,
						emotion = _this$props.emotion,
						props = _objectWithoutProperties$2(_this$props, [
							'in',
							'out',
							'onExited',
							'appear',
							'enter',
							'exit',
							'innerRef',
							'emotion'
						])

					return React__default.createElement(
						'input',
						_extends$4(
							{
								ref: innerRef
							},
							props,
							{
								className:
									/*#__PURE__*/

									/*#__PURE__*/
									css$2({
										label: 'dummyInput',
										// get rid of any default styles
										background: 0,
										border: 0,
										fontSize: 'inherit',
										outline: 0,
										padding: 0,
										// important! without `width` browsers won't allow focus
										width: 1,
										// remove cursor on desktop
										color: 'transparent',
										// remove cursor on mobile whilst maintaining "scroll into view" behaviour
										left: -100,
										opacity: 0,
										position: 'relative',
										transform: 'scale(0)'
									})
							}
						)
					)
				}
			}
		])

		return DummyInput
	})(Component)

var NodeResolver =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(NodeResolver, _Component)

		function NodeResolver() {
			_classCallCheck$2(this, NodeResolver)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(NodeResolver).apply(this, arguments)
			)
		}

		_createClass$2(NodeResolver, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.props.innerRef(findDOMNode(this))
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.props.innerRef(null)
				}
			},
			{
				key: 'render',
				value: function render() {
					return this.props.children
				}
			}
		])

		return NodeResolver
	})(Component)

var STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position']
var LOCK_STYLES = {
	boxSizing: 'border-box',
	// account for possible declaration `width: 100%;` on body
	overflow: 'hidden',
	position: 'relative',
	height: '100%'
}

function preventTouchMove(e) {
	e.preventDefault()
}
function allowTouchMove(e) {
	e.stopPropagation()
}
function preventInertiaScroll() {
	var top = this.scrollTop
	var totalScroll = this.scrollHeight
	var currentScroll = top + this.offsetHeight

	if (top === 0) {
		this.scrollTop = 1
	} else if (currentScroll === totalScroll) {
		this.scrollTop = top - 1
	}
} // `ontouchstart` check works on most browsers
// `maxTouchPoints` works on IE10/11 and Surface

function isTouchDevice() {
	return 'ontouchstart' in window || navigator.maxTouchPoints
}

var canUseDOM = !!(
	typeof window !== 'undefined' &&
	window.document &&
	window.document.createElement
)
var activeScrollLocks = 0

var ScrollLock =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(ScrollLock, _Component)

		function ScrollLock() {
			var _getPrototypeOf2

			var _this

			_classCallCheck$2(this, ScrollLock)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf2 = _getPrototypeOf(ScrollLock)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'originalStyles',
				{}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'listenerOptions',
				{
					capture: false,
					passive: false
				}
			)

			return _this
		}

		_createClass$2(ScrollLock, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					var _this2 = this

					if (!canUseDOM) return
					var _this$props = this.props,
						accountForScrollbars = _this$props.accountForScrollbars,
						touchScrollTarget = _this$props.touchScrollTarget
					var target = document.body
					var targetStyle = target && target.style

					if (accountForScrollbars) {
						// store any styles already applied to the body
						STYLE_KEYS.forEach(function(key) {
							var val = targetStyle && targetStyle[key]
							_this2.originalStyles[key] = val
						})
					} // apply the lock styles and padding if this is the first scroll lock

					if (accountForScrollbars && activeScrollLocks < 1) {
						var currentPadding =
							parseInt(this.originalStyles.paddingRight, 10) || 0
						var clientWidth = document.body
							? document.body.clientWidth
							: 0
						var adjustedPadding =
							window.innerWidth - clientWidth + currentPadding ||
							0
						Object.keys(LOCK_STYLES).forEach(function(key) {
							var val = LOCK_STYLES[key]

							if (targetStyle) {
								targetStyle[key] = val
							}
						})

						if (targetStyle) {
							targetStyle.paddingRight = ''.concat(
								adjustedPadding,
								'px'
							)
						}
					} // account for touch devices

					if (target && isTouchDevice()) {
						// Mobile Safari ignores { overflow: hidden } declaration on the body.
						target.addEventListener(
							'touchmove',
							preventTouchMove,
							this.listenerOptions
						) // Allow scroll on provided target

						if (touchScrollTarget) {
							touchScrollTarget.addEventListener(
								'touchstart',
								preventInertiaScroll,
								this.listenerOptions
							)
							touchScrollTarget.addEventListener(
								'touchmove',
								allowTouchMove,
								this.listenerOptions
							)
						}
					} // increment active scroll locks

					activeScrollLocks += 1
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					var _this3 = this

					if (!canUseDOM) return
					var _this$props2 = this.props,
						accountForScrollbars =
							_this$props2.accountForScrollbars,
						touchScrollTarget = _this$props2.touchScrollTarget
					var target = document.body
					var targetStyle = target && target.style // safely decrement active scroll locks

					activeScrollLocks = Math.max(activeScrollLocks - 1, 0) // reapply original body styles, if any

					if (accountForScrollbars && activeScrollLocks < 1) {
						STYLE_KEYS.forEach(function(key) {
							var val = _this3.originalStyles[key]

							if (targetStyle) {
								targetStyle[key] = val
							}
						})
					} // remove touch listeners

					if (target && isTouchDevice()) {
						target.removeEventListener(
							'touchmove',
							preventTouchMove,
							this.listenerOptions
						)

						if (touchScrollTarget) {
							touchScrollTarget.removeEventListener(
								'touchstart',
								preventInertiaScroll,
								this.listenerOptions
							)
							touchScrollTarget.removeEventListener(
								'touchmove',
								allowTouchMove,
								this.listenerOptions
							)
						}
					}
				}
			},
			{
				key: 'render',
				value: function render() {
					return null
				}
			}
		])

		return ScrollLock
	})(Component)

_defineProperty$3(ScrollLock, 'defaultProps', {
	accountForScrollbars: true
})

// NOTE:
// We shouldn't need this after updating to React v16.3.0, which introduces:
// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref
// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref
var ScrollBlock =
	/*#__PURE__*/
	(function(_PureComponent) {
		_inherits$2(ScrollBlock, _PureComponent)

		function ScrollBlock() {
			var _getPrototypeOf2

			var _this

			_classCallCheck$2(this, ScrollBlock)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf2 = _getPrototypeOf(ScrollBlock)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'state',
				{
					touchScrollTarget: null
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getScrollTarget',
				function(ref) {
					if (ref === _this.state.touchScrollTarget) return

					_this.setState({
						touchScrollTarget: ref
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'blurSelectInput',
				function() {
					if (document.activeElement) {
						document.activeElement.blur()
					}
				}
			)

			return _this
		}

		_createClass$2(ScrollBlock, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						children = _this$props.children,
						isEnabled = _this$props.isEnabled
					var touchScrollTarget = this.state.touchScrollTarget // bail early if not enabled

					if (!isEnabled) return children
					/*
					 * Div
					 * ------------------------------
					 * blocks scrolling on non-body elements behind the menu
					 * NodeResolver
					 * ------------------------------
					 * we need a reference to the scrollable element to "unlock" scroll on
					 * mobile devices
					 * ScrollLock
					 * ------------------------------
					 * actually does the scroll locking
					 */

					return React__default.createElement(
						'div',
						null,
						React__default.createElement('div', {
							onClick: this.blurSelectInput,
							className:
								/*#__PURE__*/

								/*#__PURE__*/
								css$2({
									position: 'fixed',
									left: 0,
									bottom: 0,
									right: 0,
									top: 0
								})
						}),
						React__default.createElement(
							NodeResolver,
							{
								innerRef: this.getScrollTarget
							},
							children
						),
						touchScrollTarget
							? React__default.createElement(ScrollLock, {
									touchScrollTarget: touchScrollTarget
							  })
							: null
					)
				}
			}
		])

		return ScrollBlock
	})(PureComponent)

var ScrollCaptor =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(ScrollCaptor, _Component)

		function ScrollCaptor() {
			var _getPrototypeOf2

			var _this

			_classCallCheck$2(this, ScrollCaptor)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf2 = _getPrototypeOf(ScrollCaptor)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'isBottom',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'isTop',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'scrollTarget',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'touchStart',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'cancelScroll',
				function(event) {
					event.preventDefault()
					event.stopPropagation()
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'handleEventDelta',
				function(event, delta) {
					var _this$props = _this.props,
						onBottomArrive = _this$props.onBottomArrive,
						onBottomLeave = _this$props.onBottomLeave,
						onTopArrive = _this$props.onTopArrive,
						onTopLeave = _this$props.onTopLeave
					var _this$scrollTarget = _this.scrollTarget,
						scrollTop = _this$scrollTarget.scrollTop,
						scrollHeight = _this$scrollTarget.scrollHeight,
						clientHeight = _this$scrollTarget.clientHeight
					var target = _this.scrollTarget
					var isDeltaPositive = delta > 0
					var availableScroll =
						scrollHeight - clientHeight - scrollTop
					var shouldCancelScroll = false // reset bottom/top flags

					if (availableScroll > delta && _this.isBottom) {
						if (onBottomLeave) onBottomLeave(event)
						_this.isBottom = false
					}

					if (isDeltaPositive && _this.isTop) {
						if (onTopLeave) onTopLeave(event)
						_this.isTop = false
					} // bottom limit

					if (isDeltaPositive && delta > availableScroll) {
						if (onBottomArrive && !_this.isBottom) {
							onBottomArrive(event)
						}

						target.scrollTop = scrollHeight
						shouldCancelScroll = true
						_this.isBottom = true // top limit
					} else if (!isDeltaPositive && -delta > scrollTop) {
						if (onTopArrive && !_this.isTop) {
							onTopArrive(event)
						}

						target.scrollTop = 0
						shouldCancelScroll = true
						_this.isTop = true
					} // cancel scroll

					if (shouldCancelScroll) {
						_this.cancelScroll(event)
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onWheel',
				function(event) {
					_this.handleEventDelta(event, event.deltaY)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onTouchStart',
				function(event) {
					// set touch start so we can calculate touchmove delta
					_this.touchStart = event.changedTouches[0].clientY
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onTouchMove',
				function(event) {
					var deltaY =
						_this.touchStart - event.changedTouches[0].clientY

					_this.handleEventDelta(event, deltaY)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getScrollTarget',
				function(ref) {
					_this.scrollTarget = ref
				}
			)

			return _this
		}

		_createClass$2(ScrollCaptor, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.startListening(this.scrollTarget)
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.stopListening(this.scrollTarget)
				}
			},
			{
				key: 'startListening',
				value: function startListening(el) {
					// bail early if no scroll available
					if (!el) return
					if (el.scrollHeight <= el.clientHeight) return // all the if statements are to appease Flow 😢

					if (typeof el.addEventListener === 'function') {
						el.addEventListener('wheel', this.onWheel, false)
					}

					if (typeof el.addEventListener === 'function') {
						el.addEventListener(
							'touchstart',
							this.onTouchStart,
							false
						)
					}

					if (typeof el.addEventListener === 'function') {
						el.addEventListener(
							'touchmove',
							this.onTouchMove,
							false
						)
					}
				}
			},
			{
				key: 'stopListening',
				value: function stopListening(el) {
					// bail early if no scroll available
					if (el.scrollHeight <= el.clientHeight) return // all the if statements are to appease Flow 😢

					if (typeof el.removeEventListener === 'function') {
						el.removeEventListener('wheel', this.onWheel, false)
					}

					if (typeof el.removeEventListener === 'function') {
						el.removeEventListener(
							'touchstart',
							this.onTouchStart,
							false
						)
					}

					if (typeof el.removeEventListener === 'function') {
						el.removeEventListener(
							'touchmove',
							this.onTouchMove,
							false
						)
					}
				}
			},
			{
				key: 'render',
				value: function render() {
					return React__default.createElement(
						NodeResolver,
						{
							innerRef: this.getScrollTarget
						},
						this.props.children
					)
				}
			}
		])

		return ScrollCaptor
	})(Component)

var ScrollCaptorSwitch =
	/*#__PURE__*/
	(function(_Component2) {
		_inherits$2(ScrollCaptorSwitch, _Component2)

		function ScrollCaptorSwitch() {
			_classCallCheck$2(this, ScrollCaptorSwitch)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(ScrollCaptorSwitch).apply(this, arguments)
			)
		}

		_createClass$2(ScrollCaptorSwitch, [
			{
				key: 'render',
				value: function render() {
					var _this$props2 = this.props,
						isEnabled = _this$props2.isEnabled,
						props = _objectWithoutProperties$2(_this$props2, [
							'isEnabled'
						])

					return isEnabled
						? React__default.createElement(ScrollCaptor, props)
						: this.props.children
				}
			}
		])

		return ScrollCaptorSwitch
	})(Component)

_defineProperty$3(ScrollCaptorSwitch, 'defaultProps', {
	isEnabled: true
})

var instructionsAriaMessage = function instructionsAriaMessage(event) {
	var context =
		arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}
	var isSearchable = context.isSearchable,
		isMulti = context.isMulti,
		label = context.label,
		isDisabled = context.isDisabled

	switch (event) {
		case 'menu':
			return 'Use Up and Down to choose options'.concat(
				isDisabled
					? ''
					: ', press Enter to select the currently focused option',
				', press Escape to exit the menu, press Tab to select the option and exit the menu.'
			)

		case 'input':
			return ''
				.concat(label ? label : 'Select', ' is focused ')
				.concat(
					isSearchable ? ',type to refine list' : '',
					', press Down to open the menu, '
				)
				.concat(isMulti ? ' press left to focus selected values' : '')

		case 'value':
			return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value'
	}
}
var valueEventAriaMessage = function valueEventAriaMessage(event, context) {
	var value = context.value,
		isDisabled = context.isDisabled
	if (!value) return

	switch (event) {
		case 'deselect-option':
		case 'pop-value':
		case 'remove-value':
			return 'option '.concat(value, ', deselected.')

		case 'select-option':
			return isDisabled
				? 'option '.concat(
						value,
						' is disabled. Select another option.'
				  )
				: 'option '.concat(value, ', selected.')
	}
}
var valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {
	var focusedValue = _ref.focusedValue,
		getOptionLabel = _ref.getOptionLabel,
		selectValue = _ref.selectValue
	return 'value '
		.concat(getOptionLabel(focusedValue), ' focused, ')
		.concat(selectValue.indexOf(focusedValue) + 1, ' of ')
		.concat(selectValue.length, '.')
}
var optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {
	var focusedOption = _ref2.focusedOption,
		getOptionLabel = _ref2.getOptionLabel,
		options = _ref2.options
	return 'option '
		.concat(getOptionLabel(focusedOption), ' focused')
		.concat(focusedOption.isDisabled ? ' disabled' : '', ', ')
		.concat(options.indexOf(focusedOption) + 1, ' of ')
		.concat(options.length, '.')
}
var resultsAriaMessage = function resultsAriaMessage(_ref3) {
	var inputValue = _ref3.inputValue,
		screenReaderMessage = _ref3.screenReaderMessage
	return ''
		.concat(screenReaderMessage)
		.concat(inputValue ? ' for search term ' + inputValue : '', '.')
}

var formatGroupLabel = function formatGroupLabel(group) {
	return group.label
}
var getOptionLabel = function getOptionLabel(option) {
	return option.label
}
var getOptionValue = function getOptionValue(option) {
	return option.value
}
var isOptionDisabled = function isOptionDisabled(option) {
	return !!option.isDisabled
}

var containerCSS = function containerCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		isRtl = _ref.isRtl
	return {
		label: 'container',
		direction: isRtl ? 'rtl' : null,
		pointerEvents: isDisabled ? 'none' : null,
		// cancel mouse events when disabled
		position: 'relative'
	}
}
var SelectContainer = function SelectContainer(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		isDisabled = props.isDisabled,
		isRtl = props.isRtl
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('container', props)),
					{
						'--is-disabled': isDisabled,
						'--is-rtl': isRtl
					},
					className
				)
			},
			innerProps
		),
		children
	)
} // ==============================
// Value Container
// ==============================

var valueContainerCSS = function valueContainerCSS(_ref2) {
	var spacing = _ref2.theme.spacing
	return {
		alignItems: 'center',
		display: 'flex',
		flex: 1,
		flexWrap: 'wrap',
		padding: ''
			.concat(spacing.baseUnit / 2, 'px ')
			.concat(spacing.baseUnit * 2, 'px'),
		WebkitOverflowScrolling: 'touch',
		position: 'relative',
		overflow: 'hidden'
	}
}
var ValueContainer =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(ValueContainer, _Component)

		function ValueContainer() {
			_classCallCheck$2(this, ValueContainer)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(ValueContainer).apply(this, arguments)
			)
		}

		_createClass$2(ValueContainer, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						children = _this$props.children,
						className = _this$props.className,
						cx = _this$props.cx,
						isMulti = _this$props.isMulti,
						getStyles = _this$props.getStyles,
						hasValue = _this$props.hasValue
					return React__default.createElement(
						'div',
						{
							className: cx(
								/*#__PURE__*/
								css$2(getStyles('valueContainer', this.props)),
								{
									'value-container': true,
									'value-container--is-multi': isMulti,
									'value-container--has-value': hasValue
								},
								className
							)
						},
						children
					)
				}
			}
		])

		return ValueContainer
	})(Component) // ==============================
// Indicator Container
// ==============================

var indicatorsContainerCSS = function indicatorsContainerCSS() {
	return {
		alignItems: 'center',
		alignSelf: 'stretch',
		display: 'flex',
		flexShrink: 0
	}
}
var IndicatorsContainer = function IndicatorsContainer(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles
	return React__default.createElement(
		'div',
		{
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('indicatorsContainer', props)),
				{
					indicators: true
				},
				className
			)
		},
		children
	)
}

// ==============================
// Dropdown & Clear Icons
// ==============================
var Svg = function Svg(_ref) {
	var size = _ref.size,
		props = _objectWithoutProperties$2(_ref, ['size'])

	return React__default.createElement(
		'svg',
		_extends$4(
			{
				height: size,
				width: size,
				viewBox: '0 0 20 20',
				'aria-hidden': 'true',
				focusable: 'false',
				className:
					/*#__PURE__*/

					/*#__PURE__*/
					css$2({
						display: 'inline-block',
						fill: 'currentColor',
						lineHeight: 1,
						stroke: 'currentColor',
						strokeWidth: 0
					})
			},
			props
		)
	)
}

var CrossIcon = function CrossIcon(props) {
	return React__default.createElement(
		Svg,
		_extends$4(
			{
				size: 20
			},
			props
		),
		React__default.createElement('path', {
			d:
				'M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z'
		})
	)
}
var DownChevron = function DownChevron(props) {
	return React__default.createElement(
		Svg,
		_extends$4(
			{
				size: 20
			},
			props
		),
		React__default.createElement('path', {
			d:
				'M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z'
		})
	)
} // ==============================
// Dropdown & Clear Buttons
// ==============================

var baseCSS = function baseCSS(_ref2) {
	var isFocused = _ref2.isFocused,
		_ref2$theme = _ref2.theme,
		baseUnit = _ref2$theme.spacing.baseUnit,
		colors = _ref2$theme.colors
	return {
		label: 'indicatorContainer',
		color: isFocused ? colors.neutral60 : colors.neutral20,
		display: 'flex',
		padding: baseUnit * 2,
		transition: 'color 150ms',
		':hover': {
			color: isFocused ? colors.neutral80 : colors.neutral40
		}
	}
}

var dropdownIndicatorCSS = baseCSS
var DropdownIndicator = function DropdownIndicator(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4({}, innerProps, {
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('dropdownIndicator', props)),
				{
					indicator: true,
					'dropdown-indicator': true
				},
				className
			)
		}),
		children || React__default.createElement(DownChevron, null)
	)
}
var clearIndicatorCSS = baseCSS
var ClearIndicator = function ClearIndicator(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4({}, innerProps, {
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('clearIndicator', props)),
				{
					indicator: true,
					'clear-indicator': true
				},
				className
			)
		}),
		children || React__default.createElement(CrossIcon, null)
	)
} // ==============================
// Separator
// ==============================

var indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref3) {
	var isDisabled = _ref3.isDisabled,
		_ref3$theme = _ref3.theme,
		baseUnit = _ref3$theme.spacing.baseUnit,
		colors = _ref3$theme.colors
	return {
		label: 'indicatorSeparator',
		alignSelf: 'stretch',
		backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,
		marginBottom: baseUnit * 2,
		marginTop: baseUnit * 2,
		width: 1
	}
}
var IndicatorSeparator = function IndicatorSeparator(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'span',
		_extends$4({}, innerProps, {
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('indicatorSeparator', props)),
				{
					'indicator-separator': true
				},
				className
			)
		})
	)
} // ==============================
// Loading
// ==============================

var keyframesName = 'react-select-loading-indicator'
var keyframesInjected = false
var loadingIndicatorCSS = function loadingIndicatorCSS(_ref4) {
	var isFocused = _ref4.isFocused,
		size = _ref4.size,
		_ref4$theme = _ref4.theme,
		colors = _ref4$theme.colors,
		baseUnit = _ref4$theme.spacing.baseUnit
	return {
		label: 'loadingIndicator',
		color: isFocused ? colors.neutral60 : colors.neutral20,
		display: 'flex',
		padding: baseUnit * 2,
		transition: 'color 150ms',
		alignSelf: 'center',
		fontSize: size,
		lineHeight: 1,
		marginRight: size,
		textAlign: 'center',
		verticalAlign: 'middle'
	}
}

var LoadingDot = function LoadingDot(_ref5) {
	var color = _ref5.color,
		delay = _ref5.delay,
		offset = _ref5.offset
	return React__default.createElement('span', {
		className:
			/*#__PURE__*/

			/*#__PURE__*/
			css$2({
				animationDuration: '1s',
				animationDelay: ''.concat(delay, 'ms'),
				animationIterationCount: 'infinite',
				animationName: keyframesName,
				animationTimingFunction: 'ease-in-out',
				backgroundColor: color,
				borderRadius: '1em',
				display: 'inline-block',
				marginLeft: offset ? '1em' : null,
				height: '1em',
				verticalAlign: 'top',
				width: '1em'
			})
	})
}

var LoadingIndicator = function LoadingIndicator(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps,
		isFocused = props.isFocused,
		isRtl = props.isRtl,
		colors = props.theme.colors
	var color = isFocused ? colors.neutral80 : colors.neutral20

	if (!keyframesInjected) {
		// eslint-disable-next-line no-unused-expressions
		injectGlobal(
			'@keyframes ',
			keyframesName,
			'{0%,80%,100%{opacity:0;}40%{opacity:1;}};'
		)
		keyframesInjected = true
	}

	return React__default.createElement(
		'div',
		_extends$4({}, innerProps, {
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('loadingIndicator', props)),
				{
					indicator: true,
					'loading-indicator': true
				},
				className
			)
		}),
		React__default.createElement(LoadingDot, {
			color: color,
			delay: 0,
			offset: isRtl
		}),
		React__default.createElement(LoadingDot, {
			color: color,
			delay: 160,
			offset: true
		}),
		React__default.createElement(LoadingDot, {
			color: color,
			delay: 320,
			offset: !isRtl
		})
	)
}
LoadingIndicator.defaultProps = {
	size: 4
}

var css$1$1 = function css$$1(_ref) {
	var isDisabled = _ref.isDisabled,
		isFocused = _ref.isFocused,
		_ref$theme = _ref.theme,
		colors = _ref$theme.colors,
		borderRadius = _ref$theme.borderRadius,
		spacing = _ref$theme.spacing
	return {
		label: 'control',
		alignItems: 'center',
		backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,
		borderColor: isDisabled
			? colors.neutral10
			: isFocused
			? colors.primary
			: colors.neutral20,
		borderRadius: borderRadius,
		borderStyle: 'solid',
		borderWidth: 1,
		boxShadow: isFocused ? '0 0 0 1px '.concat(colors.primary) : null,
		cursor: 'default',
		display: 'flex',
		flexWrap: 'wrap',
		justifyContent: 'space-between',
		minHeight: spacing.controlHeight,
		outline: '0 !important',
		position: 'relative',
		transition: 'all 100ms',
		'&:hover': {
			borderColor: isFocused ? colors.primary : colors.neutral30
		}
	}
}

var Control = function Control(props) {
	var children = props.children,
		cx = props.cx,
		getStyles = props.getStyles,
		className = props.className,
		isDisabled = props.isDisabled,
		isFocused = props.isFocused,
		innerRef = props.innerRef,
		innerProps = props.innerProps,
		menuIsOpen = props.menuIsOpen
	return React__default.createElement(
		'div',
		_extends$4(
			{
				ref: innerRef,
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('control', props)),
					{
						control: true,
						'control--is-disabled': isDisabled,
						'control--is-focused': isFocused,
						'control--menu-is-open': menuIsOpen
					},
					className
				)
			},
			innerProps
		),
		children
	)
}

var groupCSS = function groupCSS(_ref) {
	var spacing = _ref.theme.spacing
	return {
		paddingBottom: spacing.baseUnit * 2,
		paddingTop: spacing.baseUnit * 2
	}
}

var Group = function Group(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		Heading = props.Heading,
		headingProps = props.headingProps,
		label = props.label,
		theme = props.theme,
		selectProps = props.selectProps
	return React__default.createElement(
		'div',
		{
			className: cx(
				/*#__PURE__*/
				css$2(getStyles('group', props)),
				{
					group: true
				},
				className
			)
		},
		React__default.createElement(
			Heading,
			_extends$4({}, headingProps, {
				selectProps: selectProps,
				theme: theme,
				getStyles: getStyles,
				cx: cx
			}),
			label
		),
		React__default.createElement('div', null, children)
	)
}

var groupHeadingCSS = function groupHeadingCSS(_ref2) {
	var spacing = _ref2.theme.spacing
	return {
		label: 'group',
		color: '#999',
		cursor: 'default',
		display: 'block',
		fontSize: '75%',
		fontWeight: '500',
		marginBottom: '0.25em',
		paddingLeft: spacing.baseUnit * 3,
		paddingRight: spacing.baseUnit * 3,
		textTransform: 'uppercase'
	}
}
var GroupHeading = function GroupHeading(props) {
	var className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		theme = props.theme,
		selectProps = props.selectProps,
		cleanProps = _objectWithoutProperties$2(props, [
			'className',
			'cx',
			'getStyles',
			'theme',
			'selectProps'
		])

	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(
						getStyles(
							'groupHeading',
							_objectSpread$1(
								{
									theme: theme
								},
								cleanProps
							)
						)
					),
					{
						'group-heading': true
					},
					className
				)
			},
			cleanProps
		)
	)
}

var inputCSS = function inputCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors
	return {
		margin: spacing.baseUnit / 2,
		paddingBottom: spacing.baseUnit / 2,
		paddingTop: spacing.baseUnit / 2,
		visibility: isDisabled ? 'hidden' : 'visible',
		color: colors.neutral80
	}
}

var inputStyle = function inputStyle(isHidden) {
	return {
		label: 'input',
		background: 0,
		border: 0,
		fontSize: 'inherit',
		opacity: isHidden ? 0 : 1,
		outline: 0,
		padding: 0,
		color: 'inherit'
	}
}

var Input$1 = function Input(_ref2) {
	var className = _ref2.className,
		cx = _ref2.cx,
		getStyles = _ref2.getStyles,
		innerRef = _ref2.innerRef,
		isHidden = _ref2.isHidden,
		isDisabled = _ref2.isDisabled,
		theme = _ref2.theme,
		selectProps = _ref2.selectProps,
		props = _objectWithoutProperties$2(_ref2, [
			'className',
			'cx',
			'getStyles',
			'innerRef',
			'isHidden',
			'isDisabled',
			'theme',
			'selectProps'
		])

	return React__default.createElement(
		'div',
		{
			className:
				/*#__PURE__*/

				/*#__PURE__*/
				css$2(
					getStyles(
						'input',
						_objectSpread$1(
							{
								theme: theme
							},
							props
						)
					)
				)
		},
		React__default.createElement(
			AutosizeInput,
			_extends$4(
				{
					className: cx(
						null,
						{
							input: true
						},
						className
					),
					inputRef: innerRef,
					inputStyle: inputStyle(isHidden),
					disabled: isDisabled
				},
				props
			)
		)
	)
}

var multiValueCSS = function multiValueCSS(_ref) {
	var _ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		borderRadius = _ref$theme.borderRadius,
		colors = _ref$theme.colors
	return {
		label: 'multiValue',
		backgroundColor: colors.neutral10,
		borderRadius: borderRadius / 2,
		display: 'flex',
		margin: spacing.baseUnit / 2,
		minWidth: 0 // resolves flex/text-overflow bug
	}
}
var multiValueLabelCSS = function multiValueLabelCSS(_ref2) {
	var _ref2$theme = _ref2.theme,
		borderRadius = _ref2$theme.borderRadius,
		colors = _ref2$theme.colors,
		cropWithEllipsis = _ref2.cropWithEllipsis
	return {
		borderRadius: borderRadius / 2,
		color: colors.neutral80,
		fontSize: '85%',
		overflow: 'hidden',
		padding: 3,
		paddingLeft: 6,
		textOverflow: cropWithEllipsis ? 'ellipsis' : null,
		whiteSpace: 'nowrap'
	}
}
var multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {
	var _ref3$theme = _ref3.theme,
		spacing = _ref3$theme.spacing,
		borderRadius = _ref3$theme.borderRadius,
		colors = _ref3$theme.colors,
		isFocused = _ref3.isFocused
	return {
		alignItems: 'center',
		borderRadius: borderRadius / 2,
		backgroundColor: isFocused && colors.dangerLight,
		display: 'flex',
		paddingLeft: spacing.baseUnit,
		paddingRight: spacing.baseUnit,
		':hover': {
			backgroundColor: colors.dangerLight,
			color: colors.danger
		}
	}
}
var MultiValueGeneric = function MultiValueGeneric(_ref4) {
	var children = _ref4.children,
		innerProps = _ref4.innerProps
	return React__default.createElement('div', innerProps, children)
}
var MultiValueContainer = MultiValueGeneric
var MultiValueLabel = MultiValueGeneric
var MultiValueRemove =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(MultiValueRemove, _Component)

		function MultiValueRemove() {
			_classCallCheck$2(this, MultiValueRemove)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(MultiValueRemove).apply(this, arguments)
			)
		}

		_createClass$2(MultiValueRemove, [
			{
				key: 'render',
				value: function render() {
					var _this$props = this.props,
						children = _this$props.children,
						innerProps = _this$props.innerProps
					return React__default.createElement(
						'div',
						innerProps,
						children ||
							React__default.createElement(CrossIcon, {
								size: 14
							})
					)
				}
			}
		])

		return MultiValueRemove
	})(Component)

var MultiValue =
	/*#__PURE__*/
	(function(_Component2) {
		_inherits$2(MultiValue, _Component2)

		function MultiValue() {
			_classCallCheck$2(this, MultiValue)

			return _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(MultiValue).apply(this, arguments)
			)
		}

		_createClass$2(MultiValue, [
			{
				key: 'render',
				value: function render() {
					var _this$props2 = this.props,
						children = _this$props2.children,
						className = _this$props2.className,
						components = _this$props2.components,
						cx = _this$props2.cx,
						data = _this$props2.data,
						getStyles = _this$props2.getStyles,
						innerProps = _this$props2.innerProps,
						isDisabled = _this$props2.isDisabled,
						removeProps = _this$props2.removeProps,
						selectProps = _this$props2.selectProps
					var Container = components.Container,
						Label = components.Label,
						Remove = components.Remove

					var containerInnerProps = _objectSpread$1(
						{
							className: cx(
								/*#__PURE__*/
								css$2(getStyles('multiValue', this.props)),
								{
									'multi-value': true,
									'multi-value--is-disabled': isDisabled
								},
								className
							)
						},
						innerProps
					)

					var labelInnerProps = {
						className: cx(
							/*#__PURE__*/
							css$2(getStyles('multiValueLabel', this.props)),
							{
								'multi-value__label': true
							},
							className
						)
					}

					var removeInnerProps = _objectSpread$1(
						{
							className: cx(
								/*#__PURE__*/
								css$2(
									getStyles('multiValueRemove', this.props)
								),
								{
									'multi-value__remove': true
								},
								className
							)
						},
						removeProps
					)

					return React__default.createElement(
						Container,
						{
							data: data,
							innerProps: containerInnerProps,
							selectProps: selectProps
						},
						React__default.createElement(
							Label,
							{
								data: data,
								innerProps: labelInnerProps,
								selectProps: selectProps
							},
							children
						),
						React__default.createElement(Remove, {
							data: data,
							innerProps: removeInnerProps,
							selectProps: selectProps
						})
					)
				}
			}
		])

		return MultiValue
	})(Component)

_defineProperty$3(MultiValue, 'defaultProps', {
	cropWithEllipsis: true
})

var optionCSS = function optionCSS(_ref) {
	var isDisabled = _ref.isDisabled,
		isFocused = _ref.isFocused,
		isSelected = _ref.isSelected,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors
	return {
		label: 'option',
		backgroundColor: isSelected
			? colors.primary
			: isFocused
			? colors.primary25
			: 'transparent',
		color: isDisabled
			? colors.neutral20
			: isSelected
			? colors.neutral0
			: 'inherit',
		cursor: 'default',
		display: 'block',
		fontSize: 'inherit',
		padding: ''
			.concat(spacing.baseUnit * 2, 'px ')
			.concat(spacing.baseUnit * 3, 'px'),
		width: '100%',
		userSelect: 'none',
		WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',
		// provide some affordance on touch devices
		':active': {
			backgroundColor:
				!isDisabled && (isSelected ? colors.primary : colors.primary50)
		}
	}
}

var Option = function Option(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		isDisabled = props.isDisabled,
		isFocused = props.isFocused,
		isSelected = props.isSelected,
		innerRef = props.innerRef,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4(
			{
				ref: innerRef,
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('option', props)),
					{
						option: true,
						'option--is-disabled': isDisabled,
						'option--is-focused': isFocused,
						'option--is-selected': isSelected
					},
					className
				)
			},
			innerProps
		),
		children
	)
}

var placeholderCSS = function placeholderCSS(_ref) {
	var _ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors
	return {
		label: 'placeholder',
		color: colors.neutral50,
		marginLeft: spacing.baseUnit / 2,
		marginRight: spacing.baseUnit / 2,
		position: 'absolute',
		top: '50%',
		transform: 'translateY(-50%)'
	}
}

var Placeholder = function Placeholder(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('placeholder', props)),
					{
						placeholder: true
					},
					className
				)
			},
			innerProps
		),
		children
	)
}

var css$2$1 = function css$$1(_ref) {
	var isDisabled = _ref.isDisabled,
		_ref$theme = _ref.theme,
		spacing = _ref$theme.spacing,
		colors = _ref$theme.colors
	return {
		label: 'singleValue',
		color: isDisabled ? colors.neutral40 : colors.neutral80,
		marginLeft: spacing.baseUnit / 2,
		marginRight: spacing.baseUnit / 2,
		maxWidth: 'calc(100% - '.concat(spacing.baseUnit * 2, 'px)'),
		overflow: 'hidden',
		position: 'absolute',
		textOverflow: 'ellipsis',
		whiteSpace: 'nowrap',
		top: '50%',
		transform: 'translateY(-50%)'
	}
}

var SingleValue = function SingleValue(props) {
	var children = props.children,
		className = props.className,
		cx = props.cx,
		getStyles = props.getStyles,
		isDisabled = props.isDisabled,
		innerProps = props.innerProps
	return React__default.createElement(
		'div',
		_extends$4(
			{
				className: cx(
					/*#__PURE__*/
					css$2(getStyles('singleValue', props)),
					{
						'single-value': true,
						'single-value--is-disabled': isDisabled
					},
					className
				)
			},
			innerProps
		),
		children
	)
}

var components$1 = {
	ClearIndicator: ClearIndicator,
	Control: Control,
	DropdownIndicator: DropdownIndicator,
	DownChevron: DownChevron,
	CrossIcon: CrossIcon,
	Group: Group,
	GroupHeading: GroupHeading,
	IndicatorsContainer: IndicatorsContainer,
	IndicatorSeparator: IndicatorSeparator,
	Input: Input$1,
	LoadingIndicator: LoadingIndicator,
	Menu: Menu,
	MenuList: MenuList,
	MenuPortal: MenuPortal,
	LoadingMessage: LoadingMessage,
	NoOptionsMessage: NoOptionsMessage,
	MultiValue: MultiValue,
	MultiValueContainer: MultiValueContainer,
	MultiValueLabel: MultiValueLabel,
	MultiValueRemove: MultiValueRemove,
	Option: Option,
	Placeholder: Placeholder,
	SelectContainer: SelectContainer,
	SingleValue: SingleValue,
	ValueContainer: ValueContainer
}
var defaultComponents = function defaultComponents(props) {
	return _objectSpread$1({}, components$1, props.components)
}

var defaultStyles = {
	clearIndicator: clearIndicatorCSS,
	container: containerCSS,
	control: css$1$1,
	dropdownIndicator: dropdownIndicatorCSS,
	group: groupCSS,
	groupHeading: groupHeadingCSS,
	indicatorsContainer: indicatorsContainerCSS,
	indicatorSeparator: indicatorSeparatorCSS,
	input: inputCSS,
	loadingIndicator: loadingIndicatorCSS,
	loadingMessage: loadingMessageCSS,
	menu: menuCSS,
	menuList: menuListCSS,
	menuPortal: menuPortalCSS,
	multiValue: multiValueCSS,
	multiValueLabel: multiValueLabelCSS,
	multiValueRemove: multiValueRemoveCSS,
	noOptionsMessage: noOptionsMessageCSS,
	option: optionCSS,
	placeholder: placeholderCSS,
	singleValue: css$2$1,
	valueContainer: valueContainerCSS
} // Merge Utility

var colors$2 = {
	primary: '#2684FF',
	primary75: '#4C9AFF',
	primary50: '#B2D4FF',
	primary25: '#DEEBFF',
	danger: '#DE350B',
	dangerLight: '#FFBDAD',
	neutral0: 'hsl(0, 0%, 100%)',
	neutral5: 'hsl(0, 0%, 95%)',
	neutral10: 'hsl(0, 0%, 90%)',
	neutral20: 'hsl(0, 0%, 80%)',
	neutral30: 'hsl(0, 0%, 70%)',
	neutral40: 'hsl(0, 0%, 60%)',
	neutral50: 'hsl(0, 0%, 50%)',
	neutral60: 'hsl(0, 0%, 40%)',
	neutral70: 'hsl(0, 0%, 30%)',
	neutral80: 'hsl(0, 0%, 20%)',
	neutral90: 'hsl(0, 0%, 10%)'
}
var borderRadius = 4
var baseUnit = 4
/* Used to calculate consistent margin/padding on elements */

var controlHeight = 38
/* The minimum height of the control */

var menuGutter = baseUnit * 2
/* The amount of space between the control and menu */

var spacing = {
	baseUnit: baseUnit,
	controlHeight: controlHeight,
	menuGutter: menuGutter
}
var defaultTheme = {
	borderRadius: borderRadius,
	colors: colors$2,
	spacing: spacing
}

var defaultProps = {
	backspaceRemovesValue: true,
	blurInputOnSelect: isTouchCapable(),
	captureMenuScroll: !isTouchCapable(),
	closeMenuOnSelect: true,
	closeMenuOnScroll: false,
	components: {},
	controlShouldRenderValue: true,
	escapeClearsValue: false,
	filterOption: createFilter(),
	formatGroupLabel: formatGroupLabel,
	getOptionLabel: getOptionLabel,
	getOptionValue: getOptionValue,
	isDisabled: false,
	isLoading: false,
	isMulti: false,
	isRtl: false,
	isSearchable: true,
	isOptionDisabled: isOptionDisabled,
	loadingMessage: function loadingMessage() {
		return 'Loading...'
	},
	maxMenuHeight: 300,
	minMenuHeight: 140,
	menuIsOpen: false,
	menuPlacement: 'bottom',
	menuPosition: 'absolute',
	menuShouldBlockScroll: false,
	menuShouldScrollIntoView: !isMobileDevice(),
	noOptionsMessage: function noOptionsMessage() {
		return 'No options'
	},
	openMenuOnFocus: false,
	openMenuOnClick: true,
	options: [],
	pageSize: 5,
	placeholder: 'Select...',
	screenReaderStatus: function screenReaderStatus(_ref) {
		var count = _ref.count
		return ''
			.concat(count, ' result')
			.concat(count !== 1 ? 's' : '', ' available')
	},
	styles: {},
	tabIndex: '0',
	tabSelectsValue: true
}
var instanceId = 1

var Select =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(Select, _Component)

		// Misc. Instance Properties
		// ------------------------------
		// TODO
		// Refs
		// ------------------------------
		// Lifecycle
		// ------------------------------
		function Select(_props) {
			var _this

			_classCallCheck$2(this, Select)

			_this = _possibleConstructorReturn$2(
				this,
				_getPrototypeOf(Select).call(this, _props)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'state',
				{
					ariaLiveSelection: '',
					ariaLiveContext: '',
					focusedOption: null,
					focusedValue: null,
					inputIsHidden: false,
					isFocused: false,
					menuOptions: {
						render: [],
						focusable: []
					},
					selectValue: []
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'blockOptionHover',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'isComposing',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'clearFocusValueOnUpdate',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'commonProps',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'components',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'hasGroups',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'initialTouchX',
				0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'initialTouchY',
				0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'inputIsHiddenAfterUpdate',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'instancePrefix',
				''
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'openAfterFocus',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'scrollToFocusedOptionOnUpdate',
				false
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'userIsDragging',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'controlRef',
				null
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getControlRef',
				function(ref) {
					_this.controlRef = ref
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'focusedOptionRef',
				null
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getFocusedOptionRef',
				function(ref) {
					_this.focusedOptionRef = ref
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'menuListRef',
				null
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getMenuListRef',
				function(ref) {
					_this.menuListRef = ref
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'inputRef',
				null
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getInputRef',
				function(ref) {
					_this.inputRef = ref
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'cacheComponents',
				function(components$$1) {
					_this.components = defaultComponents({
						components: components$$1
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'focus',
				_this.focusInput
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'blur',
				_this.blurInput
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onChange',
				function(newValue, actionMeta) {
					var _this$props = _this.props,
						onChange = _this$props.onChange,
						name = _this$props.name
					onChange(
						newValue,
						_objectSpread$1({}, actionMeta, {
							name: name
						})
					)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'setValue',
				function(newValue) {
					var action =
						arguments.length > 1 && arguments[1] !== undefined
							? arguments[1]
							: 'set-value'
					var option = arguments.length > 2 ? arguments[2] : undefined
					var _this$props2 = _this.props,
						closeMenuOnSelect = _this$props2.closeMenuOnSelect,
						isMulti = _this$props2.isMulti

					_this.onInputChange('', {
						action: 'set-value'
					})

					if (closeMenuOnSelect) {
						_this.inputIsHiddenAfterUpdate = !isMulti

						_this.onMenuClose()
					} // when the select value should change, we should reset focusedValue

					_this.clearFocusValueOnUpdate = true

					_this.onChange(newValue, {
						action: action,
						option: option
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'selectOption',
				function(newValue) {
					var _this$props3 = _this.props,
						blurInputOnSelect = _this$props3.blurInputOnSelect,
						isMulti = _this$props3.isMulti
					var selectValue = _this.state.selectValue

					if (isMulti) {
						if (_this.isOptionSelected(newValue, selectValue)) {
							var candidate = _this.getOptionValue(newValue)

							_this.setValue(
								selectValue.filter(function(i) {
									return _this.getOptionValue(i) !== candidate
								}),
								'deselect-option',
								newValue
							)

							_this.announceAriaLiveSelection({
								event: 'deselect-option',
								context: {
									value: _this.getOptionLabel(newValue)
								}
							})
						} else {
							if (
								!_this.isOptionDisabled(newValue, selectValue)
							) {
								_this.setValue(
									[].concat(
										_toConsumableArray$1(selectValue),
										[newValue]
									),
									'select-option',
									newValue
								)

								_this.announceAriaLiveSelection({
									event: 'select-option',
									context: {
										value: _this.getOptionLabel(newValue)
									}
								})
							} else {
								// announce that option is disabled
								_this.announceAriaLiveSelection({
									event: 'select-option',
									context: {
										value: _this.getOptionLabel(newValue),
										isDisabled: true
									}
								})
							}
						}
					} else {
						if (!_this.isOptionDisabled(newValue, selectValue)) {
							_this.setValue(newValue, 'select-option')

							_this.announceAriaLiveSelection({
								event: 'select-option',
								context: {
									value: _this.getOptionLabel(newValue)
								}
							})
						} else {
							// announce that option is disabled
							_this.announceAriaLiveSelection({
								event: 'select-option',
								context: {
									value: _this.getOptionLabel(newValue),
									isDisabled: true
								}
							})
						}
					}

					if (blurInputOnSelect) {
						_this.blurInput()
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'removeValue',
				function(removedValue) {
					var selectValue = _this.state.selectValue

					var candidate = _this.getOptionValue(removedValue)

					_this.onChange(
						selectValue.filter(function(i) {
							return _this.getOptionValue(i) !== candidate
						}),
						{
							action: 'remove-value',
							removedValue: removedValue
						}
					)

					_this.announceAriaLiveSelection({
						event: 'remove-value',
						context: {
							value: removedValue
								? _this.getOptionLabel(removedValue)
								: ''
						}
					})

					_this.focusInput()
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'clearValue',
				function() {
					var isMulti = _this.props.isMulti

					_this.onChange(isMulti ? [] : null, {
						action: 'clear'
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'popValue',
				function() {
					var selectValue = _this.state.selectValue
					var lastSelectedValue = selectValue[selectValue.length - 1]

					_this.announceAriaLiveSelection({
						event: 'pop-value',
						context: {
							value: lastSelectedValue
								? _this.getOptionLabel(lastSelectedValue)
								: ''
						}
					})

					_this.onChange(
						selectValue.slice(0, selectValue.length - 1),
						{
							action: 'pop-value',
							removedValue: lastSelectedValue
						}
					)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getOptionLabel',
				function(data) {
					return _this.props.getOptionLabel(data)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getOptionValue',
				function(data) {
					return _this.props.getOptionValue(data)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getStyles',
				function(key, props) {
					var base = defaultStyles[key](props)
					base.boxSizing = 'border-box'
					var custom = _this.props.styles[key]
					return custom ? custom(base, props) : base
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getElementId',
				function(element) {
					return ''.concat(_this.instancePrefix, '-').concat(element)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getActiveDescendentId',
				function() {
					var menuIsOpen = _this.props.menuIsOpen
					var _this$state = _this.state,
						menuOptions = _this$state.menuOptions,
						focusedOption = _this$state.focusedOption
					if (!focusedOption || !menuIsOpen) return undefined
					var index = menuOptions.focusable.indexOf(focusedOption)
					var option = menuOptions.render[index]
					return option && option.key
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'announceAriaLiveSelection',
				function(_ref2) {
					var event = _ref2.event,
						context = _ref2.context

					_this.setState({
						ariaLiveSelection: valueEventAriaMessage(event, context)
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'announceAriaLiveContext',
				function(_ref3) {
					var event = _ref3.event,
						context = _ref3.context

					_this.setState({
						ariaLiveContext: instructionsAriaMessage(
							event,
							_objectSpread$1({}, context, {
								label: _this.props['aria-label']
							})
						)
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onMenuMouseDown',
				function(event) {
					if (event.button !== 0) {
						return
					}

					event.stopPropagation()
					event.preventDefault()

					_this.focusInput()
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onMenuMouseMove',
				function(event) {
					_this.blockOptionHover = false
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onControlMouseDown',
				function(event) {
					var openMenuOnClick = _this.props.openMenuOnClick

					if (!_this.state.isFocused) {
						if (openMenuOnClick) {
							_this.openAfterFocus = true
						}

						_this.focusInput()
					} else if (!_this.props.menuIsOpen) {
						if (openMenuOnClick) {
							_this.openMenu('first')
						}
					} else {
						//$FlowFixMe
						if (event.target.tagName !== 'INPUT') {
							_this.onMenuClose()
						}
					} //$FlowFixMe

					if (event.target.tagName !== 'INPUT') {
						event.preventDefault()
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onDropdownIndicatorMouseDown',
				function(event) {
					// ignore mouse events that weren't triggered by the primary button
					if (
						event &&
						event.type === 'mousedown' &&
						event.button !== 0
					) {
						return
					}

					if (_this.props.isDisabled) return
					var _this$props4 = _this.props,
						isMulti = _this$props4.isMulti,
						menuIsOpen = _this$props4.menuIsOpen

					_this.focusInput()

					if (menuIsOpen) {
						_this.inputIsHiddenAfterUpdate = !isMulti

						_this.onMenuClose()
					} else {
						_this.openMenu('first')
					}

					event.preventDefault()
					event.stopPropagation()
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onClearIndicatorMouseDown',
				function(event) {
					// ignore mouse events that weren't triggered by the primary button
					if (
						event &&
						event.type === 'mousedown' &&
						event.button !== 0
					) {
						return
					}

					_this.clearValue()

					event.stopPropagation()
					_this.openAfterFocus = false
					setTimeout(function() {
						return _this.focusInput()
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onScroll',
				function(event) {
					if (typeof _this.props.closeMenuOnScroll === 'boolean') {
						if (
							event.target instanceof HTMLElement &&
							isDocumentElement(event.target)
						) {
							_this.props.onMenuClose()
						}
					} else if (
						typeof _this.props.closeMenuOnScroll === 'function'
					) {
						if (_this.props.closeMenuOnScroll(event)) {
							_this.props.onMenuClose()
						}
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onCompositionStart',
				function() {
					_this.isComposing = true
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onCompositionEnd',
				function() {
					_this.isComposing = false
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onTouchStart',
				function(_ref4) {
					var touches = _ref4.touches
					var touch = touches.item(0)

					if (!touch) {
						return
					}

					_this.initialTouchX = touch.clientX
					_this.initialTouchY = touch.clientY
					_this.userIsDragging = false
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onTouchMove',
				function(_ref5) {
					var touches = _ref5.touches
					var touch = touches.item(0)

					if (!touch) {
						return
					}

					var deltaX = Math.abs(touch.clientX - _this.initialTouchX)
					var deltaY = Math.abs(touch.clientY - _this.initialTouchY)
					var moveThreshold = 5
					_this.userIsDragging =
						deltaX > moveThreshold || deltaY > moveThreshold
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onTouchEnd',
				function(event) {
					if (_this.userIsDragging) return // close the menu if the user taps outside
					// we're checking on event.target here instead of event.currentTarget, because we want to assert information
					// on events on child elements, not the document (which we've attached this handler to).

					if (
						_this.controlRef &&
						!_this.controlRef.contains(event.target) &&
						_this.menuListRef &&
						!_this.menuListRef.contains(event.target)
					) {
						_this.blurInput()
					} // reset move vars

					_this.initialTouchX = 0
					_this.initialTouchY = 0
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onControlTouchEnd',
				function(event) {
					if (_this.userIsDragging) return

					_this.onControlMouseDown(event)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onClearIndicatorTouchEnd',
				function(event) {
					if (_this.userIsDragging) return

					_this.onClearIndicatorMouseDown(event)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onDropdownIndicatorTouchEnd',
				function(event) {
					if (_this.userIsDragging) return

					_this.onDropdownIndicatorMouseDown(event)
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'handleInputChange',
				function(event) {
					var inputValue = event.currentTarget.value
					_this.inputIsHiddenAfterUpdate = false

					_this.onInputChange(inputValue, {
						action: 'input-change'
					})

					_this.onMenuOpen()
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onInputFocus',
				function(event) {
					var _this$props5 = _this.props,
						isSearchable = _this$props5.isSearchable,
						isMulti = _this$props5.isMulti

					if (_this.props.onFocus) {
						_this.props.onFocus(event)
					}

					_this.inputIsHiddenAfterUpdate = false

					_this.announceAriaLiveContext({
						event: 'input',
						context: {
							isSearchable: isSearchable,
							isMulti: isMulti
						}
					})

					_this.setState({
						isFocused: true
					})

					if (_this.openAfterFocus || _this.props.openMenuOnFocus) {
						_this.openMenu('first')
					}

					_this.openAfterFocus = false
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onInputBlur',
				function(event) {
					if (
						_this.menuListRef &&
						_this.menuListRef.contains(document.activeElement)
					) {
						_this.inputRef.focus()

						return
					}

					if (_this.props.onBlur) {
						_this.props.onBlur(event)
					}

					_this.onInputChange('', {
						action: 'input-blur'
					})

					_this.onMenuClose()

					_this.setState({
						focusedValue: null,
						isFocused: false
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onOptionHover',
				function(focusedOption) {
					if (
						_this.blockOptionHover ||
						_this.state.focusedOption === focusedOption
					) {
						return
					}

					_this.setState({
						focusedOption: focusedOption
					})
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'shouldHideSelectedOptions',
				function() {
					var _this$props6 = _this.props,
						hideSelectedOptions = _this$props6.hideSelectedOptions,
						isMulti = _this$props6.isMulti
					if (hideSelectedOptions === undefined) return isMulti
					return hideSelectedOptions
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'onKeyDown',
				function(event) {
					var _this$props7 = _this.props,
						isMulti = _this$props7.isMulti,
						backspaceRemovesValue =
							_this$props7.backspaceRemovesValue,
						escapeClearsValue = _this$props7.escapeClearsValue,
						inputValue = _this$props7.inputValue,
						isClearable = _this$props7.isClearable,
						isDisabled = _this$props7.isDisabled,
						menuIsOpen = _this$props7.menuIsOpen,
						onKeyDown = _this$props7.onKeyDown,
						tabSelectsValue = _this$props7.tabSelectsValue,
						openMenuOnFocus = _this$props7.openMenuOnFocus
					var _this$state2 = _this.state,
						focusedOption = _this$state2.focusedOption,
						focusedValue = _this$state2.focusedValue,
						selectValue = _this$state2.selectValue
					if (isDisabled) return

					if (typeof onKeyDown === 'function') {
						onKeyDown(event)

						if (event.defaultPrevented) {
							return
						}
					} // Block option hover events when the user has just pressed a key

					_this.blockOptionHover = true

					switch (event.key) {
						case 'ArrowLeft':
							if (!isMulti || inputValue) return

							_this.focusValue('previous')

							break

						case 'ArrowRight':
							if (!isMulti || inputValue) return

							_this.focusValue('next')

							break

						case 'Delete':
						case 'Backspace':
							if (inputValue) return

							if (focusedValue) {
								_this.removeValue(focusedValue)
							} else {
								if (!backspaceRemovesValue) return

								if (isMulti) {
									_this.popValue()
								} else if (isClearable) {
									_this.clearValue()
								}
							}

							break

						case 'Tab':
							if (_this.isComposing) return

							if (
								event.shiftKey ||
								!menuIsOpen ||
								!tabSelectsValue ||
								!focusedOption || // don't capture the event if the menu opens on focus and the focused
								// option is already selected; it breaks the flow of navigation
								(openMenuOnFocus &&
									_this.isOptionSelected(
										focusedOption,
										selectValue
									))
							) {
								return
							}

							_this.selectOption(focusedOption)

							break

						case 'Enter':
							if (event.keyCode === 229) {
								// ignore the keydown event from an Input Method Editor(IME)
								// ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode
								break
							}

							if (menuIsOpen) {
								if (!focusedOption) return
								if (_this.isComposing) return

								_this.selectOption(focusedOption)

								break
							}

							return

						case 'Escape':
							if (menuIsOpen) {
								_this.inputIsHiddenAfterUpdate = false

								_this.onInputChange('', {
									action: 'menu-close'
								})

								_this.onMenuClose()
							} else if (isClearable && escapeClearsValue) {
								_this.clearValue()
							}

							break

						case ' ':
							// space
							if (inputValue) {
								return
							}

							if (!menuIsOpen) {
								_this.openMenu('first')

								break
							}

							if (!focusedOption) return

							_this.selectOption(focusedOption)

							break

						case 'ArrowUp':
							if (menuIsOpen) {
								_this.focusOption('up')
							} else {
								_this.openMenu('last')
							}

							break

						case 'ArrowDown':
							if (menuIsOpen) {
								_this.focusOption('down')
							} else {
								_this.openMenu('first')
							}

							break

						case 'PageUp':
							if (!menuIsOpen) return

							_this.focusOption('pageup')

							break

						case 'PageDown':
							if (!menuIsOpen) return

							_this.focusOption('pagedown')

							break

						case 'Home':
							if (!menuIsOpen) return

							_this.focusOption('first')

							break

						case 'End':
							if (!menuIsOpen) return

							_this.focusOption('last')

							break

						default:
							return
					}

					event.preventDefault()
				}
			)

			var value = _props.value
			_this.cacheComponents = index$1(
				_this.cacheComponents,
				exportedEqual
			).bind(_assertThisInitialized$1(_assertThisInitialized$1(_this)))

			_this.cacheComponents(_props.components)

			_this.instancePrefix =
				'react-select-' + (_this.props.instanceId || ++instanceId)

			var _selectValue = cleanValue(value)

			var _menuOptions = _this.buildMenuOptions(_props, _selectValue)

			_this.state.menuOptions = _menuOptions
			_this.state.selectValue = _selectValue
			return _this
		}

		_createClass$2(Select, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.startListeningComposition()
					this.startListeningToTouch()

					if (
						this.props.closeMenuOnScroll &&
						document &&
						document.addEventListener
					) {
						// Listen to all scroll events, and filter them out inside of 'onScroll'
						document.addEventListener('scroll', this.onScroll, true)
					}

					if (this.props.autoFocus) {
						this.focusInput()
					}
				}
			},
			{
				key: 'componentWillReceiveProps',
				value: function componentWillReceiveProps(nextProps) {
					var _this$props8 = this.props,
						options = _this$props8.options,
						value = _this$props8.value,
						inputValue = _this$props8.inputValue // re-cache custom components

					this.cacheComponents(nextProps.components) // rebuild the menu options

					if (
						nextProps.value !== value ||
						nextProps.options !== options ||
						nextProps.inputValue !== inputValue
					) {
						var selectValue = cleanValue(nextProps.value)
						var menuOptions = this.buildMenuOptions(
							nextProps,
							selectValue
						)
						var focusedValue = this.getNextFocusedValue(selectValue)
						var focusedOption = this.getNextFocusedOption(
							menuOptions.focusable
						)
						this.setState({
							menuOptions: menuOptions,
							selectValue: selectValue,
							focusedOption: focusedOption,
							focusedValue: focusedValue
						})
					} // some updates should toggle the state of the input visibility

					if (this.inputIsHiddenAfterUpdate != null) {
						this.setState({
							inputIsHidden: this.inputIsHiddenAfterUpdate
						})
						delete this.inputIsHiddenAfterUpdate
					}
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps) {
					var _this$props9 = this.props,
						isDisabled = _this$props9.isDisabled,
						menuIsOpen = _this$props9.menuIsOpen
					var isFocused = this.state.isFocused

					if (
						// ensure focus is restored correctly when the control becomes enabled
						(isFocused && !isDisabled && prevProps.isDisabled) || // ensure focus is on the Input when the menu opens
						(isFocused && menuIsOpen && !prevProps.menuIsOpen)
					) {
						this.focusInput()
					} // scroll the focused option into view if necessary

					if (
						this.menuListRef &&
						this.focusedOptionRef &&
						this.scrollToFocusedOptionOnUpdate
					) {
						scrollIntoView$1(
							this.menuListRef,
							this.focusedOptionRef
						)
					}

					this.scrollToFocusedOptionOnUpdate = false
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.stopListeningComposition()
					this.stopListeningToTouch()
					document.removeEventListener('scroll', this.onScroll, true)
				}
			},
			{
				key: 'onMenuOpen',
				// ==============================
				// Consumer Handlers
				// ==============================
				value: function onMenuOpen() {
					this.props.onMenuOpen()
				}
			},
			{
				key: 'onMenuClose',
				value: function onMenuClose() {
					var _this$props10 = this.props,
						isSearchable = _this$props10.isSearchable,
						isMulti = _this$props10.isMulti
					this.announceAriaLiveContext({
						event: 'input',
						context: {
							isSearchable: isSearchable,
							isMulti: isMulti
						}
					})
					this.onInputChange('', {
						action: 'menu-close'
					})
					this.props.onMenuClose()
				}
			},
			{
				key: 'onInputChange',
				value: function onInputChange(newValue, actionMeta) {
					this.props.onInputChange(newValue, actionMeta)
				} // ==============================
				// Methods
				// ==============================
			},
			{
				key: 'focusInput',
				value: function focusInput() {
					if (!this.inputRef) return
					this.inputRef.focus()
				}
			},
			{
				key: 'blurInput',
				value: function blurInput() {
					if (!this.inputRef) return
					this.inputRef.blur()
				} // aliased for consumers
			},
			{
				key: 'openMenu',
				value: function openMenu(focusOption) {
					var _this$state3 = this.state,
						menuOptions = _this$state3.menuOptions,
						selectValue = _this$state3.selectValue,
						isFocused = _this$state3.isFocused
					var isMulti = this.props.isMulti
					var openAtIndex =
						focusOption === 'first'
							? 0
							: menuOptions.focusable.length - 1

					if (!isMulti) {
						var selectedIndex = menuOptions.focusable.indexOf(
							selectValue[0]
						)

						if (selectedIndex > -1) {
							openAtIndex = selectedIndex
						}
					} // only scroll if the menu isn't already open

					this.scrollToFocusedOptionOnUpdate = !(
						isFocused && this.menuListRef
					)
					this.inputIsHiddenAfterUpdate = false
					this.onMenuOpen()
					this.setState({
						focusedValue: null,
						focusedOption: menuOptions.focusable[openAtIndex]
					})
					this.announceAriaLiveContext({
						event: 'menu'
					})
				}
			},
			{
				key: 'focusValue',
				value: function focusValue(direction) {
					var _this$props11 = this.props,
						isMulti = _this$props11.isMulti,
						isSearchable = _this$props11.isSearchable
					var _this$state4 = this.state,
						selectValue = _this$state4.selectValue,
						focusedValue = _this$state4.focusedValue // Only multiselects support value focusing

					if (!isMulti) return
					this.setState({
						focusedOption: null
					})
					var focusedIndex = selectValue.indexOf(focusedValue)

					if (!focusedValue) {
						focusedIndex = -1
						this.announceAriaLiveContext({
							event: 'value'
						})
					}

					var lastIndex = selectValue.length - 1
					var nextFocus = -1
					if (!selectValue.length) return

					switch (direction) {
						case 'previous':
							if (focusedIndex === 0) {
								// don't cycle from the start to the end
								nextFocus = 0
							} else if (focusedIndex === -1) {
								// if nothing is focused, focus the last value first
								nextFocus = lastIndex
							} else {
								nextFocus = focusedIndex - 1
							}

							break

						case 'next':
							if (focusedIndex > -1 && focusedIndex < lastIndex) {
								nextFocus = focusedIndex + 1
							}

							break
					}

					if (nextFocus === -1) {
						this.announceAriaLiveContext({
							event: 'input',
							context: {
								isSearchable: isSearchable,
								isMulti: isMulti
							}
						})
					}

					this.setState({
						inputIsHidden: nextFocus === -1 ? false : true,
						focusedValue: selectValue[nextFocus]
					})
				}
			},
			{
				key: 'focusOption',
				value: function focusOption() {
					var direction =
						arguments.length > 0 && arguments[0] !== undefined
							? arguments[0]
							: 'first'
					var pageSize = this.props.pageSize
					var _this$state5 = this.state,
						focusedOption = _this$state5.focusedOption,
						menuOptions = _this$state5.menuOptions
					var options = menuOptions.focusable
					if (!options.length) return
					var nextFocus = 0 // handles 'first'

					var focusedIndex = options.indexOf(focusedOption)

					if (!focusedOption) {
						focusedIndex = -1
						this.announceAriaLiveContext({
							event: 'menu'
						})
					}

					if (direction === 'up') {
						nextFocus =
							focusedIndex > 0
								? focusedIndex - 1
								: options.length - 1
					} else if (direction === 'down') {
						nextFocus = (focusedIndex + 1) % options.length
					} else if (direction === 'pageup') {
						nextFocus = focusedIndex - pageSize
						if (nextFocus < 0) nextFocus = 0
					} else if (direction === 'pagedown') {
						nextFocus = focusedIndex + pageSize
						if (nextFocus > options.length - 1)
							nextFocus = options.length - 1
					} else if (direction === 'last') {
						nextFocus = options.length - 1
					}

					this.scrollToFocusedOptionOnUpdate = true
					this.setState({
						focusedOption: options[nextFocus],
						focusedValue: null
					})
					this.announceAriaLiveContext({
						event: 'menu',
						context: {
							isDisabled: isOptionDisabled(options[nextFocus])
						}
					})
				}
			},
			{
				key: 'getTheme',
				// ==============================
				// Getters
				// ==============================
				value: function getTheme() {
					// Use the default theme if there are no customizations.
					if (!this.props.theme) {
						return defaultTheme
					} // If the theme prop is a function, assume the function
					// knows how to merge the passed-in default theme with
					// its own modifications.

					if (typeof this.props.theme === 'function') {
						return this.props.theme(defaultTheme)
					} // Otherwise, if a plain theme object was passed in,
					// overlay it with the default theme.

					return _objectSpread$1({}, defaultTheme, this.props.theme)
				}
			},
			{
				key: 'getCommonProps',
				value: function getCommonProps() {
					var clearValue = this.clearValue,
						getStyles = this.getStyles,
						setValue = this.setValue,
						selectOption = this.selectOption,
						props = this.props
					var classNamePrefix = props.classNamePrefix,
						isMulti = props.isMulti,
						isRtl = props.isRtl,
						options = props.options
					var selectValue = this.state.selectValue
					var hasValue = this.hasValue()

					var getValue = function getValue() {
						return selectValue
					}

					var cx = classNames$1.bind(null, classNamePrefix)
					return {
						cx: cx,
						clearValue: clearValue,
						getStyles: getStyles,
						getValue: getValue,
						hasValue: hasValue,
						isMulti: isMulti,
						isRtl: isRtl,
						options: options,
						selectOption: selectOption,
						setValue: setValue,
						selectProps: props,
						theme: this.getTheme()
					}
				}
			},
			{
				key: 'getNextFocusedValue',
				value: function getNextFocusedValue(nextSelectValue) {
					if (this.clearFocusValueOnUpdate) {
						this.clearFocusValueOnUpdate = false
						return null
					}

					var _this$state6 = this.state,
						focusedValue = _this$state6.focusedValue,
						lastSelectValue = _this$state6.selectValue
					var lastFocusedIndex = lastSelectValue.indexOf(focusedValue)

					if (lastFocusedIndex > -1) {
						var nextFocusedIndex = nextSelectValue.indexOf(
							focusedValue
						)

						if (nextFocusedIndex > -1) {
							// the focused value is still in the selectValue, return it
							return focusedValue
						} else if (lastFocusedIndex < nextSelectValue.length) {
							// the focusedValue is not present in the next selectValue array by
							// reference, so return the new value at the same index
							return nextSelectValue[lastFocusedIndex]
						}
					}

					return null
				}
			},
			{
				key: 'getNextFocusedOption',
				value: function getNextFocusedOption(options) {
					var lastFocusedOption = this.state.focusedOption
					return lastFocusedOption &&
						options.indexOf(lastFocusedOption) > -1
						? lastFocusedOption
						: options[0]
				}
			},
			{
				key: 'hasValue',
				value: function hasValue() {
					var selectValue = this.state.selectValue
					return selectValue.length > 0
				}
			},
			{
				key: 'hasOptions',
				value: function hasOptions() {
					return !!this.state.menuOptions.render.length
				}
			},
			{
				key: 'countOptions',
				value: function countOptions() {
					return this.state.menuOptions.focusable.length
				}
			},
			{
				key: 'isClearable',
				value: function isClearable() {
					var _this$props12 = this.props,
						isClearable = _this$props12.isClearable,
						isMulti = _this$props12.isMulti // single select, by default, IS NOT clearable
					// multi select, by default, IS clearable

					if (isClearable === undefined) return isMulti
					return isClearable
				}
			},
			{
				key: 'isOptionDisabled',
				value: function isOptionDisabled$$1(option, selectValue) {
					return typeof this.props.isOptionDisabled === 'function'
						? this.props.isOptionDisabled(option, selectValue)
						: false
				}
			},
			{
				key: 'isOptionSelected',
				value: function isOptionSelected(option, selectValue) {
					var _this2 = this

					if (selectValue.indexOf(option) > -1) return true

					if (typeof this.props.isOptionSelected === 'function') {
						return this.props.isOptionSelected(option, selectValue)
					}

					var candidate = this.getOptionValue(option)
					return selectValue.some(function(i) {
						return _this2.getOptionValue(i) === candidate
					})
				}
			},
			{
				key: 'filterOption',
				value: function filterOption(option, inputValue) {
					return this.props.filterOption
						? this.props.filterOption(option, inputValue)
						: true
				}
			},
			{
				key: 'formatOptionLabel',
				value: function formatOptionLabel(data, context) {
					if (typeof this.props.formatOptionLabel === 'function') {
						var inputValue = this.props.inputValue
						var selectValue = this.state.selectValue
						return this.props.formatOptionLabel(data, {
							context: context,
							inputValue: inputValue,
							selectValue: selectValue
						})
					} else {
						return this.getOptionLabel(data)
					}
				}
			},
			{
				key: 'formatGroupLabel',
				value: function formatGroupLabel$$1(data) {
					return this.props.formatGroupLabel(data)
				} // ==============================
				// Mouse Handlers
				// ==============================
			},
			{
				key: 'startListeningComposition',
				// ==============================
				// Composition Handlers
				// ==============================
				value: function startListeningComposition() {
					if (document && document.addEventListener) {
						document.addEventListener(
							'compositionstart',
							this.onCompositionStart,
							false
						)
						document.addEventListener(
							'compositionend',
							this.onCompositionEnd,
							false
						)
					}
				}
			},
			{
				key: 'stopListeningComposition',
				value: function stopListeningComposition() {
					if (document && document.removeEventListener) {
						document.removeEventListener(
							'compositionstart',
							this.onCompositionStart
						)
						document.removeEventListener(
							'compositionend',
							this.onCompositionEnd
						)
					}
				}
			},
			{
				key: 'startListeningToTouch',
				// ==============================
				// Touch Handlers
				// ==============================
				value: function startListeningToTouch() {
					if (document && document.addEventListener) {
						document.addEventListener(
							'touchstart',
							this.onTouchStart,
							false
						)
						document.addEventListener(
							'touchmove',
							this.onTouchMove,
							false
						)
						document.addEventListener(
							'touchend',
							this.onTouchEnd,
							false
						)
					}
				}
			},
			{
				key: 'stopListeningToTouch',
				value: function stopListeningToTouch() {
					if (document && document.removeEventListener) {
						document.removeEventListener(
							'touchstart',
							this.onTouchStart
						)
						document.removeEventListener(
							'touchmove',
							this.onTouchMove
						)
						document.removeEventListener(
							'touchend',
							this.onTouchEnd
						)
					}
				}
			},
			{
				key: 'buildMenuOptions',
				// ==============================
				// Menu Options
				// ==============================
				value: function buildMenuOptions(props, selectValue) {
					var _this3 = this

					var _props$inputValue = props.inputValue,
						inputValue =
							_props$inputValue === void 0
								? ''
								: _props$inputValue,
						options = props.options

					var toOption = function toOption(option, id) {
						var isDisabled = _this3.isOptionDisabled(
							option,
							selectValue
						)

						var isSelected = _this3.isOptionSelected(
							option,
							selectValue
						)

						var label = _this3.getOptionLabel(option)

						var value = _this3.getOptionValue(option)

						if (
							(_this3.shouldHideSelectedOptions() &&
								isSelected) ||
							!_this3.filterOption(
								{
									label: label,
									value: value,
									data: option
								},
								inputValue
							)
						) {
							return
						}

						var onHover = isDisabled
							? undefined
							: function() {
									return _this3.onOptionHover(option)
							  }
						var onSelect = isDisabled
							? undefined
							: function() {
									return _this3.selectOption(option)
							  }
						var optionId = ''
							.concat(_this3.getElementId('option'), '-')
							.concat(id)
						return {
							innerProps: {
								id: optionId,
								onClick: onSelect,
								onMouseMove: onHover,
								onMouseOver: onHover,
								tabIndex: -1
							},
							data: option,
							isDisabled: isDisabled,
							isSelected: isSelected,
							key: optionId,
							label: label,
							type: 'option',
							value: value
						}
					}

					return options.reduce(
						function(acc, item, itemIndex) {
							if (item.options) {
								// TODO needs a tidier implementation
								if (!_this3.hasGroups) _this3.hasGroups = true
								var items = item.options
								var children = items
									.map(function(child, i) {
										var option = toOption(
											child,
											''.concat(itemIndex, '-').concat(i)
										)
										if (option) acc.focusable.push(child)
										return option
									})
									.filter(Boolean)

								if (children.length) {
									var groupId = ''
										.concat(
											_this3.getElementId('group'),
											'-'
										)
										.concat(itemIndex)
									acc.render.push({
										type: 'group',
										key: groupId,
										data: item,
										options: children
									})
								}
							} else {
								var option = toOption(
									item,
									''.concat(itemIndex)
								)

								if (option) {
									acc.render.push(option)
									acc.focusable.push(item)
								}
							}

							return acc
						},
						{
							render: [],
							focusable: []
						}
					)
				} // ==============================
				// Renderers
				// ==============================
			},
			{
				key: 'constructAriaLiveMessage',
				value: function constructAriaLiveMessage() {
					var _this$state7 = this.state,
						ariaLiveContext = _this$state7.ariaLiveContext,
						selectValue = _this$state7.selectValue,
						focusedValue = _this$state7.focusedValue,
						focusedOption = _this$state7.focusedOption
					var _this$props13 = this.props,
						options = _this$props13.options,
						menuIsOpen = _this$props13.menuIsOpen,
						inputValue = _this$props13.inputValue,
						screenReaderStatus = _this$props13.screenReaderStatus // An aria live message representing the currently focused value in the select.

					var focusedValueMsg = focusedValue
						? valueFocusAriaMessage({
								focusedValue: focusedValue,
								getOptionLabel: this.getOptionLabel,
								selectValue: selectValue
						  })
						: '' // An aria live message representing the currently focused option in the select.

					var focusedOptionMsg =
						focusedOption && menuIsOpen
							? optionFocusAriaMessage({
									focusedOption: focusedOption,
									getOptionLabel: this.getOptionLabel,
									options: options
							  })
							: '' // An aria live message representing the set of focusable results and current searchterm/inputvalue.

					var resultsMsg = resultsAriaMessage({
						inputValue: inputValue,
						screenReaderMessage: screenReaderStatus({
							count: this.countOptions()
						})
					})
					return ''
						.concat(focusedValueMsg, ' ')
						.concat(focusedOptionMsg, ' ')
						.concat(resultsMsg, ' ')
						.concat(ariaLiveContext)
				}
			},
			{
				key: 'renderInput',
				value: function renderInput() {
					var _this$props14 = this.props,
						isDisabled = _this$props14.isDisabled,
						isSearchable = _this$props14.isSearchable,
						inputId = _this$props14.inputId,
						inputValue = _this$props14.inputValue,
						tabIndex = _this$props14.tabIndex
					var Input = this.components.Input
					var inputIsHidden = this.state.inputIsHidden
					var id = inputId || this.getElementId('input')

					if (!isSearchable) {
						// use a dummy input to maintain focus/blur functionality
						return React__default.createElement(DummyInput, {
							id: id,
							innerRef: this.getInputRef,
							onBlur: this.onInputBlur,
							onChange: noop$6,
							onFocus: this.onInputFocus,
							readOnly: true,
							disabled: isDisabled,
							tabIndex: tabIndex,
							value: ''
						})
					} // aria attributes makes the JSX "noisy", separated for clarity

					var ariaAttributes = {
						'aria-autocomplete': 'list',
						'aria-label': this.props['aria-label'],
						'aria-labelledby': this.props['aria-labelledby']
					}
					var _this$commonProps = this.commonProps,
						cx = _this$commonProps.cx,
						theme = _this$commonProps.theme,
						selectProps = _this$commonProps.selectProps
					return React__default.createElement(
						Input,
						_extends$4(
							{
								autoCapitalize: 'none',
								autoComplete: 'off',
								autoCorrect: 'off',
								cx: cx,
								getStyles: this.getStyles,
								id: id,
								innerRef: this.getInputRef,
								isDisabled: isDisabled,
								isHidden: inputIsHidden,
								onBlur: this.onInputBlur,
								onChange: this.handleInputChange,
								onFocus: this.onInputFocus,
								selectProps: selectProps,
								spellCheck: 'false',
								tabIndex: tabIndex,
								theme: theme,
								type: 'text',
								value: inputValue
							},
							ariaAttributes
						)
					)
				}
			},
			{
				key: 'renderPlaceholderOrValue',
				value: function renderPlaceholderOrValue() {
					var _this4 = this

					var _this$components = this.components,
						MultiValue = _this$components.MultiValue,
						MultiValueContainer =
							_this$components.MultiValueContainer,
						MultiValueLabel = _this$components.MultiValueLabel,
						MultiValueRemove = _this$components.MultiValueRemove,
						SingleValue = _this$components.SingleValue,
						Placeholder = _this$components.Placeholder
					var commonProps = this.commonProps
					var _this$props15 = this.props,
						controlShouldRenderValue =
							_this$props15.controlShouldRenderValue,
						isDisabled = _this$props15.isDisabled,
						isMulti = _this$props15.isMulti,
						inputValue = _this$props15.inputValue,
						placeholder = _this$props15.placeholder
					var _this$state8 = this.state,
						selectValue = _this$state8.selectValue,
						focusedValue = _this$state8.focusedValue,
						isFocused = _this$state8.isFocused

					if (!this.hasValue() || !controlShouldRenderValue) {
						return inputValue
							? null
							: React__default.createElement(
									Placeholder,
									_extends$4({}, commonProps, {
										key: 'placeholder',
										isDisabled: isDisabled,
										isFocused: isFocused
									}),
									placeholder
							  )
					}

					if (isMulti) {
						var selectValues = selectValue.map(function(opt) {
							var isOptionFocused = opt === focusedValue
							return React__default.createElement(
								MultiValue,
								_extends$4({}, commonProps, {
									components: {
										Container: MultiValueContainer,
										Label: MultiValueLabel,
										Remove: MultiValueRemove
									},
									isFocused: isOptionFocused,
									isDisabled: isDisabled,
									key: _this4.getOptionValue(opt),
									removeProps: {
										onClick: function onClick() {
											return _this4.removeValue(opt)
										},
										onTouchEnd: function onTouchEnd() {
											return _this4.removeValue(opt)
										},
										onMouseDown: function onMouseDown(e) {
											e.preventDefault()
											e.stopPropagation()
										}
									},
									data: opt
								}),
								_this4.formatOptionLabel(opt, 'value')
							)
						})
						return selectValues
					}

					if (inputValue) {
						return null
					}

					var singleValue = selectValue[0]
					return React__default.createElement(
						SingleValue,
						_extends$4({}, commonProps, {
							data: singleValue,
							isDisabled: isDisabled
						}),
						this.formatOptionLabel(singleValue, 'value')
					)
				}
			},
			{
				key: 'renderClearIndicator',
				value: function renderClearIndicator() {
					var ClearIndicator = this.components.ClearIndicator
					var commonProps = this.commonProps
					var _this$props16 = this.props,
						isDisabled = _this$props16.isDisabled,
						isLoading = _this$props16.isLoading
					var isFocused = this.state.isFocused

					if (
						!this.isClearable() ||
						!ClearIndicator ||
						isDisabled ||
						!this.hasValue() ||
						isLoading
					) {
						return null
					}

					var innerProps = {
						onMouseDown: this.onClearIndicatorMouseDown,
						onTouchEnd: this.onClearIndicatorTouchEnd,
						'aria-hidden': 'true'
					}
					return React__default.createElement(
						ClearIndicator,
						_extends$4({}, commonProps, {
							innerProps: innerProps,
							isFocused: isFocused
						})
					)
				}
			},
			{
				key: 'renderLoadingIndicator',
				value: function renderLoadingIndicator() {
					var LoadingIndicator = this.components.LoadingIndicator
					var commonProps = this.commonProps
					var _this$props17 = this.props,
						isDisabled = _this$props17.isDisabled,
						isLoading = _this$props17.isLoading
					var isFocused = this.state.isFocused
					if (!LoadingIndicator || !isLoading) return null
					var innerProps = {
						'aria-hidden': 'true'
					}
					return React__default.createElement(
						LoadingIndicator,
						_extends$4({}, commonProps, {
							innerProps: innerProps,
							isDisabled: isDisabled,
							isFocused: isFocused
						})
					)
				}
			},
			{
				key: 'renderIndicatorSeparator',
				value: function renderIndicatorSeparator() {
					var _this$components2 = this.components,
						DropdownIndicator = _this$components2.DropdownIndicator,
						IndicatorSeparator =
							_this$components2.IndicatorSeparator // separator doesn't make sense without the dropdown indicator

					if (!DropdownIndicator || !IndicatorSeparator) return null
					var commonProps = this.commonProps
					var isDisabled = this.props.isDisabled
					var isFocused = this.state.isFocused
					return React__default.createElement(
						IndicatorSeparator,
						_extends$4({}, commonProps, {
							isDisabled: isDisabled,
							isFocused: isFocused
						})
					)
				}
			},
			{
				key: 'renderDropdownIndicator',
				value: function renderDropdownIndicator() {
					var DropdownIndicator = this.components.DropdownIndicator
					if (!DropdownIndicator) return null
					var commonProps = this.commonProps
					var isDisabled = this.props.isDisabled
					var isFocused = this.state.isFocused
					var innerProps = {
						onMouseDown: this.onDropdownIndicatorMouseDown,
						onTouchEnd: this.onDropdownIndicatorTouchEnd,
						'aria-hidden': 'true'
					}
					return React__default.createElement(
						DropdownIndicator,
						_extends$4({}, commonProps, {
							innerProps: innerProps,
							isDisabled: isDisabled,
							isFocused: isFocused
						})
					)
				}
			},
			{
				key: 'renderMenu',
				value: function renderMenu() {
					var _this5 = this

					var _this$components3 = this.components,
						Group = _this$components3.Group,
						GroupHeading = _this$components3.GroupHeading,
						Menu$$1 = _this$components3.Menu,
						MenuList$$1 = _this$components3.MenuList,
						MenuPortal$$1 = _this$components3.MenuPortal,
						LoadingMessage$$1 = _this$components3.LoadingMessage,
						NoOptionsMessage$$1 =
							_this$components3.NoOptionsMessage,
						Option = _this$components3.Option
					var commonProps = this.commonProps
					var _this$state9 = this.state,
						focusedOption = _this$state9.focusedOption,
						menuOptions = _this$state9.menuOptions
					var _this$props18 = this.props,
						captureMenuScroll = _this$props18.captureMenuScroll,
						inputValue = _this$props18.inputValue,
						isLoading = _this$props18.isLoading,
						loadingMessage = _this$props18.loadingMessage,
						minMenuHeight = _this$props18.minMenuHeight,
						maxMenuHeight = _this$props18.maxMenuHeight,
						menuIsOpen = _this$props18.menuIsOpen,
						menuPlacement = _this$props18.menuPlacement,
						menuPosition = _this$props18.menuPosition,
						menuPortalTarget = _this$props18.menuPortalTarget,
						menuShouldBlockScroll =
							_this$props18.menuShouldBlockScroll,
						menuShouldScrollIntoView =
							_this$props18.menuShouldScrollIntoView,
						noOptionsMessage = _this$props18.noOptionsMessage,
						onMenuScrollToTop = _this$props18.onMenuScrollToTop,
						onMenuScrollToBottom =
							_this$props18.onMenuScrollToBottom
					if (!menuIsOpen) return null // TODO: Internal Option Type here

					var render = function render(props) {
						// for performance, the menu options in state aren't changed when the
						// focused option changes so we calculate additional props based on that
						var isFocused = focusedOption === props.data
						props.innerRef = isFocused
							? _this5.getFocusedOptionRef
							: undefined
						return React__default.createElement(
							Option,
							_extends$4({}, commonProps, props, {
								isFocused: isFocused
							}),
							_this5.formatOptionLabel(props.data, 'menu')
						)
					}

					var menuUI

					if (this.hasOptions()) {
						menuUI = menuOptions.render.map(function(item) {
							if (item.type === 'group') {
								var type = item.type,
									group = _objectWithoutProperties$2(item, [
										'type'
									])

								var headingId = ''.concat(item.key, '-heading')
								return React__default.createElement(
									Group,
									_extends$4({}, commonProps, group, {
										Heading: GroupHeading,
										headingProps: {
											id: headingId
										},
										label: _this5.formatGroupLabel(
											item.data
										)
									}),
									item.options.map(function(option) {
										return render(option)
									})
								)
							} else if (item.type === 'option') {
								return render(item)
							}
						})
					} else if (isLoading) {
						var message = loadingMessage({
							inputValue: inputValue
						})
						if (message === null) return null
						menuUI = React__default.createElement(
							LoadingMessage$$1,
							commonProps,
							message
						)
					} else {
						var _message = noOptionsMessage({
							inputValue: inputValue
						})

						if (_message === null) return null
						menuUI = React__default.createElement(
							NoOptionsMessage$$1,
							commonProps,
							_message
						)
					}

					var menuPlacementProps = {
						minMenuHeight: minMenuHeight,
						maxMenuHeight: maxMenuHeight,
						menuPlacement: menuPlacement,
						menuPosition: menuPosition,
						menuShouldScrollIntoView: menuShouldScrollIntoView
					}
					var menuElement = React__default.createElement(
						MenuPlacer,
						_extends$4({}, commonProps, menuPlacementProps),
						function(_ref6) {
							var ref = _ref6.ref,
								_ref6$placerProps = _ref6.placerProps,
								placement = _ref6$placerProps.placement,
								maxHeight = _ref6$placerProps.maxHeight
							return React__default.createElement(
								Menu$$1,
								_extends$4(
									{},
									commonProps,
									menuPlacementProps,
									{
										innerRef: ref,
										innerProps: {
											onMouseDown: _this5.onMenuMouseDown,
											onMouseMove: _this5.onMenuMouseMove
										},
										isLoading: isLoading,
										placement: placement
									}
								),
								React__default.createElement(
									ScrollCaptorSwitch,
									{
										isEnabled: captureMenuScroll,
										onTopArrive: onMenuScrollToTop,
										onBottomArrive: onMenuScrollToBottom
									},
									React__default.createElement(
										ScrollBlock,
										{
											isEnabled: menuShouldBlockScroll
										},
										React__default.createElement(
											MenuList$$1,
											_extends$4({}, commonProps, {
												innerRef: _this5.getMenuListRef,
												isLoading: isLoading,
												maxHeight: maxHeight
											}),
											menuUI
										)
									)
								)
							)
						}
					) // positioning behaviour is almost identical for portalled and fixed,
					// so we use the same component. the actual portalling logic is forked
					// within the component based on `menuPosition`

					return menuPortalTarget || menuPosition === 'fixed'
						? React__default.createElement(
								MenuPortal$$1,
								_extends$4({}, commonProps, {
									appendTo: menuPortalTarget,
									controlElement: this.controlRef,
									menuPlacement: menuPlacement,
									menuPosition: menuPosition
								}),
								menuElement
						  )
						: menuElement
				}
			},
			{
				key: 'renderFormField',
				value: function renderFormField() {
					var _this6 = this

					var _this$props19 = this.props,
						delimiter = _this$props19.delimiter,
						isDisabled = _this$props19.isDisabled,
						isMulti = _this$props19.isMulti,
						name = _this$props19.name
					var selectValue = this.state.selectValue
					if (!name || isDisabled) return

					if (isMulti) {
						if (delimiter) {
							var value = selectValue
								.map(function(opt) {
									return _this6.getOptionValue(opt)
								})
								.join(delimiter)
							return React__default.createElement('input', {
								name: name,
								type: 'hidden',
								value: value
							})
						} else {
							var input =
								selectValue.length > 0
									? selectValue.map(function(opt, i) {
											return React__default.createElement(
												'input',
												{
													key: 'i-'.concat(i),
													name: name,
													type: 'hidden',
													value: _this6.getOptionValue(
														opt
													)
												}
											)
									  })
									: React__default.createElement('input', {
											name: name,
											type: 'hidden'
									  })
							return React__default.createElement(
								'div',
								null,
								input
							)
						}
					} else {
						var _value = selectValue[0]
							? this.getOptionValue(selectValue[0])
							: ''

						return React__default.createElement('input', {
							name: name,
							type: 'hidden',
							value: _value
						})
					}
				}
			},
			{
				key: 'renderLiveRegion',
				value: function renderLiveRegion() {
					if (!this.state.isFocused) return null
					return React__default.createElement(
						A11yText,
						{
							'aria-live': 'assertive'
						},
						React__default.createElement(
							'p',
							{
								id: 'aria-selection-event'
							},
							'\xA0',
							this.state.ariaLiveSelection
						),
						React__default.createElement(
							'p',
							{
								id: 'aria-context'
							},
							'\xA0',
							this.constructAriaLiveMessage()
						)
					)
				}
			},
			{
				key: 'render',
				value: function render() {
					var _this$components4 = this.components,
						Control = _this$components4.Control,
						IndicatorsContainer =
							_this$components4.IndicatorsContainer,
						SelectContainer = _this$components4.SelectContainer,
						ValueContainer = _this$components4.ValueContainer
					var _this$props20 = this.props,
						className = _this$props20.className,
						id = _this$props20.id,
						isDisabled = _this$props20.isDisabled,
						menuIsOpen = _this$props20.menuIsOpen
					var isFocused = this.state.isFocused
					var commonProps = (this.commonProps = this.getCommonProps())
					return React__default.createElement(
						SelectContainer,
						_extends$4({}, commonProps, {
							className: className,
							innerProps: {
								id: id,
								onKeyDown: this.onKeyDown
							},
							isDisabled: isDisabled,
							isFocused: isFocused
						}),
						this.renderLiveRegion(),
						React__default.createElement(
							Control,
							_extends$4({}, commonProps, {
								innerRef: this.getControlRef,
								innerProps: {
									onMouseDown: this.onControlMouseDown,
									onTouchEnd: this.onControlTouchEnd
								},
								isDisabled: isDisabled,
								isFocused: isFocused,
								menuIsOpen: menuIsOpen
							}),
							React__default.createElement(
								ValueContainer,
								_extends$4({}, commonProps, {
									isDisabled: isDisabled
								}),
								this.renderPlaceholderOrValue(),
								this.renderInput()
							),
							React__default.createElement(
								IndicatorsContainer,
								_extends$4({}, commonProps, {
									isDisabled: isDisabled
								}),
								this.renderClearIndicator(),
								this.renderLoadingIndicator(),
								this.renderIndicatorSeparator(),
								this.renderDropdownIndicator()
							)
						),
						this.renderMenu(),
						this.renderFormField()
					)
				}
			}
		])

		return Select
	})(Component)

_defineProperty$3(Select, 'defaultProps', defaultProps)

var defaultProps$1 = {
	defaultInputValue: '',
	defaultMenuIsOpen: false,
	defaultValue: null
}

var manageState = function manageState(SelectComponent) {
	var _class, _temp

	return (
		(_temp = _class =
			/*#__PURE__*/
			(function(_Component) {
				_inherits$2(StateManager, _Component)

				function StateManager() {
					var _getPrototypeOf2

					var _this

					_classCallCheck$2(this, StateManager)

					for (
						var _len = arguments.length,
							args = new Array(_len),
							_key = 0;
						_key < _len;
						_key++
					) {
						args[_key] = arguments[_key]
					}

					_this = _possibleConstructorReturn$2(
						this,
						(_getPrototypeOf2 = _getPrototypeOf(
							StateManager
						)).call.apply(_getPrototypeOf2, [this].concat(args))
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'select',
						void 0
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'state',
						{
							inputValue:
								_this.props.inputValue !== undefined
									? _this.props.inputValue
									: _this.props.defaultInputValue,
							menuIsOpen:
								_this.props.menuIsOpen !== undefined
									? _this.props.menuIsOpen
									: _this.props.defaultMenuIsOpen,
							value:
								_this.props.value !== undefined
									? _this.props.value
									: _this.props.defaultValue
						}
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'onChange',
						function(value, actionMeta) {
							_this.callProp('onChange', value, actionMeta)

							_this.setState({
								value: value
							})
						}
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'onInputChange',
						function(value, actionMeta) {
							// TODO: for backwards compatibility, we allow the prop to return a new
							// value, but now inputValue is a controllable prop we probably shouldn't
							var newValue = _this.callProp(
								'onInputChange',
								value,
								actionMeta
							)

							_this.setState({
								inputValue:
									newValue !== undefined ? newValue : value
							})
						}
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'onMenuOpen',
						function() {
							_this.callProp('onMenuOpen')

							_this.setState({
								menuIsOpen: true
							})
						}
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'onMenuClose',
						function() {
							_this.callProp('onMenuClose')

							_this.setState({
								menuIsOpen: false
							})
						}
					)

					return _this
				}

				_createClass$2(StateManager, [
					{
						key: 'focus',
						value: function focus() {
							this.select.focus()
						}
					},
					{
						key: 'blur',
						value: function blur() {
							this.select.blur()
						} // FIXME: untyped flow code, return any
					},
					{
						key: 'getProp',
						value: function getProp(key) {
							return this.props[key] !== undefined
								? this.props[key]
								: this.state[key]
						} // FIXME: untyped flow code, return any
					},
					{
						key: 'callProp',
						value: function callProp(name) {
							if (typeof this.props[name] === 'function') {
								var _this$props

								for (
									var _len2 = arguments.length,
										args = new Array(
											_len2 > 1 ? _len2 - 1 : 0
										),
										_key2 = 1;
									_key2 < _len2;
									_key2++
								) {
									args[_key2 - 1] = arguments[_key2]
								}

								return (_this$props = this.props)[name].apply(
									_this$props,
									args
								)
							}
						}
					},
					{
						key: 'render',
						value: function render() {
							var _this2 = this

							var _this$props2 = this.props,
								defaultInputValue =
									_this$props2.defaultInputValue,
								defaultMenuIsOpen =
									_this$props2.defaultMenuIsOpen,
								defaultValue = _this$props2.defaultValue,
								props = _objectWithoutProperties$2(
									_this$props2,
									[
										'defaultInputValue',
										'defaultMenuIsOpen',
										'defaultValue'
									]
								)

							return React__default.createElement(
								SelectComponent,
								_extends$4({}, props, {
									ref: function ref(_ref) {
										_this2.select = _ref
									},
									inputValue: this.getProp('inputValue'),
									menuIsOpen: this.getProp('menuIsOpen'),
									onChange: this.onChange,
									onInputChange: this.onInputChange,
									onMenuClose: this.onMenuClose,
									onMenuOpen: this.onMenuOpen,
									value: this.getProp('value')
								})
							)
						}
					}
				])

				return StateManager
			})(Component)),
		_defineProperty$3(_class, 'defaultProps', defaultProps$1),
		_temp
	)
}

var defaultProps$2 = {
	cacheOptions: false,
	defaultOptions: false,
	filterOption: null
}
var makeAsyncSelect = function makeAsyncSelect(SelectComponent) {
	var _class, _temp

	return (
		(_temp = _class =
			/*#__PURE__*/
			(function(_Component) {
				_inherits$2(Async, _Component)

				function Async(props) {
					var _this

					_classCallCheck$2(this, Async)

					_this = _possibleConstructorReturn$2(
						this,
						_getPrototypeOf(Async).call(this)
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'select',
						void 0
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'lastRequest',
						void 0
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'mounted',
						false
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'optionsCache',
						{}
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'handleInputChange',
						function(newValue, actionMeta) {
							var _this$props = _this.props,
								cacheOptions = _this$props.cacheOptions,
								onInputChange = _this$props.onInputChange // TODO

							var inputValue = handleInputChange(
								newValue,
								actionMeta,
								onInputChange
							)

							if (!inputValue) {
								delete _this.lastRequest

								_this.setState({
									inputValue: '',
									loadedInputValue: '',
									loadedOptions: [],
									isLoading: false,
									passEmptyOptions: false
								})

								return
							}

							if (
								cacheOptions &&
								_this.optionsCache[inputValue]
							) {
								_this.setState({
									inputValue: inputValue,
									loadedInputValue: inputValue,
									loadedOptions:
										_this.optionsCache[inputValue],
									isLoading: false,
									passEmptyOptions: false
								})
							} else {
								var request = (_this.lastRequest = {})

								_this.setState(
									{
										inputValue: inputValue,
										isLoading: true,
										passEmptyOptions: !_this.state
											.loadedInputValue
									},
									function() {
										_this.loadOptions(inputValue, function(
											options
										) {
											if (!_this.mounted) return

											if (options) {
												_this.optionsCache[
													inputValue
												] = options
											}

											if (request !== _this.lastRequest)
												return
											delete _this.lastRequest

											_this.setState({
												isLoading: false,
												loadedInputValue: inputValue,
												loadedOptions: options || [],
												passEmptyOptions: false
											})
										})
									}
								)
							}

							return inputValue
						}
					)

					_this.state = {
						defaultOptions: Array.isArray(props.defaultOptions)
							? props.defaultOptions
							: undefined,
						inputValue:
							typeof props.inputValue !== 'undefined'
								? props.inputValue
								: '',
						isLoading: props.defaultOptions === true ? true : false,
						loadedOptions: [],
						passEmptyOptions: false
					}
					return _this
				}

				_createClass$2(Async, [
					{
						key: 'componentDidMount',
						value: function componentDidMount() {
							var _this2 = this

							this.mounted = true
							var defaultOptions = this.props.defaultOptions
							var inputValue = this.state.inputValue

							if (defaultOptions === true) {
								this.loadOptions(inputValue, function(options) {
									if (!_this2.mounted) return
									var isLoading = !!_this2.lastRequest

									_this2.setState({
										defaultOptions: options || [],
										isLoading: isLoading
									})
								})
							}
						}
					},
					{
						key: 'componentWillReceiveProps',
						value: function componentWillReceiveProps(nextProps) {
							// if the cacheOptions prop changes, clear the cache
							if (
								nextProps.cacheOptions !==
								this.props.cacheOptions
							) {
								this.optionsCache = {}
							}

							if (
								nextProps.defaultOptions !==
								this.props.defaultOptions
							) {
								this.setState({
									defaultOptions: Array.isArray(
										nextProps.defaultOptions
									)
										? nextProps.defaultOptions
										: undefined
								})
							}
						}
					},
					{
						key: 'componentWillUnmount',
						value: function componentWillUnmount() {
							this.mounted = false
						}
					},
					{
						key: 'focus',
						value: function focus() {
							this.select.focus()
						}
					},
					{
						key: 'blur',
						value: function blur() {
							this.select.blur()
						}
					},
					{
						key: 'loadOptions',
						value: function loadOptions(inputValue, callback) {
							var loadOptions = this.props.loadOptions
							if (!loadOptions) return callback()
							var loader = loadOptions(inputValue, callback)

							if (loader && typeof loader.then === 'function') {
								loader.then(callback, function() {
									return callback()
								})
							}
						}
					},
					{
						key: 'render',
						value: function render() {
							var _this3 = this

							var _this$props2 = this.props,
								loadOptions = _this$props2.loadOptions,
								props = _objectWithoutProperties$2(
									_this$props2,
									['loadOptions']
								)

							var _this$state = this.state,
								defaultOptions = _this$state.defaultOptions,
								inputValue = _this$state.inputValue,
								isLoading = _this$state.isLoading,
								loadedInputValue = _this$state.loadedInputValue,
								loadedOptions = _this$state.loadedOptions,
								passEmptyOptions = _this$state.passEmptyOptions
							var options = passEmptyOptions
								? []
								: inputValue && loadedInputValue
								? loadedOptions
								: defaultOptions || []
							return React__default.createElement(
								SelectComponent,
								_extends$4({}, props, {
									ref: function ref(_ref) {
										_this3.select = _ref
									},
									options: options,
									isLoading: isLoading,
									onInputChange: this.handleInputChange
								})
							)
						}
					}
				])

				return Async
			})(Component)),
		_defineProperty$3(_class, 'defaultProps', defaultProps$2),
		_temp
	)
}
var SelectState = manageState(Select)
var Async = makeAsyncSelect(SelectState)

var compareOption = function compareOption() {
	var inputValue =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''
	var option = arguments.length > 1 ? arguments[1] : undefined
	var candidate = String(inputValue).toLowerCase()
	var optionValue = String(option.value).toLowerCase()
	var optionLabel = String(option.label).toLowerCase()
	return optionValue === candidate || optionLabel === candidate
}

var builtins = {
	formatCreateLabel: function formatCreateLabel(inputValue) {
		return 'Create "'.concat(inputValue, '"')
	},
	isValidNewOption: function isValidNewOption(
		inputValue,
		selectValue,
		selectOptions
	) {
		return !(
			!inputValue ||
			selectValue.some(function(option) {
				return compareOption(inputValue, option)
			}) ||
			selectOptions.some(function(option) {
				return compareOption(inputValue, option)
			})
		)
	},
	getNewOptionData: function getNewOptionData(inputValue, optionLabel) {
		return {
			label: optionLabel,
			value: inputValue,
			__isNew__: true
		}
	}
}
var defaultProps$3 = _objectSpread$1(
	{
		allowCreateWhileLoading: false,
		createOptionPosition: 'last'
	},
	builtins
)
var makeCreatableSelect = function makeCreatableSelect(SelectComponent) {
	var _class, _temp

	return (
		(_temp = _class =
			/*#__PURE__*/
			(function(_Component) {
				_inherits$2(Creatable, _Component)

				function Creatable(props) {
					var _this

					_classCallCheck$2(this, Creatable)

					_this = _possibleConstructorReturn$2(
						this,
						_getPrototypeOf(Creatable).call(this, props)
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'select',
						void 0
					)

					_defineProperty$3(
						_assertThisInitialized$1(
							_assertThisInitialized$1(_this)
						),
						'onChange',
						function(newValue, actionMeta) {
							var _this$props = _this.props,
								getNewOptionData = _this$props.getNewOptionData,
								inputValue = _this$props.inputValue,
								isMulti = _this$props.isMulti,
								onChange = _this$props.onChange,
								onCreateOption = _this$props.onCreateOption,
								value = _this$props.value

							if (actionMeta.action !== 'select-option') {
								return onChange(newValue, actionMeta)
							}

							var newOption = _this.state.newOption
							var valueArray = Array.isArray(newValue)
								? newValue
								: [newValue]

							if (
								valueArray[valueArray.length - 1] === newOption
							) {
								if (onCreateOption) onCreateOption(inputValue)
								else {
									var newOptionData = getNewOptionData(
										inputValue,
										inputValue
									)
									var newActionMeta = {
										action: 'create-option'
									}

									if (isMulti) {
										onChange(
											[].concat(
												_toConsumableArray$1(
													cleanValue(value)
												),
												[newOptionData]
											),
											newActionMeta
										)
									} else {
										onChange(newOptionData, newActionMeta)
									}
								}
								return
							}

							onChange(newValue, actionMeta)
						}
					)

					var options = props.options || []
					_this.state = {
						newOption: undefined,
						options: options
					}
					return _this
				}

				_createClass$2(Creatable, [
					{
						key: 'componentWillReceiveProps',
						value: function componentWillReceiveProps(nextProps) {
							var allowCreateWhileLoading =
									nextProps.allowCreateWhileLoading,
								createOptionPosition =
									nextProps.createOptionPosition,
								formatCreateLabel = nextProps.formatCreateLabel,
								getNewOptionData = nextProps.getNewOptionData,
								inputValue = nextProps.inputValue,
								isLoading = nextProps.isLoading,
								isValidNewOption = nextProps.isValidNewOption,
								value = nextProps.value
							var options = nextProps.options || []
							var newOption = this.state.newOption

							if (
								isValidNewOption(
									inputValue,
									cleanValue(value),
									options
								)
							) {
								newOption = getNewOptionData(
									inputValue,
									formatCreateLabel(inputValue)
								)
							} else {
								newOption = undefined
							}

							this.setState({
								newOption: newOption,
								options:
									(allowCreateWhileLoading || !isLoading) &&
									newOption
										? createOptionPosition === 'first'
											? [newOption].concat(
													_toConsumableArray$1(
														options
													)
											  )
											: [].concat(
													_toConsumableArray$1(
														options
													),
													[newOption]
											  )
										: options
							})
						}
					},
					{
						key: 'focus',
						value: function focus() {
							this.select.focus()
						}
					},
					{
						key: 'blur',
						value: function blur() {
							this.select.blur()
						}
					},
					{
						key: 'render',
						value: function render() {
							var _this2 = this

							var props = _extends$4({}, this.props)

							var options = this.state.options
							return React__default.createElement(
								SelectComponent,
								_extends$4({}, props, {
									ref: function ref(_ref) {
										_this2.select = _ref
									},
									options: options,
									onChange: this.onChange
								})
							)
						}
					}
				])

				return Creatable
			})(Component)),
		_defineProperty$3(_class, 'defaultProps', defaultProps$3),
		_temp
	)
} // TODO: do this in package entrypoint

var SelectCreatable = makeCreatableSelect(Select)
var Creatable = manageState(SelectCreatable)

var SelectCreatable$1 = makeCreatableSelect(Select)
var SelectCreatableState = manageState(SelectCreatable$1)
var AsyncCreatable = makeAsyncSelect(SelectCreatableState)

// strip transition props off before spreading onto select component
// note we need to be explicit about innerRef for flow
var AnimatedInput = function AnimatedInput(WrappedComponent) {
	return function(_ref) {
		var inProp = _ref.in,
			onExited = _ref.onExited,
			appear = _ref.appear,
			enter = _ref.enter,
			exit = _ref.exit,
			props = _objectWithoutProperties$2(_ref, [
				'in',
				'onExited',
				'appear',
				'enter',
				'exit'
			])

		return React__default.createElement(WrappedComponent, props)
	}
}

var Fade = function Fade(_ref) {
	var Tag = _ref.component,
		_ref$duration = _ref.duration,
		duration = _ref$duration === void 0 ? 1 : _ref$duration,
		inProp = _ref.in,
		onExited = _ref.onExited,
		props = _objectWithoutProperties$2(_ref, [
			'component',
			'duration',
			'in',
			'onExited'
		])

	var transition = {
		entering: {
			opacity: 0
		},
		entered: {
			opacity: 1,
			transition: 'opacity '.concat(duration, 'ms')
		},
		exiting: {
			opacity: 0
		},
		exited: {
			opacity: 0
		}
	}
	return React__default.createElement(
		reactTransitionGroup_1,
		{
			mountOnEnter: true,
			unmountOnExit: true,
			in: inProp,
			timeout: duration
		},
		function(state) {
			var innerProps = {
				style: _objectSpread$1({}, transition[state])
			}
			return React__default.createElement(
				Tag,
				_extends$4(
					{
						innerProps: innerProps
					},
					props
				)
			)
		}
	)
} // ==============================
// Collapse Transition
// ==============================

var collapseDuration = 260
// wrap each MultiValue with a collapse transition; decreases width until
// finally removing from DOM
var Collapse$1 =
	/*#__PURE__*/
	(function(_Component) {
		_inherits$2(Collapse, _Component)

		function Collapse() {
			var _getPrototypeOf2

			var _this

			_classCallCheck$2(this, Collapse)

			for (
				var _len = arguments.length, args = new Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			_this = _possibleConstructorReturn$2(
				this,
				(_getPrototypeOf2 = _getPrototypeOf(Collapse)).call.apply(
					_getPrototypeOf2,
					[this].concat(args)
				)
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'duration',
				collapseDuration
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'rafID',
				void 0
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'state',
				{
					width: 'auto'
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'transition',
				{
					exiting: {
						width: 0,
						transition: 'width '.concat(
							_this.duration,
							'ms ease-out'
						)
					},
					exited: {
						width: 0
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getWidth',
				function(ref) {
					if (ref && isNaN(_this.state.width)) {
						/*
          Here we're invoking requestAnimationFrame with a callback invoking our
          call to getBoundingClientRect and setState in order to resolve an edge case
          around portalling. Certain portalling solutions briefly remove children from the DOM
          before appending them to the target node. This is to avoid us trying to call getBoundingClientrect
          while the Select component is in this state.
        */
						// cannot use `offsetWidth` because it is rounded
						_this.rafID = window.requestAnimationFrame(function() {
							var _ref$getBoundingClien = ref.getBoundingClientRect(),
								width = _ref$getBoundingClien.width

							_this.setState({
								width: width
							})
						})
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getStyle',
				function(width) {
					return {
						overflow: 'hidden',
						whiteSpace: 'nowrap',
						width: width
					}
				}
			)

			_defineProperty$3(
				_assertThisInitialized$1(_assertThisInitialized$1(_this)),
				'getTransition',
				function(state) {
					return _this.transition[state]
				}
			)

			return _this
		}

		_createClass$2(Collapse, [
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (this.rafID) {
						window.cancelAnimationFrame(this.rafID)
					}
				} // width must be calculated; cannot transition from `undefined` to `number`
			},
			{
				key: 'render',
				value: function render() {
					var _this2 = this

					var _this$props = this.props,
						children = _this$props.children,
						inProp = _this$props.in
					var width = this.state.width
					return React__default.createElement(
						reactTransitionGroup_1,
						{
							enter: false,
							mountOnEnter: true,
							unmountOnExit: true,
							in: inProp,
							timeout: this.duration
						},
						function(state) {
							var style = _objectSpread$1(
								{},
								_this2.getStyle(width),
								_this2.getTransition(state)
							)

							return React__default.createElement(
								'div',
								{
									ref: _this2.getWidth,
									style: style
								},
								children
							)
						}
					)
				}
			}
		])

		return Collapse
	})(Component)

var AnimatedMultiValue = function AnimatedMultiValue(WrappedComponent) {
	return function(_ref) {
		var inProp = _ref.in,
			onExited = _ref.onExited,
			props = _objectWithoutProperties$2(_ref, ['in', 'onExited'])

		return React__default.createElement(
			Collapse$1,
			{
				in: inProp,
				onExited: onExited
			},
			React__default.createElement(
				WrappedComponent,
				_extends$4(
					{
						cropWithEllipsis: inProp
					},
					props
				)
			)
		)
	}
}

var AnimatedPlaceholder = function AnimatedPlaceholder(WrappedComponent) {
	return function(props) {
		return React__default.createElement(
			Fade,
			_extends$4(
				{
					component: WrappedComponent,
					duration: props.isMulti ? collapseDuration : 1
				},
				props
			)
		)
	}
}

var AnimatedSingleValue = function AnimatedSingleValue(WrappedComponent) {
	return function(props) {
		return React__default.createElement(
			Fade,
			_extends$4(
				{
					component: WrappedComponent
				},
				props
			)
		)
	}
}

// make ValueContainer a transition group
var AnimatedValueContainer = function AnimatedValueContainer(WrappedComponent) {
	return function(props) {
		return React__default.createElement(
			reactTransitionGroup_2,
			_extends$4(
				{
					component: WrappedComponent
				},
				props
			)
		)
	}
}

var makeAnimated = function makeAnimated() {
	var externalComponents =
		arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
	var components$$1 = defaultComponents({
		components: externalComponents
	})

	var Input = components$$1.Input,
		MultiValue = components$$1.MultiValue,
		Placeholder = components$$1.Placeholder,
		SingleValue = components$$1.SingleValue,
		ValueContainer = components$$1.ValueContainer,
		rest = _objectWithoutProperties$2(components$$1, [
			'Input',
			'MultiValue',
			'Placeholder',
			'SingleValue',
			'ValueContainer'
		])

	return _objectSpread$1(
		{
			Input: AnimatedInput(Input),
			MultiValue: AnimatedMultiValue(MultiValue),
			Placeholder: AnimatedPlaceholder(Placeholder),
			SingleValue: AnimatedSingleValue(SingleValue),
			ValueContainer: AnimatedValueContainer(ValueContainer)
		},
		rest
	)
}

var AnimatedComponents = makeAnimated()
var Input$1$1 = AnimatedComponents.Input
var MultiValue$1 = AnimatedComponents.MultiValue
var Placeholder$1 = AnimatedComponents.Placeholder
var SingleValue$1 = AnimatedComponents.SingleValue
var ValueContainer$1 = AnimatedComponents.ValueContainer
var index$2 = index$1(makeAnimated, exportedEqual)

var index$1$1 = manageState(Select)

var utils$3 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.classNames = classNames
	exports.handleInputChange = handleInputChange
	exports.isDocumentElement = isDocumentElement
	exports.normalizedHeight = normalizedHeight
	exports.getScrollTop = getScrollTop
	exports.scrollTo = scrollTo
	exports.getScrollParent = getScrollParent
	exports.animatedScrollTo = animatedScrollTo
	exports.scrollIntoView = scrollIntoView
	exports.getBoundingClientObj = getBoundingClientObj
	exports.toKey = toKey
	exports.isTouchCapable = isTouchCapable
	exports.isMobileDevice = isMobileDevice
	exports.cleanValue = exports.emptyString = exports.noop = void 0

	var _raf = _interopRequireDefault(raf_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	// ==============================
	// NO OP
	// ==============================
	var noop = function noop() {}

	exports.noop = noop

	var emptyString = function emptyString() {
		return ''
	} // ==============================
	// Class Name Prefixer
	// ==============================

	/**
 String representation of component state for styling with class names.

 Expects an array of strings OR a string/object pair:
 - className(['comp', 'comp-arg', 'comp-arg-2'])
   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'
 - className('comp', { some: true, state: false })
   @returns 'react-select__comp react-select__comp--some'
*/

	exports.emptyString = emptyString

	function applyPrefixToName(prefix, name) {
		if (!name) {
			return prefix
		} else if (name[0] === '-') {
			return prefix + name
		} else {
			return prefix + '__' + name
		}
	}

	function classNames(prefix, cssKey, state, className) {
		var arr = [cssKey, className]

		if (state && prefix) {
			for (var key in state) {
				if (state.hasOwnProperty(key) && state[key]) {
					arr.push(''.concat(applyPrefixToName(prefix, key)))
				}
			}
		}

		return arr
			.filter(function(i) {
				return i
			})
			.map(function(i) {
				return String(i).trim()
			})
			.join(' ')
	} // ==============================
	// Clean Value
	// ==============================

	var cleanValue = function cleanValue(value) {
		if (Array.isArray(value)) return value.filter(Boolean)
		if (_typeof(value) === 'object' && value !== null) return [value]
		return []
	} // ==============================
	// Handle Input Change
	// ==============================

	exports.cleanValue = cleanValue

	function handleInputChange(inputValue, actionMeta, onInputChange) {
		if (onInputChange) {
			var newValue = onInputChange(inputValue, actionMeta)
			if (typeof newValue === 'string') return newValue
		}

		return inputValue
	} // ==============================
	// Scroll Helpers
	// ==============================

	function isDocumentElement(el) {
		return (
			[document.documentElement, document.body, window].indexOf(el) > -1
		)
	} // Normalized Scroll Top
	// ------------------------------

	function normalizedHeight(el) {
		if (isDocumentElement(el)) {
			return window.innerHeight
		}

		return el.clientHeight
	} // Normalized scrollTo & scrollTop
	// ------------------------------

	function getScrollTop(el) {
		if (isDocumentElement(el)) {
			return window.pageYOffset
		}

		return el.scrollTop
	}

	function scrollTo(el, top) {
		// with a scroll distance, we perform scroll on the element
		if (isDocumentElement(el)) {
			window.scrollTo(0, top)
			return
		}

		el.scrollTop = top
	} // Get Scroll Parent
	// ------------------------------

	function getScrollParent(element) {
		var style = getComputedStyle(element)
		var excludeStaticParent = style.position === 'absolute'
		var overflowRx = /(auto|scroll)/
		var docEl = document.documentElement // suck it, flow...

		if (style.position === 'fixed') return docEl

		for (var parent = element; (parent = parent.parentElement); ) {
			style = getComputedStyle(parent)

			if (excludeStaticParent && style.position === 'static') {
				continue
			}

			if (
				overflowRx.test(
					style.overflow + style.overflowY + style.overflowX
				)
			) {
				return parent
			}
		}

		return docEl
	} // Animated Scroll To
	// ------------------------------

	/**
  @param t: time (elapsed)
  @param b: initial value
  @param c: amount of change
  @param d: duration
*/

	function easeOutCubic(t, b, c, d) {
		return c * ((t = t / d - 1) * t * t + 1) + b
	}

	function animatedScrollTo(element, to) {
		var duration =
			arguments.length > 2 && arguments[2] !== undefined
				? arguments[2]
				: 200
		var callback =
			arguments.length > 3 && arguments[3] !== undefined
				? arguments[3]
				: noop
		var start = getScrollTop(element)
		var change = to - start
		var increment = 10
		var currentTime = 0

		function animateScroll() {
			currentTime += increment
			var val = easeOutCubic(currentTime, start, change, duration)
			scrollTo(element, val)

			if (currentTime < duration) {
				;(0, _raf.default)(animateScroll)
			} else {
				callback(element)
			}
		}

		animateScroll()
	} // Scroll Into View
	// ------------------------------

	function scrollIntoView(menuEl, focusedEl) {
		var menuRect = menuEl.getBoundingClientRect()
		var focusedRect = focusedEl.getBoundingClientRect()
		var overScroll = focusedEl.offsetHeight / 3

		if (focusedRect.bottom + overScroll > menuRect.bottom) {
			scrollTo(
				menuEl,
				Math.min(
					focusedEl.offsetTop +
						focusedEl.clientHeight -
						menuEl.offsetHeight +
						overScroll,
					menuEl.scrollHeight
				)
			)
		} else if (focusedRect.top - overScroll < menuRect.top) {
			scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0))
		}
	} // ==============================
	// Get bounding client object
	// ==============================
	// cannot get keys using array notation with DOMRect

	function getBoundingClientObj(element) {
		var rect = element.getBoundingClientRect()
		return {
			bottom: rect.bottom,
			height: rect.height,
			left: rect.left,
			right: rect.right,
			top: rect.top,
			width: rect.width
		}
	}

	// ==============================
	// String to Key (kebabify)
	// ==============================
	function toKey(str) {
		return str.replace(/\W/g, '-')
	} // ==============================
	// Touch Capability Detector
	// ==============================

	function isTouchCapable() {
		try {
			document.createEvent('TouchEvent')
			return true
		} catch (e) {
			return false
		}
	} // ==============================
	// Mobile Device Detector
	// ==============================

	function isMobileDevice() {
		try {
			return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
				navigator.userAgent
			)
		} catch (e) {
			return false
		}
	}
})

unwrapExports(utils$3)
var utils_1$2 = utils$3.classNames
var utils_2$2 = utils$3.handleInputChange
var utils_3$2 = utils$3.isDocumentElement
var utils_4$2 = utils$3.normalizedHeight
var utils_5$2 = utils$3.getScrollTop
var utils_6$2 = utils$3.scrollTo
var utils_7$1 = utils$3.getScrollParent
var utils_8$1 = utils$3.animatedScrollTo
var utils_9$1 = utils$3.scrollIntoView
var utils_10$1 = utils$3.getBoundingClientObj
var utils_11$1 = utils$3.toKey
var utils_12$1 = utils$3.isTouchCapable
var utils_13$1 = utils$3.isMobileDevice
var utils_14 = utils$3.cleanValue
var utils_15 = utils$3.emptyString
var utils_16 = utils$3.noop

var Menu_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.getMenuPlacement = getMenuPlacement
	exports.MenuPortal = exports.menuPortalCSS = exports.LoadingMessage = exports.NoOptionsMessage = exports.loadingMessageCSS = exports.noOptionsMessageCSS = exports.MenuList = exports.menuListCSS = exports.default = exports.MenuPlacer = exports.menuCSS = void 0

	var _react = _interopRequireWildcard(React__default)

	var _propTypes = _interopRequireDefault(propTypes)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function getMenuPlacement(_ref) {
		var maxHeight = _ref.maxHeight,
			menuEl = _ref.menuEl,
			minHeight = _ref.minHeight,
			placement = _ref.placement,
			shouldScroll = _ref.shouldScroll,
			isFixedPosition = _ref.isFixedPosition,
			theme = _ref.theme
		var spacing = theme.spacing
		var scrollParent = (0, utils$3.getScrollParent)(menuEl)
		var defaultState = {
			placement: 'bottom',
			maxHeight: maxHeight
		} // something went wrong, return default state

		if (!menuEl || !menuEl.offsetParent) return defaultState // we can't trust `scrollParent.scrollHeight` --> it may increase when
		// the menu is rendered

		var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),
			scrollHeight = _scrollParent$getBoun.height

		var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),
			menuBottom = _menuEl$getBoundingCl.bottom,
			menuHeight = _menuEl$getBoundingCl.height,
			menuTop = _menuEl$getBoundingCl.top

		var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),
			containerTop = _menuEl$offsetParent$.top

		var viewHeight = window.innerHeight
		var scrollTop = (0, utils$3.getScrollTop)(scrollParent)
		var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10)
		var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10)
		var viewSpaceAbove = containerTop - marginTop
		var viewSpaceBelow = viewHeight - menuTop
		var scrollSpaceAbove = viewSpaceAbove + scrollTop
		var scrollSpaceBelow = scrollHeight - scrollTop - menuTop
		var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom
		var scrollUp = scrollTop + menuTop - marginTop
		var scrollDuration = 160

		switch (placement) {
			case 'auto':
			case 'bottom':
				// 1: the menu will fit, do nothing
				if (viewSpaceBelow >= menuHeight) {
					return {
						placement: 'bottom',
						maxHeight: maxHeight
					}
				} // 2: the menu will fit, if scrolled

				if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
					if (shouldScroll) {
						;(0, utils$3.animatedScrollTo)(
							scrollParent,
							scrollDown,
							scrollDuration
						)
					}

					return {
						placement: 'bottom',
						maxHeight: maxHeight
					}
				} // 3: the menu will fit, if constrained

				if (
					(!isFixedPosition && scrollSpaceBelow >= minHeight) ||
					(isFixedPosition && viewSpaceBelow >= minHeight)
				) {
					if (shouldScroll) {
						;(0, utils$3.animatedScrollTo)(
							scrollParent,
							scrollDown,
							scrollDuration
						)
					} // we want to provide as much of the menu as possible to the user,
					// so give them whatever is available below rather than the minHeight.

					var constrainedHeight = isFixedPosition
						? viewSpaceBelow - marginBottom
						: scrollSpaceBelow - marginBottom
					return {
						placement: 'bottom',
						maxHeight: constrainedHeight
					}
				} // 4. Forked beviour when there isn't enough space below
				// AUTO: flip the menu, render above

				if (placement === 'auto' || isFixedPosition) {
					// may need to be constrained after flipping
					var _constrainedHeight = maxHeight
					var spaceAbove = isFixedPosition
						? viewSpaceAbove
						: scrollSpaceAbove

					if (spaceAbove >= minHeight) {
						_constrainedHeight = Math.min(
							spaceAbove - marginBottom - spacing.controlHeight,
							maxHeight
						)
					}

					return {
						placement: 'top',
						maxHeight: _constrainedHeight
					}
				} // BOTTOM: allow browser to increase scrollable area and immediately set scroll

				if (placement === 'bottom') {
					;(0, utils$3.scrollTo)(scrollParent, scrollDown)
					return {
						placement: 'bottom',
						maxHeight: maxHeight
					}
				}

				break

			case 'top':
				// 1: the menu will fit, do nothing
				if (viewSpaceAbove >= menuHeight) {
					return {
						placement: 'top',
						maxHeight: maxHeight
					}
				} // 2: the menu will fit, if scrolled

				if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
					if (shouldScroll) {
						;(0, utils$3.animatedScrollTo)(
							scrollParent,
							scrollUp,
							scrollDuration
						)
					}

					return {
						placement: 'top',
						maxHeight: maxHeight
					}
				} // 3: the menu will fit, if constrained

				if (
					(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
					(isFixedPosition && viewSpaceAbove >= minHeight)
				) {
					var _constrainedHeight2 = maxHeight // we want to provide as much of the menu as possible to the user,
					// so give them whatever is available below rather than the minHeight.

					if (
						(!isFixedPosition && scrollSpaceAbove >= minHeight) ||
						(isFixedPosition && viewSpaceAbove >= minHeight)
					) {
						_constrainedHeight2 = isFixedPosition
							? viewSpaceAbove - marginTop
							: scrollSpaceAbove - marginTop
					}

					if (shouldScroll) {
						;(0, utils$3.animatedScrollTo)(
							scrollParent,
							scrollUp,
							scrollDuration
						)
					}

					return {
						placement: 'top',
						maxHeight: _constrainedHeight2
					}
				} // 4. not enough space, the browser WILL NOT increase scrollable area when
				// absolutely positioned element rendered above the viewport (only below).
				// Flip the menu, render below

				return {
					placement: 'bottom',
					maxHeight: maxHeight
				}

			default:
				throw new Error(
					'Invalid placement provided "'.concat(placement, '".')
				)
		} // fulfil contract with flow: implicit return value of undefined

		return defaultState
	} // Menu Component
	// ------------------------------

	function alignToControl(placement) {
		var placementToCSSProp = {
			bottom: 'top',
			top: 'bottom'
		}
		return placement ? placementToCSSProp[placement] : 'bottom'
	}

	var coercePlacement = function coercePlacement(p) {
		return p === 'auto' ? 'bottom' : p
	}

	var menuCSS = function menuCSS(_ref2) {
		var _ref3

		var placement = _ref2.placement,
			_ref2$theme = _ref2.theme,
			borderRadius = _ref2$theme.borderRadius,
			spacing = _ref2$theme.spacing,
			colors = _ref2$theme.colors
		return (
			(_ref3 = {
				label: 'menu'
			}),
			_defineProperty(_ref3, alignToControl(placement), '100%'),
			_defineProperty(_ref3, 'backgroundColor', colors.neutral0),
			_defineProperty(_ref3, 'borderRadius', borderRadius),
			_defineProperty(
				_ref3,
				'boxShadow',
				'0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)'
			),
			_defineProperty(_ref3, 'marginBottom', spacing.menuGutter),
			_defineProperty(_ref3, 'marginTop', spacing.menuGutter),
			_defineProperty(_ref3, 'position', 'absolute'),
			_defineProperty(_ref3, 'width', '100%'),
			_defineProperty(_ref3, 'zIndex', 1),
			_ref3
		)
	} // NOTE: internal only

	exports.menuCSS = menuCSS

	var MenuPlacer =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(MenuPlacer, _Component)

			function MenuPlacer() {
				var _getPrototypeOf2

				var _this

				_classCallCheck(this, MenuPlacer)

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key]
				}

				_this = _possibleConstructorReturn(
					this,
					(_getPrototypeOf2 = _getPrototypeOf(MenuPlacer)).call.apply(
						_getPrototypeOf2,
						[this].concat(args)
					)
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'state',
					{
						maxHeight: _this.props.maxMenuHeight,
						placement: null
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getPlacement',
					function(ref) {
						var _this$props = _this.props,
							minMenuHeight = _this$props.minMenuHeight,
							maxMenuHeight = _this$props.maxMenuHeight,
							menuPlacement = _this$props.menuPlacement,
							menuPosition = _this$props.menuPosition,
							menuShouldScrollIntoView =
								_this$props.menuShouldScrollIntoView,
							theme = _this$props.theme
						var getPortalPlacement =
							_this.context.getPortalPlacement
						if (!ref) return // DO NOT scroll if position is fixed

						var isFixedPosition = menuPosition === 'fixed'
						var shouldScroll =
							menuShouldScrollIntoView && !isFixedPosition
						var state = getMenuPlacement({
							maxHeight: maxMenuHeight,
							menuEl: ref,
							minHeight: minMenuHeight,
							placement: menuPlacement,
							shouldScroll: shouldScroll,
							isFixedPosition: isFixedPosition,
							theme: theme
						})
						if (getPortalPlacement) getPortalPlacement(state)

						_this.setState(state)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getUpdatedProps',
					function() {
						var menuPlacement = _this.props.menuPlacement
						var placement =
							_this.state.placement ||
							coercePlacement(menuPlacement)
						return _objectSpread({}, _this.props, {
							placement: placement,
							maxHeight: _this.state.maxHeight
						})
					}
				)

				return _this
			}

			_createClass(MenuPlacer, [
				{
					key: 'render',
					value: function render() {
						var children = this.props.children
						return children({
							ref: this.getPlacement,
							placerProps: this.getUpdatedProps()
						})
					}
				}
			])

			return MenuPlacer
		})(_react.Component)

	exports.MenuPlacer = MenuPlacer

	_defineProperty(MenuPlacer, 'contextTypes', {
		getPortalPlacement: _propTypes.default.func
	})

	var Menu = function Menu(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerRef = props.innerRef,
			innerProps = props.innerProps
		var cn = cx(
			/*#__PURE__*/
			(0, index_esm.css)(getStyles('menu', props)),
			{
				menu: true
			},
			className
		)
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cn
				},
				innerProps,
				{
					ref: innerRef
				}
			),
			children
		)
	}

	var _default = Menu // ==============================
	// Menu List
	// ==============================

	exports.default = _default

	var menuListCSS = function menuListCSS(_ref4) {
		var maxHeight = _ref4.maxHeight,
			baseUnit = _ref4.theme.spacing.baseUnit
		return {
			maxHeight: maxHeight,
			overflowY: 'auto',
			paddingBottom: baseUnit,
			paddingTop: baseUnit,
			position: 'relative',
			// required for offset[Height, Top] > keyboard scroll
			WebkitOverflowScrolling: 'touch'
		}
	}

	exports.menuListCSS = menuListCSS

	var MenuList = function MenuList(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			isMulti = props.isMulti,
			innerRef = props.innerRef
		return _react.default.createElement(
			'div',
			{
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('menuList', props)),
					{
						'menu-list': true,
						'menu-list--is-multi': isMulti
					},
					className
				),
				ref: innerRef
			},
			children
		)
	} // ==============================
	// Menu Notices
	// ==============================

	exports.MenuList = MenuList

	var noticeCSS = function noticeCSS(_ref5) {
		var _ref5$theme = _ref5.theme,
			baseUnit = _ref5$theme.spacing.baseUnit,
			colors = _ref5$theme.colors
		return {
			color: colors.neutral40,
			padding: ''.concat(baseUnit * 2, 'px ').concat(baseUnit * 3, 'px'),
			textAlign: 'center'
		}
	}

	var noOptionsMessageCSS = noticeCSS
	exports.noOptionsMessageCSS = noOptionsMessageCSS
	var loadingMessageCSS = noticeCSS
	exports.loadingMessageCSS = loadingMessageCSS

	var NoOptionsMessage = function NoOptionsMessage(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(
							getStyles('noOptionsMessage', props)
						),
						{
							'menu-notice': true,
							'menu-notice--no-options': true
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	exports.NoOptionsMessage = NoOptionsMessage
	NoOptionsMessage.defaultProps = {
		children: 'No options'
	}

	var LoadingMessage = function LoadingMessage(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('loadingMessage', props)),
						{
							'menu-notice': true,
							'menu-notice--loading': true
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	exports.LoadingMessage = LoadingMessage
	LoadingMessage.defaultProps = {
		children: 'Loading...'
	} // ==============================
	// Menu Portal
	// ==============================

	var menuPortalCSS = function menuPortalCSS(_ref6) {
		var rect = _ref6.rect,
			offset = _ref6.offset,
			position = _ref6.position
		return {
			left: rect.left,
			position: position,
			top: offset,
			width: rect.width,
			zIndex: 1
		}
	}

	exports.menuPortalCSS = menuPortalCSS

	var MenuPortal =
		/*#__PURE__*/
		(function(_Component2) {
			_inherits(MenuPortal, _Component2)

			function MenuPortal() {
				var _getPrototypeOf3

				var _this2

				_classCallCheck(this, MenuPortal)

				for (
					var _len2 = arguments.length,
						args = new Array(_len2),
						_key2 = 0;
					_key2 < _len2;
					_key2++
				) {
					args[_key2] = arguments[_key2]
				}

				_this2 = _possibleConstructorReturn(
					this,
					(_getPrototypeOf3 = _getPrototypeOf(MenuPortal)).call.apply(
						_getPrototypeOf3,
						[this].concat(args)
					)
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this2)),
					'state',
					{
						placement: null
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this2)),
					'getPortalPlacement',
					function(_ref7) {
						var placement = _ref7.placement
						var initialPlacement = coercePlacement(
							_this2.props.menuPlacement
						) // avoid re-renders if the placement has not changed

						if (placement !== initialPlacement) {
							_this2.setState({
								placement: placement
							})
						}
					}
				)

				return _this2
			}

			_createClass(MenuPortal, [
				{
					key: 'getChildContext',
					value: function getChildContext() {
						return {
							getPortalPlacement: this.getPortalPlacement
						}
					} // callback for occassions where the menu must "flip"
				},
				{
					key: 'render',
					value: function render() {
						var _this$props2 = this.props,
							appendTo = _this$props2.appendTo,
							children = _this$props2.children,
							controlElement = _this$props2.controlElement,
							menuPlacement = _this$props2.menuPlacement,
							position = _this$props2.menuPosition,
							getStyles = _this$props2.getStyles
						var isFixed = position === 'fixed' // bail early if required elements aren't present

						if ((!appendTo && !isFixed) || !controlElement) {
							return null
						}

						var placement =
							this.state.placement ||
							coercePlacement(menuPlacement)
						var rect = (0, utils$3.getBoundingClientObj)(
							controlElement
						)
						var scrollDistance = isFixed ? 0 : window.pageYOffset
						var offset = rect[placement] + scrollDistance
						var state = {
							offset: offset,
							position: position,
							rect: rect
						} // same wrapper element whether fixed or portalled

						var menuWrapper = _react.default.createElement(
							'div',
							{
								className:
									/*#__PURE__*/

									/*#__PURE__*/
									(0, index_esm.css)(
										getStyles('menuPortal', state)
									)
							},
							children
						)

						return appendTo
							? (0, ReactDOM.createPortal)(menuWrapper, appendTo)
							: menuWrapper
					}
				}
			])

			return MenuPortal
		})(_react.Component)

	exports.MenuPortal = MenuPortal

	_defineProperty(MenuPortal, 'childContextTypes', {
		getPortalPlacement: _propTypes.default.func
	})
})

unwrapExports(Menu_1)
var Menu_2 = Menu_1.getMenuPlacement
var Menu_3 = Menu_1.MenuPortal
var Menu_4 = Menu_1.menuPortalCSS
var Menu_5 = Menu_1.LoadingMessage
var Menu_6 = Menu_1.NoOptionsMessage
var Menu_7 = Menu_1.loadingMessageCSS
var Menu_8 = Menu_1.noOptionsMessageCSS
var Menu_9 = Menu_1.MenuList
var Menu_10 = Menu_1.menuListCSS
var Menu_11 = Menu_1.MenuPlacer
var Menu_12 = Menu_1.menuCSS

var reactFastCompare = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exportedEqual

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	var isArray = Array.isArray
	var keyList = Object.keys
	var hasProp = Object.prototype.hasOwnProperty

	function equal(a, b) {
		// fast-deep-equal index.js 2.0.1
		if (a === b) return true

		if (a && b && _typeof(a) == 'object' && _typeof(b) == 'object') {
			var arrA = isArray(a),
				arrB = isArray(b),
				i,
				length,
				key

			if (arrA && arrB) {
				length = a.length
				if (length != b.length) return false

				for (i = length; i-- !== 0; ) {
					if (!equal(a[i], b[i])) return false
				}

				return true
			}

			if (arrA != arrB) return false
			var dateA = a instanceof Date,
				dateB = b instanceof Date
			if (dateA != dateB) return false
			if (dateA && dateB) return a.getTime() == b.getTime()
			var regexpA = a instanceof RegExp,
				regexpB = b instanceof RegExp
			if (regexpA != regexpB) return false
			if (regexpA && regexpB) return a.toString() == b.toString()
			var keys = keyList(a)
			length = keys.length

			if (length !== keyList(b).length) {
				return false
			}

			for (i = length; i-- !== 0; ) {
				if (!hasProp.call(b, keys[i])) return false
			} // end fast-deep-equal
			// Custom handling for React

			for (i = length; i-- !== 0; ) {
				key = keys[i]

				if (key === '_owner' && a.$$typeof) {
					// React-specific: avoid traversing React elements' _owner.
					//  _owner contains circular references
					// and is not needed when comparing the actual elements (and not their owners)
					// .$$typeof and ._store on just reasonable markers of a react element
					continue
				} else {
					// all other properties should be traversed as usual
					if (!equal(a[key], b[key])) return false
				}
			} // fast-deep-equal index.js 2.0.1

			return true
		}

		return a !== a && b !== b
	} // end fast-deep-equal

	function exportedEqual(a, b) {
		try {
			return equal(a, b)
		} catch (error) {
			if (error.message && error.message.match(/stack|recursion/i)) {
				// warn on circular references, don't crash
				// browsers give this different errors name and messages:
				// chrome/safari: "RangeError", "Maximum call stack size exceeded"
				// firefox: "InternalError", too much recursion"
				// edge: "Error", "Out of stack space"
				console.warn(
					'Warning: react-fast-compare does not handle circular references.',
					error.name,
					error.message
				)
				return false
			} // some other error. we should definitely know about these

			throw error
		}
	}
})

unwrapExports(reactFastCompare)

var diacritics_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.stripDiacritics = void 0
	var diacritics = [
		{
			base: 'A',
			letters: /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g
		},
		{
			base: 'AA',
			letters: /[\uA732]/g
		},
		{
			base: 'AE',
			letters: /[\u00C6\u01FC\u01E2]/g
		},
		{
			base: 'AO',
			letters: /[\uA734]/g
		},
		{
			base: 'AU',
			letters: /[\uA736]/g
		},
		{
			base: 'AV',
			letters: /[\uA738\uA73A]/g
		},
		{
			base: 'AY',
			letters: /[\uA73C]/g
		},
		{
			base: 'B',
			letters: /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g
		},
		{
			base: 'C',
			letters: /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g
		},
		{
			base: 'D',
			letters: /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g
		},
		{
			base: 'DZ',
			letters: /[\u01F1\u01C4]/g
		},
		{
			base: 'Dz',
			letters: /[\u01F2\u01C5]/g
		},
		{
			base: 'E',
			letters: /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g
		},
		{
			base: 'F',
			letters: /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g
		},
		{
			base: 'G',
			letters: /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g
		},
		{
			base: 'H',
			letters: /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g
		},
		{
			base: 'I',
			letters: /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g
		},
		{
			base: 'J',
			letters: /[\u004A\u24BF\uFF2A\u0134\u0248]/g
		},
		{
			base: 'K',
			letters: /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g
		},
		{
			base: 'L',
			letters: /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g
		},
		{
			base: 'LJ',
			letters: /[\u01C7]/g
		},
		{
			base: 'Lj',
			letters: /[\u01C8]/g
		},
		{
			base: 'M',
			letters: /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g
		},
		{
			base: 'N',
			letters: /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g
		},
		{
			base: 'NJ',
			letters: /[\u01CA]/g
		},
		{
			base: 'Nj',
			letters: /[\u01CB]/g
		},
		{
			base: 'O',
			letters: /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g
		},
		{
			base: 'OI',
			letters: /[\u01A2]/g
		},
		{
			base: 'OO',
			letters: /[\uA74E]/g
		},
		{
			base: 'OU',
			letters: /[\u0222]/g
		},
		{
			base: 'P',
			letters: /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g
		},
		{
			base: 'Q',
			letters: /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g
		},
		{
			base: 'R',
			letters: /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g
		},
		{
			base: 'S',
			letters: /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g
		},
		{
			base: 'T',
			letters: /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g
		},
		{
			base: 'TZ',
			letters: /[\uA728]/g
		},
		{
			base: 'U',
			letters: /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g
		},
		{
			base: 'V',
			letters: /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g
		},
		{
			base: 'VY',
			letters: /[\uA760]/g
		},
		{
			base: 'W',
			letters: /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g
		},
		{
			base: 'X',
			letters: /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g
		},
		{
			base: 'Y',
			letters: /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g
		},
		{
			base: 'Z',
			letters: /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g
		},
		{
			base: 'a',
			letters: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g
		},
		{
			base: 'aa',
			letters: /[\uA733]/g
		},
		{
			base: 'ae',
			letters: /[\u00E6\u01FD\u01E3]/g
		},
		{
			base: 'ao',
			letters: /[\uA735]/g
		},
		{
			base: 'au',
			letters: /[\uA737]/g
		},
		{
			base: 'av',
			letters: /[\uA739\uA73B]/g
		},
		{
			base: 'ay',
			letters: /[\uA73D]/g
		},
		{
			base: 'b',
			letters: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g
		},
		{
			base: 'c',
			letters: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g
		},
		{
			base: 'd',
			letters: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g
		},
		{
			base: 'dz',
			letters: /[\u01F3\u01C6]/g
		},
		{
			base: 'e',
			letters: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g
		},
		{
			base: 'f',
			letters: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g
		},
		{
			base: 'g',
			letters: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g
		},
		{
			base: 'h',
			letters: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g
		},
		{
			base: 'hv',
			letters: /[\u0195]/g
		},
		{
			base: 'i',
			letters: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g
		},
		{
			base: 'j',
			letters: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g
		},
		{
			base: 'k',
			letters: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g
		},
		{
			base: 'l',
			letters: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g
		},
		{
			base: 'lj',
			letters: /[\u01C9]/g
		},
		{
			base: 'm',
			letters: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g
		},
		{
			base: 'n',
			letters: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g
		},
		{
			base: 'nj',
			letters: /[\u01CC]/g
		},
		{
			base: 'o',
			letters: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g
		},
		{
			base: 'oi',
			letters: /[\u01A3]/g
		},
		{
			base: 'ou',
			letters: /[\u0223]/g
		},
		{
			base: 'oo',
			letters: /[\uA74F]/g
		},
		{
			base: 'p',
			letters: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g
		},
		{
			base: 'q',
			letters: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g
		},
		{
			base: 'r',
			letters: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g
		},
		{
			base: 's',
			letters: /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g
		},
		{
			base: 't',
			letters: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g
		},
		{
			base: 'tz',
			letters: /[\uA729]/g
		},
		{
			base: 'u',
			letters: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g
		},
		{
			base: 'v',
			letters: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g
		},
		{
			base: 'vy',
			letters: /[\uA761]/g
		},
		{
			base: 'w',
			letters: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g
		},
		{
			base: 'x',
			letters: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g
		},
		{
			base: 'y',
			letters: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g
		},
		{
			base: 'z',
			letters: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g
		}
	]

	var stripDiacritics = function stripDiacritics(str) {
		for (var i = 0; i < diacritics.length; i++) {
			str = str.replace(diacritics[i].letters, diacritics[i].base)
		}

		return str
	}

	exports.stripDiacritics = stripDiacritics
})

unwrapExports(diacritics_1)
var diacritics_2 = diacritics_1.stripDiacritics

var filters = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.createFilter = void 0

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var trimString = function trimString(str) {
		return str.replace(/^\s+|\s+$/g, '')
	}

	var defaultStringify = function defaultStringify(option) {
		return ''.concat(option.label, ' ').concat(option.value)
	}

	var createFilter = function createFilter(config) {
		return function(option, rawInput) {
			var _ignoreCase$ignoreAcc = _objectSpread(
					{
						ignoreCase: true,
						ignoreAccents: true,
						stringify: defaultStringify,
						trim: true,
						matchFrom: 'any'
					},
					config
				),
				ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,
				ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,
				stringify = _ignoreCase$ignoreAcc.stringify,
				trim = _ignoreCase$ignoreAcc.trim,
				matchFrom = _ignoreCase$ignoreAcc.matchFrom

			var input = trim ? trimString(rawInput) : rawInput
			var candidate = trim
				? trimString(stringify(option))
				: stringify(option)

			if (ignoreCase) {
				input = input.toLowerCase()
				candidate = candidate.toLowerCase()
			}

			if (ignoreAccents) {
				input = (0, diacritics_1.stripDiacritics)(input)
				candidate = (0, diacritics_1.stripDiacritics)(candidate)
			}

			return matchFrom === 'start'
				? candidate.substr(0, input.length) === input
				: candidate.indexOf(input) > -1
		}
	}

	exports.createFilter = createFilter
})

unwrapExports(filters)
var filters_1 = filters.createFilter

var A11yText_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	// Assistive text to describe visual elements. Hidden for sighted users.
	var A11yText = function A11yText(props) {
		return _react.default.createElement(
			'span',
			_extends(
				{
					className:
						/*#__PURE__*/

						/*#__PURE__*/
						(0, index_esm.css)({
							label: 'a11yText',
							zIndex: 9999,
							border: 0,
							clip: 'rect(1px, 1px, 1px, 1px)',
							height: 1,
							width: 1,
							position: 'absolute',
							overflow: 'hidden',
							padding: 0,
							whiteSpace: 'nowrap',
							backgroundColor: 'red',
							color: 'blue'
						})
				},
				props
			)
		)
	}

	var _default = A11yText
	exports.default = _default
})

unwrapExports(A11yText_1)

var DummyInput_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _react = _interopRequireWildcard(React__default)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	var DummyInput =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(DummyInput, _Component)

			function DummyInput() {
				_classCallCheck(this, DummyInput)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(DummyInput).apply(this, arguments)
				)
			}

			_createClass(DummyInput, [
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							inProp = _this$props.in,
							out = _this$props.out,
							onExited = _this$props.onExited,
							appear = _this$props.appear,
							enter = _this$props.enter,
							exit = _this$props.exit,
							innerRef = _this$props.innerRef,
							emotion = _this$props.emotion,
							props = _objectWithoutProperties(_this$props, [
								'in',
								'out',
								'onExited',
								'appear',
								'enter',
								'exit',
								'innerRef',
								'emotion'
							])

						return _react.default.createElement(
							'input',
							_extends(
								{
									ref: innerRef
								},
								props,
								{
									className:
										/*#__PURE__*/

										/*#__PURE__*/
										(0, index_esm.css)({
											label: 'dummyInput',
											// get rid of any default styles
											background: 0,
											border: 0,
											fontSize: 'inherit',
											outline: 0,
											padding: 0,
											// important! without `width` browsers won't allow focus
											width: 1,
											// remove cursor on desktop
											color: 'transparent',
											// remove cursor on mobile whilst maintaining "scroll into view" behaviour
											left: -100,
											opacity: 0,
											position: 'relative',
											transform: 'scale(0)'
										})
								}
							)
						)
					}
				}
			])

			return DummyInput
		})(_react.Component)

	exports.default = DummyInput
})

unwrapExports(DummyInput_1)

var NodeResolver_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	var NodeResolver =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(NodeResolver, _Component)

			function NodeResolver() {
				_classCallCheck(this, NodeResolver)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(NodeResolver).apply(this, arguments)
				)
			}

			_createClass(NodeResolver, [
				{
					key: 'componentDidMount',
					value: function componentDidMount() {
						this.props.innerRef((0, ReactDOM.findDOMNode)(this))
					}
				},
				{
					key: 'componentWillUnmount',
					value: function componentWillUnmount() {
						this.props.innerRef(null)
					}
				},
				{
					key: 'render',
					value: function render() {
						return this.props.children
					}
				}
			])

			return NodeResolver
		})(React__default.Component)

	exports.default = NodeResolver
})

unwrapExports(NodeResolver_1)

var constants$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.LOCK_STYLES = exports.STYLE_KEYS = void 0
	var STYLE_KEYS = [
		'boxSizing',
		'height',
		'overflow',
		'paddingRight',
		'position'
	]
	exports.STYLE_KEYS = STYLE_KEYS
	var LOCK_STYLES = {
		boxSizing: 'border-box',
		// account for possible declaration `width: 100%;` on body
		overflow: 'hidden',
		position: 'relative',
		height: '100%'
	}
	exports.LOCK_STYLES = LOCK_STYLES
})

unwrapExports(constants$1)
var constants_1$1 = constants$1.LOCK_STYLES
var constants_2$1 = constants$1.STYLE_KEYS

var utils$4 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.preventTouchMove = preventTouchMove
	exports.allowTouchMove = allowTouchMove
	exports.preventInertiaScroll = preventInertiaScroll
	exports.isTouchDevice = isTouchDevice

	function preventTouchMove(e) {
		e.preventDefault()
	}

	function allowTouchMove(e) {
		e.stopPropagation()
	}

	function preventInertiaScroll() {
		var top = this.scrollTop
		var totalScroll = this.scrollHeight
		var currentScroll = top + this.offsetHeight

		if (top === 0) {
			this.scrollTop = 1
		} else if (currentScroll === totalScroll) {
			this.scrollTop = top - 1
		}
	} // `ontouchstart` check works on most browsers
	// `maxTouchPoints` works on IE10/11 and Surface

	function isTouchDevice() {
		return 'ontouchstart' in window || navigator.maxTouchPoints
	}
})

unwrapExports(utils$4)
var utils_1$3 = utils$4.preventTouchMove
var utils_2$3 = utils$4.allowTouchMove
var utils_3$3 = utils$4.preventInertiaScroll
var utils_4$3 = utils$4.isTouchDevice

var ScrollLock_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	)
	var activeScrollLocks = 0

	var ScrollLock =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(ScrollLock, _Component)

			function ScrollLock() {
				var _getPrototypeOf2

				var _this

				_classCallCheck(this, ScrollLock)

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key]
				}

				_this = _possibleConstructorReturn(
					this,
					(_getPrototypeOf2 = _getPrototypeOf(ScrollLock)).call.apply(
						_getPrototypeOf2,
						[this].concat(args)
					)
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'originalStyles',
					{}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'listenerOptions',
					{
						capture: false,
						passive: false
					}
				)

				return _this
			}

			_createClass(ScrollLock, [
				{
					key: 'componentDidMount',
					value: function componentDidMount() {
						var _this2 = this

						if (!canUseDOM) return
						var _this$props = this.props,
							accountForScrollbars =
								_this$props.accountForScrollbars,
							touchScrollTarget = _this$props.touchScrollTarget
						var target = document.body
						var targetStyle = target && target.style

						if (accountForScrollbars) {
							// store any styles already applied to the body
							constants$1.STYLE_KEYS.forEach(function(key) {
								var val = targetStyle && targetStyle[key]
								_this2.originalStyles[key] = val
							})
						} // apply the lock styles and padding if this is the first scroll lock

						if (accountForScrollbars && activeScrollLocks < 1) {
							var currentPadding =
								parseInt(
									this.originalStyles.paddingRight,
									10
								) || 0
							var clientWidth = document.body
								? document.body.clientWidth
								: 0
							var adjustedPadding =
								window.innerWidth -
									clientWidth +
									currentPadding || 0
							Object.keys(constants$1.LOCK_STYLES).forEach(
								function(key) {
									var val = constants$1.LOCK_STYLES[key]

									if (targetStyle) {
										targetStyle[key] = val
									}
								}
							)

							if (targetStyle) {
								targetStyle.paddingRight = ''.concat(
									adjustedPadding,
									'px'
								)
							}
						} // account for touch devices

						if (target && (0, utils$4.isTouchDevice)()) {
							// Mobile Safari ignores { overflow: hidden } declaration on the body.
							target.addEventListener(
								'touchmove',
								utils$4.preventTouchMove,
								this.listenerOptions
							) // Allow scroll on provided target

							if (touchScrollTarget) {
								touchScrollTarget.addEventListener(
									'touchstart',
									utils$4.preventInertiaScroll,
									this.listenerOptions
								)
								touchScrollTarget.addEventListener(
									'touchmove',
									utils$4.allowTouchMove,
									this.listenerOptions
								)
							}
						} // increment active scroll locks

						activeScrollLocks += 1
					}
				},
				{
					key: 'componentWillUnmount',
					value: function componentWillUnmount() {
						var _this3 = this

						if (!canUseDOM) return
						var _this$props2 = this.props,
							accountForScrollbars =
								_this$props2.accountForScrollbars,
							touchScrollTarget = _this$props2.touchScrollTarget
						var target = document.body
						var targetStyle = target && target.style // safely decrement active scroll locks

						activeScrollLocks = Math.max(activeScrollLocks - 1, 0) // reapply original body styles, if any

						if (accountForScrollbars && activeScrollLocks < 1) {
							constants$1.STYLE_KEYS.forEach(function(key) {
								var val = _this3.originalStyles[key]

								if (targetStyle) {
									targetStyle[key] = val
								}
							})
						} // remove touch listeners

						if (target && (0, utils$4.isTouchDevice)()) {
							target.removeEventListener(
								'touchmove',
								utils$4.preventTouchMove,
								this.listenerOptions
							)

							if (touchScrollTarget) {
								touchScrollTarget.removeEventListener(
									'touchstart',
									utils$4.preventInertiaScroll,
									this.listenerOptions
								)
								touchScrollTarget.removeEventListener(
									'touchmove',
									utils$4.allowTouchMove,
									this.listenerOptions
								)
							}
						}
					}
				},
				{
					key: 'render',
					value: function render() {
						return null
					}
				}
			])

			return ScrollLock
		})(React__default.Component)

	exports.default = ScrollLock

	_defineProperty(ScrollLock, 'defaultProps', {
		accountForScrollbars: true
	})
})

unwrapExports(ScrollLock_1)

var ScrollBlock_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _react = _interopRequireWildcard(React__default)

	var _NodeResolver = _interopRequireDefault(NodeResolver_1)

	var _index = _interopRequireDefault(ScrollLock_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	// NOTE:
	// We shouldn't need this after updating to React v16.3.0, which introduces:
	// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref
	// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref
	var ScrollBlock =
		/*#__PURE__*/
		(function(_PureComponent) {
			_inherits(ScrollBlock, _PureComponent)

			function ScrollBlock() {
				var _getPrototypeOf2

				var _this

				_classCallCheck(this, ScrollBlock)

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key]
				}

				_this = _possibleConstructorReturn(
					this,
					(_getPrototypeOf2 = _getPrototypeOf(
						ScrollBlock
					)).call.apply(_getPrototypeOf2, [this].concat(args))
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'state',
					{
						touchScrollTarget: null
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getScrollTarget',
					function(ref) {
						if (ref === _this.state.touchScrollTarget) return

						_this.setState({
							touchScrollTarget: ref
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'blurSelectInput',
					function() {
						if (document.activeElement) {
							document.activeElement.blur()
						}
					}
				)

				return _this
			}

			_createClass(ScrollBlock, [
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							children = _this$props.children,
							isEnabled = _this$props.isEnabled
						var touchScrollTarget = this.state.touchScrollTarget // bail early if not enabled

						if (!isEnabled) return children
						/*
						 * Div
						 * ------------------------------
						 * blocks scrolling on non-body elements behind the menu
						 * NodeResolver
						 * ------------------------------
						 * we need a reference to the scrollable element to "unlock" scroll on
						 * mobile devices
						 * ScrollLock
						 * ------------------------------
						 * actually does the scroll locking
						 */

						return _react.default.createElement(
							'div',
							null,
							_react.default.createElement('div', {
								onClick: this.blurSelectInput,
								className:
									/*#__PURE__*/

									/*#__PURE__*/
									(0, index_esm.css)({
										position: 'fixed',
										left: 0,
										bottom: 0,
										right: 0,
										top: 0
									})
							}),
							_react.default.createElement(
								_NodeResolver.default,
								{
									innerRef: this.getScrollTarget
								},
								children
							),
							touchScrollTarget
								? _react.default.createElement(_index.default, {
										touchScrollTarget: touchScrollTarget
								  })
								: null
						)
					}
				}
			])

			return ScrollBlock
		})(_react.PureComponent)

	exports.default = ScrollBlock
})

unwrapExports(ScrollBlock_1)

var ScrollCaptor_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = void 0

	var _react = _interopRequireWildcard(React__default)

	var _NodeResolver = _interopRequireDefault(NodeResolver_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var ScrollCaptor =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(ScrollCaptor, _Component)

			function ScrollCaptor() {
				var _getPrototypeOf2

				var _this

				_classCallCheck(this, ScrollCaptor)

				for (
					var _len = arguments.length,
						args = new Array(_len),
						_key = 0;
					_key < _len;
					_key++
				) {
					args[_key] = arguments[_key]
				}

				_this = _possibleConstructorReturn(
					this,
					(_getPrototypeOf2 = _getPrototypeOf(
						ScrollCaptor
					)).call.apply(_getPrototypeOf2, [this].concat(args))
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'isBottom',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'isTop',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'scrollTarget',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'touchStart',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'cancelScroll',
					function(event) {
						event.preventDefault()
						event.stopPropagation()
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'handleEventDelta',
					function(event, delta) {
						var _this$props = _this.props,
							onBottomArrive = _this$props.onBottomArrive,
							onBottomLeave = _this$props.onBottomLeave,
							onTopArrive = _this$props.onTopArrive,
							onTopLeave = _this$props.onTopLeave
						var _this$scrollTarget = _this.scrollTarget,
							scrollTop = _this$scrollTarget.scrollTop,
							scrollHeight = _this$scrollTarget.scrollHeight,
							clientHeight = _this$scrollTarget.clientHeight
						var target = _this.scrollTarget
						var isDeltaPositive = delta > 0
						var availableScroll =
							scrollHeight - clientHeight - scrollTop
						var shouldCancelScroll = false // reset bottom/top flags

						if (availableScroll > delta && _this.isBottom) {
							if (onBottomLeave) onBottomLeave(event)
							_this.isBottom = false
						}

						if (isDeltaPositive && _this.isTop) {
							if (onTopLeave) onTopLeave(event)
							_this.isTop = false
						} // bottom limit

						if (isDeltaPositive && delta > availableScroll) {
							if (onBottomArrive && !_this.isBottom) {
								onBottomArrive(event)
							}

							target.scrollTop = scrollHeight
							shouldCancelScroll = true
							_this.isBottom = true // top limit
						} else if (!isDeltaPositive && -delta > scrollTop) {
							if (onTopArrive && !_this.isTop) {
								onTopArrive(event)
							}

							target.scrollTop = 0
							shouldCancelScroll = true
							_this.isTop = true
						} // cancel scroll

						if (shouldCancelScroll) {
							_this.cancelScroll(event)
						}
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onWheel',
					function(event) {
						_this.handleEventDelta(event, event.deltaY)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onTouchStart',
					function(event) {
						// set touch start so we can calculate touchmove delta
						_this.touchStart = event.changedTouches[0].clientY
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onTouchMove',
					function(event) {
						var deltaY =
							_this.touchStart - event.changedTouches[0].clientY

						_this.handleEventDelta(event, deltaY)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getScrollTarget',
					function(ref) {
						_this.scrollTarget = ref
					}
				)

				return _this
			}

			_createClass(ScrollCaptor, [
				{
					key: 'componentDidMount',
					value: function componentDidMount() {
						this.startListening(this.scrollTarget)
					}
				},
				{
					key: 'componentWillUnmount',
					value: function componentWillUnmount() {
						this.stopListening(this.scrollTarget)
					}
				},
				{
					key: 'startListening',
					value: function startListening(el) {
						// bail early if no scroll available
						if (!el) return
						if (el.scrollHeight <= el.clientHeight) return // all the if statements are to appease Flow 😢

						if (typeof el.addEventListener === 'function') {
							el.addEventListener('wheel', this.onWheel, false)
						}

						if (typeof el.addEventListener === 'function') {
							el.addEventListener(
								'touchstart',
								this.onTouchStart,
								false
							)
						}

						if (typeof el.addEventListener === 'function') {
							el.addEventListener(
								'touchmove',
								this.onTouchMove,
								false
							)
						}
					}
				},
				{
					key: 'stopListening',
					value: function stopListening(el) {
						// bail early if no scroll available
						if (el.scrollHeight <= el.clientHeight) return // all the if statements are to appease Flow 😢

						if (typeof el.removeEventListener === 'function') {
							el.removeEventListener('wheel', this.onWheel, false)
						}

						if (typeof el.removeEventListener === 'function') {
							el.removeEventListener(
								'touchstart',
								this.onTouchStart,
								false
							)
						}

						if (typeof el.removeEventListener === 'function') {
							el.removeEventListener(
								'touchmove',
								this.onTouchMove,
								false
							)
						}
					}
				},
				{
					key: 'render',
					value: function render() {
						return _react.default.createElement(
							_NodeResolver.default,
							{
								innerRef: this.getScrollTarget
							},
							this.props.children
						)
					}
				}
			])

			return ScrollCaptor
		})(_react.Component)

	var ScrollCaptorSwitch =
		/*#__PURE__*/
		(function(_Component2) {
			_inherits(ScrollCaptorSwitch, _Component2)

			function ScrollCaptorSwitch() {
				_classCallCheck(this, ScrollCaptorSwitch)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(ScrollCaptorSwitch).apply(this, arguments)
				)
			}

			_createClass(ScrollCaptorSwitch, [
				{
					key: 'render',
					value: function render() {
						var _this$props2 = this.props,
							isEnabled = _this$props2.isEnabled,
							props = _objectWithoutProperties(_this$props2, [
								'isEnabled'
							])

						return isEnabled
							? _react.default.createElement(ScrollCaptor, props)
							: this.props.children
					}
				}
			])

			return ScrollCaptorSwitch
		})(_react.Component)

	exports.default = ScrollCaptorSwitch

	_defineProperty(ScrollCaptorSwitch, 'defaultProps', {
		isEnabled: true
	})
})

unwrapExports(ScrollCaptor_1)

var internal = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	Object.defineProperty(exports, 'A11yText', {
		enumerable: true,
		get: function get() {
			return _A11yText.default
		}
	})
	Object.defineProperty(exports, 'DummyInput', {
		enumerable: true,
		get: function get() {
			return _DummyInput.default
		}
	})
	Object.defineProperty(exports, 'NodeResolver', {
		enumerable: true,
		get: function get() {
			return _NodeResolver.default
		}
	})
	Object.defineProperty(exports, 'ScrollBlock', {
		enumerable: true,
		get: function get() {
			return _ScrollBlock.default
		}
	})
	Object.defineProperty(exports, 'ScrollCaptor', {
		enumerable: true,
		get: function get() {
			return _ScrollCaptor.default
		}
	})

	var _A11yText = _interopRequireDefault(A11yText_1)

	var _DummyInput = _interopRequireDefault(DummyInput_1)

	var _NodeResolver = _interopRequireDefault(NodeResolver_1)

	var _ScrollBlock = _interopRequireDefault(ScrollBlock_1)

	var _ScrollCaptor = _interopRequireDefault(ScrollCaptor_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}
})

unwrapExports(internal)

var accessibility = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.resultsAriaMessage = exports.optionFocusAriaMessage = exports.valueFocusAriaMessage = exports.valueEventAriaMessage = exports.instructionsAriaMessage = void 0

	var instructionsAriaMessage = function instructionsAriaMessage(event) {
		var context =
			arguments.length > 1 && arguments[1] !== undefined
				? arguments[1]
				: {}
		var isSearchable = context.isSearchable,
			isMulti = context.isMulti,
			label = context.label,
			isDisabled = context.isDisabled

		switch (event) {
			case 'menu':
				return 'Use Up and Down to choose options'.concat(
					isDisabled
						? ''
						: ', press Enter to select the currently focused option',
					', press Escape to exit the menu, press Tab to select the option and exit the menu.'
				)

			case 'input':
				return ''
					.concat(label ? label : 'Select', ' is focused ')
					.concat(
						isSearchable ? ',type to refine list' : '',
						', press Down to open the menu, '
					)
					.concat(
						isMulti ? ' press left to focus selected values' : ''
					)

			case 'value':
				return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value'
		}
	}

	exports.instructionsAriaMessage = instructionsAriaMessage

	var valueEventAriaMessage = function valueEventAriaMessage(event, context) {
		var value = context.value,
			isDisabled = context.isDisabled
		if (!value) return

		switch (event) {
			case 'deselect-option':
			case 'pop-value':
			case 'remove-value':
				return 'option '.concat(value, ', deselected.')

			case 'select-option':
				return isDisabled
					? 'option '.concat(
							value,
							' is disabled. Select another option.'
					  )
					: 'option '.concat(value, ', selected.')
		}
	}

	exports.valueEventAriaMessage = valueEventAriaMessage

	var valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {
		var focusedValue = _ref.focusedValue,
			getOptionLabel = _ref.getOptionLabel,
			selectValue = _ref.selectValue
		return 'value '
			.concat(getOptionLabel(focusedValue), ' focused, ')
			.concat(selectValue.indexOf(focusedValue) + 1, ' of ')
			.concat(selectValue.length, '.')
	}

	exports.valueFocusAriaMessage = valueFocusAriaMessage

	var optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {
		var focusedOption = _ref2.focusedOption,
			getOptionLabel = _ref2.getOptionLabel,
			options = _ref2.options
		return 'option '
			.concat(getOptionLabel(focusedOption), ' focused')
			.concat(focusedOption.isDisabled ? ' disabled' : '', ', ')
			.concat(options.indexOf(focusedOption) + 1, ' of ')
			.concat(options.length, '.')
	}

	exports.optionFocusAriaMessage = optionFocusAriaMessage

	var resultsAriaMessage = function resultsAriaMessage(_ref3) {
		var inputValue = _ref3.inputValue,
			screenReaderMessage = _ref3.screenReaderMessage
		return ''
			.concat(screenReaderMessage)
			.concat(inputValue ? ' for search term ' + inputValue : '', '.')
	}

	exports.resultsAriaMessage = resultsAriaMessage
})

unwrapExports(accessibility)
var accessibility_1 = accessibility.resultsAriaMessage
var accessibility_2 = accessibility.optionFocusAriaMessage
var accessibility_3 = accessibility.valueFocusAriaMessage
var accessibility_4 = accessibility.valueEventAriaMessage
var accessibility_5 = accessibility.instructionsAriaMessage

var builtins$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.isOptionDisabled = exports.getOptionValue = exports.getOptionLabel = exports.formatGroupLabel = void 0

	var formatGroupLabel = function formatGroupLabel(group) {
		return group.label
	}

	exports.formatGroupLabel = formatGroupLabel

	var getOptionLabel = function getOptionLabel(option) {
		return option.label
	}

	exports.getOptionLabel = getOptionLabel

	var getOptionValue = function getOptionValue(option) {
		return option.value
	}

	exports.getOptionValue = getOptionValue

	var isOptionDisabled = function isOptionDisabled(option) {
		return !!option.isDisabled
	}

	exports.isOptionDisabled = isOptionDisabled
})

unwrapExports(builtins$1)
var builtins_1 = builtins$1.isOptionDisabled
var builtins_2 = builtins$1.getOptionValue
var builtins_3 = builtins$1.getOptionLabel
var builtins_4 = builtins$1.formatGroupLabel

var containers = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.IndicatorsContainer = exports.indicatorsContainerCSS = exports.ValueContainer = exports.valueContainerCSS = exports.SelectContainer = exports.containerCSS = void 0

	var _react = _interopRequireWildcard(React__default)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var containerCSS = function containerCSS(_ref) {
		var isDisabled = _ref.isDisabled,
			isRtl = _ref.isRtl
		return {
			label: 'container',
			direction: isRtl ? 'rtl' : null,
			pointerEvents: isDisabled ? 'none' : null,
			// cancel mouse events when disabled
			position: 'relative'
		}
	}

	exports.containerCSS = containerCSS

	var SelectContainer = function SelectContainer(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps,
			isDisabled = props.isDisabled,
			isRtl = props.isRtl
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('container', props)),
						{
							'--is-disabled': isDisabled,
							'--is-rtl': isRtl
						},
						className
					)
				},
				innerProps
			),
			children
		)
	} // ==============================
	// Value Container
	// ==============================

	exports.SelectContainer = SelectContainer

	var valueContainerCSS = function valueContainerCSS(_ref2) {
		var spacing = _ref2.theme.spacing
		return {
			alignItems: 'center',
			display: 'flex',
			flex: 1,
			flexWrap: 'wrap',
			padding: ''
				.concat(spacing.baseUnit / 2, 'px ')
				.concat(spacing.baseUnit * 2, 'px'),
			WebkitOverflowScrolling: 'touch',
			position: 'relative',
			overflow: 'hidden'
		}
	}

	exports.valueContainerCSS = valueContainerCSS

	var ValueContainer =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(ValueContainer, _Component)

			function ValueContainer() {
				_classCallCheck(this, ValueContainer)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(ValueContainer).apply(this, arguments)
				)
			}

			_createClass(ValueContainer, [
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							children = _this$props.children,
							className = _this$props.className,
							cx = _this$props.cx,
							isMulti = _this$props.isMulti,
							getStyles = _this$props.getStyles,
							hasValue = _this$props.hasValue
						return _react.default.createElement(
							'div',
							{
								className: cx(
									/*#__PURE__*/
									(0, index_esm.css)(
										getStyles('valueContainer', this.props)
									),
									{
										'value-container': true,
										'value-container--is-multi': isMulti,
										'value-container--has-value': hasValue
									},
									className
								)
							},
							children
						)
					}
				}
			])

			return ValueContainer
		})(_react.Component) // ==============================
	// Indicator Container
	// ==============================

	exports.ValueContainer = ValueContainer

	var indicatorsContainerCSS = function indicatorsContainerCSS() {
		return {
			alignItems: 'center',
			alignSelf: 'stretch',
			display: 'flex',
			flexShrink: 0
		}
	}

	exports.indicatorsContainerCSS = indicatorsContainerCSS

	var IndicatorsContainer = function IndicatorsContainer(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles
		return _react.default.createElement(
			'div',
			{
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('indicatorsContainer', props)),
					{
						indicators: true
					},
					className
				)
			},
			children
		)
	}

	exports.IndicatorsContainer = IndicatorsContainer
})

unwrapExports(containers)
var containers_1 = containers.IndicatorsContainer
var containers_2 = containers.indicatorsContainerCSS
var containers_3 = containers.ValueContainer
var containers_4 = containers.valueContainerCSS
var containers_5 = containers.SelectContainer
var containers_6 = containers.containerCSS

var indicators = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.LoadingIndicator = exports.loadingIndicatorCSS = exports.IndicatorSeparator = exports.indicatorSeparatorCSS = exports.ClearIndicator = exports.clearIndicatorCSS = exports.DropdownIndicator = exports.dropdownIndicatorCSS = exports.DownChevron = exports.CrossIcon = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	// ==============================
	// Dropdown & Clear Icons
	// ==============================
	var Svg = function Svg(_ref) {
		var size = _ref.size,
			props = _objectWithoutProperties(_ref, ['size'])

		return _react.default.createElement(
			'svg',
			_extends(
				{
					height: size,
					width: size,
					viewBox: '0 0 20 20',
					'aria-hidden': 'true',
					focusable: 'false',
					className:
						/*#__PURE__*/

						/*#__PURE__*/
						(0, index_esm.css)({
							display: 'inline-block',
							fill: 'currentColor',
							lineHeight: 1,
							stroke: 'currentColor',
							strokeWidth: 0
						})
				},
				props
			)
		)
	}

	var CrossIcon = function CrossIcon(props) {
		return _react.default.createElement(
			Svg,
			_extends(
				{
					size: 20
				},
				props
			),
			_react.default.createElement('path', {
				d:
					'M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z'
			})
		)
	}

	exports.CrossIcon = CrossIcon

	var DownChevron = function DownChevron(props) {
		return _react.default.createElement(
			Svg,
			_extends(
				{
					size: 20
				},
				props
			),
			_react.default.createElement('path', {
				d:
					'M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z'
			})
		)
	} // ==============================
	// Dropdown & Clear Buttons
	// ==============================

	exports.DownChevron = DownChevron

	var baseCSS = function baseCSS(_ref2) {
		var isFocused = _ref2.isFocused,
			_ref2$theme = _ref2.theme,
			baseUnit = _ref2$theme.spacing.baseUnit,
			colors = _ref2$theme.colors
		return {
			label: 'indicatorContainer',
			color: isFocused ? colors.neutral60 : colors.neutral20,
			display: 'flex',
			padding: baseUnit * 2,
			transition: 'color 150ms',
			':hover': {
				color: isFocused ? colors.neutral80 : colors.neutral40
			}
		}
	}

	var dropdownIndicatorCSS = baseCSS
	exports.dropdownIndicatorCSS = dropdownIndicatorCSS

	var DropdownIndicator = function DropdownIndicator(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends({}, innerProps, {
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('dropdownIndicator', props)),
					{
						indicator: true,
						'dropdown-indicator': true
					},
					className
				)
			}),
			children || _react.default.createElement(DownChevron, null)
		)
	}

	exports.DropdownIndicator = DropdownIndicator
	var clearIndicatorCSS = baseCSS
	exports.clearIndicatorCSS = clearIndicatorCSS

	var ClearIndicator = function ClearIndicator(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends({}, innerProps, {
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('clearIndicator', props)),
					{
						indicator: true,
						'clear-indicator': true
					},
					className
				)
			}),
			children || _react.default.createElement(CrossIcon, null)
		)
	} // ==============================
	// Separator
	// ==============================

	exports.ClearIndicator = ClearIndicator

	var indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref3) {
		var isDisabled = _ref3.isDisabled,
			_ref3$theme = _ref3.theme,
			baseUnit = _ref3$theme.spacing.baseUnit,
			colors = _ref3$theme.colors
		return {
			label: 'indicatorSeparator',
			alignSelf: 'stretch',
			backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,
			marginBottom: baseUnit * 2,
			marginTop: baseUnit * 2,
			width: 1
		}
	}

	exports.indicatorSeparatorCSS = indicatorSeparatorCSS

	var IndicatorSeparator = function IndicatorSeparator(props) {
		var className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'span',
			_extends({}, innerProps, {
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('indicatorSeparator', props)),
					{
						'indicator-separator': true
					},
					className
				)
			})
		)
	} // ==============================
	// Loading
	// ==============================

	exports.IndicatorSeparator = IndicatorSeparator
	var keyframesName = 'react-select-loading-indicator'
	var keyframesInjected = false

	var loadingIndicatorCSS = function loadingIndicatorCSS(_ref4) {
		var isFocused = _ref4.isFocused,
			size = _ref4.size,
			_ref4$theme = _ref4.theme,
			colors = _ref4$theme.colors,
			baseUnit = _ref4$theme.spacing.baseUnit
		return {
			label: 'loadingIndicator',
			color: isFocused ? colors.neutral60 : colors.neutral20,
			display: 'flex',
			padding: baseUnit * 2,
			transition: 'color 150ms',
			alignSelf: 'center',
			fontSize: size,
			lineHeight: 1,
			marginRight: size,
			textAlign: 'center',
			verticalAlign: 'middle'
		}
	}

	exports.loadingIndicatorCSS = loadingIndicatorCSS

	var LoadingDot = function LoadingDot(_ref5) {
		var color = _ref5.color,
			delay = _ref5.delay,
			offset = _ref5.offset
		return _react.default.createElement('span', {
			className:
				/*#__PURE__*/

				/*#__PURE__*/
				(0, index_esm.css)({
					animationDuration: '1s',
					animationDelay: ''.concat(delay, 'ms'),
					animationIterationCount: 'infinite',
					animationName: keyframesName,
					animationTimingFunction: 'ease-in-out',
					backgroundColor: color,
					borderRadius: '1em',
					display: 'inline-block',
					marginLeft: offset ? '1em' : null,
					height: '1em',
					verticalAlign: 'top',
					width: '1em'
				})
		})
	}

	var LoadingIndicator = function LoadingIndicator(props) {
		var className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps,
			isFocused = props.isFocused,
			isRtl = props.isRtl,
			colors = props.theme.colors
		var color = isFocused ? colors.neutral80 : colors.neutral20

		if (!keyframesInjected) {
			// eslint-disable-next-line no-unused-expressions
			;(0, index_esm.injectGlobal)(
				'@keyframes ',
				keyframesName,
				'{0%,80%,100%{opacity:0;}40%{opacity:1;}};'
			)
			keyframesInjected = true
		}

		return _react.default.createElement(
			'div',
			_extends({}, innerProps, {
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('loadingIndicator', props)),
					{
						indicator: true,
						'loading-indicator': true
					},
					className
				)
			}),
			_react.default.createElement(LoadingDot, {
				color: color,
				delay: 0,
				offset: isRtl
			}),
			_react.default.createElement(LoadingDot, {
				color: color,
				delay: 160,
				offset: true
			}),
			_react.default.createElement(LoadingDot, {
				color: color,
				delay: 320,
				offset: !isRtl
			})
		)
	}

	exports.LoadingIndicator = LoadingIndicator
	LoadingIndicator.defaultProps = {
		size: 4
	}
})

unwrapExports(indicators)
var indicators_1 = indicators.LoadingIndicator
var indicators_2 = indicators.loadingIndicatorCSS
var indicators_3 = indicators.IndicatorSeparator
var indicators_4 = indicators.indicatorSeparatorCSS
var indicators_5 = indicators.ClearIndicator
var indicators_6 = indicators.clearIndicatorCSS
var indicators_7 = indicators.DropdownIndicator
var indicators_8 = indicators.dropdownIndicatorCSS
var indicators_9 = indicators.DownChevron
var indicators_10 = indicators.CrossIcon

var Control_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.css = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var css = function css(_ref) {
		var isDisabled = _ref.isDisabled,
			isFocused = _ref.isFocused,
			_ref$theme = _ref.theme,
			colors = _ref$theme.colors,
			borderRadius = _ref$theme.borderRadius,
			spacing = _ref$theme.spacing
		return {
			label: 'control',
			alignItems: 'center',
			backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,
			borderColor: isDisabled
				? colors.neutral10
				: isFocused
				? colors.primary
				: colors.neutral20,
			borderRadius: borderRadius,
			borderStyle: 'solid',
			borderWidth: 1,
			boxShadow: isFocused ? '0 0 0 1px '.concat(colors.primary) : null,
			cursor: 'default',
			display: 'flex',
			flexWrap: 'wrap',
			justifyContent: 'space-between',
			minHeight: spacing.controlHeight,
			outline: '0 !important',
			position: 'relative',
			transition: 'all 100ms',
			'&:hover': {
				borderColor: isFocused ? colors.primary : colors.neutral30
			}
		}
	}

	exports.css = css

	var Control = function Control(props) {
		var children = props.children,
			cx = props.cx,
			getStyles = props.getStyles,
			className = props.className,
			isDisabled = props.isDisabled,
			isFocused = props.isFocused,
			innerRef = props.innerRef,
			innerProps = props.innerProps,
			menuIsOpen = props.menuIsOpen
		return _react.default.createElement(
			'div',
			_extends(
				{
					ref: innerRef,
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('control', props)),
						{
							control: true,
							'control--is-disabled': isDisabled,
							'control--is-focused': isFocused,
							'control--menu-is-open': menuIsOpen
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	var _default = Control
	exports.default = _default
})

unwrapExports(Control_1)
var Control_2 = Control_1.css

var Group_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.GroupHeading = exports.groupHeadingCSS = exports.groupCSS = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var groupCSS = function groupCSS(_ref) {
		var spacing = _ref.theme.spacing
		return {
			paddingBottom: spacing.baseUnit * 2,
			paddingTop: spacing.baseUnit * 2
		}
	}

	exports.groupCSS = groupCSS

	var Group = function Group(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			Heading = props.Heading,
			headingProps = props.headingProps,
			label = props.label,
			theme = props.theme,
			selectProps = props.selectProps
		return _react.default.createElement(
			'div',
			{
				className: cx(
					/*#__PURE__*/
					(0, index_esm.css)(getStyles('group', props)),
					{
						group: true
					},
					className
				)
			},
			_react.default.createElement(
				Heading,
				_extends({}, headingProps, {
					selectProps: selectProps,
					theme: theme,
					getStyles: getStyles,
					cx: cx
				}),
				label
			),
			_react.default.createElement('div', null, children)
		)
	}

	var groupHeadingCSS = function groupHeadingCSS(_ref2) {
		var spacing = _ref2.theme.spacing
		return {
			label: 'group',
			color: '#999',
			cursor: 'default',
			display: 'block',
			fontSize: '75%',
			fontWeight: '500',
			marginBottom: '0.25em',
			paddingLeft: spacing.baseUnit * 3,
			paddingRight: spacing.baseUnit * 3,
			textTransform: 'uppercase'
		}
	}

	exports.groupHeadingCSS = groupHeadingCSS

	var GroupHeading = function GroupHeading(props) {
		var className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			theme = props.theme,
			selectProps = props.selectProps,
			cleanProps = _objectWithoutProperties(props, [
				'className',
				'cx',
				'getStyles',
				'theme',
				'selectProps'
			])

		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(
							getStyles(
								'groupHeading',
								_objectSpread(
									{
										theme: theme
									},
									cleanProps
								)
							)
						),
						{
							'group-heading': true
						},
						className
					)
				},
				cleanProps
			)
		)
	}

	exports.GroupHeading = GroupHeading
	var _default = Group
	exports.default = _default
})

unwrapExports(Group_1)
var Group_2 = Group_1.GroupHeading
var Group_3 = Group_1.groupHeadingCSS
var Group_4 = Group_1.groupCSS

var Input_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.inputCSS = void 0

	var _react = _interopRequireDefault(React__default)

	var _reactInputAutosize = _interopRequireDefault(AutosizeInput_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	var inputCSS = function inputCSS(_ref) {
		var isDisabled = _ref.isDisabled,
			_ref$theme = _ref.theme,
			spacing = _ref$theme.spacing,
			colors = _ref$theme.colors
		return {
			margin: spacing.baseUnit / 2,
			paddingBottom: spacing.baseUnit / 2,
			paddingTop: spacing.baseUnit / 2,
			visibility: isDisabled ? 'hidden' : 'visible',
			color: colors.neutral80
		}
	}

	exports.inputCSS = inputCSS

	var inputStyle = function inputStyle(isHidden) {
		return {
			label: 'input',
			background: 0,
			border: 0,
			fontSize: 'inherit',
			opacity: isHidden ? 0 : 1,
			outline: 0,
			padding: 0,
			color: 'inherit'
		}
	}

	var Input = function Input(_ref2) {
		var className = _ref2.className,
			cx = _ref2.cx,
			getStyles = _ref2.getStyles,
			innerRef = _ref2.innerRef,
			isHidden = _ref2.isHidden,
			isDisabled = _ref2.isDisabled,
			theme = _ref2.theme,
			selectProps = _ref2.selectProps,
			props = _objectWithoutProperties(_ref2, [
				'className',
				'cx',
				'getStyles',
				'innerRef',
				'isHidden',
				'isDisabled',
				'theme',
				'selectProps'
			])

		return _react.default.createElement(
			'div',
			{
				className:
					/*#__PURE__*/

					/*#__PURE__*/
					(0, index_esm.css)(
						getStyles(
							'input',
							_objectSpread(
								{
									theme: theme
								},
								props
							)
						)
					)
			},
			_react.default.createElement(
				_reactInputAutosize.default,
				_extends(
					{
						className: cx(
							null,
							{
								input: true
							},
							className
						),
						inputRef: innerRef,
						inputStyle: inputStyle(isHidden),
						disabled: isDisabled
					},
					props
				)
			)
		)
	}

	var _default = Input
	exports.default = _default
})

unwrapExports(Input_1)
var Input_2 = Input_1.inputCSS

var MultiValue_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.MultiValueRemove = exports.MultiValueLabel = exports.MultiValueContainer = exports.MultiValueGeneric = exports.multiValueRemoveCSS = exports.multiValueLabelCSS = exports.multiValueCSS = void 0

	var _react = _interopRequireWildcard(React__default)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	var multiValueCSS = function multiValueCSS(_ref) {
		var _ref$theme = _ref.theme,
			spacing = _ref$theme.spacing,
			borderRadius = _ref$theme.borderRadius,
			colors = _ref$theme.colors
		return {
			label: 'multiValue',
			backgroundColor: colors.neutral10,
			borderRadius: borderRadius / 2,
			display: 'flex',
			margin: spacing.baseUnit / 2,
			minWidth: 0 // resolves flex/text-overflow bug
		}
	}

	exports.multiValueCSS = multiValueCSS

	var multiValueLabelCSS = function multiValueLabelCSS(_ref2) {
		var _ref2$theme = _ref2.theme,
			borderRadius = _ref2$theme.borderRadius,
			colors = _ref2$theme.colors,
			cropWithEllipsis = _ref2.cropWithEllipsis
		return {
			borderRadius: borderRadius / 2,
			color: colors.neutral80,
			fontSize: '85%',
			overflow: 'hidden',
			padding: 3,
			paddingLeft: 6,
			textOverflow: cropWithEllipsis ? 'ellipsis' : null,
			whiteSpace: 'nowrap'
		}
	}

	exports.multiValueLabelCSS = multiValueLabelCSS

	var multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {
		var _ref3$theme = _ref3.theme,
			spacing = _ref3$theme.spacing,
			borderRadius = _ref3$theme.borderRadius,
			colors = _ref3$theme.colors,
			isFocused = _ref3.isFocused
		return {
			alignItems: 'center',
			borderRadius: borderRadius / 2,
			backgroundColor: isFocused && colors.dangerLight,
			display: 'flex',
			paddingLeft: spacing.baseUnit,
			paddingRight: spacing.baseUnit,
			':hover': {
				backgroundColor: colors.dangerLight,
				color: colors.danger
			}
		}
	}

	exports.multiValueRemoveCSS = multiValueRemoveCSS

	var MultiValueGeneric = function MultiValueGeneric(_ref4) {
		var children = _ref4.children,
			innerProps = _ref4.innerProps
		return _react.default.createElement('div', innerProps, children)
	}

	exports.MultiValueGeneric = MultiValueGeneric
	var MultiValueContainer = MultiValueGeneric
	exports.MultiValueContainer = MultiValueContainer
	var MultiValueLabel = MultiValueGeneric
	exports.MultiValueLabel = MultiValueLabel

	var MultiValueRemove =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(MultiValueRemove, _Component)

			function MultiValueRemove() {
				_classCallCheck(this, MultiValueRemove)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(MultiValueRemove).apply(this, arguments)
				)
			}

			_createClass(MultiValueRemove, [
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							children = _this$props.children,
							innerProps = _this$props.innerProps
						return _react.default.createElement(
							'div',
							innerProps,
							children ||
								_react.default.createElement(
									indicators.CrossIcon,
									{
										size: 14
									}
								)
						)
					}
				}
			])

			return MultiValueRemove
		})(_react.Component)

	exports.MultiValueRemove = MultiValueRemove

	var MultiValue =
		/*#__PURE__*/
		(function(_Component2) {
			_inherits(MultiValue, _Component2)

			function MultiValue() {
				_classCallCheck(this, MultiValue)

				return _possibleConstructorReturn(
					this,
					_getPrototypeOf(MultiValue).apply(this, arguments)
				)
			}

			_createClass(MultiValue, [
				{
					key: 'render',
					value: function render() {
						var _this$props2 = this.props,
							children = _this$props2.children,
							className = _this$props2.className,
							components = _this$props2.components,
							cx = _this$props2.cx,
							data = _this$props2.data,
							getStyles = _this$props2.getStyles,
							innerProps = _this$props2.innerProps,
							isDisabled = _this$props2.isDisabled,
							removeProps = _this$props2.removeProps,
							selectProps = _this$props2.selectProps
						var Container = components.Container,
							Label = components.Label,
							Remove = components.Remove

						var containerInnerProps = _objectSpread(
							{
								className: cx(
									/*#__PURE__*/
									(0, index_esm.css)(
										getStyles('multiValue', this.props)
									),
									{
										'multi-value': true,
										'multi-value--is-disabled': isDisabled
									},
									className
								)
							},
							innerProps
						)

						var labelInnerProps = {
							className: cx(
								/*#__PURE__*/
								(0, index_esm.css)(
									getStyles('multiValueLabel', this.props)
								),
								{
									'multi-value__label': true
								},
								className
							)
						}

						var removeInnerProps = _objectSpread(
							{
								className: cx(
									/*#__PURE__*/
									(0, index_esm.css)(
										getStyles(
											'multiValueRemove',
											this.props
										)
									),
									{
										'multi-value__remove': true
									},
									className
								)
							},
							removeProps
						)

						return _react.default.createElement(
							Container,
							{
								data: data,
								innerProps: containerInnerProps,
								selectProps: selectProps
							},
							_react.default.createElement(
								Label,
								{
									data: data,
									innerProps: labelInnerProps,
									selectProps: selectProps
								},
								children
							),
							_react.default.createElement(Remove, {
								data: data,
								innerProps: removeInnerProps,
								selectProps: selectProps
							})
						)
					}
				}
			])

			return MultiValue
		})(_react.Component)

	_defineProperty(MultiValue, 'defaultProps', {
		cropWithEllipsis: true
	})

	var _default = MultiValue
	exports.default = _default
})

unwrapExports(MultiValue_1)
var MultiValue_2 = MultiValue_1.MultiValueRemove
var MultiValue_3 = MultiValue_1.MultiValueLabel
var MultiValue_4 = MultiValue_1.MultiValueContainer
var MultiValue_5 = MultiValue_1.MultiValueGeneric
var MultiValue_6 = MultiValue_1.multiValueRemoveCSS
var MultiValue_7 = MultiValue_1.multiValueLabelCSS
var MultiValue_8 = MultiValue_1.multiValueCSS

var Option_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.optionCSS = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var optionCSS = function optionCSS(_ref) {
		var isDisabled = _ref.isDisabled,
			isFocused = _ref.isFocused,
			isSelected = _ref.isSelected,
			_ref$theme = _ref.theme,
			spacing = _ref$theme.spacing,
			colors = _ref$theme.colors
		return {
			label: 'option',
			backgroundColor: isSelected
				? colors.primary
				: isFocused
				? colors.primary25
				: 'transparent',
			color: isDisabled
				? colors.neutral20
				: isSelected
				? colors.neutral0
				: 'inherit',
			cursor: 'default',
			display: 'block',
			fontSize: 'inherit',
			padding: ''
				.concat(spacing.baseUnit * 2, 'px ')
				.concat(spacing.baseUnit * 3, 'px'),
			width: '100%',
			userSelect: 'none',
			WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',
			// provide some affordance on touch devices
			':active': {
				backgroundColor:
					!isDisabled &&
					(isSelected ? colors.primary : colors.primary50)
			}
		}
	}

	exports.optionCSS = optionCSS

	var Option = function Option(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			isDisabled = props.isDisabled,
			isFocused = props.isFocused,
			isSelected = props.isSelected,
			innerRef = props.innerRef,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends(
				{
					ref: innerRef,
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('option', props)),
						{
							option: true,
							'option--is-disabled': isDisabled,
							'option--is-focused': isFocused,
							'option--is-selected': isSelected
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	var _default = Option
	exports.default = _default
})

unwrapExports(Option_1)
var Option_2 = Option_1.optionCSS

var Placeholder_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.placeholderCSS = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var placeholderCSS = function placeholderCSS(_ref) {
		var _ref$theme = _ref.theme,
			spacing = _ref$theme.spacing,
			colors = _ref$theme.colors
		return {
			label: 'placeholder',
			color: colors.neutral50,
			marginLeft: spacing.baseUnit / 2,
			marginRight: spacing.baseUnit / 2,
			position: 'absolute',
			top: '50%',
			transform: 'translateY(-50%)'
		}
	}

	exports.placeholderCSS = placeholderCSS

	var Placeholder = function Placeholder(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('placeholder', props)),
						{
							placeholder: true
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	var _default = Placeholder
	exports.default = _default
})

unwrapExports(Placeholder_1)
var Placeholder_2 = Placeholder_1.placeholderCSS

var SingleValue_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.css = void 0

	var _react = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	var css = function css(_ref) {
		var isDisabled = _ref.isDisabled,
			_ref$theme = _ref.theme,
			spacing = _ref$theme.spacing,
			colors = _ref$theme.colors
		return {
			label: 'singleValue',
			color: isDisabled ? colors.neutral40 : colors.neutral80,
			marginLeft: spacing.baseUnit / 2,
			marginRight: spacing.baseUnit / 2,
			maxWidth: 'calc(100% - '.concat(spacing.baseUnit * 2, 'px)'),
			overflow: 'hidden',
			position: 'absolute',
			textOverflow: 'ellipsis',
			whiteSpace: 'nowrap',
			top: '50%',
			transform: 'translateY(-50%)'
		}
	}

	exports.css = css

	var SingleValue = function SingleValue(props) {
		var children = props.children,
			className = props.className,
			cx = props.cx,
			getStyles = props.getStyles,
			isDisabled = props.isDisabled,
			innerProps = props.innerProps
		return _react.default.createElement(
			'div',
			_extends(
				{
					className: cx(
						/*#__PURE__*/
						(0, index_esm.css)(getStyles('singleValue', props)),
						{
							'single-value': true,
							'single-value--is-disabled': isDisabled
						},
						className
					)
				},
				innerProps
			),
			children
		)
	}

	var _default = SingleValue
	exports.default = _default
})

unwrapExports(SingleValue_1)
var SingleValue_2 = SingleValue_1.css

var components_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.defaultComponents = exports.components = void 0

	var _Control = _interopRequireDefault(Control_1)

	var _Group = _interopRequireWildcard(Group_1)

	var _Input = _interopRequireDefault(Input_1)

	var _Menu = _interopRequireWildcard(Menu_1)

	var _MultiValue = _interopRequireWildcard(MultiValue_1)

	var _Option = _interopRequireDefault(Option_1)

	var _Placeholder = _interopRequireDefault(Placeholder_1)

	var _SingleValue = _interopRequireDefault(SingleValue_1)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var components = {
		ClearIndicator: indicators.ClearIndicator,
		Control: _Control.default,
		DropdownIndicator: indicators.DropdownIndicator,
		DownChevron: indicators.DownChevron,
		CrossIcon: indicators.CrossIcon,
		Group: _Group.default,
		GroupHeading: _Group.GroupHeading,
		IndicatorsContainer: containers.IndicatorsContainer,
		IndicatorSeparator: indicators.IndicatorSeparator,
		Input: _Input.default,
		LoadingIndicator: indicators.LoadingIndicator,
		Menu: _Menu.default,
		MenuList: _Menu.MenuList,
		MenuPortal: _Menu.MenuPortal,
		LoadingMessage: _Menu.LoadingMessage,
		NoOptionsMessage: _Menu.NoOptionsMessage,
		MultiValue: _MultiValue.default,
		MultiValueContainer: _MultiValue.MultiValueContainer,
		MultiValueLabel: _MultiValue.MultiValueLabel,
		MultiValueRemove: _MultiValue.MultiValueRemove,
		Option: _Option.default,
		Placeholder: _Placeholder.default,
		SelectContainer: containers.SelectContainer,
		SingleValue: _SingleValue.default,
		ValueContainer: containers.ValueContainer
	}
	exports.components = components

	var defaultComponents = function defaultComponents(props) {
		return _objectSpread({}, components, props.components)
	}

	exports.defaultComponents = defaultComponents
})

unwrapExports(components_1)
var components_2 = components_1.defaultComponents
var components_3 = components_1.components

var styles = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.mergeStyles = mergeStyles
	exports.defaultStyles = void 0

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var defaultStyles = {
		clearIndicator: indicators.clearIndicatorCSS,
		container: containers.containerCSS,
		control: Control_1.css,
		dropdownIndicator: indicators.dropdownIndicatorCSS,
		group: Group_1.groupCSS,
		groupHeading: Group_1.groupHeadingCSS,
		indicatorsContainer: containers.indicatorsContainerCSS,
		indicatorSeparator: indicators.indicatorSeparatorCSS,
		input: Input_1.inputCSS,
		loadingIndicator: indicators.loadingIndicatorCSS,
		loadingMessage: Menu_1.loadingMessageCSS,
		menu: Menu_1.menuCSS,
		menuList: Menu_1.menuListCSS,
		menuPortal: Menu_1.menuPortalCSS,
		multiValue: MultiValue_1.multiValueCSS,
		multiValueLabel: MultiValue_1.multiValueLabelCSS,
		multiValueRemove: MultiValue_1.multiValueRemoveCSS,
		noOptionsMessage: Menu_1.noOptionsMessageCSS,
		option: Option_1.optionCSS,
		placeholder: Placeholder_1.placeholderCSS,
		singleValue: SingleValue_1.css,
		valueContainer: containers.valueContainerCSS
	} // Merge Utility
	// Allows consumers to extend a base Select with additional styles

	exports.defaultStyles = defaultStyles

	function mergeStyles(source) {
		var target =
			arguments.length > 1 && arguments[1] !== undefined
				? arguments[1]
				: {}

		// initialize with source styles
		var styles = _objectSpread({}, source) // massage in target styles

		Object.keys(target).forEach(function(key) {
			if (source[key]) {
				styles[key] = function(rsCss, props) {
					return target[key](source[key](rsCss, props), props)
				}
			} else {
				styles[key] = target[key]
			}
		})
		return styles
	}
})

unwrapExports(styles)
var styles_1 = styles.mergeStyles
var styles_2 = styles.defaultStyles

var theme$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.defaultTheme = exports.spacing = exports.colors = void 0
	var colors = {
		primary: '#2684FF',
		primary75: '#4C9AFF',
		primary50: '#B2D4FF',
		primary25: '#DEEBFF',
		danger: '#DE350B',
		dangerLight: '#FFBDAD',
		neutral0: 'hsl(0, 0%, 100%)',
		neutral5: 'hsl(0, 0%, 95%)',
		neutral10: 'hsl(0, 0%, 90%)',
		neutral20: 'hsl(0, 0%, 80%)',
		neutral30: 'hsl(0, 0%, 70%)',
		neutral40: 'hsl(0, 0%, 60%)',
		neutral50: 'hsl(0, 0%, 50%)',
		neutral60: 'hsl(0, 0%, 40%)',
		neutral70: 'hsl(0, 0%, 30%)',
		neutral80: 'hsl(0, 0%, 20%)',
		neutral90: 'hsl(0, 0%, 10%)'
	}
	exports.colors = colors
	var borderRadius = 4
	var baseUnit = 4
	/* Used to calculate consistent margin/padding on elements */

	var controlHeight = 38
	/* The minimum height of the control */

	var menuGutter = baseUnit * 2
	/* The amount of space between the control and menu */

	var spacing = {
		baseUnit: baseUnit,
		controlHeight: controlHeight,
		menuGutter: menuGutter
	}
	exports.spacing = spacing
	var defaultTheme = {
		borderRadius: borderRadius,
		colors: colors,
		spacing: spacing
	}
	exports.defaultTheme = defaultTheme
})

unwrapExports(theme$1)
var theme_1 = theme$1.defaultTheme
var theme_2 = theme$1.spacing
var theme_3 = theme$1.colors

var Select_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.defaultProps = void 0

	var _react = _interopRequireWildcard(React__default)

	var _memoizeOne = _interopRequireDefault(index$1)

	var _reactFastCompare = _interopRequireDefault(reactFastCompare)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _toConsumableArray(arr) {
		return (
			_arrayWithoutHoles(arr) ||
			_iterableToArray(arr) ||
			_nonIterableSpread()
		)
	}

	function _nonIterableSpread() {
		throw new TypeError('Invalid attempt to spread non-iterable instance')
	}

	function _iterableToArray(iter) {
		if (
			Symbol.iterator in Object(iter) ||
			Object.prototype.toString.call(iter) === '[object Arguments]'
		)
			return Array.from(iter)
	}

	function _arrayWithoutHoles(arr) {
		if (Array.isArray(arr)) {
			for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
				arr2[i] = arr[i]
			}
			return arr2
		}
	}

	function _objectSpread(target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i] != null ? arguments[i] : {}
			var ownKeys = Object.keys(source)
			if (typeof Object.getOwnPropertySymbols === 'function') {
				ownKeys = ownKeys.concat(
					Object.getOwnPropertySymbols(source).filter(function(sym) {
						return Object.getOwnPropertyDescriptor(
							source,
							sym
						).enumerable
					})
				)
			}
			ownKeys.forEach(function(key) {
				_defineProperty(target, key, source[key])
			})
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var defaultProps = {
		backspaceRemovesValue: true,
		blurInputOnSelect: (0, utils$3.isTouchCapable)(),
		captureMenuScroll: !(0, utils$3.isTouchCapable)(),
		closeMenuOnSelect: true,
		closeMenuOnScroll: false,
		components: {},
		controlShouldRenderValue: true,
		escapeClearsValue: false,
		filterOption: (0, filters.createFilter)(),
		formatGroupLabel: builtins$1.formatGroupLabel,
		getOptionLabel: builtins$1.getOptionLabel,
		getOptionValue: builtins$1.getOptionValue,
		isDisabled: false,
		isLoading: false,
		isMulti: false,
		isRtl: false,
		isSearchable: true,
		isOptionDisabled: builtins$1.isOptionDisabled,
		loadingMessage: function loadingMessage() {
			return 'Loading...'
		},
		maxMenuHeight: 300,
		minMenuHeight: 140,
		menuIsOpen: false,
		menuPlacement: 'bottom',
		menuPosition: 'absolute',
		menuShouldBlockScroll: false,
		menuShouldScrollIntoView: !(0, utils$3.isMobileDevice)(),
		noOptionsMessage: function noOptionsMessage() {
			return 'No options'
		},
		openMenuOnFocus: false,
		openMenuOnClick: true,
		options: [],
		pageSize: 5,
		placeholder: 'Select...',
		screenReaderStatus: function screenReaderStatus(_ref) {
			var count = _ref.count
			return ''
				.concat(count, ' result')
				.concat(count !== 1 ? 's' : '', ' available')
		},
		styles: {},
		tabIndex: '0',
		tabSelectsValue: true
	}
	exports.defaultProps = defaultProps
	var instanceId = 1

	var Select =
		/*#__PURE__*/
		(function(_Component) {
			_inherits(Select, _Component)

			// Misc. Instance Properties
			// ------------------------------
			// TODO
			// Refs
			// ------------------------------
			// Lifecycle
			// ------------------------------
			function Select(_props) {
				var _this

				_classCallCheck(this, Select)

				_this = _possibleConstructorReturn(
					this,
					_getPrototypeOf(Select).call(this, _props)
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'state',
					{
						ariaLiveSelection: '',
						ariaLiveContext: '',
						focusedOption: null,
						focusedValue: null,
						inputIsHidden: false,
						isFocused: false,
						menuOptions: {
							render: [],
							focusable: []
						},
						selectValue: []
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'blockOptionHover',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'isComposing',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'clearFocusValueOnUpdate',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'commonProps',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'components',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'hasGroups',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'initialTouchX',
					0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'initialTouchY',
					0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'inputIsHiddenAfterUpdate',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'instancePrefix',
					''
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'openAfterFocus',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'scrollToFocusedOptionOnUpdate',
					false
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'userIsDragging',
					void 0
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'controlRef',
					null
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getControlRef',
					function(ref) {
						_this.controlRef = ref
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'focusedOptionRef',
					null
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getFocusedOptionRef',
					function(ref) {
						_this.focusedOptionRef = ref
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'menuListRef',
					null
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getMenuListRef',
					function(ref) {
						_this.menuListRef = ref
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'inputRef',
					null
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getInputRef',
					function(ref) {
						_this.inputRef = ref
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'cacheComponents',
					function(components) {
						_this.components = (0, components_1.defaultComponents)({
							components: components
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'focus',
					_this.focusInput
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'blur',
					_this.blurInput
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onChange',
					function(newValue, actionMeta) {
						var _this$props = _this.props,
							onChange = _this$props.onChange,
							name = _this$props.name
						onChange(
							newValue,
							_objectSpread({}, actionMeta, {
								name: name
							})
						)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'setValue',
					function(newValue) {
						var action =
							arguments.length > 1 && arguments[1] !== undefined
								? arguments[1]
								: 'set-value'
						var option =
							arguments.length > 2 ? arguments[2] : undefined
						var _this$props2 = _this.props,
							closeMenuOnSelect = _this$props2.closeMenuOnSelect,
							isMulti = _this$props2.isMulti

						_this.onInputChange('', {
							action: 'set-value'
						})

						if (closeMenuOnSelect) {
							_this.inputIsHiddenAfterUpdate = !isMulti

							_this.onMenuClose()
						} // when the select value should change, we should reset focusedValue

						_this.clearFocusValueOnUpdate = true

						_this.onChange(newValue, {
							action: action,
							option: option
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'selectOption',
					function(newValue) {
						var _this$props3 = _this.props,
							blurInputOnSelect = _this$props3.blurInputOnSelect,
							isMulti = _this$props3.isMulti
						var selectValue = _this.state.selectValue

						if (isMulti) {
							if (_this.isOptionSelected(newValue, selectValue)) {
								var candidate = _this.getOptionValue(newValue)

								_this.setValue(
									selectValue.filter(function(i) {
										return (
											_this.getOptionValue(i) !==
											candidate
										)
									}),
									'deselect-option',
									newValue
								)

								_this.announceAriaLiveSelection({
									event: 'deselect-option',
									context: {
										value: _this.getOptionLabel(newValue)
									}
								})
							} else {
								if (
									!_this.isOptionDisabled(
										newValue,
										selectValue
									)
								) {
									_this.setValue(
										[].concat(
											_toConsumableArray(selectValue),
											[newValue]
										),
										'select-option',
										newValue
									)

									_this.announceAriaLiveSelection({
										event: 'select-option',
										context: {
											value: _this.getOptionLabel(
												newValue
											)
										}
									})
								} else {
									// announce that option is disabled
									_this.announceAriaLiveSelection({
										event: 'select-option',
										context: {
											value: _this.getOptionLabel(
												newValue
											),
											isDisabled: true
										}
									})
								}
							}
						} else {
							if (
								!_this.isOptionDisabled(newValue, selectValue)
							) {
								_this.setValue(newValue, 'select-option')

								_this.announceAriaLiveSelection({
									event: 'select-option',
									context: {
										value: _this.getOptionLabel(newValue)
									}
								})
							} else {
								// announce that option is disabled
								_this.announceAriaLiveSelection({
									event: 'select-option',
									context: {
										value: _this.getOptionLabel(newValue),
										isDisabled: true
									}
								})
							}
						}

						if (blurInputOnSelect) {
							_this.blurInput()
						}
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'removeValue',
					function(removedValue) {
						var selectValue = _this.state.selectValue

						var candidate = _this.getOptionValue(removedValue)

						_this.onChange(
							selectValue.filter(function(i) {
								return _this.getOptionValue(i) !== candidate
							}),
							{
								action: 'remove-value',
								removedValue: removedValue
							}
						)

						_this.announceAriaLiveSelection({
							event: 'remove-value',
							context: {
								value: removedValue
									? _this.getOptionLabel(removedValue)
									: ''
							}
						})

						_this.focusInput()
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'clearValue',
					function() {
						var isMulti = _this.props.isMulti

						_this.onChange(isMulti ? [] : null, {
							action: 'clear'
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'popValue',
					function() {
						var selectValue = _this.state.selectValue
						var lastSelectedValue =
							selectValue[selectValue.length - 1]

						_this.announceAriaLiveSelection({
							event: 'pop-value',
							context: {
								value: lastSelectedValue
									? _this.getOptionLabel(lastSelectedValue)
									: ''
							}
						})

						_this.onChange(
							selectValue.slice(0, selectValue.length - 1),
							{
								action: 'pop-value',
								removedValue: lastSelectedValue
							}
						)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getOptionLabel',
					function(data) {
						return _this.props.getOptionLabel(data)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getOptionValue',
					function(data) {
						return _this.props.getOptionValue(data)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getStyles',
					function(key, props) {
						var base = styles.defaultStyles[key](props)

						base.boxSizing = 'border-box'
						var custom = _this.props.styles[key]
						return custom ? custom(base, props) : base
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getElementId',
					function(element) {
						return ''
							.concat(_this.instancePrefix, '-')
							.concat(element)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'getActiveDescendentId',
					function() {
						var menuIsOpen = _this.props.menuIsOpen
						var _this$state = _this.state,
							menuOptions = _this$state.menuOptions,
							focusedOption = _this$state.focusedOption
						if (!focusedOption || !menuIsOpen) return undefined
						var index = menuOptions.focusable.indexOf(focusedOption)
						var option = menuOptions.render[index]
						return option && option.key
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'announceAriaLiveSelection',
					function(_ref2) {
						var event = _ref2.event,
							context = _ref2.context

						_this.setState({
							ariaLiveSelection: (0,
							accessibility.valueEventAriaMessage)(event, context)
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'announceAriaLiveContext',
					function(_ref3) {
						var event = _ref3.event,
							context = _ref3.context

						_this.setState({
							ariaLiveContext: (0,
							accessibility.instructionsAriaMessage)(
								event,
								_objectSpread({}, context, {
									label: _this.props['aria-label']
								})
							)
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onMenuMouseDown',
					function(event) {
						if (event.button !== 0) {
							return
						}

						event.stopPropagation()
						event.preventDefault()

						_this.focusInput()
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onMenuMouseMove',
					function(event) {
						_this.blockOptionHover = false
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onControlMouseDown',
					function(event) {
						var openMenuOnClick = _this.props.openMenuOnClick

						if (!_this.state.isFocused) {
							if (openMenuOnClick) {
								_this.openAfterFocus = true
							}

							_this.focusInput()
						} else if (!_this.props.menuIsOpen) {
							if (openMenuOnClick) {
								_this.openMenu('first')
							}
						} else {
							//$FlowFixMe
							if (event.target.tagName !== 'INPUT') {
								_this.onMenuClose()
							}
						} //$FlowFixMe

						if (event.target.tagName !== 'INPUT') {
							event.preventDefault()
						}
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onDropdownIndicatorMouseDown',
					function(event) {
						// ignore mouse events that weren't triggered by the primary button
						if (
							event &&
							event.type === 'mousedown' &&
							event.button !== 0
						) {
							return
						}

						if (_this.props.isDisabled) return
						var _this$props4 = _this.props,
							isMulti = _this$props4.isMulti,
							menuIsOpen = _this$props4.menuIsOpen

						_this.focusInput()

						if (menuIsOpen) {
							_this.inputIsHiddenAfterUpdate = !isMulti

							_this.onMenuClose()
						} else {
							_this.openMenu('first')
						}

						event.preventDefault()
						event.stopPropagation()
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onClearIndicatorMouseDown',
					function(event) {
						// ignore mouse events that weren't triggered by the primary button
						if (
							event &&
							event.type === 'mousedown' &&
							event.button !== 0
						) {
							return
						}

						_this.clearValue()

						event.stopPropagation()
						_this.openAfterFocus = false
						setTimeout(function() {
							return _this.focusInput()
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onScroll',
					function(event) {
						if (
							typeof _this.props.closeMenuOnScroll === 'boolean'
						) {
							if (
								event.target instanceof HTMLElement &&
								(0, utils$3.isDocumentElement)(event.target)
							) {
								_this.props.onMenuClose()
							}
						} else if (
							typeof _this.props.closeMenuOnScroll === 'function'
						) {
							if (_this.props.closeMenuOnScroll(event)) {
								_this.props.onMenuClose()
							}
						}
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onCompositionStart',
					function() {
						_this.isComposing = true
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onCompositionEnd',
					function() {
						_this.isComposing = false
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onTouchStart',
					function(_ref4) {
						var touches = _ref4.touches
						var touch = touches.item(0)

						if (!touch) {
							return
						}

						_this.initialTouchX = touch.clientX
						_this.initialTouchY = touch.clientY
						_this.userIsDragging = false
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onTouchMove',
					function(_ref5) {
						var touches = _ref5.touches
						var touch = touches.item(0)

						if (!touch) {
							return
						}

						var deltaX = Math.abs(
							touch.clientX - _this.initialTouchX
						)
						var deltaY = Math.abs(
							touch.clientY - _this.initialTouchY
						)
						var moveThreshold = 5
						_this.userIsDragging =
							deltaX > moveThreshold || deltaY > moveThreshold
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onTouchEnd',
					function(event) {
						if (_this.userIsDragging) return // close the menu if the user taps outside
						// we're checking on event.target here instead of event.currentTarget, because we want to assert information
						// on events on child elements, not the document (which we've attached this handler to).

						if (
							_this.controlRef &&
							!_this.controlRef.contains(event.target) &&
							_this.menuListRef &&
							!_this.menuListRef.contains(event.target)
						) {
							_this.blurInput()
						} // reset move vars

						_this.initialTouchX = 0
						_this.initialTouchY = 0
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onControlTouchEnd',
					function(event) {
						if (_this.userIsDragging) return

						_this.onControlMouseDown(event)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onClearIndicatorTouchEnd',
					function(event) {
						if (_this.userIsDragging) return

						_this.onClearIndicatorMouseDown(event)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onDropdownIndicatorTouchEnd',
					function(event) {
						if (_this.userIsDragging) return

						_this.onDropdownIndicatorMouseDown(event)
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'handleInputChange',
					function(event) {
						var inputValue = event.currentTarget.value
						_this.inputIsHiddenAfterUpdate = false

						_this.onInputChange(inputValue, {
							action: 'input-change'
						})

						_this.onMenuOpen()
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onInputFocus',
					function(event) {
						var _this$props5 = _this.props,
							isSearchable = _this$props5.isSearchable,
							isMulti = _this$props5.isMulti

						if (_this.props.onFocus) {
							_this.props.onFocus(event)
						}

						_this.inputIsHiddenAfterUpdate = false

						_this.announceAriaLiveContext({
							event: 'input',
							context: {
								isSearchable: isSearchable,
								isMulti: isMulti
							}
						})

						_this.setState({
							isFocused: true
						})

						if (
							_this.openAfterFocus ||
							_this.props.openMenuOnFocus
						) {
							_this.openMenu('first')
						}

						_this.openAfterFocus = false
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onInputBlur',
					function(event) {
						if (
							_this.menuListRef &&
							_this.menuListRef.contains(document.activeElement)
						) {
							_this.inputRef.focus()

							return
						}

						if (_this.props.onBlur) {
							_this.props.onBlur(event)
						}

						_this.onInputChange('', {
							action: 'input-blur'
						})

						_this.onMenuClose()

						_this.setState({
							focusedValue: null,
							isFocused: false
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onOptionHover',
					function(focusedOption) {
						if (
							_this.blockOptionHover ||
							_this.state.focusedOption === focusedOption
						) {
							return
						}

						_this.setState({
							focusedOption: focusedOption
						})
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'shouldHideSelectedOptions',
					function() {
						var _this$props6 = _this.props,
							hideSelectedOptions =
								_this$props6.hideSelectedOptions,
							isMulti = _this$props6.isMulti
						if (hideSelectedOptions === undefined) return isMulti
						return hideSelectedOptions
					}
				)

				_defineProperty(
					_assertThisInitialized(_assertThisInitialized(_this)),
					'onKeyDown',
					function(event) {
						var _this$props7 = _this.props,
							isMulti = _this$props7.isMulti,
							backspaceRemovesValue =
								_this$props7.backspaceRemovesValue,
							escapeClearsValue = _this$props7.escapeClearsValue,
							inputValue = _this$props7.inputValue,
							isClearable = _this$props7.isClearable,
							isDisabled = _this$props7.isDisabled,
							menuIsOpen = _this$props7.menuIsOpen,
							onKeyDown = _this$props7.onKeyDown,
							tabSelectsValue = _this$props7.tabSelectsValue,
							openMenuOnFocus = _this$props7.openMenuOnFocus
						var _this$state2 = _this.state,
							focusedOption = _this$state2.focusedOption,
							focusedValue = _this$state2.focusedValue,
							selectValue = _this$state2.selectValue
						if (isDisabled) return

						if (typeof onKeyDown === 'function') {
							onKeyDown(event)

							if (event.defaultPrevented) {
								return
							}
						} // Block option hover events when the user has just pressed a key

						_this.blockOptionHover = true

						switch (event.key) {
							case 'ArrowLeft':
								if (!isMulti || inputValue) return

								_this.focusValue('previous')

								break

							case 'ArrowRight':
								if (!isMulti || inputValue) return

								_this.focusValue('next')

								break

							case 'Delete':
							case 'Backspace':
								if (inputValue) return

								if (focusedValue) {
									_this.removeValue(focusedValue)
								} else {
									if (!backspaceRemovesValue) return

									if (isMulti) {
										_this.popValue()
									} else if (isClearable) {
										_this.clearValue()
									}
								}

								break

							case 'Tab':
								if (_this.isComposing) return

								if (
									event.shiftKey ||
									!menuIsOpen ||
									!tabSelectsValue ||
									!focusedOption || // don't capture the event if the menu opens on focus and the focused
									// option is already selected; it breaks the flow of navigation
									(openMenuOnFocus &&
										_this.isOptionSelected(
											focusedOption,
											selectValue
										))
								) {
									return
								}

								_this.selectOption(focusedOption)

								break

							case 'Enter':
								if (event.keyCode === 229) {
									// ignore the keydown event from an Input Method Editor(IME)
									// ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode
									break
								}

								if (menuIsOpen) {
									if (!focusedOption) return
									if (_this.isComposing) return

									_this.selectOption(focusedOption)

									break
								}

								return

							case 'Escape':
								if (menuIsOpen) {
									_this.inputIsHiddenAfterUpdate = false

									_this.onInputChange('', {
										action: 'menu-close'
									})

									_this.onMenuClose()
								} else if (isClearable && escapeClearsValue) {
									_this.clearValue()
								}

								break

							case ' ':
								// space
								if (inputValue) {
									return
								}

								if (!menuIsOpen) {
									_this.openMenu('first')

									break
								}

								if (!focusedOption) return

								_this.selectOption(focusedOption)

								break

							case 'ArrowUp':
								if (menuIsOpen) {
									_this.focusOption('up')
								} else {
									_this.openMenu('last')
								}

								break

							case 'ArrowDown':
								if (menuIsOpen) {
									_this.focusOption('down')
								} else {
									_this.openMenu('first')
								}

								break

							case 'PageUp':
								if (!menuIsOpen) return

								_this.focusOption('pageup')

								break

							case 'PageDown':
								if (!menuIsOpen) return

								_this.focusOption('pagedown')

								break

							case 'Home':
								if (!menuIsOpen) return

								_this.focusOption('first')

								break

							case 'End':
								if (!menuIsOpen) return

								_this.focusOption('last')

								break

							default:
								return
						}

						event.preventDefault()
					}
				)

				var value = _props.value
				_this.cacheComponents = (0, _memoizeOne.default)(
					_this.cacheComponents,
					_reactFastCompare.default
				).bind(_assertThisInitialized(_assertThisInitialized(_this)))

				_this.cacheComponents(_props.components)

				_this.instancePrefix =
					'react-select-' + (_this.props.instanceId || ++instanceId)

				var _selectValue = (0, utils$3.cleanValue)(value)

				var _menuOptions = _this.buildMenuOptions(_props, _selectValue)

				_this.state.menuOptions = _menuOptions
				_this.state.selectValue = _selectValue
				return _this
			}

			_createClass(Select, [
				{
					key: 'componentDidMount',
					value: function componentDidMount() {
						this.startListeningComposition()
						this.startListeningToTouch()

						if (
							this.props.closeMenuOnScroll &&
							document &&
							document.addEventListener
						) {
							// Listen to all scroll events, and filter them out inside of 'onScroll'
							document.addEventListener(
								'scroll',
								this.onScroll,
								true
							)
						}

						if (this.props.autoFocus) {
							this.focusInput()
						}
					}
				},
				{
					key: 'componentWillReceiveProps',
					value: function componentWillReceiveProps(nextProps) {
						var _this$props8 = this.props,
							options = _this$props8.options,
							value = _this$props8.value,
							inputValue = _this$props8.inputValue // re-cache custom components

						this.cacheComponents(nextProps.components) // rebuild the menu options

						if (
							nextProps.value !== value ||
							nextProps.options !== options ||
							nextProps.inputValue !== inputValue
						) {
							var selectValue = (0, utils$3.cleanValue)(
								nextProps.value
							)
							var menuOptions = this.buildMenuOptions(
								nextProps,
								selectValue
							)
							var focusedValue = this.getNextFocusedValue(
								selectValue
							)
							var focusedOption = this.getNextFocusedOption(
								menuOptions.focusable
							)
							this.setState({
								menuOptions: menuOptions,
								selectValue: selectValue,
								focusedOption: focusedOption,
								focusedValue: focusedValue
							})
						} // some updates should toggle the state of the input visibility

						if (this.inputIsHiddenAfterUpdate != null) {
							this.setState({
								inputIsHidden: this.inputIsHiddenAfterUpdate
							})
							delete this.inputIsHiddenAfterUpdate
						}
					}
				},
				{
					key: 'componentDidUpdate',
					value: function componentDidUpdate(prevProps) {
						var _this$props9 = this.props,
							isDisabled = _this$props9.isDisabled,
							menuIsOpen = _this$props9.menuIsOpen
						var isFocused = this.state.isFocused

						if (
							// ensure focus is restored correctly when the control becomes enabled
							(isFocused &&
								!isDisabled &&
								prevProps.isDisabled) || // ensure focus is on the Input when the menu opens
							(isFocused && menuIsOpen && !prevProps.menuIsOpen)
						) {
							this.focusInput()
						} // scroll the focused option into view if necessary

						if (
							this.menuListRef &&
							this.focusedOptionRef &&
							this.scrollToFocusedOptionOnUpdate
						) {
							;(0, utils$3.scrollIntoView)(
								this.menuListRef,
								this.focusedOptionRef
							)
						}

						this.scrollToFocusedOptionOnUpdate = false
					}
				},
				{
					key: 'componentWillUnmount',
					value: function componentWillUnmount() {
						this.stopListeningComposition()
						this.stopListeningToTouch()
						document.removeEventListener(
							'scroll',
							this.onScroll,
							true
						)
					}
				},
				{
					key: 'onMenuOpen',
					// ==============================
					// Consumer Handlers
					// ==============================
					value: function onMenuOpen() {
						this.props.onMenuOpen()
					}
				},
				{
					key: 'onMenuClose',
					value: function onMenuClose() {
						var _this$props10 = this.props,
							isSearchable = _this$props10.isSearchable,
							isMulti = _this$props10.isMulti
						this.announceAriaLiveContext({
							event: 'input',
							context: {
								isSearchable: isSearchable,
								isMulti: isMulti
							}
						})
						this.onInputChange('', {
							action: 'menu-close'
						})
						this.props.onMenuClose()
					}
				},
				{
					key: 'onInputChange',
					value: function onInputChange(newValue, actionMeta) {
						this.props.onInputChange(newValue, actionMeta)
					} // ==============================
					// Methods
					// ==============================
				},
				{
					key: 'focusInput',
					value: function focusInput() {
						if (!this.inputRef) return
						this.inputRef.focus()
					}
				},
				{
					key: 'blurInput',
					value: function blurInput() {
						if (!this.inputRef) return
						this.inputRef.blur()
					} // aliased for consumers
				},
				{
					key: 'openMenu',
					value: function openMenu(focusOption) {
						var _this$state3 = this.state,
							menuOptions = _this$state3.menuOptions,
							selectValue = _this$state3.selectValue,
							isFocused = _this$state3.isFocused
						var isMulti = this.props.isMulti
						var openAtIndex =
							focusOption === 'first'
								? 0
								: menuOptions.focusable.length - 1

						if (!isMulti) {
							var selectedIndex = menuOptions.focusable.indexOf(
								selectValue[0]
							)

							if (selectedIndex > -1) {
								openAtIndex = selectedIndex
							}
						} // only scroll if the menu isn't already open

						this.scrollToFocusedOptionOnUpdate = !(
							isFocused && this.menuListRef
						)
						this.inputIsHiddenAfterUpdate = false
						this.onMenuOpen()
						this.setState({
							focusedValue: null,
							focusedOption: menuOptions.focusable[openAtIndex]
						})
						this.announceAriaLiveContext({
							event: 'menu'
						})
					}
				},
				{
					key: 'focusValue',
					value: function focusValue(direction) {
						var _this$props11 = this.props,
							isMulti = _this$props11.isMulti,
							isSearchable = _this$props11.isSearchable
						var _this$state4 = this.state,
							selectValue = _this$state4.selectValue,
							focusedValue = _this$state4.focusedValue // Only multiselects support value focusing

						if (!isMulti) return
						this.setState({
							focusedOption: null
						})
						var focusedIndex = selectValue.indexOf(focusedValue)

						if (!focusedValue) {
							focusedIndex = -1
							this.announceAriaLiveContext({
								event: 'value'
							})
						}

						var lastIndex = selectValue.length - 1
						var nextFocus = -1
						if (!selectValue.length) return

						switch (direction) {
							case 'previous':
								if (focusedIndex === 0) {
									// don't cycle from the start to the end
									nextFocus = 0
								} else if (focusedIndex === -1) {
									// if nothing is focused, focus the last value first
									nextFocus = lastIndex
								} else {
									nextFocus = focusedIndex - 1
								}

								break

							case 'next':
								if (
									focusedIndex > -1 &&
									focusedIndex < lastIndex
								) {
									nextFocus = focusedIndex + 1
								}

								break
						}

						if (nextFocus === -1) {
							this.announceAriaLiveContext({
								event: 'input',
								context: {
									isSearchable: isSearchable,
									isMulti: isMulti
								}
							})
						}

						this.setState({
							inputIsHidden: nextFocus === -1 ? false : true,
							focusedValue: selectValue[nextFocus]
						})
					}
				},
				{
					key: 'focusOption',
					value: function focusOption() {
						var direction =
							arguments.length > 0 && arguments[0] !== undefined
								? arguments[0]
								: 'first'
						var pageSize = this.props.pageSize
						var _this$state5 = this.state,
							focusedOption = _this$state5.focusedOption,
							menuOptions = _this$state5.menuOptions
						var options = menuOptions.focusable
						if (!options.length) return
						var nextFocus = 0 // handles 'first'

						var focusedIndex = options.indexOf(focusedOption)

						if (!focusedOption) {
							focusedIndex = -1
							this.announceAriaLiveContext({
								event: 'menu'
							})
						}

						if (direction === 'up') {
							nextFocus =
								focusedIndex > 0
									? focusedIndex - 1
									: options.length - 1
						} else if (direction === 'down') {
							nextFocus = (focusedIndex + 1) % options.length
						} else if (direction === 'pageup') {
							nextFocus = focusedIndex - pageSize
							if (nextFocus < 0) nextFocus = 0
						} else if (direction === 'pagedown') {
							nextFocus = focusedIndex + pageSize
							if (nextFocus > options.length - 1)
								nextFocus = options.length - 1
						} else if (direction === 'last') {
							nextFocus = options.length - 1
						}

						this.scrollToFocusedOptionOnUpdate = true
						this.setState({
							focusedOption: options[nextFocus],
							focusedValue: null
						})
						this.announceAriaLiveContext({
							event: 'menu',
							context: {
								isDisabled: (0, builtins$1.isOptionDisabled)(
									options[nextFocus]
								)
							}
						})
					}
				},
				{
					key: 'getTheme',
					// ==============================
					// Getters
					// ==============================
					value: function getTheme() {
						// Use the default theme if there are no customizations.
						if (!this.props.theme) {
							return theme$1.defaultTheme
						} // If the theme prop is a function, assume the function
						// knows how to merge the passed-in default theme with
						// its own modifications.

						if (typeof this.props.theme === 'function') {
							return this.props.theme(theme$1.defaultTheme)
						} // Otherwise, if a plain theme object was passed in,
						// overlay it with the default theme.

						return _objectSpread(
							{},
							theme$1.defaultTheme,
							this.props.theme
						)
					}
				},
				{
					key: 'getCommonProps',
					value: function getCommonProps() {
						var clearValue = this.clearValue,
							getStyles = this.getStyles,
							setValue = this.setValue,
							selectOption = this.selectOption,
							props = this.props
						var classNamePrefix = props.classNamePrefix,
							isMulti = props.isMulti,
							isRtl = props.isRtl,
							options = props.options
						var selectValue = this.state.selectValue
						var hasValue = this.hasValue()

						var getValue = function getValue() {
							return selectValue
						}

						var cx = utils$3.classNames.bind(null, classNamePrefix)

						return {
							cx: cx,
							clearValue: clearValue,
							getStyles: getStyles,
							getValue: getValue,
							hasValue: hasValue,
							isMulti: isMulti,
							isRtl: isRtl,
							options: options,
							selectOption: selectOption,
							setValue: setValue,
							selectProps: props,
							theme: this.getTheme()
						}
					}
				},
				{
					key: 'getNextFocusedValue',
					value: function getNextFocusedValue(nextSelectValue) {
						if (this.clearFocusValueOnUpdate) {
							this.clearFocusValueOnUpdate = false
							return null
						}

						var _this$state6 = this.state,
							focusedValue = _this$state6.focusedValue,
							lastSelectValue = _this$state6.selectValue
						var lastFocusedIndex = lastSelectValue.indexOf(
							focusedValue
						)

						if (lastFocusedIndex > -1) {
							var nextFocusedIndex = nextSelectValue.indexOf(
								focusedValue
							)

							if (nextFocusedIndex > -1) {
								// the focused value is still in the selectValue, return it
								return focusedValue
							} else if (
								lastFocusedIndex < nextSelectValue.length
							) {
								// the focusedValue is not present in the next selectValue array by
								// reference, so return the new value at the same index
								return nextSelectValue[lastFocusedIndex]
							}
						}

						return null
					}
				},
				{
					key: 'getNextFocusedOption',
					value: function getNextFocusedOption(options) {
						var lastFocusedOption = this.state.focusedOption
						return lastFocusedOption &&
							options.indexOf(lastFocusedOption) > -1
							? lastFocusedOption
							: options[0]
					}
				},
				{
					key: 'hasValue',
					value: function hasValue() {
						var selectValue = this.state.selectValue
						return selectValue.length > 0
					}
				},
				{
					key: 'hasOptions',
					value: function hasOptions() {
						return !!this.state.menuOptions.render.length
					}
				},
				{
					key: 'countOptions',
					value: function countOptions() {
						return this.state.menuOptions.focusable.length
					}
				},
				{
					key: 'isClearable',
					value: function isClearable() {
						var _this$props12 = this.props,
							isClearable = _this$props12.isClearable,
							isMulti = _this$props12.isMulti // single select, by default, IS NOT clearable
						// multi select, by default, IS clearable

						if (isClearable === undefined) return isMulti
						return isClearable
					}
				},
				{
					key: 'isOptionDisabled',
					value: function isOptionDisabled(option, selectValue) {
						return typeof this.props.isOptionDisabled === 'function'
							? this.props.isOptionDisabled(option, selectValue)
							: false
					}
				},
				{
					key: 'isOptionSelected',
					value: function isOptionSelected(option, selectValue) {
						var _this2 = this

						if (selectValue.indexOf(option) > -1) return true

						if (typeof this.props.isOptionSelected === 'function') {
							return this.props.isOptionSelected(
								option,
								selectValue
							)
						}

						var candidate = this.getOptionValue(option)
						return selectValue.some(function(i) {
							return _this2.getOptionValue(i) === candidate
						})
					}
				},
				{
					key: 'filterOption',
					value: function filterOption(option, inputValue) {
						return this.props.filterOption
							? this.props.filterOption(option, inputValue)
							: true
					}
				},
				{
					key: 'formatOptionLabel',
					value: function formatOptionLabel(data, context) {
						if (
							typeof this.props.formatOptionLabel === 'function'
						) {
							var inputValue = this.props.inputValue
							var selectValue = this.state.selectValue
							return this.props.formatOptionLabel(data, {
								context: context,
								inputValue: inputValue,
								selectValue: selectValue
							})
						} else {
							return this.getOptionLabel(data)
						}
					}
				},
				{
					key: 'formatGroupLabel',
					value: function formatGroupLabel(data) {
						return this.props.formatGroupLabel(data)
					} // ==============================
					// Mouse Handlers
					// ==============================
				},
				{
					key: 'startListeningComposition',
					// ==============================
					// Composition Handlers
					// ==============================
					value: function startListeningComposition() {
						if (document && document.addEventListener) {
							document.addEventListener(
								'compositionstart',
								this.onCompositionStart,
								false
							)
							document.addEventListener(
								'compositionend',
								this.onCompositionEnd,
								false
							)
						}
					}
				},
				{
					key: 'stopListeningComposition',
					value: function stopListeningComposition() {
						if (document && document.removeEventListener) {
							document.removeEventListener(
								'compositionstart',
								this.onCompositionStart
							)
							document.removeEventListener(
								'compositionend',
								this.onCompositionEnd
							)
						}
					}
				},
				{
					key: 'startListeningToTouch',
					// ==============================
					// Touch Handlers
					// ==============================
					value: function startListeningToTouch() {
						if (document && document.addEventListener) {
							document.addEventListener(
								'touchstart',
								this.onTouchStart,
								false
							)
							document.addEventListener(
								'touchmove',
								this.onTouchMove,
								false
							)
							document.addEventListener(
								'touchend',
								this.onTouchEnd,
								false
							)
						}
					}
				},
				{
					key: 'stopListeningToTouch',
					value: function stopListeningToTouch() {
						if (document && document.removeEventListener) {
							document.removeEventListener(
								'touchstart',
								this.onTouchStart
							)
							document.removeEventListener(
								'touchmove',
								this.onTouchMove
							)
							document.removeEventListener(
								'touchend',
								this.onTouchEnd
							)
						}
					}
				},
				{
					key: 'buildMenuOptions',
					// ==============================
					// Menu Options
					// ==============================
					value: function buildMenuOptions(props, selectValue) {
						var _this3 = this

						var _props$inputValue = props.inputValue,
							inputValue =
								_props$inputValue === void 0
									? ''
									: _props$inputValue,
							options = props.options

						var toOption = function toOption(option, id) {
							var isDisabled = _this3.isOptionDisabled(
								option,
								selectValue
							)

							var isSelected = _this3.isOptionSelected(
								option,
								selectValue
							)

							var label = _this3.getOptionLabel(option)

							var value = _this3.getOptionValue(option)

							if (
								(_this3.shouldHideSelectedOptions() &&
									isSelected) ||
								!_this3.filterOption(
									{
										label: label,
										value: value,
										data: option
									},
									inputValue
								)
							) {
								return
							}

							var onHover = isDisabled
								? undefined
								: function() {
										return _this3.onOptionHover(option)
								  }
							var onSelect = isDisabled
								? undefined
								: function() {
										return _this3.selectOption(option)
								  }
							var optionId = ''
								.concat(_this3.getElementId('option'), '-')
								.concat(id)
							return {
								innerProps: {
									id: optionId,
									onClick: onSelect,
									onMouseMove: onHover,
									onMouseOver: onHover,
									tabIndex: -1
								},
								data: option,
								isDisabled: isDisabled,
								isSelected: isSelected,
								key: optionId,
								label: label,
								type: 'option',
								value: value
							}
						}

						return options.reduce(
							function(acc, item, itemIndex) {
								if (item.options) {
									// TODO needs a tidier implementation
									if (!_this3.hasGroups)
										_this3.hasGroups = true
									var items = item.options
									var children = items
										.map(function(child, i) {
											var option = toOption(
												child,
												''
													.concat(itemIndex, '-')
													.concat(i)
											)
											if (option)
												acc.focusable.push(child)
											return option
										})
										.filter(Boolean)

									if (children.length) {
										var groupId = ''
											.concat(
												_this3.getElementId('group'),
												'-'
											)
											.concat(itemIndex)
										acc.render.push({
											type: 'group',
											key: groupId,
											data: item,
											options: children
										})
									}
								} else {
									var option = toOption(
										item,
										''.concat(itemIndex)
									)

									if (option) {
										acc.render.push(option)
										acc.focusable.push(item)
									}
								}

								return acc
							},
							{
								render: [],
								focusable: []
							}
						)
					} // ==============================
					// Renderers
					// ==============================
				},
				{
					key: 'constructAriaLiveMessage',
					value: function constructAriaLiveMessage() {
						var _this$state7 = this.state,
							ariaLiveContext = _this$state7.ariaLiveContext,
							selectValue = _this$state7.selectValue,
							focusedValue = _this$state7.focusedValue,
							focusedOption = _this$state7.focusedOption
						var _this$props13 = this.props,
							options = _this$props13.options,
							menuIsOpen = _this$props13.menuIsOpen,
							inputValue = _this$props13.inputValue,
							screenReaderStatus =
								_this$props13.screenReaderStatus // An aria live message representing the currently focused value in the select.

						var focusedValueMsg = focusedValue
							? (0, accessibility.valueFocusAriaMessage)({
									focusedValue: focusedValue,
									getOptionLabel: this.getOptionLabel,
									selectValue: selectValue
							  })
							: '' // An aria live message representing the currently focused option in the select.

						var focusedOptionMsg =
							focusedOption && menuIsOpen
								? (0, accessibility.optionFocusAriaMessage)({
										focusedOption: focusedOption,
										getOptionLabel: this.getOptionLabel,
										options: options
								  })
								: '' // An aria live message representing the set of focusable results and current searchterm/inputvalue.

						var resultsMsg = (0, accessibility.resultsAriaMessage)({
							inputValue: inputValue,
							screenReaderMessage: screenReaderStatus({
								count: this.countOptions()
							})
						})
						return ''
							.concat(focusedValueMsg, ' ')
							.concat(focusedOptionMsg, ' ')
							.concat(resultsMsg, ' ')
							.concat(ariaLiveContext)
					}
				},
				{
					key: 'renderInput',
					value: function renderInput() {
						var _this$props14 = this.props,
							isDisabled = _this$props14.isDisabled,
							isSearchable = _this$props14.isSearchable,
							inputId = _this$props14.inputId,
							inputValue = _this$props14.inputValue,
							tabIndex = _this$props14.tabIndex
						var Input = this.components.Input
						var inputIsHidden = this.state.inputIsHidden
						var id = inputId || this.getElementId('input')

						if (!isSearchable) {
							// use a dummy input to maintain focus/blur functionality
							return _react.default.createElement(
								internal.DummyInput,
								{
									id: id,
									innerRef: this.getInputRef,
									onBlur: this.onInputBlur,
									onChange: utils$3.noop,
									onFocus: this.onInputFocus,
									readOnly: true,
									disabled: isDisabled,
									tabIndex: tabIndex,
									value: ''
								}
							)
						} // aria attributes makes the JSX "noisy", separated for clarity

						var ariaAttributes = {
							'aria-autocomplete': 'list',
							'aria-label': this.props['aria-label'],
							'aria-labelledby': this.props['aria-labelledby']
						}
						var _this$commonProps = this.commonProps,
							cx = _this$commonProps.cx,
							theme = _this$commonProps.theme,
							selectProps = _this$commonProps.selectProps
						return _react.default.createElement(
							Input,
							_extends(
								{
									autoCapitalize: 'none',
									autoComplete: 'off',
									autoCorrect: 'off',
									cx: cx,
									getStyles: this.getStyles,
									id: id,
									innerRef: this.getInputRef,
									isDisabled: isDisabled,
									isHidden: inputIsHidden,
									onBlur: this.onInputBlur,
									onChange: this.handleInputChange,
									onFocus: this.onInputFocus,
									selectProps: selectProps,
									spellCheck: 'false',
									tabIndex: tabIndex,
									theme: theme,
									type: 'text',
									value: inputValue
								},
								ariaAttributes
							)
						)
					}
				},
				{
					key: 'renderPlaceholderOrValue',
					value: function renderPlaceholderOrValue() {
						var _this4 = this

						var _this$components = this.components,
							MultiValue = _this$components.MultiValue,
							MultiValueContainer =
								_this$components.MultiValueContainer,
							MultiValueLabel = _this$components.MultiValueLabel,
							MultiValueRemove =
								_this$components.MultiValueRemove,
							SingleValue = _this$components.SingleValue,
							Placeholder = _this$components.Placeholder
						var commonProps = this.commonProps
						var _this$props15 = this.props,
							controlShouldRenderValue =
								_this$props15.controlShouldRenderValue,
							isDisabled = _this$props15.isDisabled,
							isMulti = _this$props15.isMulti,
							inputValue = _this$props15.inputValue,
							placeholder = _this$props15.placeholder
						var _this$state8 = this.state,
							selectValue = _this$state8.selectValue,
							focusedValue = _this$state8.focusedValue,
							isFocused = _this$state8.isFocused

						if (!this.hasValue() || !controlShouldRenderValue) {
							return inputValue
								? null
								: _react.default.createElement(
										Placeholder,
										_extends({}, commonProps, {
											key: 'placeholder',
											isDisabled: isDisabled,
											isFocused: isFocused
										}),
										placeholder
								  )
						}

						if (isMulti) {
							var selectValues = selectValue.map(function(opt) {
								var isOptionFocused = opt === focusedValue
								return _react.default.createElement(
									MultiValue,
									_extends({}, commonProps, {
										components: {
											Container: MultiValueContainer,
											Label: MultiValueLabel,
											Remove: MultiValueRemove
										},
										isFocused: isOptionFocused,
										isDisabled: isDisabled,
										key: _this4.getOptionValue(opt),
										removeProps: {
											onClick: function onClick() {
												return _this4.removeValue(opt)
											},
											onTouchEnd: function onTouchEnd() {
												return _this4.removeValue(opt)
											},
											onMouseDown: function onMouseDown(
												e
											) {
												e.preventDefault()
												e.stopPropagation()
											}
										},
										data: opt
									}),
									_this4.formatOptionLabel(opt, 'value')
								)
							})
							return selectValues
						}

						if (inputValue) {
							return null
						}

						var singleValue = selectValue[0]
						return _react.default.createElement(
							SingleValue,
							_extends({}, commonProps, {
								data: singleValue,
								isDisabled: isDisabled
							}),
							this.formatOptionLabel(singleValue, 'value')
						)
					}
				},
				{
					key: 'renderClearIndicator',
					value: function renderClearIndicator() {
						var ClearIndicator = this.components.ClearIndicator
						var commonProps = this.commonProps
						var _this$props16 = this.props,
							isDisabled = _this$props16.isDisabled,
							isLoading = _this$props16.isLoading
						var isFocused = this.state.isFocused

						if (
							!this.isClearable() ||
							!ClearIndicator ||
							isDisabled ||
							!this.hasValue() ||
							isLoading
						) {
							return null
						}

						var innerProps = {
							onMouseDown: this.onClearIndicatorMouseDown,
							onTouchEnd: this.onClearIndicatorTouchEnd,
							'aria-hidden': 'true'
						}
						return _react.default.createElement(
							ClearIndicator,
							_extends({}, commonProps, {
								innerProps: innerProps,
								isFocused: isFocused
							})
						)
					}
				},
				{
					key: 'renderLoadingIndicator',
					value: function renderLoadingIndicator() {
						var LoadingIndicator = this.components.LoadingIndicator
						var commonProps = this.commonProps
						var _this$props17 = this.props,
							isDisabled = _this$props17.isDisabled,
							isLoading = _this$props17.isLoading
						var isFocused = this.state.isFocused
						if (!LoadingIndicator || !isLoading) return null
						var innerProps = {
							'aria-hidden': 'true'
						}
						return _react.default.createElement(
							LoadingIndicator,
							_extends({}, commonProps, {
								innerProps: innerProps,
								isDisabled: isDisabled,
								isFocused: isFocused
							})
						)
					}
				},
				{
					key: 'renderIndicatorSeparator',
					value: function renderIndicatorSeparator() {
						var _this$components2 = this.components,
							DropdownIndicator =
								_this$components2.DropdownIndicator,
							IndicatorSeparator =
								_this$components2.IndicatorSeparator // separator doesn't make sense without the dropdown indicator

						if (!DropdownIndicator || !IndicatorSeparator)
							return null
						var commonProps = this.commonProps
						var isDisabled = this.props.isDisabled
						var isFocused = this.state.isFocused
						return _react.default.createElement(
							IndicatorSeparator,
							_extends({}, commonProps, {
								isDisabled: isDisabled,
								isFocused: isFocused
							})
						)
					}
				},
				{
					key: 'renderDropdownIndicator',
					value: function renderDropdownIndicator() {
						var DropdownIndicator = this.components
							.DropdownIndicator
						if (!DropdownIndicator) return null
						var commonProps = this.commonProps
						var isDisabled = this.props.isDisabled
						var isFocused = this.state.isFocused
						var innerProps = {
							onMouseDown: this.onDropdownIndicatorMouseDown,
							onTouchEnd: this.onDropdownIndicatorTouchEnd,
							'aria-hidden': 'true'
						}
						return _react.default.createElement(
							DropdownIndicator,
							_extends({}, commonProps, {
								innerProps: innerProps,
								isDisabled: isDisabled,
								isFocused: isFocused
							})
						)
					}
				},
				{
					key: 'renderMenu',
					value: function renderMenu() {
						var _this5 = this

						var _this$components3 = this.components,
							Group = _this$components3.Group,
							GroupHeading = _this$components3.GroupHeading,
							Menu = _this$components3.Menu,
							MenuList = _this$components3.MenuList,
							MenuPortal = _this$components3.MenuPortal,
							LoadingMessage = _this$components3.LoadingMessage,
							NoOptionsMessage =
								_this$components3.NoOptionsMessage,
							Option = _this$components3.Option
						var commonProps = this.commonProps
						var _this$state9 = this.state,
							focusedOption = _this$state9.focusedOption,
							menuOptions = _this$state9.menuOptions
						var _this$props18 = this.props,
							captureMenuScroll = _this$props18.captureMenuScroll,
							inputValue = _this$props18.inputValue,
							isLoading = _this$props18.isLoading,
							loadingMessage = _this$props18.loadingMessage,
							minMenuHeight = _this$props18.minMenuHeight,
							maxMenuHeight = _this$props18.maxMenuHeight,
							menuIsOpen = _this$props18.menuIsOpen,
							menuPlacement = _this$props18.menuPlacement,
							menuPosition = _this$props18.menuPosition,
							menuPortalTarget = _this$props18.menuPortalTarget,
							menuShouldBlockScroll =
								_this$props18.menuShouldBlockScroll,
							menuShouldScrollIntoView =
								_this$props18.menuShouldScrollIntoView,
							noOptionsMessage = _this$props18.noOptionsMessage,
							onMenuScrollToTop = _this$props18.onMenuScrollToTop,
							onMenuScrollToBottom =
								_this$props18.onMenuScrollToBottom
						if (!menuIsOpen) return null // TODO: Internal Option Type here

						var render = function render(props) {
							// for performance, the menu options in state aren't changed when the
							// focused option changes so we calculate additional props based on that
							var isFocused = focusedOption === props.data
							props.innerRef = isFocused
								? _this5.getFocusedOptionRef
								: undefined
							return _react.default.createElement(
								Option,
								_extends({}, commonProps, props, {
									isFocused: isFocused
								}),
								_this5.formatOptionLabel(props.data, 'menu')
							)
						}

						var menuUI

						if (this.hasOptions()) {
							menuUI = menuOptions.render.map(function(item) {
								if (item.type === 'group') {
									var type = item.type,
										group = _objectWithoutProperties(item, [
											'type'
										])

									var headingId = ''.concat(
										item.key,
										'-heading'
									)
									return _react.default.createElement(
										Group,
										_extends({}, commonProps, group, {
											Heading: GroupHeading,
											headingProps: {
												id: headingId
											},
											label: _this5.formatGroupLabel(
												item.data
											)
										}),
										item.options.map(function(option) {
											return render(option)
										})
									)
								} else if (item.type === 'option') {
									return render(item)
								}
							})
						} else if (isLoading) {
							var message = loadingMessage({
								inputValue: inputValue
							})
							if (message === null) return null
							menuUI = _react.default.createElement(
								LoadingMessage,
								commonProps,
								message
							)
						} else {
							var _message = noOptionsMessage({
								inputValue: inputValue
							})

							if (_message === null) return null
							menuUI = _react.default.createElement(
								NoOptionsMessage,
								commonProps,
								_message
							)
						}

						var menuPlacementProps = {
							minMenuHeight: minMenuHeight,
							maxMenuHeight: maxMenuHeight,
							menuPlacement: menuPlacement,
							menuPosition: menuPosition,
							menuShouldScrollIntoView: menuShouldScrollIntoView
						}

						var menuElement = _react.default.createElement(
							Menu_1.MenuPlacer,
							_extends({}, commonProps, menuPlacementProps),
							function(_ref6) {
								var ref = _ref6.ref,
									_ref6$placerProps = _ref6.placerProps,
									placement = _ref6$placerProps.placement,
									maxHeight = _ref6$placerProps.maxHeight
								return _react.default.createElement(
									Menu,
									_extends(
										{},
										commonProps,
										menuPlacementProps,
										{
											innerRef: ref,
											innerProps: {
												onMouseDown:
													_this5.onMenuMouseDown,
												onMouseMove:
													_this5.onMenuMouseMove
											},
											isLoading: isLoading,
											placement: placement
										}
									),
									_react.default.createElement(
										internal.ScrollCaptor,
										{
											isEnabled: captureMenuScroll,
											onTopArrive: onMenuScrollToTop,
											onBottomArrive: onMenuScrollToBottom
										},
										_react.default.createElement(
											internal.ScrollBlock,
											{
												isEnabled: menuShouldBlockScroll
											},
											_react.default.createElement(
												MenuList,
												_extends({}, commonProps, {
													innerRef:
														_this5.getMenuListRef,
													isLoading: isLoading,
													maxHeight: maxHeight
												}),
												menuUI
											)
										)
									)
								)
							}
						) // positioning behaviour is almost identical for portalled and fixed,
						// so we use the same component. the actual portalling logic is forked
						// within the component based on `menuPosition`

						return menuPortalTarget || menuPosition === 'fixed'
							? _react.default.createElement(
									MenuPortal,
									_extends({}, commonProps, {
										appendTo: menuPortalTarget,
										controlElement: this.controlRef,
										menuPlacement: menuPlacement,
										menuPosition: menuPosition
									}),
									menuElement
							  )
							: menuElement
					}
				},
				{
					key: 'renderFormField',
					value: function renderFormField() {
						var _this6 = this

						var _this$props19 = this.props,
							delimiter = _this$props19.delimiter,
							isDisabled = _this$props19.isDisabled,
							isMulti = _this$props19.isMulti,
							name = _this$props19.name
						var selectValue = this.state.selectValue
						if (!name || isDisabled) return

						if (isMulti) {
							if (delimiter) {
								var value = selectValue
									.map(function(opt) {
										return _this6.getOptionValue(opt)
									})
									.join(delimiter)
								return _react.default.createElement('input', {
									name: name,
									type: 'hidden',
									value: value
								})
							} else {
								var input =
									selectValue.length > 0
										? selectValue.map(function(opt, i) {
												return _react.default.createElement(
													'input',
													{
														key: 'i-'.concat(i),
														name: name,
														type: 'hidden',
														value: _this6.getOptionValue(
															opt
														)
													}
												)
										  })
										: _react.default.createElement(
												'input',
												{
													name: name,
													type: 'hidden'
												}
										  )
								return _react.default.createElement(
									'div',
									null,
									input
								)
							}
						} else {
							var _value = selectValue[0]
								? this.getOptionValue(selectValue[0])
								: ''

							return _react.default.createElement('input', {
								name: name,
								type: 'hidden',
								value: _value
							})
						}
					}
				},
				{
					key: 'renderLiveRegion',
					value: function renderLiveRegion() {
						if (!this.state.isFocused) return null
						return _react.default.createElement(
							internal.A11yText,
							{
								'aria-live': 'assertive'
							},
							_react.default.createElement(
								'p',
								{
									id: 'aria-selection-event'
								},
								'\xA0',
								this.state.ariaLiveSelection
							),
							_react.default.createElement(
								'p',
								{
									id: 'aria-context'
								},
								'\xA0',
								this.constructAriaLiveMessage()
							)
						)
					}
				},
				{
					key: 'render',
					value: function render() {
						var _this$components4 = this.components,
							Control = _this$components4.Control,
							IndicatorsContainer =
								_this$components4.IndicatorsContainer,
							SelectContainer = _this$components4.SelectContainer,
							ValueContainer = _this$components4.ValueContainer
						var _this$props20 = this.props,
							className = _this$props20.className,
							id = _this$props20.id,
							isDisabled = _this$props20.isDisabled,
							menuIsOpen = _this$props20.menuIsOpen
						var isFocused = this.state.isFocused
						var commonProps = (this.commonProps = this.getCommonProps())
						return _react.default.createElement(
							SelectContainer,
							_extends({}, commonProps, {
								className: className,
								innerProps: {
									id: id,
									onKeyDown: this.onKeyDown
								},
								isDisabled: isDisabled,
								isFocused: isFocused
							}),
							this.renderLiveRegion(),
							_react.default.createElement(
								Control,
								_extends({}, commonProps, {
									innerRef: this.getControlRef,
									innerProps: {
										onMouseDown: this.onControlMouseDown,
										onTouchEnd: this.onControlTouchEnd
									},
									isDisabled: isDisabled,
									isFocused: isFocused,
									menuIsOpen: menuIsOpen
								}),
								_react.default.createElement(
									ValueContainer,
									_extends({}, commonProps, {
										isDisabled: isDisabled
									}),
									this.renderPlaceholderOrValue(),
									this.renderInput()
								),
								_react.default.createElement(
									IndicatorsContainer,
									_extends({}, commonProps, {
										isDisabled: isDisabled
									}),
									this.renderClearIndicator(),
									this.renderLoadingIndicator(),
									this.renderIndicatorSeparator(),
									this.renderDropdownIndicator()
								)
							),
							this.renderMenu(),
							this.renderFormField()
						)
					}
				}
			])

			return Select
		})(_react.Component)

	exports.default = Select

	_defineProperty(Select, 'defaultProps', defaultProps)
})

unwrapExports(Select_1)
var Select_2 = Select_1.defaultProps

var stateManager = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.defaultProps = void 0

	var _react = _interopRequireWildcard(React__default)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var defaultProps = {
		defaultInputValue: '',
		defaultMenuIsOpen: false,
		defaultValue: null
	}
	exports.defaultProps = defaultProps

	var manageState = function manageState(SelectComponent) {
		var _class, _temp

		return (
			(_temp = _class =
				/*#__PURE__*/
				(function(_Component) {
					_inherits(StateManager, _Component)

					function StateManager() {
						var _getPrototypeOf2

						var _this

						_classCallCheck(this, StateManager)

						for (
							var _len = arguments.length,
								args = new Array(_len),
								_key = 0;
							_key < _len;
							_key++
						) {
							args[_key] = arguments[_key]
						}

						_this = _possibleConstructorReturn(
							this,
							(_getPrototypeOf2 = _getPrototypeOf(
								StateManager
							)).call.apply(_getPrototypeOf2, [this].concat(args))
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'select',
							void 0
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'state',
							{
								inputValue:
									_this.props.inputValue !== undefined
										? _this.props.inputValue
										: _this.props.defaultInputValue,
								menuIsOpen:
									_this.props.menuIsOpen !== undefined
										? _this.props.menuIsOpen
										: _this.props.defaultMenuIsOpen,
								value:
									_this.props.value !== undefined
										? _this.props.value
										: _this.props.defaultValue
							}
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'onChange',
							function(value, actionMeta) {
								_this.callProp('onChange', value, actionMeta)

								_this.setState({
									value: value
								})
							}
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'onInputChange',
							function(value, actionMeta) {
								// TODO: for backwards compatibility, we allow the prop to return a new
								// value, but now inputValue is a controllable prop we probably shouldn't
								var newValue = _this.callProp(
									'onInputChange',
									value,
									actionMeta
								)

								_this.setState({
									inputValue:
										newValue !== undefined
											? newValue
											: value
								})
							}
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'onMenuOpen',
							function() {
								_this.callProp('onMenuOpen')

								_this.setState({
									menuIsOpen: true
								})
							}
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'onMenuClose',
							function() {
								_this.callProp('onMenuClose')

								_this.setState({
									menuIsOpen: false
								})
							}
						)

						return _this
					}

					_createClass(StateManager, [
						{
							key: 'focus',
							value: function focus() {
								this.select.focus()
							}
						},
						{
							key: 'blur',
							value: function blur() {
								this.select.blur()
							} // FIXME: untyped flow code, return any
						},
						{
							key: 'getProp',
							value: function getProp(key) {
								return this.props[key] !== undefined
									? this.props[key]
									: this.state[key]
							} // FIXME: untyped flow code, return any
						},
						{
							key: 'callProp',
							value: function callProp(name) {
								if (typeof this.props[name] === 'function') {
									var _this$props

									for (
										var _len2 = arguments.length,
											args = new Array(
												_len2 > 1 ? _len2 - 1 : 0
											),
											_key2 = 1;
										_key2 < _len2;
										_key2++
									) {
										args[_key2 - 1] = arguments[_key2]
									}

									return (_this$props = this.props)[
										name
									].apply(_this$props, args)
								}
							}
						},
						{
							key: 'render',
							value: function render() {
								var _this2 = this

								var _this$props2 = this.props,
									defaultInputValue =
										_this$props2.defaultInputValue,
									defaultMenuIsOpen =
										_this$props2.defaultMenuIsOpen,
									defaultValue = _this$props2.defaultValue,
									props = _objectWithoutProperties(
										_this$props2,
										[
											'defaultInputValue',
											'defaultMenuIsOpen',
											'defaultValue'
										]
									)

								return _react.default.createElement(
									SelectComponent,
									_extends({}, props, {
										ref: function ref(_ref) {
											_this2.select = _ref
										},
										inputValue: this.getProp('inputValue'),
										menuIsOpen: this.getProp('menuIsOpen'),
										onChange: this.onChange,
										onInputChange: this.onInputChange,
										onMenuClose: this.onMenuClose,
										onMenuOpen: this.onMenuOpen,
										value: this.getProp('value')
									})
								)
							}
						}
					])

					return StateManager
				})(_react.Component)),
			_defineProperty(_class, 'defaultProps', defaultProps),
			_temp
		)
	}

	var _default = manageState
	exports.default = _default
})

unwrapExports(stateManager)
var stateManager_1 = stateManager.defaultProps

var Async$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = exports.makeAsyncSelect = exports.defaultProps = void 0

	var _react = _interopRequireWildcard(React__default)

	var _Select = _interopRequireDefault(Select_1)

	var _stateManager = _interopRequireDefault(stateManager)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) {
						var desc =
							Object.defineProperty &&
							Object.getOwnPropertyDescriptor
								? Object.getOwnPropertyDescriptor(obj, key)
								: {}
						if (desc.get || desc.set) {
							Object.defineProperty(newObj, key, desc)
						} else {
							newObj[key] = obj[key]
						}
					}
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _typeof(obj) {
		if (
			typeof Symbol === 'function' &&
			typeof Symbol.iterator === 'symbol'
		) {
			_typeof = function _typeof(obj) {
				return typeof obj
			}
		} else {
			_typeof = function _typeof(obj) {
				return obj &&
					typeof Symbol === 'function' &&
					obj.constructor === Symbol &&
					obj !== Symbol.prototype
					? 'symbol'
					: typeof obj
			}
		}
		return _typeof(obj)
	}

	function _extends() {
		_extends =
			Object.assign ||
			function(target) {
				for (var i = 1; i < arguments.length; i++) {
					var source = arguments[i]
					for (var key in source) {
						if (Object.prototype.hasOwnProperty.call(source, key)) {
							target[key] = source[key]
						}
					}
				}
				return target
			}
		return _extends.apply(this, arguments)
	}

	function _objectWithoutProperties(source, excluded) {
		if (source == null) return {}
		var target = _objectWithoutPropertiesLoose(source, excluded)
		var key, i
		if (Object.getOwnPropertySymbols) {
			var sourceSymbolKeys = Object.getOwnPropertySymbols(source)
			for (i = 0; i < sourceSymbolKeys.length; i++) {
				key = sourceSymbolKeys[i]
				if (excluded.indexOf(key) >= 0) continue
				if (!Object.prototype.propertyIsEnumerable.call(source, key))
					continue
				target[key] = source[key]
			}
		}
		return target
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
		if (source == null) return {}
		var target = {}
		var sourceKeys = Object.keys(source)
		var key, i
		for (i = 0; i < sourceKeys.length; i++) {
			key = sourceKeys[i]
			if (excluded.indexOf(key) >= 0) continue
			target[key] = source[key]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _defineProperties(target, props) {
		for (var i = 0; i < props.length; i++) {
			var descriptor = props[i]
			descriptor.enumerable = descriptor.enumerable || false
			descriptor.configurable = true
			if ('value' in descriptor) descriptor.writable = true
			Object.defineProperty(target, descriptor.key, descriptor)
		}
	}

	function _createClass(Constructor, protoProps, staticProps) {
		if (protoProps) _defineProperties(Constructor.prototype, protoProps)
		if (staticProps) _defineProperties(Constructor, staticProps)
		return Constructor
	}

	function _possibleConstructorReturn(self, call) {
		if (
			call &&
			(_typeof(call) === 'object' || typeof call === 'function')
		) {
			return call
		}
		return _assertThisInitialized(self)
	}

	function _getPrototypeOf(o) {
		_getPrototypeOf = Object.setPrototypeOf
			? Object.getPrototypeOf
			: function _getPrototypeOf(o) {
					return o.__proto__ || Object.getPrototypeOf(o)
			  }
		return _getPrototypeOf(o)
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function'
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {value: subClass, writable: true, configurable: true}
		})
		if (superClass) _setPrototypeOf(subClass, superClass)
	}

	function _setPrototypeOf(o, p) {
		_setPrototypeOf =
			Object.setPrototypeOf ||
			function _setPrototypeOf(o, p) {
				o.__proto__ = p
				return o
			}
		return _setPrototypeOf(o, p)
	}

	function _assertThisInitialized(self) {
		if (self === void 0) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return self
	}

	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, {
				value: value,
				enumerable: true,
				configurable: true,
				writable: true
			})
		} else {
			obj[key] = value
		}
		return obj
	}

	var defaultProps = {
		cacheOptions: false,
		defaultOptions: false,
		filterOption: null
	}
	exports.defaultProps = defaultProps

	var makeAsyncSelect = function makeAsyncSelect(SelectComponent) {
		var _class, _temp

		return (
			(_temp = _class =
				/*#__PURE__*/
				(function(_Component) {
					_inherits(Async, _Component)

					function Async(props) {
						var _this

						_classCallCheck(this, Async)

						_this = _possibleConstructorReturn(
							this,
							_getPrototypeOf(Async).call(this)
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'select',
							void 0
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'lastRequest',
							void 0
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'mounted',
							false
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'optionsCache',
							{}
						)

						_defineProperty(
							_assertThisInitialized(
								_assertThisInitialized(_this)
							),
							'handleInputChange',
							function(newValue, actionMeta) {
								var _this$props = _this.props,
									cacheOptions = _this$props.cacheOptions,
									onInputChange = _this$props.onInputChange // TODO

								var inputValue = (0, utils$3.handleInputChange)(
									newValue,
									actionMeta,
									onInputChange
								)

								if (!inputValue) {
									delete _this.lastRequest

									_this.setState({
										inputValue: '',
										loadedInputValue: '',
										loadedOptions: [],
										isLoading: false,
										passEmptyOptions: false
									})

									return
								}

								if (
									cacheOptions &&
									_this.optionsCache[inputValue]
								) {
									_this.setState({
										inputValue: inputValue,
										loadedInputValue: inputValue,
										loadedOptions:
											_this.optionsCache[inputValue],
										isLoading: false,
										passEmptyOptions: false
									})
								} else {
									var request = (_this.lastRequest = {})

									_this.setState(
										{
											inputValue: inputValue,
											isLoading: true,
											passEmptyOptions: !_this.state
												.loadedInputValue
										},
										function() {
											_this.loadOptions(
												inputValue,
												function(options) {
													if (!_this.mounted) return

													if (options) {
														_this.optionsCache[
															inputValue
														] = options
													}

													if (
														request !==
														_this.lastRequest
													)
														return
													delete _this.lastRequest

													_this.setState({
														isLoading: false,
														loadedInputValue: inputValue,
														loadedOptions:
															options || [],
														passEmptyOptions: false
													})
												}
											)
										}
									)
								}

								return inputValue
							}
						)

						_this.state = {
							defaultOptions: Array.isArray(props.defaultOptions)
								? props.defaultOptions
								: undefined,
							inputValue:
								typeof props.inputValue !== 'undefined'
									? props.inputValue
									: '',
							isLoading:
								props.defaultOptions === true ? true : false,
							loadedOptions: [],
							passEmptyOptions: false
						}
						return _this
					}

					_createClass(Async, [
						{
							key: 'componentDidMount',
							value: function componentDidMount() {
								var _this2 = this

								this.mounted = true
								var defaultOptions = this.props.defaultOptions
								var inputValue = this.state.inputValue

								if (defaultOptions === true) {
									this.loadOptions(inputValue, function(
										options
									) {
										if (!_this2.mounted) return
										var isLoading = !!_this2.lastRequest

										_this2.setState({
											defaultOptions: options || [],
											isLoading: isLoading
										})
									})
								}
							}
						},
						{
							key: 'componentWillReceiveProps',
							value: function componentWillReceiveProps(
								nextProps
							) {
								// if the cacheOptions prop changes, clear the cache
								if (
									nextProps.cacheOptions !==
									this.props.cacheOptions
								) {
									this.optionsCache = {}
								}

								if (
									nextProps.defaultOptions !==
									this.props.defaultOptions
								) {
									this.setState({
										defaultOptions: Array.isArray(
											nextProps.defaultOptions
										)
											? nextProps.defaultOptions
											: undefined
									})
								}
							}
						},
						{
							key: 'componentWillUnmount',
							value: function componentWillUnmount() {
								this.mounted = false
							}
						},
						{
							key: 'focus',
							value: function focus() {
								this.select.focus()
							}
						},
						{
							key: 'blur',
							value: function blur() {
								this.select.blur()
							}
						},
						{
							key: 'loadOptions',
							value: function loadOptions(inputValue, callback) {
								var loadOptions = this.props.loadOptions
								if (!loadOptions) return callback()
								var loader = loadOptions(inputValue, callback)

								if (
									loader &&
									typeof loader.then === 'function'
								) {
									loader.then(callback, function() {
										return callback()
									})
								}
							}
						},
						{
							key: 'render',
							value: function render() {
								var _this3 = this

								var _this$props2 = this.props,
									loadOptions = _this$props2.loadOptions,
									props = _objectWithoutProperties(
										_this$props2,
										['loadOptions']
									)

								var _this$state = this.state,
									defaultOptions = _this$state.defaultOptions,
									inputValue = _this$state.inputValue,
									isLoading = _this$state.isLoading,
									loadedInputValue =
										_this$state.loadedInputValue,
									loadedOptions = _this$state.loadedOptions,
									passEmptyOptions =
										_this$state.passEmptyOptions
								var options = passEmptyOptions
									? []
									: inputValue && loadedInputValue
									? loadedOptions
									: defaultOptions || []
								return _react.default.createElement(
									SelectComponent,
									_extends({}, props, {
										ref: function ref(_ref) {
											_this3.select = _ref
										},
										options: options,
										isLoading: isLoading,
										onInputChange: this.handleInputChange
									})
								)
							}
						}
					])

					return Async
				})(_react.Component)),
			_defineProperty(_class, 'defaultProps', defaultProps),
			_temp
		)
	}

	exports.makeAsyncSelect = makeAsyncSelect
	var SelectState = (0, _stateManager.default)(_Select.default)

	var _default = makeAsyncSelect(SelectState)

	exports.default = _default
})

var AsyncRSelect = unwrapExports(Async$1)
var Async_1 = Async$1.makeAsyncSelect
var Async_2 = Async$1.defaultProps

function _extends$5() {
	_extends$5 =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]

				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}

			return target
		}

	return _extends$5.apply(this, arguments)
}

function _inheritsLoose(subClass, superClass) {
	subClass.prototype = Object.create(superClass.prototype)
	subClass.prototype.constructor = subClass
	subClass.__proto__ = superClass
}

function _assertThisInitialized$2(self) {
	if (self === void 0) {
		throw new ReferenceError(
			"this hasn't been initialised - super() hasn't been called"
		)
	}

	return self
}

// Animation frame based implementation of setTimeout.
// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js
var hasNativePerformanceNow =
	typeof performance === 'object' && typeof performance.now === 'function'
var now$1 = hasNativePerformanceNow
	? function() {
			return performance.now()
	  }
	: function() {
			return Date.now()
	  }
function cancelTimeout(timeoutID) {
	cancelAnimationFrame(timeoutID.id)
}
function requestTimeout(callback, delay) {
	var start = now$1()

	function tick() {
		if (now$1() - start >= delay) {
			callback.call(null)
		} else {
			timeoutID.id = requestAnimationFrame(tick)
		}
	}

	var timeoutID = {
		id: requestAnimationFrame(tick)
	}
	return timeoutID
}
var cachedRTLResult = null // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).
// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.
// The safest way to check this is to intentionally set a negative offset,
// and then verify that the subsequent "scroll" event matches the negative offset.
// If it does not match, then we can assume a non-standard RTL scroll implementation.

function getRTLOffsetType(recalculate) {
	if (recalculate === void 0) {
		recalculate = false
	}

	if (cachedRTLResult === null || recalculate) {
		var outerDiv = document.createElement('div')
		var outerStyle = outerDiv.style
		outerStyle.width = '50px'
		outerStyle.height = '50px'
		outerStyle.overflow = 'scroll'
		outerStyle.direction = 'rtl'
		var innerDiv = document.createElement('div')
		var innerStyle = innerDiv.style
		innerStyle.width = '100px'
		innerStyle.height = '100px'
		outerDiv.appendChild(innerDiv)
		document.body.appendChild(outerDiv)

		if (outerDiv.scrollLeft > 0) {
			cachedRTLResult = 'positive-descending'
		} else {
			outerDiv.scrollLeft = 1

			if (outerDiv.scrollLeft === 0) {
				cachedRTLResult = 'negative'
			} else {
				cachedRTLResult = 'positive-ascending'
			}
		}

		document.body.removeChild(outerDiv)
		return cachedRTLResult
	}

	return cachedRTLResult
}

if (process.env.NODE_ENV !== 'production') {
	if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined');
}

var IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150

var defaultItemKey$1 = function defaultItemKey(index, data) {
	return index
} // In DEV mode, this Set helps us only log a warning once per component instance.
// This avoids spamming the console every time a render happens.

var devWarningsDirection = null
var devWarningsTagName$1 = null

if (process.env.NODE_ENV !== 'production') {
	if (
		typeof window !== 'undefined' &&
		typeof window.WeakSet !== 'undefined'
	) {
		devWarningsDirection =
			/*#__PURE__*/
			new WeakSet()
		devWarningsTagName$1 =
			/*#__PURE__*/
			new WeakSet()
	}
}

function createListComponent(_ref) {
	var _class, _temp

	var getItemOffset = _ref.getItemOffset,
		getEstimatedTotalSize = _ref.getEstimatedTotalSize,
		getItemSize = _ref.getItemSize,
		getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,
		getStartIndexForOffset = _ref.getStartIndexForOffset,
		getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,
		initInstanceProps = _ref.initInstanceProps,
		shouldResetStyleCacheOnItemSizeChange =
			_ref.shouldResetStyleCacheOnItemSizeChange,
		validateProps = _ref.validateProps
	return (
		(_temp = _class =
			/*#__PURE__*/
			(function(_PureComponent) {
				_inheritsLoose(List, _PureComponent)

				// Always use explicit constructor for React components.
				// It produces less code after transpilation. (#26)
				// eslint-disable-next-line no-useless-constructor
				function List(props) {
					var _this

					_this = _PureComponent.call(this, props) || this
					_this._instanceProps = initInstanceProps(
						_this.props,
						_assertThisInitialized$2(
							_assertThisInitialized$2(_this)
						)
					)
					_this._outerRef = void 0
					_this._resetIsScrollingTimeoutId = null
					_this.state = {
						instance: _assertThisInitialized$2(
							_assertThisInitialized$2(_this)
						),
						isScrolling: false,
						scrollDirection: 'forward',
						scrollOffset:
							typeof _this.props.initialScrollOffset === 'number'
								? _this.props.initialScrollOffset
								: 0,
						scrollUpdateWasRequested: false
					}
					_this._callOnItemsRendered = void 0
					_this._callOnItemsRendered = index$1(function(
						overscanStartIndex,
						overscanStopIndex,
						visibleStartIndex,
						visibleStopIndex
					) {
						return _this.props.onItemsRendered({
							overscanStartIndex: overscanStartIndex,
							overscanStopIndex: overscanStopIndex,
							visibleStartIndex: visibleStartIndex,
							visibleStopIndex: visibleStopIndex
						})
					})
					_this._callOnScroll = void 0
					_this._callOnScroll = index$1(function(
						scrollDirection,
						scrollOffset,
						scrollUpdateWasRequested
					) {
						return _this.props.onScroll({
							scrollDirection: scrollDirection,
							scrollOffset: scrollOffset,
							scrollUpdateWasRequested: scrollUpdateWasRequested
						})
					})
					_this._getItemStyle = void 0

					_this._getItemStyle = function(index) {
						var _this$props = _this.props,
							direction = _this$props.direction,
							itemSize = _this$props.itemSize,
							layout = _this$props.layout

						var itemStyleCache = _this._getItemStyleCache(
							shouldResetStyleCacheOnItemSizeChange && itemSize,
							shouldResetStyleCacheOnItemSizeChange && layout,
							shouldResetStyleCacheOnItemSizeChange && direction
						)

						var style

						if (itemStyleCache.hasOwnProperty(index)) {
							style = itemStyleCache[index]
						} else {
							var _style

							var _offset = getItemOffset(
								_this.props,
								index,
								_this._instanceProps
							)

							var size = getItemSize(
								_this.props,
								index,
								_this._instanceProps
							) // TODO Deprecate direction "horizontal"

							var isHorizontal =
								direction === 'horizontal' ||
								layout === 'horizontal'
							itemStyleCache[index] = style =
								((_style = {
									position: 'absolute'
								}),
								(_style[
									direction === 'rtl' ? 'right' : 'left'
								] = isHorizontal ? _offset : 0),
								(_style.top = !isHorizontal ? _offset : 0),
								(_style.height = !isHorizontal ? size : '100%'),
								(_style.width = isHorizontal ? size : '100%'),
								_style)
						}

						return style
					}

					_this._getItemStyleCache = void 0
					_this._getItemStyleCache = index$1(function(_, __, ___) {
						return {}
					})

					_this._onScrollHorizontal = function(event) {
						var _event$currentTarget = event.currentTarget,
							clientWidth = _event$currentTarget.clientWidth,
							scrollLeft = _event$currentTarget.scrollLeft,
							scrollWidth = _event$currentTarget.scrollWidth

						_this.setState(function(prevState) {
							if (prevState.scrollOffset === scrollLeft) {
								// Scroll position may have been updated by cDM/cDU,
								// In which case we don't need to trigger another render,
								// And we don't want to update state.isScrolling.
								return null
							}

							var direction = _this.props.direction
							var scrollOffset = scrollLeft

							if (direction === 'rtl') {
								// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
								// This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
								// It's also easier for this component if we convert offsets to the same format as they would be in for ltr.
								// So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.
								switch (getRTLOffsetType()) {
									case 'negative':
										scrollOffset = -scrollLeft
										break

									case 'positive-descending':
										scrollOffset =
											scrollWidth -
											clientWidth -
											scrollLeft
										break
								}
							} // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.

							scrollOffset = Math.max(
								0,
								Math.min(
									scrollOffset,
									scrollWidth - clientWidth
								)
							)
							return {
								isScrolling: true,
								scrollDirection:
									prevState.scrollOffset < scrollLeft
										? 'forward'
										: 'backward',
								scrollOffset: scrollOffset,
								scrollUpdateWasRequested: false
							}
						}, _this._resetIsScrollingDebounced)
					}

					_this._onScrollVertical = function(event) {
						var _event$currentTarget2 = event.currentTarget,
							clientHeight = _event$currentTarget2.clientHeight,
							scrollHeight = _event$currentTarget2.scrollHeight,
							scrollTop = _event$currentTarget2.scrollTop

						_this.setState(function(prevState) {
							if (prevState.scrollOffset === scrollTop) {
								// Scroll position may have been updated by cDM/cDU,
								// In which case we don't need to trigger another render,
								// And we don't want to update state.isScrolling.
								return null
							} // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.

							var scrollOffset = Math.max(
								0,
								Math.min(scrollTop, scrollHeight - clientHeight)
							)
							return {
								isScrolling: true,
								scrollDirection:
									prevState.scrollOffset < scrollOffset
										? 'forward'
										: 'backward',
								scrollOffset: scrollOffset,
								scrollUpdateWasRequested: false
							}
						}, _this._resetIsScrollingDebounced)
					}

					_this._outerRefSetter = function(ref) {
						var outerRef = _this.props.outerRef
						_this._outerRef = ref

						if (typeof outerRef === 'function') {
							outerRef(ref)
						} else if (
							outerRef != null &&
							typeof outerRef === 'object' &&
							outerRef.hasOwnProperty('current')
						) {
							outerRef.current = ref
						}
					}

					_this._resetIsScrollingDebounced = function() {
						if (_this._resetIsScrollingTimeoutId !== null) {
							cancelTimeout(_this._resetIsScrollingTimeoutId)
						}

						_this._resetIsScrollingTimeoutId = requestTimeout(
							_this._resetIsScrolling,
							IS_SCROLLING_DEBOUNCE_INTERVAL$1
						)
					}

					_this._resetIsScrolling = function() {
						_this._resetIsScrollingTimeoutId = null

						_this.setState(
							{
								isScrolling: false
							},
							function() {
								// Clear style cache after state update has been committed.
								// This way we don't break pure sCU for items that don't use isScrolling param.
								_this._getItemStyleCache(-1, null)
							}
						)
					}

					return _this
				}

				List.getDerivedStateFromProps = function getDerivedStateFromProps(
					nextProps,
					prevState
				) {
					validateSharedProps$1(nextProps, prevState)
					validateProps(nextProps)
					return null
				}

				var _proto = List.prototype

				_proto.scrollTo = function scrollTo(scrollOffset) {
					scrollOffset = Math.max(0, scrollOffset)
					this.setState(function(prevState) {
						if (prevState.scrollOffset === scrollOffset) {
							return null
						}

						return {
							scrollDirection:
								prevState.scrollOffset < scrollOffset
									? 'forward'
									: 'backward',
							scrollOffset: scrollOffset,
							scrollUpdateWasRequested: true
						}
					}, this._resetIsScrollingDebounced)
				}

				_proto.scrollToItem = function scrollToItem(index, align) {
					if (align === void 0) {
						align = 'auto'
					}

					var itemCount = this.props.itemCount
					var scrollOffset = this.state.scrollOffset
					index = Math.max(0, Math.min(index, itemCount - 1))
					this.scrollTo(
						getOffsetForIndexAndAlignment(
							this.props,
							index,
							align,
							scrollOffset,
							this._instanceProps
						)
					)
				}

				_proto.componentDidMount = function componentDidMount() {
					var _this$props2 = this.props,
						direction = _this$props2.direction,
						initialScrollOffset = _this$props2.initialScrollOffset,
						layout = _this$props2.layout

					if (
						typeof initialScrollOffset === 'number' &&
						this._outerRef != null
					) {
						var outerRef = this._outerRef // TODO Deprecate direction "horizontal"

						if (
							direction === 'horizontal' ||
							layout === 'horizontal'
						) {
							outerRef.scrollLeft = initialScrollOffset
						} else {
							outerRef.scrollTop = initialScrollOffset
						}
					}

					this._callPropsCallbacks()
				}

				_proto.componentDidUpdate = function componentDidUpdate() {
					var _this$props3 = this.props,
						direction = _this$props3.direction,
						layout = _this$props3.layout
					var _this$state = this.state,
						scrollOffset = _this$state.scrollOffset,
						scrollUpdateWasRequested =
							_this$state.scrollUpdateWasRequested

					if (scrollUpdateWasRequested && this._outerRef != null) {
						var outerRef = this._outerRef // TODO Deprecate direction "horizontal"

						if (
							direction === 'horizontal' ||
							layout === 'horizontal'
						) {
							if (direction === 'rtl') {
								// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
								// This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
								// So we need to determine which browser behavior we're dealing with, and mimic it.
								switch (getRTLOffsetType()) {
									case 'negative':
										outerRef.scrollLeft = -scrollOffset
										break

									case 'positive-ascending':
										outerRef.scrollLeft = scrollOffset
										break

									default:
										var clientWidth = outerRef.clientWidth,
											scrollWidth = outerRef.scrollWidth
										outerRef.scrollLeft =
											scrollWidth -
											clientWidth -
											scrollOffset
										break
								}
							} else {
								outerRef.scrollLeft = scrollOffset
							}
						} else {
							outerRef.scrollTop = scrollOffset
						}
					}

					this._callPropsCallbacks()
				}

				_proto.componentWillUnmount = function componentWillUnmount() {
					if (this._resetIsScrollingTimeoutId !== null) {
						cancelTimeout(this._resetIsScrollingTimeoutId)
					}
				}

				_proto.render = function render() {
					var _this$props4 = this.props,
						children = _this$props4.children,
						className = _this$props4.className,
						direction = _this$props4.direction,
						height = _this$props4.height,
						innerRef = _this$props4.innerRef,
						innerElementType = _this$props4.innerElementType,
						innerTagName = _this$props4.innerTagName,
						itemCount = _this$props4.itemCount,
						itemData = _this$props4.itemData,
						_this$props4$itemKey = _this$props4.itemKey,
						itemKey =
							_this$props4$itemKey === void 0
								? defaultItemKey$1
								: _this$props4$itemKey,
						layout = _this$props4.layout,
						outerElementType = _this$props4.outerElementType,
						outerTagName = _this$props4.outerTagName,
						style = _this$props4.style,
						useIsScrolling = _this$props4.useIsScrolling,
						width = _this$props4.width
					var isScrolling = this.state.isScrolling // TODO Deprecate direction "horizontal"

					var isHorizontal =
						direction === 'horizontal' || layout === 'horizontal'
					var onScroll = isHorizontal
						? this._onScrollHorizontal
						: this._onScrollVertical

					var _this$_getRangeToRend = this._getRangeToRender(),
						startIndex = _this$_getRangeToRend[0],
						stopIndex = _this$_getRangeToRend[1]

					var items = []

					if (itemCount > 0) {
						for (
							var _index = startIndex;
							_index <= stopIndex;
							_index++
						) {
							items.push(
								createElement(children, {
									data: itemData,
									key: itemKey(_index, itemData),
									index: _index,
									isScrolling: useIsScrolling
										? isScrolling
										: undefined,
									style: this._getItemStyle(_index)
								})
							)
						}
					} // Read this value AFTER items have been created,
					// So their actual sizes (if variable) are taken into consideration.

					var estimatedTotalSize = getEstimatedTotalSize(
						this.props,
						this._instanceProps
					)
					return createElement(
						outerElementType || outerTagName || 'div',
						{
							className: className,
							onScroll: onScroll,
							ref: this._outerRefSetter,
							style: _extends$5(
								{
									position: 'relative',
									height: height,
									width: width,
									overflow: 'auto',
									WebkitOverflowScrolling: 'touch',
									willChange: 'transform',
									direction: direction
								},
								style
							)
						},
						createElement(
							innerElementType || innerTagName || 'div',
							{
								children: items,
								ref: innerRef,
								style: {
									height: isHorizontal
										? '100%'
										: estimatedTotalSize,
									pointerEvents: isScrolling
										? 'none'
										: undefined,
									width: isHorizontal
										? estimatedTotalSize
										: '100%'
								}
							}
						)
					)
				}

				_proto._callPropsCallbacks = function _callPropsCallbacks() {
					if (typeof this.props.onItemsRendered === 'function') {
						var itemCount = this.props.itemCount

						if (itemCount > 0) {
							var _this$_getRangeToRend2 = this._getRangeToRender(),
								_overscanStartIndex = _this$_getRangeToRend2[0],
								_overscanStopIndex = _this$_getRangeToRend2[1],
								_visibleStartIndex = _this$_getRangeToRend2[2],
								_visibleStopIndex = _this$_getRangeToRend2[3]

							this._callOnItemsRendered(
								_overscanStartIndex,
								_overscanStopIndex,
								_visibleStartIndex,
								_visibleStopIndex
							)
						}
					}

					if (typeof this.props.onScroll === 'function') {
						var _this$state2 = this.state,
							_scrollDirection = _this$state2.scrollDirection,
							_scrollOffset = _this$state2.scrollOffset,
							_scrollUpdateWasRequested =
								_this$state2.scrollUpdateWasRequested

						this._callOnScroll(
							_scrollDirection,
							_scrollOffset,
							_scrollUpdateWasRequested
						)
					}
				} // Lazily create and cache item styles while scrolling,
				// So that pure component sCU will prevent re-renders.
				// We maintain this cache, and pass a style prop rather than index,
				// So that List can clear cached styles and force item re-render if necessary.

				_proto._getRangeToRender = function _getRangeToRender() {
					var _this$props5 = this.props,
						itemCount = _this$props5.itemCount,
						overscanCount = _this$props5.overscanCount
					var _this$state3 = this.state,
						isScrolling = _this$state3.isScrolling,
						scrollDirection = _this$state3.scrollDirection,
						scrollOffset = _this$state3.scrollOffset

					if (itemCount === 0) {
						return [0, 0, 0, 0]
					}

					var startIndex = getStartIndexForOffset(
						this.props,
						scrollOffset,
						this._instanceProps
					)
					var stopIndex = getStopIndexForStartIndex(
						this.props,
						startIndex,
						scrollOffset,
						this._instanceProps
					) // Overscan by one item in each direction so that tab/focus works.
					// If there isn't at least one extra item, tab loops back around.

					var overscanBackward =
						!isScrolling || scrollDirection === 'backward'
							? Math.max(1, overscanCount)
							: 1
					var overscanForward =
						!isScrolling || scrollDirection === 'forward'
							? Math.max(1, overscanCount)
							: 1
					return [
						Math.max(0, startIndex - overscanBackward),
						Math.max(
							0,
							Math.min(itemCount - 1, stopIndex + overscanForward)
						),
						startIndex,
						stopIndex
					]
				}

				return List
			})(PureComponent)),
		(_class.defaultProps = {
			direction: 'ltr',
			itemData: undefined,
			layout: 'vertical',
			overscanCount: 2,
			useIsScrolling: false
		}),
		_temp
	)
} // NOTE: I considered further wrapping individual items with a pure ListItem component.
// This would avoid ever calling the render function for the same index more than once,
// But it would also add the overhead of a lot of components/fibers.
// I assume people already do this (render function returning a class component),
// So my doing it would just unnecessarily double the wrappers.

var validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {
	var children = _ref2.children,
		direction = _ref2.direction,
		height = _ref2.height,
		layout = _ref2.layout,
		innerTagName = _ref2.innerTagName,
		outerTagName = _ref2.outerTagName,
		width = _ref2.width
	var instance = _ref3.instance

	if (process.env.NODE_ENV !== 'production') {
		if (innerTagName != null || outerTagName != null) {
			if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {
				devWarningsTagName$1.add(instance)
				console.warn(
					'The innerTagName and outerTagName props have been deprecated. ' +
						'Please use the innerElementType and outerElementType props instead.'
				)
			}
		} // TODO Deprecate direction "horizontal"

		var isHorizontal = direction === 'horizontal' || layout === 'horizontal'

		switch (direction) {
			case 'horizontal':
			case 'vertical':
				if (
					devWarningsDirection &&
					!devWarningsDirection.has(instance)
				) {
					devWarningsDirection.add(instance)
					console.warn(
						'The direction prop should be either "ltr" (default) or "rtl". ' +
							'Please use the layout prop to specify "vertical" (default) or "horizontal" orientation.'
					)
				}

				break

			case 'ltr':
			case 'rtl':
				// Valid values
				break

			default:
				throw Error(
					'An invalid "direction" prop has been specified. ' +
						'Value should be either "ltr" or "rtl". ' +
						('"' + direction + '" was specified.')
				)
		}

		switch (layout) {
			case 'horizontal':
			case 'vertical':
				// Valid values
				break

			default:
				throw Error(
					'An invalid "layout" prop has been specified. ' +
						'Value should be either "horizontal" or "vertical". ' +
						('"' + layout + '" was specified.')
				)
		}

		if (children == null) {
			throw Error(
				'An invalid "children" prop has been specified. ' +
					'Value should be a React component. ' +
					('"' +
						(children === null ? 'null' : typeof children) +
						'" was specified.')
			)
		}

		if (isHorizontal && typeof width !== 'number') {
			throw Error(
				'An invalid "width" prop has been specified. ' +
					'Horizontal lists must specify a number for width. ' +
					('"' +
						(width === null ? 'null' : typeof width) +
						'" was specified.')
			)
		} else if (!isHorizontal && typeof height !== 'number') {
			throw Error(
				'An invalid "height" prop has been specified. ' +
					'Vertical lists must specify a number for height. ' +
					('"' +
						(height === null ? 'null' : typeof height) +
						'" was specified.')
			)
		}
	}
}

var FixedSizeList =
	/*#__PURE__*/
	createListComponent({
		getItemOffset: function getItemOffset(_ref, index) {
			var itemSize = _ref.itemSize
			return index * itemSize
		},
		getItemSize: function getItemSize(_ref2, index) {
			var itemSize = _ref2.itemSize
			return itemSize
		},
		getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {
			var itemCount = _ref3.itemCount,
				itemSize = _ref3.itemSize
			return itemSize * itemCount
		},
		getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(
			_ref4,
			index,
			align,
			scrollOffset
		) {
			var direction = _ref4.direction,
				height = _ref4.height,
				itemCount = _ref4.itemCount,
				itemSize = _ref4.itemSize,
				layout = _ref4.layout,
				width = _ref4.width
			// TODO Deprecate direction "horizontal"
			var isHorizontal =
				direction === 'horizontal' || layout === 'horizontal'
			var size = isHorizontal ? width : height
			var lastItemOffset = Math.max(0, itemCount * itemSize - size)
			var maxOffset = Math.min(lastItemOffset, index * itemSize)
			var minOffset = Math.max(0, index * itemSize - size + itemSize)

			if (align === 'smart') {
				if (
					scrollOffset >= minOffset - size &&
					scrollOffset <= maxOffset + size
				) {
					align = 'auto'
				} else {
					align = 'center'
				}
			}

			switch (align) {
				case 'start':
					return maxOffset

				case 'end':
					return minOffset

				case 'center': {
					// "Centered" offset is usually the average of the min and max.
					// But near the edges of the list, this doesn't hold true.
					var middleOffset = Math.round(
						minOffset + (maxOffset - minOffset) / 2
					)

					if (middleOffset < Math.ceil(size / 2)) {
						return 0 // near the beginning
					} else if (
						middleOffset >
						lastItemOffset + Math.floor(size / 2)
					) {
						return lastItemOffset // near the end
					} else {
						return middleOffset
					}
				}

				case 'auto':
				default:
					if (
						scrollOffset >= minOffset &&
						scrollOffset <= maxOffset
					) {
						return scrollOffset
					} else if (scrollOffset < minOffset) {
						return minOffset
					} else {
						return maxOffset
					}
			}
		},
		getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {
			var itemCount = _ref5.itemCount,
				itemSize = _ref5.itemSize
			return Math.max(
				0,
				Math.min(itemCount - 1, Math.floor(offset / itemSize))
			)
		},
		getStopIndexForStartIndex: function getStopIndexForStartIndex(
			_ref6,
			startIndex,
			scrollOffset
		) {
			var direction = _ref6.direction,
				height = _ref6.height,
				itemCount = _ref6.itemCount,
				itemSize = _ref6.itemSize,
				layout = _ref6.layout,
				width = _ref6.width
			// TODO Deprecate direction "horizontal"
			var isHorizontal =
				direction === 'horizontal' || layout === 'horizontal'
			var offset = startIndex * itemSize
			var size = isHorizontal ? width : height
			var numVisibleItems = Math.ceil(
				(size + scrollOffset - offset) / itemSize
			)
			return Math.max(
				0,
				Math.min(
					itemCount - 1,
					startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive
				)
			)
		},
		initInstanceProps: function initInstanceProps(props) {
			// Noop
		},
		shouldResetStyleCacheOnItemSizeChange: true,
		validateProps: function validateProps(_ref7) {
			var itemSize = _ref7.itemSize

			if (process.env.NODE_ENV !== 'production') {
				if (typeof itemSize !== 'number') {
					throw Error(
						'An invalid "itemSize" prop has been specified. ' +
							'Value should be a number. ' +
							('"' +
								(itemSize === null ? 'null' : typeof itemSize) +
								'" was specified.')
					)
				}
			}
		}
	})
//# sourceMappingURL=index.esm.js.map

function _templateObject2$b() {
	var data = taggedTemplateLiteral(['\n  ', '\n'])

	_templateObject2$b = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$k() {
	var data = taggedTemplateLiteral([
		'\n    &::-webkit-scrollbar {\n      height: 8px;\n      background-color: transparent;\n      width: 4px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background-color: ',
		';\n      border-radius: 10px;\n    }\n    scrollbar-color: ',
		' transparent;\n    scrollbar-width: thin;\n  '
	])

	_templateObject$k = function _templateObject() {
		return data
	}

	return data
}
/**
 * TODO:
 * 1) Combobox values remake/restyling.
 * 2) Option groups с виртуализацией. Сейчас заработают только в простом виде.
 */

var OPTION_HEIGHT = 38

var getSize = function getSize(size) {
	switch (size) {
		case 'small':
			return 0

		case 'medium':
			return 1

		case 'large':
			return 2

		default:
			return 1
	}
}

var customStyles = {
	placeholder: function placeholder(base, props) {
		var _props$selectProps = props.selectProps,
			systemTheme = _props$selectProps.systemTheme,
			size = _props$selectProps.size
		var sizeIndex = getSize(size)
		return objectSpread({}, base, {
			fontSize: systemTheme.fontSizes[sizeIndex],
			color: systemTheme.colors.black
		})
	},
	input: function input(base, props, third) {
		// Can't access system theme here... ?
		return objectSpread({}, base, {
			fontSize: 14,
			color: '#3a3a3a'
		})
	},
	valueContainer: function valueContainer(base, props) {
		var _props$selectProps2 = props.selectProps,
			systemTheme = _props$selectProps2.systemTheme,
			size = _props$selectProps2.size
		var sizeIndex = getSize(size)
		return objectSpread({}, base, {
			fontSize: systemTheme.fontSizes[sizeIndex],
			color: systemTheme.colors.black,
			paddingLeft: systemTheme.space[3]
		})
	},
	control: function control(base, props) {
		var systemTheme = props.selectProps.systemTheme
		var isDisabled = props.isDisabled,
			isFocused = props.isFocused,
			menuIsOpen = props.menuIsOpen // Disabled styles

		if (isDisabled) {
			return objectSpread({}, base, {
				borderColor: 'transparent',
				backgroundColor: systemTheme.colors.input.disabled,
				cursor: 'not-allowed'
			})
		}

		if (isFocused || menuIsOpen) {
			return objectSpread({}, base, {
				borderColor: systemTheme.colors.input.focus,
				backgroundColor: systemTheme.colors.white,
				boxShadow: 'none'
			})
		} // Default

		return objectSpread({}, base, {
			'&:hover': {
				borderColor: systemTheme.colors.black
			},
			borderColor: 'transparent',
			backgroundColor: systemTheme.colors.lightGrey
		})
	},
	menuList: function menuList(base, props) {
		var systemTheme = props.selectProps.systemTheme // Пока скроллов тоже нет в макетах.

		return objectSpread({}, base, {
			'&::-webkit-scrollbar': {
				height: '8px',
				backgroundColor: 'transparent',
				width: '4px'
			},
			'&::-webkit-scrollbar-thumb': {
				backgroundColor: ''.concat(systemTheme.colors.scrollbar),
				borderRadius: '8px'
			},
			scrollbarColor: ''.concat(
				systemTheme.colors.scrollbar,
				' transparent'
			),
			scrollbarWidth: 'thin'
		})
	},
	indicatorSeparator: function indicatorSeparator(base) {
		return objectSpread({}, base, {
			width: '0px'
		})
	},
	option: function option(base, props) {
		var isSelected = props.isSelected,
			isFocused = props.isFocused
		var _props$selectProps3 = props.selectProps,
			systemTheme = _props$selectProps3.systemTheme,
			size = _props$selectProps3.size
		var sizeIndex = getSize(size)

		var baseline = objectSpread({}, base, {
			color: systemTheme.colors.black,
			fontSize: systemTheme.fontSizes[sizeIndex]
		})

		if (isSelected) {
			return objectSpread({}, baseline, {
				backgroundColor: systemTheme.colors.lightGrey
			})
		} // Пока одинаковые, нет в макетах.

		if (isFocused) {
			return objectSpread({}, baseline, {
				backgroundColor: systemTheme.colors.lightGrey
			})
		}

		return baseline
	}
}

var DropdownIndicator$1 = function DropdownIndicator(props) {
	var _props$selectProps4 = props.selectProps,
		systemTheme = _props$selectProps4.systemTheme,
		size = _props$selectProps4.size

	var innerProps = props.innerProps,
		rest = objectWithoutProperties(props, ['innerProps'])

	var withPadding = objectSpread({}, innerProps, {
		style: {
			paddingRight: 16
		}
	})

	return createElement(
		components$1.DropdownIndicator,
		_extends_1({}, rest, {
			innerProps: withPadding
		}),
		createElement(Icon$1, {
			name: 'arrow_drop_down',
			size: 0,
			color: systemTheme.colors.black
		})
	)
} // MenuList - выпадающее меню, открывается при клике на селект.
// Подход говно, надо бы рефакторнуть.
// #TODO - refactor this stuff.

var scrollStyles = function scrollStyles(_ref) {
	var theme = _ref.theme
	return css$3(
		_templateObject$k(),
		theme.colors.scrollbar,
		theme.colors.scrollbar
	)
}

var StyledList = styled(FixedSizeList)(_templateObject2$b(), scrollStyles)

var MenuList$1 = function MenuList(optionHeight) {
	var _temp

	return (
		/** Класс, чтобы ArrowUp/ArrowDown скроллили List */
		(_temp =
			/*#__PURE__*/
			(function(_React$Component) {
				inherits(MenuList, _React$Component)

				function MenuList() {
					var _getPrototypeOf2

					var _this

					classCallCheck(this, MenuList)

					for (
						var _len = arguments.length,
							args = new Array(_len),
							_key = 0;
						_key < _len;
						_key++
					) {
						args[_key] = arguments[_key]
					}

					_this = possibleConstructorReturn(
						this,
						(_getPrototypeOf2 = getPrototypeOf(
							MenuList
						)).call.apply(_getPrototypeOf2, [this].concat(args))
					)

					defineProperty(assertThisInitialized(_this), 'state', {
						currentIndex: null
					})

					defineProperty(
						assertThisInitialized(_this),
						'list',
						createRef()
					)

					return _this
				}

				createClass(
					MenuList,
					[
						{
							key: 'componentDidUpdate',
							value: function componentDidUpdate() {
								var currentIndex = this.state.currentIndex
								currentIndex &&
									this.list.current.scrollToItem(currentIndex)
							}
						},
						{
							key: 'render',
							value: function render() {
								var _this$props = this.props,
									options = _this$props.options,
									children = _this$props.children,
									maxHeight = _this$props.maxHeight,
									getValue = _this$props.getValue

								var _getValue = getValue(),
									_getValue2 = slicedToArray(_getValue, 1),
									value = _getValue2[0]

								var initialOffset =
									options.indexOf(value) * optionHeight

								if (!children.length) {
									/* No option message */
									return createElement(
										Box$1,
										null,
										children,
										'1'
									)
								}

								return createElement(
									StyledList,
									{
										ref: this.list,
										height: maxHeight,
										itemCount: children.length,
										itemSize: optionHeight,
										initialScrollOffset: initialOffset
									},
									function(_ref2) {
										var index = _ref2.index,
											style = _ref2.style
										return createElement(
											'div',
											{
												style: style
											},
											children[index]
										)
									}
								)
							}
						}
					],
					[
						{
							key: 'getDerivedStateFromProps',
							value: function getDerivedStateFromProps(_ref3) {
								var children = _ref3.children

								var _children = Array.isArray(children)
									? children
									: [children]

								var currentIndex = Math.max(
									_children.findIndex(function(_ref4) {
										var isFocused = _ref4.props.isFocused
										return isFocused
									}),
									0
								)
								return {
									currentIndex: currentIndex
								}
							}
						}
					]
				)

				return MenuList
			})(Component)),
		_temp
	)
}
/**
 * Используется для выбора значения из списка.
 */

var Select$1 =
	/*#__PURE__*/
	(function(_React$Component2) {
		inherits(Select, _React$Component2)

		function Select() {
			var _getPrototypeOf3

			var _this2

			classCallCheck(this, Select)

			for (
				var _len2 = arguments.length,
					args = new Array(_len2),
					_key2 = 0;
				_key2 < _len2;
				_key2++
			) {
				args[_key2] = arguments[_key2]
			}

			_this2 = possibleConstructorReturn(
				this,
				(_getPrototypeOf3 = getPrototypeOf(Select)).call.apply(
					_getPrototypeOf3,
					[this].concat(args)
				)
			)

			defineProperty(
				assertThisInitialized(_this2),
				'withSystemTheme',
				function(size, systemTheme) {
					return function(theme) {
						var controlHeight = 0 // #TODO Probably will break in combobox + size===small.
						// https://github.com/JedWatson/react-select/issues/1322

						switch (size) {
							case 'small':
								controlHeight = 32
								break

							case 'large':
								controlHeight = 48
								break

							default:
								controlHeight = 40
						}

						return objectSpread({}, theme, {
							borderRadius: systemTheme.radii[1],
							// can override colors with systemTheme here later?
							colors: theme.colors,
							spacing: {
								controlHeight: controlHeight,
								baseUnit: size === 'small' ? 2 : 4,
								menuGutter: size === 'small' ? 4 : 8
							}
						})
					}
				}
			)

			return _this2
		}

		createClass(Select, [
			{
				key: 'render',
				value: function render() {
					var _this3 = this

					var _this$props2 = this.props,
						optionHeight = _this$props2.optionHeight,
						size = _this$props2.size,
						async = _this$props2.async,
						virtualized = _this$props2.virtualized

					var selectProps = objectSpread(
						{
							styles: customStyles,
							components: {
								DropdownIndicator: DropdownIndicator$1,
								MenuList: virtualized
									? MenuList$1(optionHeight || OPTION_HEIGHT)
									: components$1.MenuList
							}
						},
						this.props
					)

					return createElement(ThemeConsumer, null, function(
						systemTheme
					) {
						return async
							? createElement(
									AsyncRSelect,
									_extends_1({}, selectProps, {
										systemTheme: systemTheme,
										theme: _this3.withSystemTheme(
											size,
											systemTheme
										)
									})
							  )
							: createElement(
									index$1$1,
									_extends_1({}, selectProps, {
										systemTheme: systemTheme,
										theme: _this3.withSystemTheme(
											size,
											systemTheme
										)
									})
							  )
					})
				}
			}
		])

		return Select
	})(Component)

Select$1.displayName = 'Select'
Select$1.defaultProps = {
	loadingMessage: function loadingMessage() {
		return 'Загрузка...'
	},
	noOptionsMessage: function noOptionsMessage() {
		return 'Нет данных.'
	},
	placeholder: 'Выбрать'
}
Select$1.propTypes = {
	/** Размер */
	size: propTypes.oneOf(['small', 'medium', 'large']),

	/** Можно ли выбирать несколько значений */
	isMulti: propTypes.bool,

	/** Доступен ли поиск. */
	isSearchable: propTypes.bool,

	/** Находится ли селект в состоянии загрузки */
	isLoading: propTypes.bool,

	/** Можно ли сбросить значение по кнопке */
	isClearable: propTypes.bool,
	value: propTypes.oneOfType([
		propTypes.object,
		propTypes.arrayOf(propTypes.object)
	]),

	/** Текст, который выводится при загрузке */
	loadingMessage: propTypes.func,

	/** Текст, который выводится при отсутствии опция для выбора. */
	noOptionsMessage: propTypes.func,

	/** Содержимое селекта по умолчанию. */
	placeholder: propTypes.string
	/** @component */
}

var div = null
var prefixes$1 = ['Webkit', 'Moz', 'O', 'ms']

var prefixStyle = function prefixStyle(prop) {
	// re-use a dummy div
	if (!div) {
		div = document.createElement('div')
	}

	var style = div.style

	// prop exists without prefix
	if (prop in style) {
		return prop
	}

	// borderRadius -> BorderRadius
	var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)

	// find the vendor-prefixed prop
	for (var i = prefixes$1.length; i >= 0; i--) {
		var name = prefixes$1[i] + titleCase
		// e.g. WebkitBorderRadius or webkitBorderRadius
		if (name in style) {
			return name
		}
	}

	return false
}

/**
 * Export.
 */

var toNoCase_1 = toNoCase

/**
 * Test whether a string is camel-case.
 */

var hasSpace = /\s/
var hasSeparator = /(_|-|\.|:)/
var hasCamel = /([a-z][A-Z]|[A-Z][a-z])/

/**
 * Remove any starting case from a `string`, like camel or snake, but keep
 * spaces and punctuation that may be important otherwise.
 *
 * @param {String} string
 * @return {String}
 */

function toNoCase(string) {
	if (hasSpace.test(string)) return string.toLowerCase()
	if (hasSeparator.test(string))
		return (unseparate(string) || string).toLowerCase()
	if (hasCamel.test(string)) return uncamelize(string).toLowerCase()
	return string.toLowerCase()
}

/**
 * Separator splitter.
 */

var separatorSplitter = /[\W_]+(.|$)/g

/**
 * Un-separate a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function unseparate(string) {
	return string.replace(separatorSplitter, function(m, next) {
		return next ? ' ' + next : ''
	})
}

/**
 * Camelcase splitter.
 */

var camelSplitter = /(.)([A-Z]+)/g

/**
 * Un-camelcase a `string`.
 *
 * @param {String} string
 * @return {String}
 */

function uncamelize(string) {
	return string.replace(camelSplitter, function(m, previous, uppers) {
		return (
			previous +
			' ' +
			uppers
				.toLowerCase()
				.split('')
				.join(' ')
		)
	})
}

/**
 * Export.
 */

var toSpaceCase_1 = toSpaceCase

/**
 * Convert a `string` to space case.
 *
 * @param {String} string
 * @return {String}
 */

function toSpaceCase(string) {
	return toNoCase_1(string)
		.replace(/[\W_]+(.|$)/g, function(matches, match) {
			return match ? ' ' + match : ''
		})
		.trim()
}

/**
 * Export.
 */

var toCamelCase_1 = toCamelCase

/**
 * Convert a `string` to camel case.
 *
 * @param {String} string
 * @return {String}
 */

function toCamelCase(string) {
	return toSpaceCase_1(string).replace(/\s(\w)/g, function(matches, letter) {
		return letter.toUpperCase()
	})
}

/* The following list is defined in React's core */
var IS_UNITLESS = {
	animationIterationCount: true,
	boxFlex: true,
	boxFlexGroup: true,
	boxOrdinalGroup: true,
	columnCount: true,
	flex: true,
	flexGrow: true,
	flexPositive: true,
	flexShrink: true,
	flexNegative: true,
	flexOrder: true,
	gridRow: true,
	gridColumn: true,
	fontWeight: true,
	lineClamp: true,
	lineHeight: true,
	opacity: true,
	order: true,
	orphans: true,
	tabSize: true,
	widows: true,
	zIndex: true,
	zoom: true,

	// SVG-related properties
	fillOpacity: true,
	stopOpacity: true,
	strokeDashoffset: true,
	strokeOpacity: true,
	strokeWidth: true
}

var addPxToStyle = function(name, value) {
	if (typeof value === 'number' && !IS_UNITLESS[name]) {
		return value + 'px'
	} else {
		return value
	}
}

var cache = {float: 'cssFloat'}

function style$1(element, property, value) {
	var camel = cache[property]
	if (typeof camel === 'undefined') {
		camel = detect(property)
	}

	// may be false if CSS prop is unsupported
	if (camel) {
		if (value === undefined) {
			return element.style[camel]
		}

		element.style[camel] = addPxToStyle(camel, value)
	}
}

function each$2(element, properties) {
	for (var k in properties) {
		if (properties.hasOwnProperty(k)) {
			style$1(element, k, properties[k])
		}
	}
}

function detect(cssProp) {
	var camel = toCamelCase_1(cssProp)
	var result = prefixStyle(camel)
	cache[camel] = cache[cssProp] = cache[result] = result
	return result
}

function set$1() {
	if (arguments.length === 2) {
		if (typeof arguments[1] === 'string') {
			arguments[0].style.cssText = arguments[1]
		} else {
			each$2(arguments[0], arguments[1])
		}
	} else {
		style$1(arguments[0], arguments[1], arguments[2])
	}
}

var domCss = set$1
var set_1$1 = set$1

var get$1 = function(element, properties) {
	if (Array.isArray(properties)) {
		return properties.reduce(function(obj, prop) {
			obj[prop] = style$1(element, prop || '')
			return obj
		}, {})
	} else {
		return style$1(element, properties || '')
	}
}
domCss.set = set_1$1
domCss.get = get$1

var isString_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = isString
	function isString(maybe) {
		return typeof maybe === 'string'
	}
})

unwrapExports(isString_1)

var getScrollbarWidth_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = getScrollbarWidth

	var _domCss2 = _interopRequireDefault(domCss)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var scrollbarWidth = false

	function getScrollbarWidth() {
		if (scrollbarWidth !== false) return scrollbarWidth
		/* istanbul ignore else */
		if (typeof document !== 'undefined') {
			var div = document.createElement('div')
			;(0, _domCss2['default'])(div, {
				width: 100,
				height: 100,
				position: 'absolute',
				top: -9999,
				overflow: 'scroll',
				MsOverflowStyle: 'scrollbar'
			})
			document.body.appendChild(div)
			scrollbarWidth = div.offsetWidth - div.clientWidth
			document.body.removeChild(div)
		} else {
			scrollbarWidth = 0
		}
		return scrollbarWidth || 0
	}
})

unwrapExports(getScrollbarWidth_1)

var returnFalse_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = returnFalse
	function returnFalse() {
		return false
	}
})

unwrapExports(returnFalse_1)

var getInnerWidth_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = getInnerWidth
	function getInnerWidth(el) {
		var clientWidth = el.clientWidth

		var _getComputedStyle = getComputedStyle(el),
			paddingLeft = _getComputedStyle.paddingLeft,
			paddingRight = _getComputedStyle.paddingRight

		return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight)
	}
})

unwrapExports(getInnerWidth_1)

var getInnerHeight_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports['default'] = getInnerHeight
	function getInnerHeight(el) {
		var clientHeight = el.clientHeight

		var _getComputedStyle = getComputedStyle(el),
			paddingTop = _getComputedStyle.paddingTop,
			paddingBottom = _getComputedStyle.paddingBottom

		return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom)
	}
})

unwrapExports(getInnerHeight_1)

var styles$1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	var containerStyleDefault = (exports.containerStyleDefault = {
		position: 'relative',
		overflow: 'hidden',
		width: '100%',
		height: '100%'
	})

	// Overrides containerStyleDefault properties
	var containerStyleAutoHeight = (exports.containerStyleAutoHeight = {
		height: 'auto'
	})

	var viewStyleDefault = (exports.viewStyleDefault = {
		position: 'absolute',
		top: 0,
		left: 0,
		right: 0,
		bottom: 0,
		overflow: 'scroll',
		WebkitOverflowScrolling: 'touch'
	})

	// Overrides viewStyleDefault properties
	var viewStyleAutoHeight = (exports.viewStyleAutoHeight = {
		position: 'relative',
		top: undefined,
		left: undefined,
		right: undefined,
		bottom: undefined
	})

	var viewStyleUniversalInitial = (exports.viewStyleUniversalInitial = {
		overflow: 'hidden',
		marginRight: 0,
		marginBottom: 0
	})

	var trackHorizontalStyleDefault = (exports.trackHorizontalStyleDefault = {
		position: 'absolute',
		height: 6
	})

	var trackVerticalStyleDefault = (exports.trackVerticalStyleDefault = {
		position: 'absolute',
		width: 6
	})

	var thumbHorizontalStyleDefault = (exports.thumbHorizontalStyleDefault = {
		position: 'relative',
		display: 'block',
		height: '100%'
	})

	var thumbVerticalStyleDefault = (exports.thumbVerticalStyleDefault = {
		position: 'relative',
		display: 'block',
		width: '100%'
	})

	var disableSelectStyle = (exports.disableSelectStyle = {
		userSelect: 'none'
	})

	var disableSelectStyleReset = (exports.disableSelectStyleReset = {
		userSelect: ''
	})
})

unwrapExports(styles$1)
var styles_1$1 = styles$1.containerStyleDefault
var styles_2$1 = styles$1.containerStyleAutoHeight
var styles_3 = styles$1.viewStyleDefault
var styles_4 = styles$1.viewStyleAutoHeight
var styles_5 = styles$1.viewStyleUniversalInitial
var styles_6 = styles$1.trackHorizontalStyleDefault
var styles_7 = styles$1.trackVerticalStyleDefault
var styles_8 = styles$1.thumbHorizontalStyleDefault
var styles_9 = styles$1.thumbVerticalStyleDefault
var styles_10 = styles$1.disableSelectStyle
var styles_11 = styles$1.disableSelectStyleReset

var defaultRenderElements = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	exports.renderViewDefault = renderViewDefault
	exports.renderTrackHorizontalDefault = renderTrackHorizontalDefault
	exports.renderTrackVerticalDefault = renderTrackVerticalDefault
	exports.renderThumbHorizontalDefault = renderThumbHorizontalDefault
	exports.renderThumbVerticalDefault = renderThumbVerticalDefault

	var _react2 = _interopRequireDefault(React__default)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	/* eslint-disable react/prop-types */

	function renderViewDefault(props) {
		return _react2['default'].createElement('div', props)
	}

	function renderTrackHorizontalDefault(_ref) {
		var style = _ref.style,
			props = _objectWithoutProperties(_ref, ['style'])

		var finalStyle = _extends({}, style, {
			right: 2,
			bottom: 2,
			left: 2,
			borderRadius: 3
		})
		return _react2['default'].createElement(
			'div',
			_extends({style: finalStyle}, props)
		)
	}

	function renderTrackVerticalDefault(_ref2) {
		var style = _ref2.style,
			props = _objectWithoutProperties(_ref2, ['style'])

		var finalStyle = _extends({}, style, {
			right: 2,
			bottom: 2,
			top: 2,
			borderRadius: 3
		})
		return _react2['default'].createElement(
			'div',
			_extends({style: finalStyle}, props)
		)
	}

	function renderThumbHorizontalDefault(_ref3) {
		var style = _ref3.style,
			props = _objectWithoutProperties(_ref3, ['style'])

		var finalStyle = _extends({}, style, {
			cursor: 'pointer',
			borderRadius: 'inherit',
			backgroundColor: 'rgba(0,0,0,.2)'
		})
		return _react2['default'].createElement(
			'div',
			_extends({style: finalStyle}, props)
		)
	}

	function renderThumbVerticalDefault(_ref4) {
		var style = _ref4.style,
			props = _objectWithoutProperties(_ref4, ['style'])

		var finalStyle = _extends({}, style, {
			cursor: 'pointer',
			borderRadius: 'inherit',
			backgroundColor: 'rgba(0,0,0,.2)'
		})
		return _react2['default'].createElement(
			'div',
			_extends({style: finalStyle}, props)
		)
	}
})

unwrapExports(defaultRenderElements)
var defaultRenderElements_1 = defaultRenderElements.renderViewDefault
var defaultRenderElements_2 = defaultRenderElements.renderTrackHorizontalDefault
var defaultRenderElements_3 = defaultRenderElements.renderTrackVerticalDefault
var defaultRenderElements_4 = defaultRenderElements.renderThumbHorizontalDefault
var defaultRenderElements_5 = defaultRenderElements.renderThumbVerticalDefault

var Scrollbars_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var _raf3 = _interopRequireDefault(raf_1)

	var _domCss2 = _interopRequireDefault(domCss)

	var _propTypes2 = _interopRequireDefault(propTypes)

	var _isString2 = _interopRequireDefault(isString_1)

	var _getScrollbarWidth2 = _interopRequireDefault(getScrollbarWidth_1)

	var _returnFalse2 = _interopRequireDefault(returnFalse_1)

	var _getInnerWidth2 = _interopRequireDefault(getInnerWidth_1)

	var _getInnerHeight2 = _interopRequireDefault(getInnerHeight_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _objectWithoutProperties(obj, keys) {
		var target = {}
		for (var i in obj) {
			if (keys.indexOf(i) >= 0) continue
			if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
			target[i] = obj[i]
		}
		return target
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var Scrollbars = (function(_Component) {
		_inherits(Scrollbars, _Component)

		function Scrollbars(props) {
			var _ref

			_classCallCheck(this, Scrollbars)

			for (
				var _len = arguments.length,
					rest = Array(_len > 1 ? _len - 1 : 0),
					_key = 1;
				_key < _len;
				_key++
			) {
				rest[_key - 1] = arguments[_key]
			}

			var _this = _possibleConstructorReturn(
				this,
				(_ref =
					Scrollbars.__proto__ ||
					Object.getPrototypeOf(Scrollbars)).call.apply(
					_ref,
					[this, props].concat(rest)
				)
			)

			_this.getScrollLeft = _this.getScrollLeft.bind(_this)
			_this.getScrollTop = _this.getScrollTop.bind(_this)
			_this.getScrollWidth = _this.getScrollWidth.bind(_this)
			_this.getScrollHeight = _this.getScrollHeight.bind(_this)
			_this.getClientWidth = _this.getClientWidth.bind(_this)
			_this.getClientHeight = _this.getClientHeight.bind(_this)
			_this.getValues = _this.getValues.bind(_this)
			_this.getThumbHorizontalWidth = _this.getThumbHorizontalWidth.bind(
				_this
			)
			_this.getThumbVerticalHeight = _this.getThumbVerticalHeight.bind(
				_this
			)
			_this.getScrollLeftForOffset = _this.getScrollLeftForOffset.bind(
				_this
			)
			_this.getScrollTopForOffset = _this.getScrollTopForOffset.bind(
				_this
			)

			_this.scrollLeft = _this.scrollLeft.bind(_this)
			_this.scrollTop = _this.scrollTop.bind(_this)
			_this.scrollToLeft = _this.scrollToLeft.bind(_this)
			_this.scrollToTop = _this.scrollToTop.bind(_this)
			_this.scrollToRight = _this.scrollToRight.bind(_this)
			_this.scrollToBottom = _this.scrollToBottom.bind(_this)

			_this.handleTrackMouseEnter = _this.handleTrackMouseEnter.bind(
				_this
			)
			_this.handleTrackMouseLeave = _this.handleTrackMouseLeave.bind(
				_this
			)
			_this.handleHorizontalTrackMouseDown = _this.handleHorizontalTrackMouseDown.bind(
				_this
			)
			_this.handleVerticalTrackMouseDown = _this.handleVerticalTrackMouseDown.bind(
				_this
			)
			_this.handleHorizontalThumbMouseDown = _this.handleHorizontalThumbMouseDown.bind(
				_this
			)
			_this.handleVerticalThumbMouseDown = _this.handleVerticalThumbMouseDown.bind(
				_this
			)
			_this.handleWindowResize = _this.handleWindowResize.bind(_this)
			_this.handleScroll = _this.handleScroll.bind(_this)
			_this.handleDrag = _this.handleDrag.bind(_this)
			_this.handleDragEnd = _this.handleDragEnd.bind(_this)

			_this.state = {
				didMountUniversal: false
			}
			return _this
		}

		_createClass(Scrollbars, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					this.addListeners()
					this.update()
					this.componentDidMountUniversal()
				}
			},
			{
				key: 'componentDidMountUniversal',
				value: function componentDidMountUniversal() {
					// eslint-disable-line react/sort-comp
					var universal = this.props.universal

					if (!universal) return
					this.setState({didMountUniversal: true})
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate() {
					this.update()
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.removeListeners()
					;(0, raf_1.cancel)(this.requestFrame)
					clearTimeout(this.hideTracksTimeout)
					clearInterval(this.detectScrollingInterval)
				}
			},
			{
				key: 'getScrollLeft',
				value: function getScrollLeft() {
					if (!this.view) return 0
					return this.view.scrollLeft
				}
			},
			{
				key: 'getScrollTop',
				value: function getScrollTop() {
					if (!this.view) return 0
					return this.view.scrollTop
				}
			},
			{
				key: 'getScrollWidth',
				value: function getScrollWidth() {
					if (!this.view) return 0
					return this.view.scrollWidth
				}
			},
			{
				key: 'getScrollHeight',
				value: function getScrollHeight() {
					if (!this.view) return 0
					return this.view.scrollHeight
				}
			},
			{
				key: 'getClientWidth',
				value: function getClientWidth() {
					if (!this.view) return 0
					return this.view.clientWidth
				}
			},
			{
				key: 'getClientHeight',
				value: function getClientHeight() {
					if (!this.view) return 0
					return this.view.clientHeight
				}
			},
			{
				key: 'getValues',
				value: function getValues() {
					var _ref2 = this.view || {},
						_ref2$scrollLeft = _ref2.scrollLeft,
						scrollLeft =
							_ref2$scrollLeft === undefined
								? 0
								: _ref2$scrollLeft,
						_ref2$scrollTop = _ref2.scrollTop,
						scrollTop =
							_ref2$scrollTop === undefined ? 0 : _ref2$scrollTop,
						_ref2$scrollWidth = _ref2.scrollWidth,
						scrollWidth =
							_ref2$scrollWidth === undefined
								? 0
								: _ref2$scrollWidth,
						_ref2$scrollHeight = _ref2.scrollHeight,
						scrollHeight =
							_ref2$scrollHeight === undefined
								? 0
								: _ref2$scrollHeight,
						_ref2$clientWidth = _ref2.clientWidth,
						clientWidth =
							_ref2$clientWidth === undefined
								? 0
								: _ref2$clientWidth,
						_ref2$clientHeight = _ref2.clientHeight,
						clientHeight =
							_ref2$clientHeight === undefined
								? 0
								: _ref2$clientHeight

					return {
						left: scrollLeft / (scrollWidth - clientWidth) || 0,
						top: scrollTop / (scrollHeight - clientHeight) || 0,
						scrollLeft: scrollLeft,
						scrollTop: scrollTop,
						scrollWidth: scrollWidth,
						scrollHeight: scrollHeight,
						clientWidth: clientWidth,
						clientHeight: clientHeight
					}
				}
			},
			{
				key: 'getThumbHorizontalWidth',
				value: function getThumbHorizontalWidth() {
					var _props = this.props,
						thumbSize = _props.thumbSize,
						thumbMinSize = _props.thumbMinSize
					var _view = this.view,
						scrollWidth = _view.scrollWidth,
						clientWidth = _view.clientWidth

					var trackWidth = (0, _getInnerWidth2['default'])(
						this.trackHorizontal
					)
					var width = Math.ceil(
						(clientWidth / scrollWidth) * trackWidth
					)
					if (trackWidth === width) return 0
					if (thumbSize) return thumbSize
					return Math.max(width, thumbMinSize)
				}
			},
			{
				key: 'getThumbVerticalHeight',
				value: function getThumbVerticalHeight() {
					var _props2 = this.props,
						thumbSize = _props2.thumbSize,
						thumbMinSize = _props2.thumbMinSize
					var _view2 = this.view,
						scrollHeight = _view2.scrollHeight,
						clientHeight = _view2.clientHeight

					var trackHeight = (0, _getInnerHeight2['default'])(
						this.trackVertical
					)
					var height = Math.ceil(
						(clientHeight / scrollHeight) * trackHeight
					)
					if (trackHeight === height) return 0
					if (thumbSize) return thumbSize
					return Math.max(height, thumbMinSize)
				}
			},
			{
				key: 'getScrollLeftForOffset',
				value: function getScrollLeftForOffset(offset) {
					var _view3 = this.view,
						scrollWidth = _view3.scrollWidth,
						clientWidth = _view3.clientWidth

					var trackWidth = (0, _getInnerWidth2['default'])(
						this.trackHorizontal
					)
					var thumbWidth = this.getThumbHorizontalWidth()
					return (
						(offset / (trackWidth - thumbWidth)) *
						(scrollWidth - clientWidth)
					)
				}
			},
			{
				key: 'getScrollTopForOffset',
				value: function getScrollTopForOffset(offset) {
					var _view4 = this.view,
						scrollHeight = _view4.scrollHeight,
						clientHeight = _view4.clientHeight

					var trackHeight = (0, _getInnerHeight2['default'])(
						this.trackVertical
					)
					var thumbHeight = this.getThumbVerticalHeight()
					return (
						(offset / (trackHeight - thumbHeight)) *
						(scrollHeight - clientHeight)
					)
				}
			},
			{
				key: 'scrollLeft',
				value: function scrollLeft() {
					var left =
						arguments.length > 0 && arguments[0] !== undefined
							? arguments[0]
							: 0

					if (!this.view) return
					this.view.scrollLeft = left
				}
			},
			{
				key: 'scrollTop',
				value: function scrollTop() {
					var top =
						arguments.length > 0 && arguments[0] !== undefined
							? arguments[0]
							: 0

					if (!this.view) return
					this.view.scrollTop = top
				}
			},
			{
				key: 'scrollToLeft',
				value: function scrollToLeft() {
					if (!this.view) return
					this.view.scrollLeft = 0
				}
			},
			{
				key: 'scrollToTop',
				value: function scrollToTop() {
					if (!this.view) return
					this.view.scrollTop = 0
				}
			},
			{
				key: 'scrollToRight',
				value: function scrollToRight() {
					if (!this.view) return
					this.view.scrollLeft = this.view.scrollWidth
				}
			},
			{
				key: 'scrollToBottom',
				value: function scrollToBottom() {
					if (!this.view) return
					this.view.scrollTop = this.view.scrollHeight
				}
			},
			{
				key: 'addListeners',
				value: function addListeners() {
					/* istanbul ignore if */
					if (typeof document === 'undefined' || !this.view) return
					var view = this.view,
						trackHorizontal = this.trackHorizontal,
						trackVertical = this.trackVertical,
						thumbHorizontal = this.thumbHorizontal,
						thumbVertical = this.thumbVertical

					view.addEventListener('scroll', this.handleScroll)
					if (!(0, _getScrollbarWidth2['default'])()) return
					trackHorizontal.addEventListener(
						'mouseenter',
						this.handleTrackMouseEnter
					)
					trackHorizontal.addEventListener(
						'mouseleave',
						this.handleTrackMouseLeave
					)
					trackHorizontal.addEventListener(
						'mousedown',
						this.handleHorizontalTrackMouseDown
					)
					trackVertical.addEventListener(
						'mouseenter',
						this.handleTrackMouseEnter
					)
					trackVertical.addEventListener(
						'mouseleave',
						this.handleTrackMouseLeave
					)
					trackVertical.addEventListener(
						'mousedown',
						this.handleVerticalTrackMouseDown
					)
					thumbHorizontal.addEventListener(
						'mousedown',
						this.handleHorizontalThumbMouseDown
					)
					thumbVertical.addEventListener(
						'mousedown',
						this.handleVerticalThumbMouseDown
					)
					window.addEventListener('resize', this.handleWindowResize)
				}
			},
			{
				key: 'removeListeners',
				value: function removeListeners() {
					/* istanbul ignore if */
					if (typeof document === 'undefined' || !this.view) return
					var view = this.view,
						trackHorizontal = this.trackHorizontal,
						trackVertical = this.trackVertical,
						thumbHorizontal = this.thumbHorizontal,
						thumbVertical = this.thumbVertical

					view.removeEventListener('scroll', this.handleScroll)
					if (!(0, _getScrollbarWidth2['default'])()) return
					trackHorizontal.removeEventListener(
						'mouseenter',
						this.handleTrackMouseEnter
					)
					trackHorizontal.removeEventListener(
						'mouseleave',
						this.handleTrackMouseLeave
					)
					trackHorizontal.removeEventListener(
						'mousedown',
						this.handleHorizontalTrackMouseDown
					)
					trackVertical.removeEventListener(
						'mouseenter',
						this.handleTrackMouseEnter
					)
					trackVertical.removeEventListener(
						'mouseleave',
						this.handleTrackMouseLeave
					)
					trackVertical.removeEventListener(
						'mousedown',
						this.handleVerticalTrackMouseDown
					)
					thumbHorizontal.removeEventListener(
						'mousedown',
						this.handleHorizontalThumbMouseDown
					)
					thumbVertical.removeEventListener(
						'mousedown',
						this.handleVerticalThumbMouseDown
					)
					window.removeEventListener(
						'resize',
						this.handleWindowResize
					)
					// Possibly setup by `handleDragStart`
					this.teardownDragging()
				}
			},
			{
				key: 'handleScroll',
				value: function handleScroll(event) {
					var _this2 = this

					var _props3 = this.props,
						onScroll = _props3.onScroll,
						onScrollFrame = _props3.onScrollFrame

					if (onScroll) onScroll(event)
					this.update(function(values) {
						var scrollLeft = values.scrollLeft,
							scrollTop = values.scrollTop

						_this2.viewScrollLeft = scrollLeft
						_this2.viewScrollTop = scrollTop
						if (onScrollFrame) onScrollFrame(values)
					})
					this.detectScrolling()
				}
			},
			{
				key: 'handleScrollStart',
				value: function handleScrollStart() {
					var onScrollStart = this.props.onScrollStart

					if (onScrollStart) onScrollStart()
					this.handleScrollStartAutoHide()
				}
			},
			{
				key: 'handleScrollStartAutoHide',
				value: function handleScrollStartAutoHide() {
					var autoHide = this.props.autoHide

					if (!autoHide) return
					this.showTracks()
				}
			},
			{
				key: 'handleScrollStop',
				value: function handleScrollStop() {
					var onScrollStop = this.props.onScrollStop

					if (onScrollStop) onScrollStop()
					this.handleScrollStopAutoHide()
				}
			},
			{
				key: 'handleScrollStopAutoHide',
				value: function handleScrollStopAutoHide() {
					var autoHide = this.props.autoHide

					if (!autoHide) return
					this.hideTracks()
				}
			},
			{
				key: 'handleWindowResize',
				value: function handleWindowResize() {
					this.update()
				}
			},
			{
				key: 'handleHorizontalTrackMouseDown',
				value: function handleHorizontalTrackMouseDown(event) {
					event.preventDefault()
					var target = event.target,
						clientX = event.clientX

					var _target$getBoundingCl = target.getBoundingClientRect(),
						targetLeft = _target$getBoundingCl.left

					var thumbWidth = this.getThumbHorizontalWidth()
					var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2
					this.view.scrollLeft = this.getScrollLeftForOffset(offset)
				}
			},
			{
				key: 'handleVerticalTrackMouseDown',
				value: function handleVerticalTrackMouseDown(event) {
					event.preventDefault()
					var target = event.target,
						clientY = event.clientY

					var _target$getBoundingCl2 = target.getBoundingClientRect(),
						targetTop = _target$getBoundingCl2.top

					var thumbHeight = this.getThumbVerticalHeight()
					var offset = Math.abs(targetTop - clientY) - thumbHeight / 2
					this.view.scrollTop = this.getScrollTopForOffset(offset)
				}
			},
			{
				key: 'handleHorizontalThumbMouseDown',
				value: function handleHorizontalThumbMouseDown(event) {
					event.preventDefault()
					this.handleDragStart(event)
					var target = event.target,
						clientX = event.clientX
					var offsetWidth = target.offsetWidth

					var _target$getBoundingCl3 = target.getBoundingClientRect(),
						left = _target$getBoundingCl3.left

					this.prevPageX = offsetWidth - (clientX - left)
				}
			},
			{
				key: 'handleVerticalThumbMouseDown',
				value: function handleVerticalThumbMouseDown(event) {
					event.preventDefault()
					this.handleDragStart(event)
					var target = event.target,
						clientY = event.clientY
					var offsetHeight = target.offsetHeight

					var _target$getBoundingCl4 = target.getBoundingClientRect(),
						top = _target$getBoundingCl4.top

					this.prevPageY = offsetHeight - (clientY - top)
				}
			},
			{
				key: 'setupDragging',
				value: function setupDragging() {
					;(0, _domCss2['default'])(
						document.body,
						styles$1.disableSelectStyle
					)
					document.addEventListener('mousemove', this.handleDrag)
					document.addEventListener('mouseup', this.handleDragEnd)
					document.onselectstart = _returnFalse2['default']
				}
			},
			{
				key: 'teardownDragging',
				value: function teardownDragging() {
					;(0, _domCss2['default'])(
						document.body,
						styles$1.disableSelectStyleReset
					)
					document.removeEventListener('mousemove', this.handleDrag)
					document.removeEventListener('mouseup', this.handleDragEnd)
					document.onselectstart = undefined
				}
			},
			{
				key: 'handleDragStart',
				value: function handleDragStart(event) {
					this.dragging = true
					event.stopImmediatePropagation()
					this.setupDragging()
				}
			},
			{
				key: 'handleDrag',
				value: function handleDrag(event) {
					if (this.prevPageX) {
						var clientX = event.clientX

						var _trackHorizontal$getB = this.trackHorizontal.getBoundingClientRect(),
							trackLeft = _trackHorizontal$getB.left

						var thumbWidth = this.getThumbHorizontalWidth()
						var clickPosition = thumbWidth - this.prevPageX
						var offset = -trackLeft + clientX - clickPosition
						this.view.scrollLeft = this.getScrollLeftForOffset(
							offset
						)
					}
					if (this.prevPageY) {
						var clientY = event.clientY

						var _trackVertical$getBou = this.trackVertical.getBoundingClientRect(),
							trackTop = _trackVertical$getBou.top

						var thumbHeight = this.getThumbVerticalHeight()
						var _clickPosition = thumbHeight - this.prevPageY
						var _offset = -trackTop + clientY - _clickPosition
						this.view.scrollTop = this.getScrollTopForOffset(
							_offset
						)
					}
					return false
				}
			},
			{
				key: 'handleDragEnd',
				value: function handleDragEnd() {
					this.dragging = false
					this.prevPageX = this.prevPageY = 0
					this.teardownDragging()
					this.handleDragEndAutoHide()
				}
			},
			{
				key: 'handleDragEndAutoHide',
				value: function handleDragEndAutoHide() {
					var autoHide = this.props.autoHide

					if (!autoHide) return
					this.hideTracks()
				}
			},
			{
				key: 'handleTrackMouseEnter',
				value: function handleTrackMouseEnter() {
					this.trackMouseOver = true
					this.handleTrackMouseEnterAutoHide()
				}
			},
			{
				key: 'handleTrackMouseEnterAutoHide',
				value: function handleTrackMouseEnterAutoHide() {
					var autoHide = this.props.autoHide

					if (!autoHide) return
					this.showTracks()
				}
			},
			{
				key: 'handleTrackMouseLeave',
				value: function handleTrackMouseLeave() {
					this.trackMouseOver = false
					this.handleTrackMouseLeaveAutoHide()
				}
			},
			{
				key: 'handleTrackMouseLeaveAutoHide',
				value: function handleTrackMouseLeaveAutoHide() {
					var autoHide = this.props.autoHide

					if (!autoHide) return
					this.hideTracks()
				}
			},
			{
				key: 'showTracks',
				value: function showTracks() {
					clearTimeout(this.hideTracksTimeout)
					;(0, _domCss2['default'])(this.trackHorizontal, {
						opacity: 1
					})
					;(0, _domCss2['default'])(this.trackVertical, {opacity: 1})
				}
			},
			{
				key: 'hideTracks',
				value: function hideTracks() {
					var _this3 = this

					if (this.dragging) return
					if (this.scrolling) return
					if (this.trackMouseOver) return
					var autoHideTimeout = this.props.autoHideTimeout

					clearTimeout(this.hideTracksTimeout)
					this.hideTracksTimeout = setTimeout(function() {
						;(0,
						_domCss2[
							'default'
						])(_this3.trackHorizontal, {opacity: 0})
						;(0,
						_domCss2['default'])(_this3.trackVertical, {opacity: 0})
					}, autoHideTimeout)
				}
			},
			{
				key: 'detectScrolling',
				value: function detectScrolling() {
					var _this4 = this

					if (this.scrolling) return
					this.scrolling = true
					this.handleScrollStart()
					this.detectScrollingInterval = setInterval(function() {
						if (
							_this4.lastViewScrollLeft ===
								_this4.viewScrollLeft &&
							_this4.lastViewScrollTop === _this4.viewScrollTop
						) {
							clearInterval(_this4.detectScrollingInterval)
							_this4.scrolling = false
							_this4.handleScrollStop()
						}
						_this4.lastViewScrollLeft = _this4.viewScrollLeft
						_this4.lastViewScrollTop = _this4.viewScrollTop
					}, 100)
				}
			},
			{
				key: 'raf',
				value: function raf(callback) {
					var _this5 = this

					if (this.requestFrame)
						_raf3['default'].cancel(this.requestFrame)
					this.requestFrame = (0, _raf3['default'])(function() {
						_this5.requestFrame = undefined
						callback()
					})
				}
			},
			{
				key: 'update',
				value: function update(callback) {
					var _this6 = this

					this.raf(function() {
						return _this6._update(callback)
					})
				}
			},
			{
				key: '_update',
				value: function _update(callback) {
					var _props4 = this.props,
						onUpdate = _props4.onUpdate,
						hideTracksWhenNotNeeded =
							_props4.hideTracksWhenNotNeeded

					var values = this.getValues()
					if ((0, _getScrollbarWidth2['default'])()) {
						var scrollLeft = values.scrollLeft,
							clientWidth = values.clientWidth,
							scrollWidth = values.scrollWidth

						var trackHorizontalWidth = (0,
						_getInnerWidth2['default'])(this.trackHorizontal)
						var thumbHorizontalWidth = this.getThumbHorizontalWidth()
						var thumbHorizontalX =
							(scrollLeft / (scrollWidth - clientWidth)) *
							(trackHorizontalWidth - thumbHorizontalWidth)
						var thumbHorizontalStyle = {
							width: thumbHorizontalWidth,
							transform: 'translateX(' + thumbHorizontalX + 'px)'
						}
						var scrollTop = values.scrollTop,
							clientHeight = values.clientHeight,
							scrollHeight = values.scrollHeight

						var trackVerticalHeight = (0,
						_getInnerHeight2['default'])(this.trackVertical)
						var thumbVerticalHeight = this.getThumbVerticalHeight()
						var thumbVerticalY =
							(scrollTop / (scrollHeight - clientHeight)) *
							(trackVerticalHeight - thumbVerticalHeight)
						var thumbVerticalStyle = {
							height: thumbVerticalHeight,
							transform: 'translateY(' + thumbVerticalY + 'px)'
						}
						if (hideTracksWhenNotNeeded) {
							var trackHorizontalStyle = {
								visibility:
									scrollWidth > clientWidth
										? 'visible'
										: 'hidden'
							}
							var trackVerticalStyle = {
								visibility:
									scrollHeight > clientHeight
										? 'visible'
										: 'hidden'
							}
							;(0, _domCss2['default'])(
								this.trackHorizontal,
								trackHorizontalStyle
							)
							;(0, _domCss2['default'])(
								this.trackVertical,
								trackVerticalStyle
							)
						}
						;(0, _domCss2['default'])(
							this.thumbHorizontal,
							thumbHorizontalStyle
						)
						;(0, _domCss2['default'])(
							this.thumbVertical,
							thumbVerticalStyle
						)
					}
					if (onUpdate) onUpdate(values)
					if (typeof callback !== 'function') return
					callback(values)
				}
			},
			{
				key: 'render',
				value: function render() {
					var _this7 = this

					var scrollbarWidth = (0, _getScrollbarWidth2['default'])()
					/* eslint-disable no-unused-vars */

					var _props5 = this.props,
						onScroll = _props5.onScroll,
						onScrollFrame = _props5.onScrollFrame,
						onScrollStart = _props5.onScrollStart,
						onScrollStop = _props5.onScrollStop,
						onUpdate = _props5.onUpdate,
						renderView = _props5.renderView,
						renderTrackHorizontal = _props5.renderTrackHorizontal,
						renderTrackVertical = _props5.renderTrackVertical,
						renderThumbHorizontal = _props5.renderThumbHorizontal,
						renderThumbVertical = _props5.renderThumbVertical,
						tagName = _props5.tagName,
						hideTracksWhenNotNeeded =
							_props5.hideTracksWhenNotNeeded,
						autoHide = _props5.autoHide,
						autoHideTimeout = _props5.autoHideTimeout,
						autoHideDuration = _props5.autoHideDuration,
						thumbSize = _props5.thumbSize,
						thumbMinSize = _props5.thumbMinSize,
						universal = _props5.universal,
						autoHeight = _props5.autoHeight,
						autoHeightMin = _props5.autoHeightMin,
						autoHeightMax = _props5.autoHeightMax,
						style = _props5.style,
						children = _props5.children,
						props = _objectWithoutProperties(_props5, [
							'onScroll',
							'onScrollFrame',
							'onScrollStart',
							'onScrollStop',
							'onUpdate',
							'renderView',
							'renderTrackHorizontal',
							'renderTrackVertical',
							'renderThumbHorizontal',
							'renderThumbVertical',
							'tagName',
							'hideTracksWhenNotNeeded',
							'autoHide',
							'autoHideTimeout',
							'autoHideDuration',
							'thumbSize',
							'thumbMinSize',
							'universal',
							'autoHeight',
							'autoHeightMin',
							'autoHeightMax',
							'style',
							'children'
						])
					/* eslint-enable no-unused-vars */

					var didMountUniversal = this.state.didMountUniversal

					var containerStyle = _extends(
						{},
						styles$1.containerStyleDefault,
						autoHeight &&
							_extends({}, styles$1.containerStyleAutoHeight, {
								minHeight: autoHeightMin,
								maxHeight: autoHeightMax
							}),
						style
					)

					var viewStyle = _extends(
						{},
						styles$1.viewStyleDefault,
						{
							// Hide scrollbars by setting a negative margin
							marginRight: scrollbarWidth ? -scrollbarWidth : 0,
							marginBottom: scrollbarWidth ? -scrollbarWidth : 0
						},
						autoHeight &&
							_extends({}, styles$1.viewStyleAutoHeight, {
								// Add scrollbarWidth to autoHeight in order to compensate negative margins
								minHeight: (0, _isString2['default'])(
									autoHeightMin
								)
									? 'calc(' +
									  autoHeightMin +
									  ' + ' +
									  scrollbarWidth +
									  'px)'
									: autoHeightMin + scrollbarWidth,
								maxHeight: (0, _isString2['default'])(
									autoHeightMax
								)
									? 'calc(' +
									  autoHeightMax +
									  ' + ' +
									  scrollbarWidth +
									  'px)'
									: autoHeightMax + scrollbarWidth
							}),
						autoHeight &&
							universal &&
							!didMountUniversal && {
								minHeight: autoHeightMin,
								maxHeight: autoHeightMax
							},
						universal &&
							!didMountUniversal &&
							styles$1.viewStyleUniversalInitial
					)

					var trackAutoHeightStyle = {
						transition: 'opacity ' + autoHideDuration + 'ms',
						opacity: 0
					}

					var trackHorizontalStyle = _extends(
						{},
						styles$1.trackHorizontalStyleDefault,
						autoHide && trackAutoHeightStyle,
						(!scrollbarWidth ||
							(universal && !didMountUniversal)) && {
							display: 'none'
						}
					)

					var trackVerticalStyle = _extends(
						{},
						styles$1.trackVerticalStyleDefault,
						autoHide && trackAutoHeightStyle,
						(!scrollbarWidth ||
							(universal && !didMountUniversal)) && {
							display: 'none'
						}
					)

					return (0, React__default.createElement)(
						tagName,
						_extends({}, props, {
							style: containerStyle,
							ref: function ref(_ref3) {
								_this7.container = _ref3
							}
						}),
						[
							(0, React__default.cloneElement)(
								renderView({style: viewStyle}),
								{
									key: 'view',
									ref: function ref(_ref4) {
										_this7.view = _ref4
									}
								},
								children
							),
							(0, React__default.cloneElement)(
								renderTrackHorizontal({
									style: trackHorizontalStyle
								}),
								{
									key: 'trackHorizontal',
									ref: function ref(_ref5) {
										_this7.trackHorizontal = _ref5
									}
								},
								(0, React__default.cloneElement)(
									renderThumbHorizontal({
										style:
											styles$1.thumbHorizontalStyleDefault
									}),
									{
										ref: function ref(_ref6) {
											_this7.thumbHorizontal = _ref6
										}
									}
								)
							),
							(0, React__default.cloneElement)(
								renderTrackVertical({
									style: trackVerticalStyle
								}),
								{
									key: 'trackVertical',
									ref: function ref(_ref7) {
										_this7.trackVertical = _ref7
									}
								},
								(0, React__default.cloneElement)(
									renderThumbVertical({
										style:
											styles$1.thumbVerticalStyleDefault
									}),
									{
										ref: function ref(_ref8) {
											_this7.thumbVertical = _ref8
										}
									}
								)
							)
						]
					)
				}
			}
		])

		return Scrollbars
	})(React__default.Component)

	exports['default'] = Scrollbars

	Scrollbars.propTypes = {
		onScroll: _propTypes2['default'].func,
		onScrollFrame: _propTypes2['default'].func,
		onScrollStart: _propTypes2['default'].func,
		onScrollStop: _propTypes2['default'].func,
		onUpdate: _propTypes2['default'].func,
		renderView: _propTypes2['default'].func,
		renderTrackHorizontal: _propTypes2['default'].func,
		renderTrackVertical: _propTypes2['default'].func,
		renderThumbHorizontal: _propTypes2['default'].func,
		renderThumbVertical: _propTypes2['default'].func,
		tagName: _propTypes2['default'].string,
		thumbSize: _propTypes2['default'].number,
		thumbMinSize: _propTypes2['default'].number,
		hideTracksWhenNotNeeded: _propTypes2['default'].bool,
		autoHide: _propTypes2['default'].bool,
		autoHideTimeout: _propTypes2['default'].number,
		autoHideDuration: _propTypes2['default'].number,
		autoHeight: _propTypes2['default'].bool,
		autoHeightMin: _propTypes2['default'].oneOfType([
			_propTypes2['default'].number,
			_propTypes2['default'].string
		]),
		autoHeightMax: _propTypes2['default'].oneOfType([
			_propTypes2['default'].number,
			_propTypes2['default'].string
		]),
		universal: _propTypes2['default'].bool,
		style: _propTypes2['default'].object,
		children: _propTypes2['default'].node
	}

	Scrollbars.defaultProps = {
		renderView: defaultRenderElements.renderViewDefault,
		renderTrackHorizontal:
			defaultRenderElements.renderTrackHorizontalDefault,
		renderTrackVertical: defaultRenderElements.renderTrackVerticalDefault,
		renderThumbHorizontal:
			defaultRenderElements.renderThumbHorizontalDefault,
		renderThumbVertical: defaultRenderElements.renderThumbVerticalDefault,
		tagName: 'div',
		thumbMinSize: 30,
		hideTracksWhenNotNeeded: false,
		autoHide: false,
		autoHideTimeout: 1000,
		autoHideDuration: 200,
		autoHeight: false,
		autoHeightMin: 0,
		autoHeightMax: 200,
		universal: false
	}
})

unwrapExports(Scrollbars_1)

var lib$4 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.Scrollbars = undefined

	var _Scrollbars2 = _interopRequireDefault(Scrollbars_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports['default'] = _Scrollbars2['default']
	exports.Scrollbars = _Scrollbars2['default']
})

var ReactCustomScrollbars = unwrapExports(lib$4)
var lib_1$2 = lib$4.Scrollbars

function _templateObject$l() {
	var data = taggedTemplateLiteral(['\n ', '\n ', '\n ', ';\n'])

	_templateObject$l = function _templateObject() {
		return data
	}

	return data
}
var EnhancedScrollbars = styled(ReactCustomScrollbars)(
	_templateObject$l(),
	flex,
	order,
	alignSelf
)
/**
 * Добавляет вертикальный и горизинтальный скроллбар для блока.
 * Обеспечивает единое отоборажение скорллбара во всех баузерах и операционных системах.
 */

function Scrollbars(props) {
	return React__default.createElement(EnhancedScrollbars, props)
}

Scrollbars.propTypes = {
	onScroll: propTypes.func,
	onScrollFrame: propTypes.func,
	onScrollStart: propTypes.func,
	onScrollStop: propTypes.func,
	onUpdate: propTypes.func,
	renderView: propTypes.func,
	renderTrackHorizontal: propTypes.func,
	renderTrackVertical: propTypes.func,
	renderThumbHorizontal: propTypes.func,
	renderThumbVertical: propTypes.func,
	tagName: propTypes.string,
	thumbSize: propTypes.number,
	thumbMinSize: propTypes.number,
	hideTracksWhenNotNeeded: propTypes.bool,
	autoHide: propTypes.bool,
	autoHideTimeout: propTypes.number,
	autoHideDuration: propTypes.number,
	autoHeight: propTypes.bool,
	autoHeightMin: propTypes.oneOfType([propTypes.number, propTypes.string]),
	autoHeightMax: propTypes.oneOfType([propTypes.number, propTypes.string]),
	universal: propTypes.bool,
	style: propTypes.object,
	children: propTypes.node
}
Scrollbars.defaultProps = {
	tagName: 'div',
	thumbMinSize: 30,
	hideTracksWhenNotNeeded: false,
	autoHide: false,
	autoHideTimeout: 1000,
	autoHideDuration: 200,
	autoHeight: false,
	autoHeightMin: 0,
	autoHeightMax: 200,
	universal: false
}
Scrollbars.displayName = 'Scrollbars'

var tabbable_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = findTabbableDescendants
	/*!
	 * Adapted from jQuery UI core
	 *
	 * http://jqueryui.com
	 *
	 * Copyright 2014 jQuery Foundation and other contributors
	 * Released under the MIT license.
	 * http://jquery.org/license
	 *
	 * http://api.jqueryui.com/category/ui-core/
	 */

	var tabbableNode = /input|select|textarea|button|object/

	function hidesContents(element) {
		var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0

		// If the node is empty, this is good enough
		if (zeroSize && !element.innerHTML) return true

		// Otherwise we need to check some styles
		var style = window.getComputedStyle(element)
		return zeroSize
			? style.getPropertyValue('overflow') !== 'visible'
			: style.getPropertyValue('display') == 'none'
	}

	function visible(element) {
		var parentElement = element
		while (parentElement) {
			if (parentElement === document.body) break
			if (hidesContents(parentElement)) return false
			parentElement = parentElement.parentNode
		}
		return true
	}

	function focusable(element, isTabIndexNotNaN) {
		var nodeName = element.nodeName.toLowerCase()
		var res =
			(tabbableNode.test(nodeName) && !element.disabled) ||
			(nodeName === 'a'
				? element.href || isTabIndexNotNaN
				: isTabIndexNotNaN)
		return res && visible(element)
	}

	function tabbable(element) {
		var tabIndex = element.getAttribute('tabindex')
		if (tabIndex === null) tabIndex = undefined
		var isTabIndexNaN = isNaN(tabIndex)
		return (
			(isTabIndexNaN || tabIndex >= 0) &&
			focusable(element, !isTabIndexNaN)
		)
	}

	function findTabbableDescendants(element) {
		return [].slice.call(element.querySelectorAll('*'), 0).filter(tabbable)
	}
	module.exports = exports['default']
})

unwrapExports(tabbable_1)

var focusManager = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.handleBlur = handleBlur
	exports.handleFocus = handleFocus
	exports.markForFocusLater = markForFocusLater
	exports.returnFocus = returnFocus
	exports.popWithoutFocus = popWithoutFocus
	exports.setupScopedFocus = setupScopedFocus
	exports.teardownScopedFocus = teardownScopedFocus

	var _tabbable2 = _interopRequireDefault(tabbable_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var focusLaterElements = []
	var modalElement = null
	var needToFocus = false

	function handleBlur() {
		needToFocus = true
	}

	function handleFocus() {
		if (needToFocus) {
			needToFocus = false
			if (!modalElement) {
				return
			}
			// need to see how jQuery shims document.on('focusin') so we don't need the
			// setTimeout, firefox doesn't support focusin, if it did, we could focus
			// the element outside of a setTimeout. Side-effect of this implementation
			// is that the document.body gets focus, and then we focus our element right
			// after, seems fine.
			setTimeout(function() {
				if (modalElement.contains(document.activeElement)) {
					return
				}
				var el =
					(0, _tabbable2.default)(modalElement)[0] || modalElement
				el.focus()
			}, 0)
		}
	}

	function markForFocusLater() {
		focusLaterElements.push(document.activeElement)
	}

	/* eslint-disable no-console */
	function returnFocus() {
		var toFocus = null
		try {
			if (focusLaterElements.length !== 0) {
				toFocus = focusLaterElements.pop()
				toFocus.focus()
			}
			return
		} catch (e) {
			console.warn(
				[
					'You tried to return focus to',
					toFocus,
					'but it is not in the DOM anymore'
				].join(' ')
			)
		}
	}
	/* eslint-enable no-console */

	function popWithoutFocus() {
		focusLaterElements.length > 0 && focusLaterElements.pop()
	}

	function setupScopedFocus(element) {
		modalElement = element

		if (window.addEventListener) {
			window.addEventListener('blur', handleBlur, false)
			document.addEventListener('focus', handleFocus, true)
		} else {
			window.attachEvent('onBlur', handleBlur)
			document.attachEvent('onFocus', handleFocus)
		}
	}

	function teardownScopedFocus() {
		modalElement = null

		if (window.addEventListener) {
			window.removeEventListener('blur', handleBlur)
			document.removeEventListener('focus', handleFocus)
		} else {
			window.detachEvent('onBlur', handleBlur)
			document.detachEvent('onFocus', handleFocus)
		}
	}
})

unwrapExports(focusManager)
var focusManager_1 = focusManager.handleBlur
var focusManager_2 = focusManager.handleFocus
var focusManager_3 = focusManager.markForFocusLater
var focusManager_4 = focusManager.returnFocus
var focusManager_5 = focusManager.popWithoutFocus
var focusManager_6 = focusManager.setupScopedFocus
var focusManager_7 = focusManager.teardownScopedFocus

var scopeTab_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.default = scopeTab

	var _tabbable2 = _interopRequireDefault(tabbable_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function scopeTab(node, event) {
		var tabbable = (0, _tabbable2.default)(node)

		if (!tabbable.length) {
			// Do nothing, since there are no elements that can receive focus.
			event.preventDefault()
			return
		}

		var shiftKey = event.shiftKey
		var head = tabbable[0]
		var tail = tabbable[tabbable.length - 1]

		// proceed with default browser behavior on tab.
		// Focus on last element on shift + tab.
		if (node === document.activeElement) {
			if (!shiftKey) return
			target = tail
		}

		var target
		if (tail === document.activeElement && !shiftKey) {
			target = head
		}

		if (head === document.activeElement && shiftKey) {
			target = tail
		}

		if (target) {
			event.preventDefault()
			target.focus()
			return
		}

		// Safari radio issue.
		//
		// Safari does not move the focus to the radio button,
		// so we need to force it to really walk through all elements.
		//
		// This is very error prone, since we are trying to guess
		// if it is a safari browser from the first occurence between
		// chrome or safari.
		//
		// The chrome user agent contains the first ocurrence
		// as the 'chrome/version' and later the 'safari/version'.
		var checkSafari = /(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent)
		var isSafariDesktop =
			checkSafari != null &&
			checkSafari[1] != 'Chrome' &&
			/\biPod\b|\biPad\b/g.exec(navigator.userAgent) == null

		// If we are not in safari desktop, let the browser control
		// the focus
		if (!isSafariDesktop) return

		var x = tabbable.indexOf(document.activeElement)

		if (x > -1) {
			x += shiftKey ? -1 : 1
		}

		// If the tabbable element does not exist,
		// focus head/tail based on shiftKey
		if (typeof tabbable[x] === 'undefined') {
			event.preventDefault()
			target = shiftKey ? tail : head
			target.focus()
			return
		}

		event.preventDefault()

		tabbable[x].focus()
	}
	module.exports = exports['default']
})

unwrapExports(scopeTab_1)

var exenv = createCommonjsModule(function(module) {
	/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
	/* global define */

	;(function() {
		var canUseDOM = !!(
			typeof window !== 'undefined' &&
			window.document &&
			window.document.createElement
		)

		var ExecutionEnvironment = {
			canUseDOM: canUseDOM,

			canUseWorkers: typeof Worker !== 'undefined',

			canUseEventListeners:
				canUseDOM && !!(window.addEventListener || window.attachEvent),

			canUseViewport: canUseDOM && !!window.screen
		}

		if (module.exports) {
			module.exports = ExecutionEnvironment
		} else {
			window.ExecutionEnvironment = ExecutionEnvironment
		}
	})()
})

var safeHTMLElement = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.canUseDOM = undefined

	var _exenv2 = _interopRequireDefault(exenv)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var EE = _exenv2.default

	var SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {}

	var canUseDOM = (exports.canUseDOM = EE.canUseDOM)

	exports.default = SafeHTMLElement
})

unwrapExports(safeHTMLElement)
var safeHTMLElement_1 = safeHTMLElement.canUseDOM

var ariaAppHider = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.assertNodeList = assertNodeList
	exports.setElement = setElement
	exports.validateElement = validateElement
	exports.hide = hide
	exports.show = show
	exports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting
	exports.resetForTesting = resetForTesting

	var _warning2 = _interopRequireDefault(warning_1$1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	var globalElement = null

	function assertNodeList(nodeList, selector) {
		if (!nodeList || !nodeList.length) {
			throw new Error(
				'react-modal: No elements were found for selector ' +
					selector +
					'.'
			)
		}
	}

	function setElement(element) {
		var useElement = element
		if (typeof useElement === 'string' && safeHTMLElement.canUseDOM) {
			var el = document.querySelectorAll(useElement)
			assertNodeList(el, useElement)
			useElement = 'length' in el ? el[0] : el
		}
		globalElement = useElement || globalElement
		return globalElement
	}

	function validateElement(appElement) {
		if (!appElement && !globalElement) {
			;(0, _warning2.default)(
				false,
				[
					'react-modal: App element is not defined.',
					'Please use `Modal.setAppElement(el)` or set `appElement={el}`.',
					"This is needed so screen readers don't see main content",
					'when modal is opened. It is not recommended, but you can opt-out',
					'by setting `ariaHideApp={false}`.'
				].join(' ')
			)

			return false
		}

		return true
	}

	function hide(appElement) {
		if (validateElement(appElement)) {
			;(appElement || globalElement).setAttribute('aria-hidden', 'true')
		}
	}

	function show(appElement) {
		if (validateElement(appElement)) {
			;(appElement || globalElement).removeAttribute('aria-hidden')
		}
	}

	function documentNotReadyOrSSRTesting() {
		globalElement = null
	}

	function resetForTesting() {
		globalElement = null
	}
})

unwrapExports(ariaAppHider)
var ariaAppHider_1 = ariaAppHider.assertNodeList
var ariaAppHider_2 = ariaAppHider.setElement
var ariaAppHider_3 = ariaAppHider.validateElement
var ariaAppHider_4 = ariaAppHider.hide
var ariaAppHider_5 = ariaAppHider.show
var ariaAppHider_6 = ariaAppHider.documentNotReadyOrSSRTesting
var ariaAppHider_7 = ariaAppHider.resetForTesting

var classList = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.dumpClassLists = dumpClassLists
	var htmlClassList = {}
	var docBodyClassList = {}

	function dumpClassLists() {
		if (process.env.NODE_ENV !== 'production') {
			var classes = document.getElementsByTagName('html')[0].className
			var buffer = 'Show tracked classes:\n\n'

			buffer += '<html /> (' + classes + '):\n'
			for (var x in htmlClassList) {
				buffer += '  ' + x + ' ' + htmlClassList[x] + '\n'
			}

			classes = document.body.className

			// eslint-disable-next-line max-len
			buffer += '\n\ndoc.body (' + classes + '):\n'
			for (var _x in docBodyClassList) {
				buffer += '  ' + _x + ' ' + docBodyClassList[_x] + '\n'
			}

			buffer += '\n'

			// eslint-disable-next-line no-console
			console.log(buffer)
		}
	}

	/**
	 * Track the number of reference of a class.
	 * @param {object} poll The poll to receive the reference.
	 * @param {string} className The class name.
	 * @return {string}
	 */
	var incrementReference = function incrementReference(poll, className) {
		if (!poll[className]) {
			poll[className] = 0
		}
		poll[className] += 1
		return className
	}

	/**
	 * Drop the reference of a class.
	 * @param {object} poll The poll to receive the reference.
	 * @param {string} className The class name.
	 * @return {string}
	 */
	var decrementReference = function decrementReference(poll, className) {
		if (poll[className]) {
			poll[className] -= 1
		}
		return className
	}

	/**
	 * Track a class and add to the given class list.
	 * @param {Object} classListRef A class list of an element.
	 * @param {Object} poll         The poll to be used.
	 * @param {Array}  classes      The list of classes to be tracked.
	 */
	var trackClass = function trackClass(classListRef, poll, classes) {
		classes.forEach(function(className) {
			incrementReference(poll, className)
			classListRef.add(className)
		})
	}

	/**
	 * Untrack a class and remove from the given class list if the reference
	 * reaches 0.
	 * @param {Object} classListRef A class list of an element.
	 * @param {Object} poll         The poll to be used.
	 * @param {Array}  classes      The list of classes to be untracked.
	 */
	var untrackClass = function untrackClass(classListRef, poll, classes) {
		classes.forEach(function(className) {
			decrementReference(poll, className)
			poll[className] === 0 && classListRef.remove(className)
		})
	}

	/**
	 * Public inferface to add classes to the document.body.
	 * @param {string} bodyClass The class string to be added.
	 *                           It may contain more then one class
	 *                           with ' ' as separator.
	 */
	var add = (exports.add = function add(element, classString) {
		return trackClass(
			element.classList,
			element.nodeName.toLowerCase() == 'html'
				? htmlClassList
				: docBodyClassList,
			classString.split(' ')
		)
	})

	/**
	 * Public inferface to remove classes from the document.body.
	 * @param {string} bodyClass The class string to be added.
	 *                           It may contain more then one class
	 *                           with ' ' as separator.
	 */
	var remove = (exports.remove = function remove(element, classString) {
		return untrackClass(
			element.classList,
			element.nodeName.toLowerCase() == 'html'
				? htmlClassList
				: docBodyClassList,
			classString.split(' ')
		)
	})
})

unwrapExports(classList)
var classList_1 = classList.dumpClassLists
var classList_2 = classList.add
var classList_3 = classList.remove

var ModalPortal_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _typeof =
		typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
			? function(obj) {
					return typeof obj
			  }
			: function(obj) {
					return obj &&
						typeof Symbol === 'function' &&
						obj.constructor === Symbol &&
						obj !== Symbol.prototype
						? 'symbol'
						: typeof obj
			  }

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var _react2 = _interopRequireDefault(React__default)

	var _propTypes2 = _interopRequireDefault(propTypes)

	var focusManager$1 = _interopRequireWildcard(focusManager)

	var _scopeTab2 = _interopRequireDefault(scopeTab_1)

	var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider)

	var classList$1 = _interopRequireWildcard(classList)

	var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	// so that our CSS is statically analyzable
	var CLASS_NAMES = {
		overlay: 'ReactModal__Overlay',
		content: 'ReactModal__Content'
	}

	var TAB_KEY = 9
	var ESC_KEY = 27

	var ariaHiddenInstances = 0

	var ModalPortal = (function(_Component) {
		_inherits(ModalPortal, _Component)

		function ModalPortal(props) {
			_classCallCheck(this, ModalPortal)

			var _this = _possibleConstructorReturn(
				this,
				(
					ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)
				).call(this, props)
			)

			_this.setOverlayRef = function(overlay) {
				_this.overlay = overlay
				_this.props.overlayRef && _this.props.overlayRef(overlay)
			}

			_this.setContentRef = function(content) {
				_this.content = content
				_this.props.contentRef && _this.props.contentRef(content)
			}

			_this.afterClose = function() {
				var _this$props = _this.props,
					appElement = _this$props.appElement,
					ariaHideApp = _this$props.ariaHideApp,
					htmlOpenClassName = _this$props.htmlOpenClassName,
					bodyOpenClassName = _this$props.bodyOpenClassName

				// Remove classes.

				bodyOpenClassName &&
					classList$1.remove(document.body, bodyOpenClassName)

				htmlOpenClassName &&
					classList$1.remove(
						document.getElementsByTagName('html')[0],
						htmlOpenClassName
					)

				// Reset aria-hidden attribute if all modals have been removed
				if (ariaHideApp && ariaHiddenInstances > 0) {
					ariaHiddenInstances -= 1

					if (ariaHiddenInstances === 0) {
						ariaAppHider$1.show(appElement)
					}
				}

				if (_this.props.shouldFocusAfterRender) {
					if (_this.props.shouldReturnFocusAfterClose) {
						focusManager$1.returnFocus()
						focusManager$1.teardownScopedFocus()
					} else {
						focusManager$1.popWithoutFocus()
					}
				}

				if (_this.props.onAfterClose) {
					_this.props.onAfterClose()
				}
			}

			_this.open = function() {
				_this.beforeOpen()
				if (_this.state.afterOpen && _this.state.beforeClose) {
					clearTimeout(_this.closeTimer)
					_this.setState({beforeClose: false})
				} else {
					if (_this.props.shouldFocusAfterRender) {
						focusManager$1.setupScopedFocus(_this.node)
						focusManager$1.markForFocusLater()
					}

					_this.setState({isOpen: true}, function() {
						_this.setState({afterOpen: true})

						if (_this.props.isOpen && _this.props.onAfterOpen) {
							_this.props.onAfterOpen()
						}
					})
				}
			}

			_this.close = function() {
				if (_this.props.closeTimeoutMS > 0) {
					_this.closeWithTimeout()
				} else {
					_this.closeWithoutTimeout()
				}
			}

			_this.focusContent = function() {
				return (
					_this.content &&
					!_this.contentHasFocus() &&
					_this.content.focus()
				)
			}

			_this.closeWithTimeout = function() {
				var closesAt = Date.now() + _this.props.closeTimeoutMS
				_this.setState(
					{beforeClose: true, closesAt: closesAt},
					function() {
						_this.closeTimer = setTimeout(
							_this.closeWithoutTimeout,
							_this.state.closesAt - Date.now()
						)
					}
				)
			}

			_this.closeWithoutTimeout = function() {
				_this.setState(
					{
						beforeClose: false,
						isOpen: false,
						afterOpen: false,
						closesAt: null
					},
					_this.afterClose
				)
			}

			_this.handleKeyDown = function(event) {
				if (event.keyCode === TAB_KEY) {
					;(0, _scopeTab2.default)(_this.content, event)
				}

				if (_this.props.shouldCloseOnEsc && event.keyCode === ESC_KEY) {
					event.stopPropagation()
					_this.requestClose(event)
				}
			}

			_this.handleOverlayOnClick = function(event) {
				if (_this.shouldClose === null) {
					_this.shouldClose = true
				}

				if (
					_this.shouldClose &&
					_this.props.shouldCloseOnOverlayClick
				) {
					if (_this.ownerHandlesClose()) {
						_this.requestClose(event)
					} else {
						_this.focusContent()
					}
				}
				_this.shouldClose = null
			}

			_this.handleContentOnMouseUp = function() {
				_this.shouldClose = false
			}

			_this.handleOverlayOnMouseDown = function(event) {
				if (
					!_this.props.shouldCloseOnOverlayClick &&
					event.target == _this.overlay
				) {
					event.preventDefault()
				}
			}

			_this.handleContentOnClick = function() {
				_this.shouldClose = false
			}

			_this.handleContentOnMouseDown = function() {
				_this.shouldClose = false
			}

			_this.requestClose = function(event) {
				return (
					_this.ownerHandlesClose() &&
					_this.props.onRequestClose(event)
				)
			}

			_this.ownerHandlesClose = function() {
				return _this.props.onRequestClose
			}

			_this.shouldBeClosed = function() {
				return !_this.state.isOpen && !_this.state.beforeClose
			}

			_this.contentHasFocus = function() {
				return (
					document.activeElement === _this.content ||
					_this.content.contains(document.activeElement)
				)
			}

			_this.buildClassName = function(which, additional) {
				var classNames =
					(typeof additional === 'undefined'
						? 'undefined'
						: _typeof(additional)) === 'object'
						? additional
						: {
								base: CLASS_NAMES[which],
								afterOpen: CLASS_NAMES[which] + '--after-open',
								beforeClose:
									CLASS_NAMES[which] + '--before-close'
						  }
				var className = classNames.base
				if (_this.state.afterOpen) {
					className = className + ' ' + classNames.afterOpen
				}
				if (_this.state.beforeClose) {
					className = className + ' ' + classNames.beforeClose
				}
				return typeof additional === 'string' && additional
					? className + ' ' + additional
					: className
			}

			_this.attributesFromObject = function(prefix, items) {
				return Object.keys(items).reduce(function(acc, name) {
					acc[prefix + '-' + name] = items[name]
					return acc
				}, {})
			}

			_this.state = {
				afterOpen: false,
				beforeClose: false
			}

			_this.shouldClose = null
			_this.moveFromContentToOverlay = null
			return _this
		}

		_createClass(ModalPortal, [
			{
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (this.props.isOpen) {
						this.open()
					}
				}
			},
			{
				key: 'componentDidUpdate',
				value: function componentDidUpdate(prevProps, prevState) {
					if (process.env.NODE_ENV !== 'production') {
						if (
							prevProps.bodyOpenClassName !==
							this.props.bodyOpenClassName
						) {
							// eslint-disable-next-line no-console
							console.warn(
								'React-Modal: "bodyOpenClassName" prop has been modified. ' +
									'This may cause unexpected behavior when multiple modals are open.'
							)
						}
						if (
							prevProps.htmlOpenClassName !==
							this.props.htmlOpenClassName
						) {
							// eslint-disable-next-line no-console
							console.warn(
								'React-Modal: "htmlOpenClassName" prop has been modified. ' +
									'This may cause unexpected behavior when multiple modals are open.'
							)
						}
					}

					if (this.props.isOpen && !prevProps.isOpen) {
						this.open()
					} else if (!this.props.isOpen && prevProps.isOpen) {
						this.close()
					}

					// Focus only needs to be set once when the modal is being opened
					if (
						this.props.shouldFocusAfterRender &&
						this.state.isOpen &&
						!prevState.isOpen
					) {
						this.focusContent()
					}
				}
			},
			{
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					this.afterClose()
					clearTimeout(this.closeTimer)
				}
			},
			{
				key: 'beforeOpen',
				value: function beforeOpen() {
					var _props = this.props,
						appElement = _props.appElement,
						ariaHideApp = _props.ariaHideApp,
						htmlOpenClassName = _props.htmlOpenClassName,
						bodyOpenClassName = _props.bodyOpenClassName

					// Add classes.

					bodyOpenClassName &&
						classList$1.add(document.body, bodyOpenClassName)

					htmlOpenClassName &&
						classList$1.add(
							document.getElementsByTagName('html')[0],
							htmlOpenClassName
						)

					if (ariaHideApp) {
						ariaHiddenInstances += 1
						ariaAppHider$1.hide(appElement)
					}
				}

				// Don't steal focus from inner elements
			},
			{
				key: 'render',
				value: function render() {
					var _props2 = this.props,
						className = _props2.className,
						overlayClassName = _props2.overlayClassName,
						defaultStyles = _props2.defaultStyles

					var contentStyles = className ? {} : defaultStyles.content
					var overlayStyles = overlayClassName
						? {}
						: defaultStyles.overlay

					return this.shouldBeClosed()
						? null
						: _react2.default.createElement(
								'div',
								{
									ref: this.setOverlayRef,
									className: this.buildClassName(
										'overlay',
										overlayClassName
									),
									style: _extends(
										{},
										overlayStyles,
										this.props.style.overlay
									),
									onClick: this.handleOverlayOnClick,
									onMouseDown: this.handleOverlayOnMouseDown
								},
								_react2.default.createElement(
									'div',
									_extends(
										{
											ref: this.setContentRef,
											style: _extends(
												{},
												contentStyles,
												this.props.style.content
											),
											className: this.buildClassName(
												'content',
												className
											),
											tabIndex: '-1',
											onKeyDown: this.handleKeyDown,
											onMouseDown: this
												.handleContentOnMouseDown,
											onMouseUp: this
												.handleContentOnMouseUp,
											onClick: this.handleContentOnClick,
											role: this.props.role,
											'aria-label': this.props
												.contentLabel
										},
										this.attributesFromObject(
											'aria',
											this.props.aria || {}
										),
										this.attributesFromObject(
											'data',
											this.props.data || {}
										),
										{
											'data-testid': this.props.testId
										}
									),
									this.props.children
								)
						  )
				}
			}
		])

		return ModalPortal
	})(React__default.Component)

	ModalPortal.defaultProps = {
		style: {
			overlay: {},
			content: {}
		},
		defaultStyles: {}
	}
	ModalPortal.propTypes = {
		isOpen: _propTypes2.default.bool.isRequired,
		defaultStyles: _propTypes2.default.shape({
			content: _propTypes2.default.object,
			overlay: _propTypes2.default.object
		}),
		style: _propTypes2.default.shape({
			content: _propTypes2.default.object,
			overlay: _propTypes2.default.object
		}),
		className: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.object
		]),
		overlayClassName: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.object
		]),
		bodyOpenClassName: _propTypes2.default.string,
		htmlOpenClassName: _propTypes2.default.string,
		ariaHideApp: _propTypes2.default.bool,
		appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
		onAfterOpen: _propTypes2.default.func,
		onAfterClose: _propTypes2.default.func,
		onRequestClose: _propTypes2.default.func,
		closeTimeoutMS: _propTypes2.default.number,
		shouldFocusAfterRender: _propTypes2.default.bool,
		shouldCloseOnOverlayClick: _propTypes2.default.bool,
		shouldReturnFocusAfterClose: _propTypes2.default.bool,
		role: _propTypes2.default.string,
		contentLabel: _propTypes2.default.string,
		aria: _propTypes2.default.object,
		data: _propTypes2.default.object,
		children: _propTypes2.default.node,
		shouldCloseOnEsc: _propTypes2.default.bool,
		overlayRef: _propTypes2.default.func,
		contentRef: _propTypes2.default.func,
		testId: _propTypes2.default.string
	}
	exports.default = ModalPortal
	module.exports = exports['default']
})

unwrapExports(ModalPortal_1)

var Modal_1 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})
	exports.bodyOpenClassName = exports.portalClassName = undefined

	var _extends =
		Object.assign ||
		function(target) {
			for (var i = 1; i < arguments.length; i++) {
				var source = arguments[i]
				for (var key in source) {
					if (Object.prototype.hasOwnProperty.call(source, key)) {
						target[key] = source[key]
					}
				}
			}
			return target
		}

	var _createClass = (function() {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i]
				descriptor.enumerable = descriptor.enumerable || false
				descriptor.configurable = true
				if ('value' in descriptor) descriptor.writable = true
				Object.defineProperty(target, descriptor.key, descriptor)
			}
		}
		return function(Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps)
			if (staticProps) defineProperties(Constructor, staticProps)
			return Constructor
		}
	})()

	var _react2 = _interopRequireDefault(React__default)

	var _reactDom2 = _interopRequireDefault(ReactDOM)

	var _propTypes2 = _interopRequireDefault(propTypes)

	var _ModalPortal2 = _interopRequireDefault(ModalPortal_1)

	var ariaAppHider$1 = _interopRequireWildcard(ariaAppHider)

	var _safeHTMLElement2 = _interopRequireDefault(safeHTMLElement)

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj
		} else {
			var newObj = {}
			if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key))
						newObj[key] = obj[key]
				}
			}
			newObj.default = obj
			return newObj
		}
	}

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError('Cannot call a class as a function')
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError(
				"this hasn't been initialised - super() hasn't been called"
			)
		}
		return call && (typeof call === 'object' || typeof call === 'function')
			? call
			: self
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== 'function' && superClass !== null) {
			throw new TypeError(
				'Super expression must either be null or a function, not ' +
					typeof superClass
			)
		}
		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		})
		if (superClass)
			Object.setPrototypeOf
				? Object.setPrototypeOf(subClass, superClass)
				: (subClass.__proto__ = superClass)
	}

	var portalClassName = (exports.portalClassName = 'ReactModalPortal')
	var bodyOpenClassName = (exports.bodyOpenClassName =
		'ReactModal__Body--open')

	var isReact16 = _reactDom2.default.createPortal !== undefined

	var getCreatePortal = function getCreatePortal() {
		return isReact16
			? _reactDom2.default.createPortal
			: _reactDom2.default.unstable_renderSubtreeIntoContainer
	}

	function getParentElement(parentSelector) {
		return parentSelector()
	}

	var Modal = (function(_Component) {
		_inherits(Modal, _Component)

		function Modal() {
			var _ref

			var _temp, _this, _ret

			_classCallCheck(this, Modal)

			for (
				var _len = arguments.length, args = Array(_len), _key = 0;
				_key < _len;
				_key++
			) {
				args[_key] = arguments[_key]
			}

			return (
				(_ret =
					((_temp =
						((_this = _possibleConstructorReturn(
							this,
							(_ref =
								Modal.__proto__ ||
								Object.getPrototypeOf(Modal)).call.apply(
								_ref,
								[this].concat(args)
							)
						)),
						_this)),
					(_this.removePortal = function() {
						!isReact16 &&
							_reactDom2.default.unmountComponentAtNode(
								_this.node
							)
						var parent = getParentElement(
							_this.props.parentSelector
						)
						parent.removeChild(_this.node)
					}),
					(_this.portalRef = function(ref) {
						_this.portal = ref
					}),
					(_this.renderPortal = function(props) {
						var createPortal = getCreatePortal()
						var portal = createPortal(
							_this,
							_react2.default.createElement(
								_ModalPortal2.default,
								_extends(
									{defaultStyles: Modal.defaultStyles},
									props
								)
							),
							_this.node
						)
						_this.portalRef(portal)
					}),
					_temp)),
				_possibleConstructorReturn(_this, _ret)
			)
		}

		_createClass(
			Modal,
			[
				{
					key: 'componentDidMount',
					value: function componentDidMount() {
						if (!safeHTMLElement.canUseDOM) return

						if (!isReact16) {
							this.node = document.createElement('div')
						}
						this.node.className = this.props.portalClassName

						var parent = getParentElement(this.props.parentSelector)
						parent.appendChild(this.node)

						!isReact16 && this.renderPortal(this.props)
					}
				},
				{
					key: 'getSnapshotBeforeUpdate',
					value: function getSnapshotBeforeUpdate(prevProps) {
						var prevParent = getParentElement(
							prevProps.parentSelector
						)
						var nextParent = getParentElement(
							this.props.parentSelector
						)
						return {prevParent: prevParent, nextParent: nextParent}
					}
				},
				{
					key: 'componentDidUpdate',
					value: function componentDidUpdate(prevProps, _, snapshot) {
						if (!safeHTMLElement.canUseDOM) return
						var _props = this.props,
							isOpen = _props.isOpen,
							portalClassName = _props.portalClassName

						if (prevProps.portalClassName !== portalClassName) {
							this.node.className = portalClassName
						}

						var prevParent = snapshot.prevParent,
							nextParent = snapshot.nextParent

						if (nextParent !== prevParent) {
							prevParent.removeChild(this.node)
							nextParent.appendChild(this.node)
						}

						// Stop unnecessary renders if modal is remaining closed
						if (!prevProps.isOpen && !isOpen) return

						!isReact16 && this.renderPortal(this.props)
					}
				},
				{
					key: 'componentWillUnmount',
					value: function componentWillUnmount() {
						if (
							!safeHTMLElement.canUseDOM ||
							!this.node ||
							!this.portal
						)
							return

						var state = this.portal.state
						var now = Date.now()
						var closesAt =
							state.isOpen &&
							this.props.closeTimeoutMS &&
							(state.closesAt || now + this.props.closeTimeoutMS)

						if (closesAt) {
							if (!state.beforeClose) {
								this.portal.closeWithTimeout()
							}

							setTimeout(this.removePortal, closesAt - now)
						} else {
							this.removePortal()
						}
					}
				},
				{
					key: 'render',
					value: function render() {
						if (!safeHTMLElement.canUseDOM || !isReact16) {
							return null
						}

						if (!this.node && isReact16) {
							this.node = document.createElement('div')
						}

						var createPortal = getCreatePortal()
						return createPortal(
							_react2.default.createElement(
								_ModalPortal2.default,
								_extends(
									{
										ref: this.portalRef,
										defaultStyles: Modal.defaultStyles
									},
									this.props
								)
							),
							this.node
						)
					}
				}
			],
			[
				{
					key: 'setAppElement',
					value: function setAppElement(element) {
						ariaAppHider$1.setElement(element)
					}

					/* eslint-disable react/no-unused-prop-types */

					/* eslint-enable react/no-unused-prop-types */
				}
			]
		)

		return Modal
	})(React__default.Component)

	Modal.propTypes = {
		isOpen: _propTypes2.default.bool.isRequired,
		style: _propTypes2.default.shape({
			content: _propTypes2.default.object,
			overlay: _propTypes2.default.object
		}),
		portalClassName: _propTypes2.default.string,
		bodyOpenClassName: _propTypes2.default.string,
		htmlOpenClassName: _propTypes2.default.string,
		className: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.shape({
				base: _propTypes2.default.string.isRequired,
				afterOpen: _propTypes2.default.string.isRequired,
				beforeClose: _propTypes2.default.string.isRequired
			})
		]),
		overlayClassName: _propTypes2.default.oneOfType([
			_propTypes2.default.string,
			_propTypes2.default.shape({
				base: _propTypes2.default.string.isRequired,
				afterOpen: _propTypes2.default.string.isRequired,
				beforeClose: _propTypes2.default.string.isRequired
			})
		]),
		appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),
		onAfterOpen: _propTypes2.default.func,
		onRequestClose: _propTypes2.default.func,
		closeTimeoutMS: _propTypes2.default.number,
		ariaHideApp: _propTypes2.default.bool,
		shouldFocusAfterRender: _propTypes2.default.bool,
		shouldCloseOnOverlayClick: _propTypes2.default.bool,
		shouldReturnFocusAfterClose: _propTypes2.default.bool,
		parentSelector: _propTypes2.default.func,
		aria: _propTypes2.default.object,
		data: _propTypes2.default.object,
		role: _propTypes2.default.string,
		contentLabel: _propTypes2.default.string,
		shouldCloseOnEsc: _propTypes2.default.bool,
		overlayRef: _propTypes2.default.func,
		contentRef: _propTypes2.default.func
	}
	Modal.defaultProps = {
		isOpen: false,
		portalClassName: portalClassName,
		bodyOpenClassName: bodyOpenClassName,
		role: 'dialog',
		ariaHideApp: true,
		closeTimeoutMS: 0,
		shouldFocusAfterRender: true,
		shouldCloseOnEsc: true,
		shouldCloseOnOverlayClick: true,
		shouldReturnFocusAfterClose: true,
		parentSelector: function parentSelector() {
			return document.body
		}
	}
	Modal.defaultStyles = {
		overlay: {
			position: 'fixed',
			top: 0,
			left: 0,
			right: 0,
			bottom: 0,
			backgroundColor: 'rgba(255, 255, 255, 0.75)'
		},
		content: {
			position: 'absolute',
			top: '40px',
			left: '40px',
			right: '40px',
			bottom: '40px',
			border: '1px solid #ccc',
			background: '#fff',
			overflow: 'auto',
			WebkitOverflowScrolling: 'touch',
			borderRadius: '4px',
			outline: 'none',
			padding: '20px'
		}
	}
	;(0, reactLifecyclesCompat_es.polyfill)(Modal)

	exports.default = Modal
})

unwrapExports(Modal_1)
var Modal_2 = Modal_1.bodyOpenClassName
var Modal_3 = Modal_1.portalClassName

var lib$5 = createCommonjsModule(function(module, exports) {
	Object.defineProperty(exports, '__esModule', {
		value: true
	})

	var _Modal2 = _interopRequireDefault(Modal_1)

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : {default: obj}
	}

	exports.default = _Modal2.default
	module.exports = exports['default']
})

var ReactModal = unwrapExports(lib$5)

/**
 * Модальное окно
 */

function Modal(_ref) {
	var visible = _ref.visible,
		nodeId = _ref.nodeId,
		props = objectWithoutProperties(_ref, ['visible', 'nodeId'])

	var customModalStyles = {
		overlay: {
			position: 'fixed',
			top: 0,
			left: 0,
			right: 0,
			bottom: 0,
			backgroundColor: 'rgba(0, 0, 0, 0.75)',
			zIndex: 2
		},
		content: {
			position: 'absolute',
			top: '50%',
			left: '50%',
			right: 'auto',
			bottom: 'auto',
			border: 'none',
			marginRight: '-50%',
			transform: 'translate(-50%, -50%)',
			background: 'transparent',
			overflow: 'auto',
			WebkitOverflowScrolling: 'touch',
			borderRadius: '0px',
			outline: 'none',
			padding: '0px'
		}
	}
	React__default.useEffect(function() {
		ReactModal.setAppElement(document.getElementById(nodeId))
	}, [])
	return React__default.createElement(
		ReactModal,
		_extends_1(
			{
				style: customModalStyles
			},
			props
		)
	)
}

Modal.propTypes = {
	isOpen: propTypes.bool,
	nodeId: propTypes.string
}
Modal.defaultProps = {
	isOpen: false,
	nodeId: 'root'
}
Modal.displayName = 'Modal'

function _templateObject2$c() {
	var data = taggedTemplateLiteral([
		'\n  font-family: ',
		';\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  border-radius: ',
		';\n  transition: all ',
		';\n  width:',
		';\n  :hover {\n    border-color: ',
		'\n  } \n  :focus {\n    outline: none;\n    background: ',
		';\n    border-color: ',
		';\n    width:',
		';\n  }\n  background: ',
		';\n\n  ',
		'\n  ',
		'\n  ',
		'\n  ',
		';\n'
	])

	_templateObject2$c = function _templateObject2() {
		return data
	}

	return data
}

function _templateObject$m() {
	var data = taggedTemplateLiteral([
		'\n\t\tbackground: ',
		';\n\t\tcursor: not-allowed;\n\t'
	])

	_templateObject$m = function _templateObject() {
		return data
	}

	return data
}

var propsToOmit$1 = [
	'suffix',
	'prefix',
	'width',
	'value',
	'wrapperStyle',
	'onChange'
]

var disabled$3 = function disabled(props) {
	return (
		props.disabled &&
		css$3(_templateObject$m(), themeGet('colors.input.disabled', '#b5b5b5'))
	)
}

var size$4 = function size(_ref) {
	var _ref$size = _ref.size,
		size = _ref$size === void 0 ? 'medium' : _ref$size,
		theme = _ref.theme
	var sizes = {
		// Same as button heights, but with height, instead of paddings.
		small: {
			fontSize: theme.fontSizes[0],
			height: 32
		},
		medium: {
			fontSize: theme.fontSizes[1],
			height: 40
		},
		large: {
			fontSize: theme.fontSizes[2],
			height: 48
		}
	}
	return sizes[size]
}

var inline$2 = function inline(_ref2) {
	var inline = _ref2.inline
	return (
		Boolean(inline) && {
			display: 'inline-block'
		}
	)
}

var HTMLInput$1 = styled.input(
	_templateObject2$c(),
	themeGet('font.main', "'PT Sans'"),
	function(props) {
		return props.theme.radii[1] + 'px'
	},
	function(props) {
		return props.theme.duration.fast
	},
	function(props) {
		return props.shrinkWidth + 'px'
	},
	themeGet('colors.black', '#3a3a3a'),
	themeGet('colors.white', '#ffffff'),
	themeGet('colors.lightBlue', '#0091ea'),
	function(props) {
		return props.growWidth + 'px'
	},
	function(props) {
		return props.theme.colors.lightGrey
	},
	space,
	size$4,
	disabled$3,
	inline$2
)
var InputWrapper$2 = styled(Relative)({
	display: 'flex',
	flexGrow: 1,
	alignItems: 'center'
})
var Adornment$1 = styled(Absolute)({
	display: 'flex'
})
/** Получение данных от пользователя.*/

var ResizableInput =
	/*#__PURE__*/
	(function(_Component) {
		inherits(ResizableInput, _Component)

		function ResizableInput(props) {
			var _this

			classCallCheck(this, ResizableInput)

			_this = possibleConstructorReturn(
				this,
				getPrototypeOf(ResizableInput).call(this, props)
			)

			defineProperty(
				assertThisInitialized(_this),
				'handleChange',
				function(event) {
					var newValue = event.target.value

					_this.setState({
						value: newValue
					})

					_this.props.onChange &&
						_this.props.onChange(newValue, event)
				}
			)

			defineProperty(assertThisInitialized(_this), 'saveInput', function(
				node
			) {
				_this.input = node
			})

			defineProperty(assertThisInitialized(_this), 'focus', function() {
				_this.input.focus()
			})

			defineProperty(assertThisInitialized(_this), 'blur', function() {
				_this.input.blur()
			})

			_this.state = {
				value:
					typeof props.value !== 'undefined'
						? props.defaultValue
						: props.value
			}
			return _this
		}

		createClass(
			ResizableInput,
			[
				{
					key: 'render',
					value: function render() {
						var _this$props = this.props,
							prefix = _this$props.prefix,
							suffix = _this$props.suffix,
							width = _this$props.width,
							wrapperStyle = _this$props.wrapperStyle,
							shrinkWidth = _this$props.shrinkWidth,
							growWidth = _this$props.growWidth
						return React__default.createElement(
							InputWrapper$2,
							{
								width: width,
								style: wrapperStyle
							},
							prefix &&
								React__default.createElement(
									Adornment$1,
									{
										left: 0,
										pl: 2
									},
									prefix
								),
							React__default.createElement(
								HTMLInput$1,
								_extends_1(
									{},
									omit_1(this.props, propsToOmit$1),
									{
										pl: prefix ? 4 : 3,
										pr: suffix ? 4 : 2,
										width: '100%',
										ref: this.saveRef,
										value: this.state.value,
										onChange: this.handleChange,
										shrinkWidth: shrinkWidth,
										growWidth: growWidth
									}
								)
							),
							suffix &&
								React__default.createElement(
									Adornment$1,
									{
										right: 0,
										pr: 2
									},
									suffix
								)
						)
					}
				}
			],
			[
				{
					key: 'getDerivedStateFromProps',
					value: function getDerivedStateFromProps(nextProps) {
						if ('value' in nextProps) {
							return {
								value: nextProps.value
							}
						}

						return null
					}
				}
			]
		)

		return ResizableInput
	})(Component)

ResizableInput.propTypes = {
	/** Ширина враппера для инпута.*/
	width: propTypes.oneOfType([
		propTypes.number,
		propTypes.string,
		propTypes.array
	]),

	/** Иконка в начале инпута. */
	prefix: propTypes.element,

	/** Иконка в конце инпута. */
	suffix: propTypes.element,

	/** Размер инпута: */
	size: propTypes.oneOf(['small', 'medium', 'large']),

	/** Стили враппера */
	wrapperStyle: propTypes.object
}
ResizableInput.defaultProps = {
	size: 'medium'
}
ResizableInput.displayName = 'ResizableInput'

export {
	Absolute,
	Box$1 as Box,
	Button,
	Card,
	Checkbox,
	Collapse,
	Divider,
	Flex,
	Form,
	Heading,
	Icon$1 as Icon,
	Input,
	Modal,
	Overlay,
	Popover,
	Positional,
	Radio,
	Relative,
	ResizableInput,
	Scrollbars,
	Select$1 as Select,
	Table,
	Tabs,
	Text$1 as Text,
	Textarea,
	ThemeProvider,
	Toggle,
	Tooltip,
	theme
}
//# sourceMappingURL=index.es.js.map
